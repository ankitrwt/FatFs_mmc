

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Fri Jun 17 11:55:52 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4515
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataCOMRAM,global,class=CODE,delta=1
     6                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1
     9                           	psect	dataCOMRAM,global,class=COMRAM,space=1,delta=1
    10                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    11                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    12                           	psect	text0,global,reloc=2,class=CODE,delta=1
    13                           	psect	text1,global,reloc=2,class=CODE,delta=1
    14                           	psect	text2,global,reloc=2,class=CODE,delta=1
    15                           	psect	text3,global,reloc=2,class=CODE,delta=1
    16                           	psect	text4,global,reloc=2,class=CODE,delta=1
    17                           	psect	text5,global,reloc=2,class=CODE,delta=1
    18                           	psect	text6,global,reloc=2,class=CODE,delta=1
    19                           	psect	text7,global,reloc=2,class=CODE,delta=1
    20                           	psect	text8,global,reloc=2,class=CODE,delta=1
    21                           	psect	text9,global,reloc=2,class=CODE,delta=1
    22                           	psect	text10,global,reloc=2,class=CODE,delta=1
    23                           	psect	text11,global,reloc=2,class=CODE,delta=1
    24                           	psect	text12,global,reloc=2,class=CODE,delta=1
    25                           	psect	text13,global,reloc=2,class=CODE,delta=1
    26                           	psect	text14,global,reloc=2,class=CODE,delta=1
    27                           	psect	text15,global,reloc=2,class=CODE,delta=1
    28                           	psect	text16,global,reloc=2,class=CODE,delta=1
    29                           	psect	text17,global,reloc=2,class=CODE,delta=1
    30                           	psect	text18,global,reloc=2,class=CODE,delta=1
    31                           	psect	text19,global,reloc=2,class=CODE,delta=1
    32                           	psect	text20,global,reloc=2,class=CODE,delta=1
    33                           	psect	text21,global,reloc=2,class=CODE,delta=1
    34                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    35                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    36  0000                     
    37                           	psect	idataCOMRAM
    38  001AD0                     __pidataCOMRAM:
    39                           	opt stack 0
    40                           
    41                           ;initializer for main@F3715
    42  001AD0  68                 	db	104
    43  001AD1  65                 	db	101
    44  001AD2  6C                 	db	108
    45  001AD3  6C                 	db	108
    46  001AD4  6F                 	db	111
    47  001AD5  20                 	db	32
    48  001AD6  77                 	db	119
    49  001AD7  6F                 	db	111
    50  001AD8  72                 	db	114
    51  001AD9  6C                 	db	108
    52  001ADA  64                 	db	100
    53  001ADB  00                 	db	0
    54  001ADC  00                 	db	0
    55  001ADD  00                 	db	0
    56  001ADE  00                 	db	0
    57  001ADF  00                 	db	0
    58                           
    59                           ;initializer for _Stat
    60  001AE0  01                 	db	1
    61  0000                     _PORTC	set	3970
    62  0000                     _PORTD	set	3971
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISC	set	3988
    65  0000                     _TRISD	set	3989
    66                           
    67                           	psect	smallconst
    68  001000                     __psmallconst:
    69                           	opt stack 0
    70  001000  00                 	db	0
    71  001001                     __stringdata:
    72                           	opt stack 0
    73  001001                     STR_1:
    74  001001  49                 	db	73	;'I'
    75  001002  4E                 	db	78	;'N'
    76  001003  49                 	db	73	;'I'
    77  001004  54                 	db	84	;'T'
    78  001005  20                 	db	32
    79  001006  45                 	db	69	;'E'
    80  001007  52                 	db	82	;'R'
    81  001008  52                 	db	82	;'R'
    82  001009  4F                 	db	79	;'O'
    83  00100A  52                 	db	82	;'R'
    84  00100B  20                 	db	32
    85  00100C  20                 	db	32
    86  00100D  20                 	db	32
    87  00100E  20                 	db	32
    88  00100F  20                 	db	32
    89  001010  20                 	db	32
    90  001011  00                 	db	0
    91  001012                     STR_3:
    92  001012  45                 	db	69	;'E'
    93  001013  72                 	db	114	;'r'
    94  001014  72                 	db	114	;'r'
    95  001015  6F                 	db	111	;'o'
    96  001016  72                 	db	114	;'r'
    97  001017  20                 	db	32
    98  001018  52                 	db	82	;'R'
    99  001019  65                 	db	101	;'e'
   100  00101A  61                 	db	97	;'a'
   101  00101B  64                 	db	100	;'d'
   102  00101C  20                 	db	32
   103  00101D  20                 	db	32
   104  00101E  20                 	db	32
   105  00101F  20                 	db	32
   106  001020  20                 	db	32
   107  001021  20                 	db	32
   108  001022  00                 	db	0
   109  001023                     STR_5:
   110  001023  45                 	db	69	;'E'
   111  001024  72                 	db	114	;'r'
   112  001025  72                 	db	114	;'r'
   113  001026  6F                 	db	111	;'o'
   114  001027  72                 	db	114	;'r'
   115  001028  20                 	db	32
   116  001029  57                 	db	87	;'W'
   117  00102A  72                 	db	114	;'r'
   118  00102B  69                 	db	105	;'i'
   119  00102C  74                 	db	116	;'t'
   120  00102D  65                 	db	101	;'e'
   121  00102E  20                 	db	32
   122  00102F  20                 	db	32
   123  001030  20                 	db	32
   124  001031  20                 	db	32
   125  001032  20                 	db	32
   126  001033  00                 	db	0
   127  001034                     STR_2:
   128  001034  53                 	db	83	;'S'
   129  001035  44                 	db	68	;'D'
   130  001036  2F                 	db	47
   131  001037  4D                 	db	77	;'M'
   132  001038  4D                 	db	77	;'M'
   133  001039  43                 	db	67	;'C'
   134  00103A  20                 	db	32
   135  00103B  63                 	db	99	;'c'
   136  00103C  61                 	db	97	;'a'
   137  00103D  72                 	db	114	;'r'
   138  00103E  64                 	db	100	;'d'
   139  00103F  20                 	db	32
   140  001040  4F                 	db	79	;'O'
   141  001041  4B                 	db	75	;'K'
   142  001042  21                 	db	33
   143  001043  20                 	db	32
   144  001044  00                 	db	0
   145  001045                     STR_4:
   146  001045  52                 	db	82	;'R'
   147  001046  65                 	db	101	;'e'
   148  001047  61                 	db	97	;'a'
   149  001048  64                 	db	100	;'d'
   150  001049  20                 	db	32
   151  00104A  4F                 	db	79	;'O'
   152  00104B  4B                 	db	75	;'K'
   153  00104C  21                 	db	33
   154  00104D  20                 	db	32
   155  00104E  20                 	db	32
   156  00104F  20                 	db	32
   157  001050  20                 	db	32
   158  001051  20                 	db	32
   159  001052  20                 	db	32
   160  001053  20                 	db	32
   161  001054  00                 	db	0
   162  001055                     STR_6:
   163  001055  57                 	db	87	;'W'
   164  001056  72                 	db	114	;'r'
   165  001057  69                 	db	105	;'i'
   166  001058  74                 	db	116	;'t'
   167  001059  65                 	db	101	;'e'
   168  00105A  20                 	db	32
   169  00105B  4F                 	db	79	;'O'
   170  00105C  4B                 	db	75	;'K'
   171  00105D  21                 	db	33
   172  00105E  20                 	db	32
   173  00105F  20                 	db	32
   174  001060  20                 	db	32
   175  001061  20                 	db	32
   176  001062  20                 	db	32
   177  001063  20                 	db	32
   178  001064  00                 	db	0
   179  001065  22                 	db	34
   180  001066  2A                 	db	42
   181  001067  2B                 	db	43
   182  001068  2C                 	db	44
   183  001069  3A                 	db	58	;':'
   184  00106A  3B                 	db	59	;';'
   185  00106B  3C                 	db	60	;'<'
   186  00106C  3D                 	db	61	;'='
   187  00106D  3E                 	db	62	;'>'
   188  00106E  3F                 	db	63	;'?'
   189  00106F  5B                 	db	91	;'['
   190  001070  5D                 	db	93	;']'
   191  001071  7C                 	db	124
   192  001072  7F                 	db	127
   193  001073  00                 	db	0
   194  001074                     __end_of__stringdata:
   195                           	opt stack 0
   196  001074  00                 	db	0	; dummy byte at the end
   197  0000                     
   198                           ; #config settings
   199                           
   200                           	psect	cinit
   201  00194E                     __pcinit:
   202                           	opt stack 0
   203  00194E                     start_initialization:
   204                           	opt stack 0
   205  00194E                     __initialization:
   206                           	opt stack 0
   207                           
   208                           ; Clear objects allocated to BIGRAM (1070 bytes)
   209  00194E  EE0B  F052         	lfsr	0,__pbssBIGRAM
   210  001952  EE14 F02E          	lfsr	1,1070
   211  001956                     clear_0:
   212  001956  6AEE               	clrf	postinc0,c
   213  001958  50E5               	movf	postdec1,w,c
   214  00195A  50E1               	movf	fsr1l,w,c
   215  00195C  E1FC               	bnz	clear_0
   216  00195E  50E2               	movf	fsr1h,w,c
   217  001960  E1FA               	bnz	clear_0
   218                           
   219                           ; Clear objects allocated to COMRAM (37 bytes)
   220  001962  EE00  F045         	lfsr	0,__pbssCOMRAM
   221  001966  0E25               	movlw	37
   222  001968                     clear_1:
   223  001968  6AEE               	clrf	postinc0,c
   224  00196A  06E8               	decf	wreg,f,c
   225  00196C  E1FD               	bnz	clear_1
   226                           
   227                           ; Initialize objects allocated to COMRAM (17 bytes)
   228                           ; load TBLPTR registers with __pidataCOMRAM
   229  00196E  0ED0               	movlw	low __pidataCOMRAM
   230  001970  6EF6               	movwf	tblptrl,c
   231  001972  0E1A               	movlw	high __pidataCOMRAM
   232  001974  6EF7               	movwf	tblptrh,c
   233  001976  0E00               	movlw	low (__pidataCOMRAM shr (0+16))
   234  001978  6EF8               	movwf	tblptru,c
   235  00197A  EE00  F06A         	lfsr	0,__pdataCOMRAM
   236  00197E  EE10 F011          	lfsr	1,17
   237  001982                     copy_data0:
   238  001982  0009               	tblrd		*+
   239  001984  CFF5 FFEE          	movff	tablat,postinc0
   240  001988  50E5               	movf	postdec1,w,c
   241  00198A  50E1               	movf	fsr1l,w,c
   242  00198C  E1FA               	bnz	copy_data0
   243  00198E                     end_of_initialization:
   244                           	opt stack 0
   245  00198E                     __end_of__initialization:
   246                           	opt stack 0
   247  00198E  0100               	movlb	0
   248  001990  EF32  F009         	goto	_main	;jump to C main() function
   249                           tblptru	equ	0xFF8
   250                           tblptrh	equ	0xFF7
   251                           tblptrl	equ	0xFF6
   252                           tablat	equ	0xFF5
   253                           postinc0	equ	0xFEE
   254                           wreg	equ	0xFE8
   255                           postdec1	equ	0xFE5
   256                           fsr1h	equ	0xFE2
   257                           fsr1l	equ	0xFE1
   258                           
   259                           	psect	bssCOMRAM
   260  000045                     __pbssCOMRAM:
   261                           	opt stack 0
   262  000045                     _fp:
   263                           	opt stack 0
   264  000045                     	ds	32
   265  000065                     _Fsid:
   266                           	opt stack 0
   267  000065                     	ds	2
   268  000067                     ff@FatFs:
   269                           	opt stack 0
   270  000067                     	ds	2
   271  000069                     _CardType:
   272                           	opt stack 0
   273  000069                     	ds	1
   274                           tblptru	equ	0xFF8
   275                           tblptrh	equ	0xFF7
   276                           tblptrl	equ	0xFF6
   277                           tablat	equ	0xFF5
   278                           postinc0	equ	0xFEE
   279                           wreg	equ	0xFE8
   280                           postdec1	equ	0xFE5
   281                           fsr1h	equ	0xFE2
   282                           fsr1l	equ	0xFE1
   283                           
   284                           	psect	dataCOMRAM
   285  00006A                     __pdataCOMRAM:
   286                           	opt stack 0
   287  00006A                     main@F3715:
   288                           	opt stack 0
   289  00006A                     	ds	16
   290  00007A                     _Stat:
   291                           	opt stack 0
   292  00007A                     	ds	1
   293                           tblptru	equ	0xFF8
   294                           tblptrh	equ	0xFF7
   295                           tblptrl	equ	0xFF6
   296                           tablat	equ	0xFF5
   297                           postinc0	equ	0xFEE
   298                           wreg	equ	0xFE8
   299                           postdec1	equ	0xFE5
   300                           fsr1h	equ	0xFE2
   301                           fsr1l	equ	0xFE1
   302                           
   303                           	psect	bssBIGRAM
   304  000B52                     __pbssBIGRAM:
   305                           	opt stack 0
   306  000B52                     _FatFs:
   307                           	opt stack 0
   308  000B52                     	ds	558
   309  000D80                     _buffer:
   310                           	opt stack 0
   311  000D80                     	ds	512
   312                           tblptru	equ	0xFF8
   313                           tblptrh	equ	0xFF7
   314                           tblptrl	equ	0xFF6
   315                           tablat	equ	0xFF5
   316                           postinc0	equ	0xFEE
   317                           wreg	equ	0xFE8
   318                           postdec1	equ	0xFE5
   319                           fsr1h	equ	0xFE2
   320                           fsr1l	equ	0xFE1
   321                           
   322                           	psect	cstackCOMRAM
   323  000001                     __pcstackCOMRAM:
   324                           	opt stack 0
   325  000001                     disk_status@drv:
   326                           	opt stack 0
   327  000001                     LCD_delay@x:
   328                           	opt stack 0
   329  000001                     dly_us@n:
   330                           	opt stack 0
   331  000001                     rcvr_mmc@buff:
   332                           	opt stack 0
   333  000001                     xmit_mmc@buff:
   334                           	opt stack 0
   335  000001                     delaymain@x:
   336                           	opt stack 0
   337                           
   338                           ; 4 bytes @ 0x0
   339  000001                     	ds	2
   340  000003                     LCD_func@cmd:
   341                           	opt stack 0
   342  000003                     dly_us@tem:
   343                           	opt stack 0
   344  000003                     rcvr_mmc@bc:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x2
   348  000003                     	ds	1
   349  000004                     ??_LCD_func:
   350  000004                     xmit_mmc@bc:
   351                           	opt stack 0
   352                           
   353                           ; 2 bytes @ 0x3
   354  000004                     	ds	1
   355  000005                     rcvr_mmc@r:
   356                           	opt stack 0
   357                           
   358                           ; 1 bytes @ 0x4
   359  000005                     	ds	1
   360  000006                     ?_wait_ready:
   361                           	opt stack 0
   362  000006                     ?_rcvr_datablock:
   363                           	opt stack 0
   364  000006                     xmit_mmc@d:
   365                           	opt stack 0
   366  000006                     deselect@d:
   367                           	opt stack 0
   368  000006                     _LCD_func$36:
   369                           	opt stack 0
   370  000006                     rcvr_datablock@buff:
   371                           	opt stack 0
   372                           
   373                           ; 2 bytes @ 0x5
   374  000006                     	ds	2
   375  000008                     LCD_func@data:
   376                           	opt stack 0
   377  000008                     wait_ready@tmr:
   378                           	opt stack 0
   379  000008                     rcvr_datablock@btr:
   380                           	opt stack 0
   381                           
   382                           ; 2 bytes @ 0x7
   383  000008                     	ds	1
   384  000009                     LCD_cur@col:
   385                           	opt stack 0
   386  000009                     LCD_string@ptr:
   387                           	opt stack 0
   388                           
   389                           ; 2 bytes @ 0x8
   390  000009                     	ds	1
   391  00000A                     LCD_cur@row:
   392                           	opt stack 0
   393  00000A                     wait_ready@d:
   394                           	opt stack 0
   395  00000A                     rcvr_datablock@tmr:
   396                           	opt stack 0
   397                           
   398                           ; 2 bytes @ 0x9
   399  00000A                     	ds	1
   400  00000B                     ?_select:
   401                           	opt stack 0
   402  00000B                     ?_xmit_datablock:
   403                           	opt stack 0
   404  00000B                     xmit_datablock@buff:
   405                           	opt stack 0
   406                           
   407                           ; 3 bytes @ 0xA
   408  00000B                     	ds	1
   409  00000C                     rcvr_datablock@d:
   410                           	opt stack 0
   411                           
   412                           ; 2 bytes @ 0xB
   413  00000C                     	ds	1
   414  00000D                     select@d:
   415                           	opt stack 0
   416                           
   417                           ; 1 bytes @ 0xC
   418  00000D                     	ds	1
   419  00000E                     xmit_datablock@token:
   420                           	opt stack 0
   421  00000E                     send_cmd@arg:
   422                           	opt stack 0
   423                           
   424                           ; 4 bytes @ 0xD
   425  00000E                     	ds	1
   426  00000F                     ??_xmit_datablock:
   427                           
   428                           ; 0 bytes @ 0xE
   429  00000F                     	ds	1
   430  000010                     xmit_datablock@d:
   431                           	opt stack 0
   432                           
   433                           ; 2 bytes @ 0xF
   434  000010                     	ds	2
   435  000012                     send_cmd@buf:
   436                           	opt stack 0
   437                           
   438                           ; 6 bytes @ 0x11
   439  000012                     	ds	6
   440  000018                     send_cmd@n:
   441                           	opt stack 0
   442                           
   443                           ; 1 bytes @ 0x17
   444  000018                     	ds	1
   445  000019                     send_cmd@d:
   446                           	opt stack 0
   447                           
   448                           ; 1 bytes @ 0x18
   449  000019                     	ds	1
   450  00001A                     send_cmd@cmd:
   451                           	opt stack 0
   452                           
   453                           ; 1 bytes @ 0x19
   454  00001A                     	ds	1
   455  00001B                     ??_disk_initialize:
   456  00001B                     disk_read@buff:
   457                           	opt stack 0
   458  00001B                     disk_write@buff:
   459                           	opt stack 0
   460                           
   461                           ; 2 bytes @ 0x1A
   462  00001B                     	ds	1
   463  00001C                     disk_initialize@drv:
   464                           	opt stack 0
   465                           
   466                           ; 1 bytes @ 0x1B
   467  00001C                     	ds	1
   468  00001D                     _disk_initialize$227:
   469                           	opt stack 0
   470  00001D                     disk_read@sector:
   471                           	opt stack 0
   472  00001D                     disk_write@sector:
   473                           	opt stack 0
   474                           
   475                           ; 4 bytes @ 0x1C
   476  00001D                     	ds	2
   477  00001F                     disk_initialize@buf:
   478                           	opt stack 0
   479                           
   480                           ; 4 bytes @ 0x1E
   481  00001F                     	ds	2
   482  000021                     disk_read@count:
   483                           	opt stack 0
   484  000021                     disk_write@count:
   485                           	opt stack 0
   486                           
   487                           ; 2 bytes @ 0x20
   488  000021                     	ds	2
   489  000023                     ??_disk_read:
   490  000023                     ??_disk_write:
   491  000023                     disk_initialize@n:
   492                           	opt stack 0
   493                           
   494                           ; 1 bytes @ 0x22
   495  000023                     	ds	1
   496  000024                     disk_initialize@cmd:
   497                           	opt stack 0
   498  000024                     disk_read@drv:
   499                           	opt stack 0
   500  000024                     disk_write@drv:
   501                           	opt stack 0
   502                           
   503                           ; 1 bytes @ 0x23
   504  000024                     	ds	1
   505  000025                     disk_initialize@s:
   506                           	opt stack 0
   507  000025                     _disk_read$235:
   508                           	opt stack 0
   509                           
   510                           ; 2 bytes @ 0x24
   511  000025                     	ds	1
   512  000026                     disk_initialize@ty:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x25
   516  000026                     	ds	1
   517  000027                     disk_read@cmd:
   518                           	opt stack 0
   519  000027                     disk_initialize@tmr:
   520                           	opt stack 0
   521                           
   522                           ; 2 bytes @ 0x26
   523  000027                     	ds	2
   524  000029                     
   525                           ; 2 bytes @ 0x28
   526  000029                     	ds	2
   527  00002B                     
   528                           ; 3 bytes @ 0x2A
   529  00002B                     	ds	3
   530  00002E                     main@mytext:
   531                           	opt stack 0
   532                           
   533                           ; 16 bytes @ 0x2D
   534  00002E                     	ds	16
   535  00003E                     main@cnt:
   536                           	opt stack 0
   537                           
   538                           ; 2 bytes @ 0x3D
   539  00003E                     	ds	2
   540  000040                     main@timeout:
   541                           	opt stack 0
   542                           
   543                           ; 2 bytes @ 0x3F
   544  000040                     	ds	2
   545  000042                     main@i:
   546                           	opt stack 0
   547                           
   548                           ; 2 bytes @ 0x41
   549  000042                     	ds	2
   550  000044                     main@status:
   551                           	opt stack 0
   552                           
   553                           ; 1 bytes @ 0x43
   554  000044                     	ds	1
   555                           tblptru	equ	0xFF8
   556                           tblptrh	equ	0xFF7
   557                           tblptrl	equ	0xFF6
   558                           tablat	equ	0xFF5
   559                           postinc0	equ	0xFEE
   560                           wreg	equ	0xFE8
   561                           postdec1	equ	0xFE5
   562                           fsr1h	equ	0xFE2
   563                           fsr1l	equ	0xFE1
   564                           
   565 ;;
   566 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   567 ;;
   568 ;; *************** function _main *****************
   569 ;; Defined at:
   570 ;;		line 43 in file "main.c"
   571 ;; Parameters:    Size  Location     Type
   572 ;;  argc            2   40[COMRAM] int 
   573 ;;  argv            3   42[COMRAM] PTR PTR unsigned char 
   574 ;; Auto vars:     Size  Location     Type
   575 ;;  i               2   65[COMRAM] int 
   576 ;;  mytext         16   45[COMRAM] unsigned char [16]
   577 ;;  ptr             3    0        PTR unsigned char 
   578 ;;  timeout         2   63[COMRAM] unsigned int 
   579 ;;  cnt             2   61[COMRAM] unsigned int 
   580 ;;  ret             2    0        unsigned int 
   581 ;;  status          1   67[COMRAM] unsigned char 
   582 ;;  chck            1    0        unsigned char 
   583 ;; Return value:  Size  Location     Type
   584 ;;                  2   40[COMRAM] int 
   585 ;; Registers used:
   586 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   592 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   593 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   594 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   595 ;;      Totals:        28       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   596 ;;Total ram usage:       28 bytes
   597 ;; Hardware stack levels required when called:    5
   598 ;; This function calls:
   599 ;;		_LCD_cur
   600 ;;		_LCD_init
   601 ;;		_LCD_string
   602 ;;		_delaymain
   603 ;;		_disk_initialize
   604 ;;		_disk_read
   605 ;;		_disk_write
   606 ;;		_init
   607 ;; This function is called by:
   608 ;;		Startup code after reset
   609 ;; This function uses a non-reentrant model
   610 ;;
   611                           
   612                           	psect	text0
   613  001264                     __ptext0:
   614                           	opt stack 0
   615  001264                     _main:
   616                           	opt stack 26
   617                           
   618                           ;main.c: 44: unsigned char mytext[16] = "hello world";
   619                           
   620                           ;incstack = 0
   621  001264  EE20  F06A         	lfsr	2,main@F3715
   622  001268  EE10  F02E         	lfsr	1,main@mytext
   623  00126C  0E10               	movlw	16
   624  00126E                     u6531:
   625  00126E  CFDE FFE6          	movff	postinc2,postinc1
   626  001272  2EE8               	decfsz	wreg,f,c
   627  001274  D7FC               	goto	u6531
   628                           
   629                           ;main.c: 46: unsigned char status =1;
   630  001276  0E01               	movlw	1
   631  001278  6E44               	movwf	main@status,c
   632                           
   633                           ;main.c: 47: unsigned int timeout = 0;
   634  00127A  0E00               	movlw	0
   635  00127C  6E41               	movwf	main@timeout+1,c
   636  00127E  0E00               	movlw	0
   637  001280  6E40               	movwf	main@timeout,c
   638                           
   639                           ;main.c: 48: unsigned int cnt = 32;
   640  001282  0E00               	movlw	0
   641  001284  6E3F               	movwf	main@cnt+1,c
   642  001286  0E20               	movlw	32
   643  001288  6E3E               	movwf	main@cnt,c
   644                           
   645                           ;main.c: 49: char *ptr;
   646                           ;main.c: 50: unsigned int ret;
   647                           ;main.c: 51: unsigned char chck;
   648                           ;main.c: 53: init();
   649  00128A  EC79  F00D         	call	_init	;wreg free
   650                           
   651                           ;main.c: 54: LCD_init();
   652  00128E  ECCA  F00C         	call	_LCD_init	;wreg free
   653                           
   654                           ;main.c: 55: while(status != 0)
   655  001292  D012               	goto	l74
   656  001294                     l4883:
   657                           
   658                           ;main.c: 56: {
   659                           ;main.c: 57: status = (unsigned char)disk_initialize(0);
   660  001294  0E00               	movlw	0
   661  001296  EC3B  F008         	call	_disk_initialize
   662  00129A  6E44               	movwf	main@status,c
   663                           
   664                           ;main.c: 58: timeout++;
   665  00129C  4A40               	infsnz	main@timeout,f,c
   666  00129E  2A41               	incf	main@timeout+1,f,c
   667                           
   668                           ;main.c: 59: if(timeout == 150)
   669  0012A0  5040               	movf	main@timeout,w,c
   670  0012A2  0A96               	xorlw	150
   671  0012A4  1041               	iorwf	main@timeout+1,w,c
   672  0012A6  A4D8               	btfss	status,2,c
   673  0012A8  D007               	goto	l74
   674                           
   675                           ;main.c: 60: {
   676                           ;main.c: 61: LCD_string((unsigned char *)"INIT ERROR      ");
   677  0012AA  0E10               	movlw	high STR_1
   678  0012AC  6E0A               	movwf	LCD_string@ptr+1,c
   679  0012AE  0E01               	movlw	low STR_1
   680  0012B0  6E09               	movwf	LCD_string@ptr,c
   681  0012B2  EC05  F00D         	call	_LCD_string	;wreg free
   682  0012B6                     l77:
   683  0012B6  D7FF               	goto	l77
   684  0012B8                     l74:
   685  0012B8  6644               	tstfsz	main@status,c
   686  0012BA  D7EC               	goto	l4883
   687                           
   688                           ;main.c: 63: }
   689                           ;main.c: 64: }
   690                           ;main.c: 65: LCD_string((unsigned char *)"SD/MMC card OK! ");
   691  0012BC  0E10               	movlw	high STR_2
   692  0012BE  6E0A               	movwf	LCD_string@ptr+1,c
   693  0012C0  0E34               	movlw	low STR_2
   694  0012C2  6E09               	movwf	LCD_string@ptr,c
   695  0012C4  EC05  F00D         	call	_LCD_string	;wreg free
   696                           
   697                           ;main.c: 66: delaymain(100000); delaymain(100000);
   698  0012C8  0EA0               	movlw	160
   699  0012CA  6E01               	movwf	delaymain@x,c
   700  0012CC  0E86               	movlw	134
   701  0012CE  6E02               	movwf	delaymain@x+1,c
   702  0012D0  0E01               	movlw	1
   703  0012D2  6E03               	movwf	delaymain@x+2,c
   704  0012D4  0E00               	movlw	0
   705  0012D6  6E04               	movwf	delaymain@x+3,c
   706  0012D8  EC1E  F00D         	call	_delaymain	;wreg free
   707  0012DC  0EA0               	movlw	160
   708  0012DE  6E01               	movwf	delaymain@x,c
   709  0012E0  0E86               	movlw	134
   710  0012E2  6E02               	movwf	delaymain@x+1,c
   711  0012E4  0E01               	movlw	1
   712  0012E6  6E03               	movwf	delaymain@x+2,c
   713  0012E8  0E00               	movlw	0
   714  0012EA  6E04               	movwf	delaymain@x+3,c
   715  0012EC  EC1E  F00D         	call	_delaymain	;wreg free
   716  0012F0                     l4897:
   717                           
   718                           ;main.c: 106: {
   719                           ;main.c: 107: if((PORTD & 0x80)){
   720  0012F0  AE83               	btfss	3971,7,c	;volatile
   721  0012F2  D031               	goto	l82
   722  0012F4                     l83:
   723  0012F4  BE83               	btfsc	3971,7,c	;volatile
   724  0012F6  D7FE               	goto	l83
   725                           
   726                           ;main.c: 115: status = (unsigned char)disk_read(0,buffer,1,1);
   727  0012F8  0E0D               	movlw	high _buffer
   728  0012FA  6E1C               	movwf	disk_read@buff+1,c
   729  0012FC  0E80               	movlw	low _buffer
   730  0012FE  6E1B               	movwf	disk_read@buff,c
   731  001300  0E01               	movlw	1
   732  001302  6E1D               	movwf	disk_read@sector,c
   733  001304  0E00               	movlw	0
   734  001306  6E1E               	movwf	disk_read@sector+1,c
   735  001308  0E00               	movlw	0
   736  00130A  6E1F               	movwf	disk_read@sector+2,c
   737  00130C  0E00               	movlw	0
   738  00130E  6E20               	movwf	disk_read@sector+3,c
   739  001310  0E00               	movlw	0
   740  001312  6E22               	movwf	disk_read@count+1,c
   741  001314  0E01               	movlw	1
   742  001316  6E21               	movwf	disk_read@count,c
   743  001318  0E00               	movlw	0
   744  00131A  EC7F  F00A         	call	_disk_read
   745  00131E  6E44               	movwf	main@status,c
   746                           
   747                           ;main.c: 116: if(status != 0){
   748  001320  5044               	movf	main@status,w,c
   749  001322  B4D8               	btfsc	status,2,c
   750  001324  D00C               	goto	l4909
   751                           
   752                           ;main.c: 117: LCD_cur(1,1);
   753  001326  0E01               	movlw	1
   754  001328  6E09               	movwf	LCD_cur@col,c
   755  00132A  0E01               	movlw	1
   756  00132C  EC54  F00D         	call	_LCD_cur
   757                           
   758                           ;main.c: 118: LCD_string("Error Read      ");
   759  001330  0E10               	movlw	high STR_3
   760  001332  6E0A               	movwf	LCD_string@ptr+1,c
   761  001334  0E12               	movlw	low STR_3
   762  001336  6E09               	movwf	LCD_string@ptr,c
   763  001338  EC05  F00D         	call	_LCD_string	;wreg free
   764                           
   765                           ;main.c: 119: }
   766  00133C  D7D9               	goto	l4897
   767  00133E                     l4909:
   768                           
   769                           ;main.c: 120: else{
   770                           ;main.c: 121: LCD_cur(1,1);
   771  00133E  0E01               	movlw	1
   772  001340  6E09               	movwf	LCD_cur@col,c
   773  001342  0E01               	movlw	1
   774  001344  EC54  F00D         	call	_LCD_cur
   775                           
   776                           ;main.c: 122: LCD_string("Read OK!       ");
   777  001348  0E10               	movlw	high STR_4
   778  00134A  6E0A               	movwf	LCD_string@ptr+1,c
   779  00134C  0E45               	movlw	low STR_4
   780  00134E  6E09               	movwf	LCD_string@ptr,c
   781  001350  EC05  F00D         	call	_LCD_string	;wreg free
   782  001354  D7CD               	goto	l4897
   783  001356                     l82:
   784                           
   785                           ;main.c: 125: else if((PORTD & 0x40)){
   786  001356  AC83               	btfss	3971,6,c	;volatile
   787  001358  D048               	goto	l89
   788  00135A                     l90:
   789  00135A  BC83               	btfsc	3971,6,c	;volatile
   790  00135C  D7FE               	goto	l90
   791                           
   792                           ;main.c: 133: for(int i=0; i<512;i++)
   793  00135E  0E00               	movlw	0
   794  001360  6E43               	movwf	main@i+1,c
   795  001362  0E00               	movlw	0
   796  001364  6E42               	movwf	main@i,c
   797  001366  5043               	movf	main@i+1,w,c
   798  001368  0A80               	xorlw	128
   799  00136A  0F7E               	addlw	-130
   800  00136C  0E00               	movlw	0
   801  00136E  B4D8               	btfsc	status,2,c
   802  001370  5C42               	subwf	main@i,w,c
   803  001372  B0D8               	btfsc	status,0,c
   804  001374  D00B               	goto	l4927
   805                           
   806                           ;main.c: 134: buffer[i] = 'D';
   807  001376  0E80               	movlw	low _buffer
   808  001378  2442               	addwf	main@i,w,c
   809  00137A  6ED9               	movwf	fsr2l,c
   810  00137C  0E0D               	movlw	high _buffer
   811  00137E  2043               	addwfc	main@i+1,w,c
   812  001380  6EDA               	movwf	fsr2h,c
   813  001382  0E44               	movlw	68
   814  001384  6EDF               	movwf	indf2,c
   815  001386  4A42               	infsnz	main@i,f,c
   816  001388  2A43               	incf	main@i+1,f,c
   817  00138A  D7ED               	goto	L1
   818  00138C                     l4927:
   819                           
   820                           ;main.c: 136: status = (unsigned char)disk_write(0,buffer,1,1);
   821  00138C  0E0D               	movlw	high _buffer
   822  00138E  6E1C               	movwf	disk_write@buff+1,c
   823  001390  0E80               	movlw	low _buffer
   824  001392  6E1B               	movwf	disk_write@buff,c
   825  001394  0E01               	movlw	1
   826  001396  6E1D               	movwf	disk_write@sector,c
   827  001398  0E00               	movlw	0
   828  00139A  6E1E               	movwf	disk_write@sector+1,c
   829  00139C  0E00               	movlw	0
   830  00139E  6E1F               	movwf	disk_write@sector+2,c
   831  0013A0  0E00               	movlw	0
   832  0013A2  6E20               	movwf	disk_write@sector+3,c
   833  0013A4  0E00               	movlw	0
   834  0013A6  6E22               	movwf	disk_write@count+1,c
   835  0013A8  0E01               	movlw	1
   836  0013AA  6E21               	movwf	disk_write@count,c
   837  0013AC  0E00               	movlw	0
   838  0013AE  ECF8  F009         	call	_disk_write
   839  0013B2  6E44               	movwf	main@status,c
   840                           
   841                           ;main.c: 137: if(status != 0){
   842  0013B4  5044               	movf	main@status,w,c
   843  0013B6  B4D8               	btfsc	status,2,c
   844  0013B8  D00C               	goto	l4935
   845                           
   846                           ;main.c: 138: LCD_cur(1,1);
   847  0013BA  0E01               	movlw	1
   848  0013BC  6E09               	movwf	LCD_cur@col,c
   849  0013BE  0E01               	movlw	1
   850  0013C0  EC54  F00D         	call	_LCD_cur
   851                           
   852                           ;main.c: 139: LCD_string("Error Write     ");
   853  0013C4  0E10               	movlw	high STR_5
   854  0013C6  6E0A               	movwf	LCD_string@ptr+1,c
   855  0013C8  0E23               	movlw	low STR_5
   856  0013CA  6E09               	movwf	LCD_string@ptr,c
   857  0013CC  EC05  F00D         	call	_LCD_string	;wreg free
   858                           
   859                           ;main.c: 140: }
   860  0013D0  D78F               	goto	l4897
   861  0013D2                     l4935:
   862                           
   863                           ;main.c: 141: else{
   864                           ;main.c: 142: LCD_cur(1,1);
   865  0013D2  0E01               	movlw	1
   866  0013D4  6E09               	movwf	LCD_cur@col,c
   867  0013D6  0E01               	movlw	1
   868  0013D8  EC54  F00D         	call	_LCD_cur
   869                           
   870                           ;main.c: 143: LCD_string("Write OK!      ");
   871  0013DC  0E10               	movlw	high STR_6
   872  0013DE  6E0A               	movwf	LCD_string@ptr+1,c
   873  0013E0  0E55               	movlw	low STR_6
   874  0013E2  6E09               	movwf	LCD_string@ptr,c
   875  0013E4  EC05  F00D         	call	_LCD_string	;wreg free
   876  0013E8  D783               	goto	l4897
   877  0013EA                     l89:
   878                           
   879                           ;main.c: 146: else if((PORTC & 0x80))
   880  0013EA  AE82               	btfss	3970,7,c	;volatile
   881  0013EC  D781               	goto	l4897
   882                           
   883                           ;main.c: 147: {
   884                           ;main.c: 148: while((PORTC & 0x80));
   885  0013EE  D7FD               	goto	l89
   886  0013F0                     __end_of_main:
   887                           	opt stack 0
   888                           tblptru	equ	0xFF8
   889                           tblptrh	equ	0xFF7
   890                           tblptrl	equ	0xFF6
   891                           tablat	equ	0xFF5
   892                           postinc0	equ	0xFEE
   893                           wreg	equ	0xFE8
   894                           postinc1	equ	0xFE6
   895                           postdec1	equ	0xFE5
   896                           fsr1h	equ	0xFE2
   897                           fsr1l	equ	0xFE1
   898                           indf2	equ	0xFDF
   899                           postinc2	equ	0xFDE
   900                           fsr2h	equ	0xFDA
   901                           fsr2l	equ	0xFD9
   902                           status	equ	0xFD8
   903                           
   904 ;; *************** function _init *****************
   905 ;; Defined at:
   906 ;;		line 34 in file "main.c"
   907 ;; Parameters:    Size  Location     Type
   908 ;;		None
   909 ;; Auto vars:     Size  Location     Type
   910 ;;		None
   911 ;; Return value:  Size  Location     Type
   912 ;;		None               void
   913 ;; Registers used:
   914 ;;		wreg, status,2
   915 ;; Tracked objects:
   916 ;;		On entry : 0/0
   917 ;;		On exit  : 0/0
   918 ;;		Unchanged: 0/0
   919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   920 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   921 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   922 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   923 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   924 ;;Total ram usage:        0 bytes
   925 ;; Hardware stack levels used:    1
   926 ;; This function calls:
   927 ;;		Nothing
   928 ;; This function is called by:
   929 ;;		_main
   930 ;; This function uses a non-reentrant model
   931 ;;
   932                           
   933                           	psect	text1
   934  001AF2                     __ptext1:
   935                           	opt stack 0
   936  001AF2                     _init:
   937                           	opt stack 30
   938                           
   939                           ;main.c: 36: TRISC = 0x10;
   940                           
   941                           ;incstack = 0
   942  001AF2  0E10               	movlw	16
   943  001AF4  6E94               	movwf	3988,c	;volatile
   944                           
   945                           ;main.c: 37: TRISD = 0xC0;
   946  001AF6  0EC0               	movlw	192
   947  001AF8  6E95               	movwf	3989,c	;volatile
   948                           
   949                           ;main.c: 38: TRISB = 0x20;
   950  001AFA  0E20               	movlw	32
   951  001AFC  6E93               	movwf	3987,c	;volatile
   952  001AFE  0012               	return	
   953  001B00                     __end_of_init:
   954                           	opt stack 0
   955                           tblptru	equ	0xFF8
   956                           tblptrh	equ	0xFF7
   957                           tblptrl	equ	0xFF6
   958                           tablat	equ	0xFF5
   959                           postinc0	equ	0xFEE
   960                           wreg	equ	0xFE8
   961                           postinc1	equ	0xFE6
   962                           postdec1	equ	0xFE5
   963                           fsr1h	equ	0xFE2
   964                           fsr1l	equ	0xFE1
   965                           indf2	equ	0xFDF
   966                           postinc2	equ	0xFDE
   967                           fsr2h	equ	0xFDA
   968                           fsr2l	equ	0xFD9
   969                           status	equ	0xFD8
   970                           
   971 ;; *************** function _disk_write *****************
   972 ;; Defined at:
   973 ;;		line 489 in file "sdmm.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  drv             1    wreg     unsigned char 
   976 ;;  buff            2   26[COMRAM] PTR const unsigned char 
   977 ;;		 -> NULL(0), buffer(512), 
   978 ;;  sector          4   28[COMRAM] unsigned long 
   979 ;;  count           2   32[COMRAM] unsigned int 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;  drv             1   35[COMRAM] unsigned char 
   982 ;; Return value:  Size  Location     Type
   983 ;;                  1    wreg      enum E3490
   984 ;; Registers used:
   985 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
   991 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   992 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   993 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   994 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
   995 ;;Total ram usage:       10 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; Hardware stack levels required when called:    4
   998 ;; This function calls:
   999 ;;		_deselect
  1000 ;;		_disk_status
  1001 ;;		_send_cmd
  1002 ;;		_xmit_datablock
  1003 ;; This function is called by:
  1004 ;;		_main
  1005 ;;		_sync_window
  1006 ;;		_sync_fs
  1007 ;;		_f_write
  1008 ;; This function uses a non-reentrant model
  1009 ;;
  1010                           
  1011                           	psect	text2
  1012  0013F0                     __ptext2:
  1013                           	opt stack 0
  1014  0013F0                     _disk_write:
  1015                           	opt stack 26
  1016                           
  1017                           ;incstack = 0
  1018                           ;disk_write@drv stored from wreg
  1019  0013F0  6E24               	movwf	disk_write@drv,c
  1020                           
  1021                           ;sdmm.c: 496: if (disk_status(drv) & 0x01) return RES_NOTRDY;
  1022  0013F2  5024               	movf	disk_write@drv,w,c
  1023  0013F4  EC71  F00D         	call	_disk_status
  1024  0013F8  6E23               	movwf	??_disk_write& (0+255),c
  1025  0013FA  A023               	btfss	??_disk_write,0,c
  1026  0013FC  D002               	goto	l242
  1027  0013FE  0E03               	movlw	3
  1028  001400  D07D               	goto	l243
  1029  001402                     l242:
  1030                           
  1031                           ;sdmm.c: 497: if (!(CardType & 0x08)) sector *= 512;
  1032  001402  B669               	btfsc	_CardType,3,c
  1033  001404  D008               	goto	l244
  1034  001406  0E09               	movlw	9
  1035  001408                     u5575:
  1036  001408  90D8               	bcf	status,0,c
  1037  00140A  361D               	rlcf	disk_write@sector,f,c
  1038  00140C  361E               	rlcf	disk_write@sector+1,f,c
  1039  00140E  361F               	rlcf	disk_write@sector+2,f,c
  1040  001410  3620               	rlcf	disk_write@sector+3,f,c
  1041  001412  2EE8               	decfsz	wreg,f,c
  1042  001414  D7F9               	goto	u5575
  1043  001416                     l244:
  1044                           
  1045                           ;sdmm.c: 499: if (count == 1) {
  1046  001416  0421               	decf	disk_write@count,w,c
  1047  001418  1022               	iorwf	disk_write@count+1,w,c
  1048  00141A  A4D8               	btfss	status,2,c
  1049  00141C  D020               	goto	l4385
  1050                           
  1051                           ;sdmm.c: 500: if ((send_cmd((24), sector) == 0)
  1052                           ;sdmm.c: 501: && xmit_datablock(buff, 0xFE))
  1053  00141E  C01D  F00E         	movff	disk_write@sector,send_cmd@arg
  1054  001422  C01E  F00F         	movff	disk_write@sector+1,send_cmd@arg+1
  1055  001426  C01F  F010         	movff	disk_write@sector+2,send_cmd@arg+2
  1056  00142A  C020  F011         	movff	disk_write@sector+3,send_cmd@arg+3
  1057  00142E  0E18               	movlw	24
  1058  001430  EC37  F00B         	call	_send_cmd
  1059  001434  0900               	iorlw	0
  1060  001436  A4D8               	btfss	status,2,c
  1061  001438  D058               	goto	l4399
  1062  00143A  0E20               	movlw	32
  1063  00143C  6E0D               	movwf	xmit_datablock@buff+2,c
  1064  00143E  C01C  F00C         	movff	disk_write@buff+1,xmit_datablock@buff+1
  1065  001442  C01B  F00B         	movff	disk_write@buff,xmit_datablock@buff
  1066  001446  0EFE               	movlw	254
  1067  001448  6E0E               	movwf	xmit_datablock@token,c
  1068  00144A  EC8B  F00B         	call	_xmit_datablock	;wreg free
  1069  00144E  500C               	movf	?_xmit_datablock+1,w,c
  1070  001450  100B               	iorwf	?_xmit_datablock,w,c
  1071  001452  B4D8               	btfsc	status,2,c
  1072  001454  D04A               	goto	l4399
  1073                           
  1074                           ;sdmm.c: 502: count = 0;
  1075  001456  0E00               	movlw	0
  1076  001458  6E22               	movwf	disk_write@count+1,c
  1077  00145A  0E00               	movlw	0
  1078  00145C  D045               	goto	L2
  1079  00145E                     l4385:
  1080                           
  1081                           ;sdmm.c: 504: else {
  1082                           ;sdmm.c: 505: if (CardType & (0x02|0x04)) send_cmd((0x80+23), count);
  1083  00145E  C069  F023         	movff	_CardType,??_disk_write
  1084  001462  0E06               	movlw	6
  1085  001464  1623               	andwf	??_disk_write,f,c
  1086  001466  B4D8               	btfsc	status,2,c
  1087  001468  D009               	goto	l248
  1088  00146A  C021  F00E         	movff	disk_write@count,send_cmd@arg
  1089  00146E  C022  F00F         	movff	disk_write@count+1,send_cmd@arg+1
  1090  001472  6A10               	clrf	send_cmd@arg+2,c
  1091  001474  6A11               	clrf	send_cmd@arg+3,c
  1092  001476  0E97               	movlw	151
  1093  001478  EC37  F00B         	call	_send_cmd
  1094  00147C                     l248:
  1095                           
  1096                           ;sdmm.c: 506: if (send_cmd((25), sector) == 0) {
  1097  00147C  C01D  F00E         	movff	disk_write@sector,send_cmd@arg
  1098  001480  C01E  F00F         	movff	disk_write@sector+1,send_cmd@arg+1
  1099  001484  C01F  F010         	movff	disk_write@sector+2,send_cmd@arg+2
  1100  001488  C020  F011         	movff	disk_write@sector+3,send_cmd@arg+3
  1101  00148C  0E19               	movlw	25
  1102  00148E  EC37  F00B         	call	_send_cmd
  1103  001492  0900               	iorlw	0
  1104  001494  A4D8               	btfss	status,2,c
  1105  001496  D029               	goto	l4399
  1106  001498                     l4389:
  1107                           
  1108                           ;sdmm.c: 508: if (!xmit_datablock(buff, 0xFC)) break;
  1109  001498  0E20               	movlw	32
  1110  00149A  6E0D               	movwf	xmit_datablock@buff+2,c
  1111  00149C  C01C  F00C         	movff	disk_write@buff+1,xmit_datablock@buff+1
  1112  0014A0  C01B  F00B         	movff	disk_write@buff,xmit_datablock@buff
  1113  0014A4  0EFC               	movlw	252
  1114  0014A6  6E0E               	movwf	xmit_datablock@token,c
  1115  0014A8  EC8B  F00B         	call	_xmit_datablock	;wreg free
  1116  0014AC  500C               	movf	?_xmit_datablock+1,w,c
  1117  0014AE  100B               	iorwf	?_xmit_datablock,w,c
  1118  0014B0  B4D8               	btfsc	status,2,c
  1119  0014B2  D009               	goto	l4395
  1120                           
  1121                           ;sdmm.c: 509: buff += 512;
  1122  0014B4  0E02               	movlw	2
  1123  0014B6  261C               	addwf	disk_write@buff+1,f,c
  1124                           
  1125                           ;sdmm.c: 510: } while (--count);
  1126  0014B8  0621               	decf	disk_write@count,f,c
  1127  0014BA  A0D8               	btfss	status,0,c
  1128  0014BC  0622               	decf	disk_write@count+1,f,c
  1129  0014BE  5022               	movf	(disk_write@count+1)& (0+255),w,c
  1130  0014C0  1021               	iorwf	disk_write@count& (0+255),w,c
  1131  0014C2  A4D8               	btfss	status,2,c
  1132  0014C4  D7E9               	goto	l4389
  1133  0014C6                     l4395:
  1134                           
  1135                           ;sdmm.c: 511: if (!xmit_datablock(0, 0xFD))
  1136  0014C6  0E00               	movlw	0
  1137  0014C8  6E0D               	movwf	xmit_datablock@buff+2,c
  1138  0014CA  0E00               	movlw	0
  1139  0014CC  6E0C               	movwf	xmit_datablock@buff+1,c
  1140  0014CE  0E00               	movlw	0
  1141  0014D0  6E0B               	movwf	xmit_datablock@buff,c
  1142  0014D2  0EFD               	movlw	253
  1143  0014D4  6E0E               	movwf	xmit_datablock@token,c
  1144  0014D6  EC8B  F00B         	call	_xmit_datablock	;wreg free
  1145  0014DA  500C               	movf	?_xmit_datablock+1,w,c
  1146  0014DC  100B               	iorwf	?_xmit_datablock,w,c
  1147  0014DE  A4D8               	btfss	status,2,c
  1148  0014E0  D004               	goto	l4399
  1149                           
  1150                           ;sdmm.c: 512: count = 1;
  1151  0014E2  0E00               	movlw	0
  1152  0014E4  6E22               	movwf	disk_write@count+1,c
  1153  0014E6  0E01               	movlw	1
  1154  0014E8                     L2:
  1155  0014E8  6E21               	movwf	disk_write@count,c
  1156  0014EA                     l4399:
  1157                           
  1158                           ;sdmm.c: 513: }
  1159                           ;sdmm.c: 514: }
  1160                           ;sdmm.c: 515: deselect();
  1161  0014EA  EC48  F00D         	call	_deselect	;wreg free
  1162                           
  1163                           ;sdmm.c: 517: return count ? RES_ERROR : RES_OK;
  1164  0014EE  5022               	movf	disk_write@count+1,w,c
  1165  0014F0  1021               	iorwf	disk_write@count,w,c
  1166  0014F2  B4D8               	btfsc	status,2,c
  1167  0014F4  D002               	goto	u5660
  1168  0014F6  0E01               	movlw	1
  1169  0014F8  D001               	goto	l243
  1170  0014FA                     u5660:
  1171  0014FA  0E00               	movlw	0
  1172  0014FC                     l243:
  1173  0014FC  0012               	return	
  1174  0014FE                     __end_of_disk_write:
  1175                           	opt stack 0
  1176                           tblptru	equ	0xFF8
  1177                           tblptrh	equ	0xFF7
  1178                           tblptrl	equ	0xFF6
  1179                           tablat	equ	0xFF5
  1180                           postinc0	equ	0xFEE
  1181                           wreg	equ	0xFE8
  1182                           postinc1	equ	0xFE6
  1183                           postdec1	equ	0xFE5
  1184                           fsr1h	equ	0xFE2
  1185                           fsr1l	equ	0xFE1
  1186                           indf2	equ	0xFDF
  1187                           postinc2	equ	0xFDE
  1188                           fsr2h	equ	0xFDA
  1189                           fsr2l	equ	0xFD9
  1190                           status	equ	0xFD8
  1191                           
  1192 ;; *************** function _xmit_datablock *****************
  1193 ;; Defined at:
  1194 ;;		line 295 in file "sdmm.c"
  1195 ;; Parameters:    Size  Location     Type
  1196 ;;  buff            3   10[COMRAM] PTR const unsigned char 
  1197 ;;		 -> NULL(0), ROM(49151), buffer(512), 
  1198 ;;  token           1   13[COMRAM] unsigned char 
  1199 ;; Auto vars:     Size  Location     Type
  1200 ;;  d               2   15[COMRAM] unsigned char [2]
  1201 ;; Return value:  Size  Location     Type
  1202 ;;                  2   10[COMRAM] int 
  1203 ;; Registers used:
  1204 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1205 ;; Tracked objects:
  1206 ;;		On entry : 0/0
  1207 ;;		On exit  : 0/0
  1208 ;;		Unchanged: 0/0
  1209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1210 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1211 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1212 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1213 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1214 ;;Total ram usage:        7 bytes
  1215 ;; Hardware stack levels used:    1
  1216 ;; Hardware stack levels required when called:    2
  1217 ;; This function calls:
  1218 ;;		_rcvr_mmc
  1219 ;;		_wait_ready
  1220 ;;		_xmit_mmc
  1221 ;; This function is called by:
  1222 ;;		_disk_write
  1223 ;; This function uses a non-reentrant model
  1224 ;;
  1225                           
  1226                           	psect	text3
  1227  001716                     __ptext3:
  1228                           	opt stack 0
  1229  001716                     _xmit_datablock:
  1230                           	opt stack 27
  1231                           
  1232                           ;sdmm.c: 300: BYTE d[2];
  1233                           ;sdmm.c: 303: if (!wait_ready()) return 0;
  1234                           
  1235                           ;incstack = 0
  1236  001716  EC80  F00C         	call	_wait_ready	;wreg free
  1237  00171A  5007               	movf	?_wait_ready+1,w,c
  1238  00171C  1006               	iorwf	?_wait_ready,w,c
  1239  00171E  B4D8               	btfsc	status,2,c
  1240  001720  D03A               	goto	u4680
  1241                           
  1242                           ;sdmm.c: 305: d[0] = token;
  1243  001722  C00E  F010         	movff	xmit_datablock@token,xmit_datablock@d
  1244                           
  1245                           ;sdmm.c: 306: xmit_mmc(d, 1);
  1246  001726  0E20               	movlw	32
  1247  001728  6E03               	movwf	xmit_mmc@buff+2,c
  1248  00172A  0E00               	movlw	high xmit_datablock@d
  1249  00172C  6E02               	movwf	xmit_mmc@buff+1,c
  1250  00172E  0E10               	movlw	low xmit_datablock@d
  1251  001730  6E01               	movwf	xmit_mmc@buff,c
  1252  001732  0E00               	movlw	0
  1253  001734  6E05               	movwf	xmit_mmc@bc+1,c
  1254  001736  0E01               	movlw	1
  1255  001738  6E04               	movwf	xmit_mmc@bc,c
  1256  00173A  ECE0  F00A         	call	_xmit_mmc	;wreg free
  1257                           
  1258                           ;sdmm.c: 307: if (token != 0xFD) {
  1259  00173E  500E               	movf	xmit_datablock@token,w,c
  1260  001740  0AFD               	xorlw	253
  1261  001742  B4D8               	btfsc	status,2,c
  1262  001744  D02C               	goto	l3873
  1263                           
  1264                           ;sdmm.c: 308: xmit_mmc(buff, 512);
  1265  001746  C00D  F003         	movff	xmit_datablock@buff+2,xmit_mmc@buff+2
  1266  00174A  C00C  F002         	movff	xmit_datablock@buff+1,xmit_mmc@buff+1
  1267  00174E  C00B  F001         	movff	xmit_datablock@buff,xmit_mmc@buff
  1268  001752  0E02               	movlw	2
  1269  001754  6E05               	movwf	xmit_mmc@bc+1,c
  1270  001756  0E00               	movlw	0
  1271  001758  6E04               	movwf	xmit_mmc@bc,c
  1272  00175A  ECE0  F00A         	call	_xmit_mmc	;wreg free
  1273                           
  1274                           ;sdmm.c: 309: rcvr_mmc(d, 2);
  1275  00175E  0E00               	movlw	high xmit_datablock@d
  1276  001760  6E02               	movwf	rcvr_mmc@buff+1,c
  1277  001762  0E10               	movlw	low xmit_datablock@d
  1278  001764  6E01               	movwf	rcvr_mmc@buff,c
  1279  001766  0E00               	movlw	0
  1280  001768  6E04               	movwf	rcvr_mmc@bc+1,c
  1281  00176A  0E02               	movlw	2
  1282  00176C  6E03               	movwf	rcvr_mmc@bc,c
  1283  00176E  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  1284                           
  1285                           ;sdmm.c: 310: rcvr_mmc(d, 1);
  1286  001772  0E00               	movlw	high xmit_datablock@d
  1287  001774  6E02               	movwf	rcvr_mmc@buff+1,c
  1288  001776  0E10               	movlw	low xmit_datablock@d
  1289  001778  6E01               	movwf	rcvr_mmc@buff,c
  1290  00177A  0E00               	movlw	0
  1291  00177C  6E04               	movwf	rcvr_mmc@bc+1,c
  1292  00177E  0E01               	movlw	1
  1293  001780  6E03               	movwf	rcvr_mmc@bc,c
  1294  001782  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  1295                           
  1296                           ;sdmm.c: 311: if ((d[0] & 0x1F) != 0x05)
  1297  001786  C010  F00F         	movff	xmit_datablock@d,??_xmit_datablock
  1298  00178A  0E1F               	movlw	31
  1299  00178C  160F               	andwf	??_xmit_datablock,f,c
  1300  00178E  500F               	movf	??_xmit_datablock,w,c
  1301  001790  0A05               	xorlw	5
  1302  001792  B4D8               	btfsc	status,2,c
  1303  001794  D004               	goto	l3873
  1304  001796                     u4680:
  1305                           
  1306                           ;sdmm.c: 312: return 0;
  1307  001796  0E00               	movlw	0
  1308  001798  6E0C               	movwf	?_xmit_datablock+1,c
  1309  00179A  0E00               	movlw	0
  1310  00179C  D003               	goto	L3
  1311  00179E                     l3873:
  1312                           
  1313                           ;sdmm.c: 313: }
  1314                           ;sdmm.c: 315: return 1;
  1315  00179E  0E00               	movlw	0
  1316  0017A0  6E0C               	movwf	?_xmit_datablock+1,c
  1317  0017A2  0E01               	movlw	1
  1318  0017A4                     L3:
  1319  0017A4  6E0B               	movwf	?_xmit_datablock,c
  1320  0017A6  0012               	return	
  1321  0017A8                     __end_of_xmit_datablock:
  1322                           	opt stack 0
  1323                           tblptru	equ	0xFF8
  1324                           tblptrh	equ	0xFF7
  1325                           tblptrl	equ	0xFF6
  1326                           tablat	equ	0xFF5
  1327                           postinc0	equ	0xFEE
  1328                           wreg	equ	0xFE8
  1329                           postinc1	equ	0xFE6
  1330                           postdec1	equ	0xFE5
  1331                           fsr1h	equ	0xFE2
  1332                           fsr1l	equ	0xFE1
  1333                           indf2	equ	0xFDF
  1334                           postinc2	equ	0xFDE
  1335                           fsr2h	equ	0xFDA
  1336                           fsr2l	equ	0xFD9
  1337                           status	equ	0xFD8
  1338                           
  1339 ;; *************** function _disk_read *****************
  1340 ;; Defined at:
  1341 ;;		line 457 in file "sdmm.c"
  1342 ;; Parameters:    Size  Location     Type
  1343 ;;  drv             1    wreg     unsigned char 
  1344 ;;  buff            2   26[COMRAM] PTR unsigned char 
  1345 ;;		 -> NULL(0), buffer(512), 
  1346 ;;  sector          4   28[COMRAM] unsigned long 
  1347 ;;  count           2   32[COMRAM] unsigned int 
  1348 ;; Auto vars:     Size  Location     Type
  1349 ;;  drv             1   35[COMRAM] unsigned char 
  1350 ;;  cmd             1   38[COMRAM] unsigned char 
  1351 ;; Return value:  Size  Location     Type
  1352 ;;                  1    wreg      enum E3490
  1353 ;; Registers used:
  1354 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1355 ;; Tracked objects:
  1356 ;;		On entry : 0/0
  1357 ;;		On exit  : 0/0
  1358 ;;		Unchanged: 0/0
  1359 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1360 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1361 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1362 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1363 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1364 ;;Total ram usage:       13 bytes
  1365 ;; Hardware stack levels used:    1
  1366 ;; Hardware stack levels required when called:    4
  1367 ;; This function calls:
  1368 ;;		_deselect
  1369 ;;		_disk_status
  1370 ;;		_rcvr_datablock
  1371 ;;		_send_cmd
  1372 ;; This function is called by:
  1373 ;;		_main
  1374 ;;		_move_window
  1375 ;;		_f_read
  1376 ;; This function uses a non-reentrant model
  1377 ;;
  1378                           
  1379                           	psect	text4
  1380  0014FE                     __ptext4:
  1381                           	opt stack 0
  1382  0014FE                     _disk_read:
  1383                           	opt stack 26
  1384                           
  1385                           ;incstack = 0
  1386                           ;disk_read@drv stored from wreg
  1387  0014FE  6E24               	movwf	disk_read@drv,c
  1388                           
  1389                           ;sdmm.c: 464: BYTE cmd;
  1390                           ;sdmm.c: 467: if (disk_status(drv) & 0x01) return RES_NOTRDY;
  1391  001500  5024               	movf	disk_read@drv,w,c
  1392  001502  EC71  F00D         	call	_disk_status
  1393  001506  6E23               	movwf	??_disk_read& (0+255),c
  1394  001508  A023               	btfss	??_disk_read,0,c
  1395  00150A  D002               	goto	l228
  1396  00150C  0E03               	movlw	3
  1397  00150E  D057               	goto	l229
  1398  001510                     l228:
  1399                           
  1400                           ;sdmm.c: 468: if (!(CardType & 0x08)) sector *= 512;
  1401  001510  B669               	btfsc	_CardType,3,c
  1402  001512  D008               	goto	l230
  1403  001514  0E09               	movlw	9
  1404  001516                     u5485:
  1405  001516  90D8               	bcf	status,0,c
  1406  001518  361D               	rlcf	disk_read@sector,f,c
  1407  00151A  361E               	rlcf	disk_read@sector+1,f,c
  1408  00151C  361F               	rlcf	disk_read@sector+2,f,c
  1409  00151E  3620               	rlcf	disk_read@sector+3,f,c
  1410  001520  2EE8               	decfsz	wreg,f,c
  1411  001522  D7F9               	goto	u5485
  1412  001524                     l230:
  1413                           
  1414                           ;sdmm.c: 470: cmd = count > 1 ? (18) : (17);
  1415  001524  0E02               	movlw	2
  1416  001526  5C21               	subwf	disk_read@count,w,c
  1417  001528  0E00               	movlw	0
  1418  00152A  5822               	subwfb	disk_read@count+1,w,c
  1419  00152C  B0D8               	btfsc	status,0,c
  1420  00152E  D004               	goto	l4349
  1421  001530  0E00               	movlw	0
  1422  001532  6E26               	movwf	_disk_read$235+1,c
  1423  001534  0E11               	movlw	17
  1424  001536  D003               	goto	L4
  1425  001538                     l4349:
  1426  001538  0E00               	movlw	0
  1427  00153A  6E26               	movwf	_disk_read$235+1,c
  1428  00153C  0E12               	movlw	18
  1429  00153E                     L4:
  1430  00153E  6E25               	movwf	_disk_read$235,c
  1431  001540  C025  F027         	movff	_disk_read$235,disk_read@cmd
  1432                           
  1433                           ;sdmm.c: 471: if (send_cmd(cmd, sector) == 0) {
  1434  001544  C01D  F00E         	movff	disk_read@sector,send_cmd@arg
  1435  001548  C01E  F00F         	movff	disk_read@sector+1,send_cmd@arg+1
  1436  00154C  C01F  F010         	movff	disk_read@sector+2,send_cmd@arg+2
  1437  001550  C020  F011         	movff	disk_read@sector+3,send_cmd@arg+3
  1438  001554  5027               	movf	disk_read@cmd,w,c
  1439  001556  EC37  F00B         	call	_send_cmd
  1440  00155A  0900               	iorlw	0
  1441  00155C  A4D8               	btfss	status,2,c
  1442  00155E  D026               	goto	l4365
  1443  001560                     l4355:
  1444                           
  1445                           ;sdmm.c: 473: if (!rcvr_datablock(buff, 512)) break;
  1446  001560  C01C  F007         	movff	disk_read@buff+1,rcvr_datablock@buff+1
  1447  001564  C01B  F006         	movff	disk_read@buff,rcvr_datablock@buff
  1448  001568  0E02               	movlw	2
  1449  00156A  6E09               	movwf	rcvr_datablock@btr+1,c
  1450  00156C  0E00               	movlw	0
  1451  00156E  6E08               	movwf	rcvr_datablock@btr,c
  1452  001570  EC15  F00C         	call	_rcvr_datablock	;wreg free
  1453  001574  5007               	movf	?_rcvr_datablock+1,w,c
  1454  001576  1006               	iorwf	?_rcvr_datablock,w,c
  1455  001578  B4D8               	btfsc	status,2,c
  1456  00157A  D009               	goto	l4361
  1457                           
  1458                           ;sdmm.c: 474: buff += 512;
  1459  00157C  0E02               	movlw	2
  1460  00157E  261C               	addwf	disk_read@buff+1,f,c
  1461                           
  1462                           ;sdmm.c: 475: } while (--count);
  1463  001580  0621               	decf	disk_read@count,f,c
  1464  001582  A0D8               	btfss	status,0,c
  1465  001584  0622               	decf	disk_read@count+1,f,c
  1466  001586  5022               	movf	(disk_read@count+1)& (0+255),w,c
  1467  001588  1021               	iorwf	disk_read@count& (0+255),w,c
  1468  00158A  A4D8               	btfss	status,2,c
  1469  00158C  D7E9               	goto	l4355
  1470  00158E                     l4361:
  1471                           
  1472                           ;sdmm.c: 476: if (cmd == (18)) send_cmd((12), 0);
  1473  00158E  5027               	movf	disk_read@cmd,w,c
  1474  001590  0A12               	xorlw	18
  1475  001592  A4D8               	btfss	status,2,c
  1476  001594  D00B               	goto	l4365
  1477  001596  0E00               	movlw	0
  1478  001598  6E0E               	movwf	send_cmd@arg,c
  1479  00159A  0E00               	movlw	0
  1480  00159C  6E0F               	movwf	send_cmd@arg+1,c
  1481  00159E  0E00               	movlw	0
  1482  0015A0  6E10               	movwf	send_cmd@arg+2,c
  1483  0015A2  0E00               	movlw	0
  1484  0015A4  6E11               	movwf	send_cmd@arg+3,c
  1485  0015A6  0E0C               	movlw	12
  1486  0015A8  EC37  F00B         	call	_send_cmd
  1487  0015AC                     l4365:
  1488                           
  1489                           ;sdmm.c: 477: }
  1490                           ;sdmm.c: 478: deselect();
  1491  0015AC  EC48  F00D         	call	_deselect	;wreg free
  1492                           
  1493                           ;sdmm.c: 480: return count ? RES_ERROR : RES_OK;
  1494  0015B0  5022               	movf	disk_read@count+1,w,c
  1495  0015B2  1021               	iorwf	disk_read@count,w,c
  1496  0015B4  B4D8               	btfsc	status,2,c
  1497  0015B6  D002               	goto	u5540
  1498  0015B8  0E01               	movlw	1
  1499  0015BA  D001               	goto	l229
  1500  0015BC                     u5540:
  1501  0015BC  0E00               	movlw	0
  1502  0015BE                     l229:
  1503  0015BE  0012               	return	
  1504  0015C0                     __end_of_disk_read:
  1505                           	opt stack 0
  1506                           tblptru	equ	0xFF8
  1507                           tblptrh	equ	0xFF7
  1508                           tblptrl	equ	0xFF6
  1509                           tablat	equ	0xFF5
  1510                           postinc0	equ	0xFEE
  1511                           wreg	equ	0xFE8
  1512                           postinc1	equ	0xFE6
  1513                           postdec1	equ	0xFE5
  1514                           fsr1h	equ	0xFE2
  1515                           fsr1l	equ	0xFE1
  1516                           indf2	equ	0xFDF
  1517                           postinc2	equ	0xFDE
  1518                           fsr2h	equ	0xFDA
  1519                           fsr2l	equ	0xFD9
  1520                           status	equ	0xFD8
  1521                           
  1522 ;; *************** function _rcvr_datablock *****************
  1523 ;; Defined at:
  1524 ;;		line 266 in file "sdmm.c"
  1525 ;; Parameters:    Size  Location     Type
  1526 ;;  buff            2    5[COMRAM] PTR unsigned char 
  1527 ;;		 -> NULL(0), disk_ioctl@csd(16), buffer(512), 
  1528 ;;  btr             2    7[COMRAM] unsigned int 
  1529 ;; Auto vars:     Size  Location     Type
  1530 ;;  d               2   11[COMRAM] unsigned char [2]
  1531 ;;  tmr             2    9[COMRAM] unsigned int 
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  2    5[COMRAM] int 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1541 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1542 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1544 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1545 ;;Total ram usage:        8 bytes
  1546 ;; Hardware stack levels used:    1
  1547 ;; Hardware stack levels required when called:    1
  1548 ;; This function calls:
  1549 ;;		_dly_us
  1550 ;;		_rcvr_mmc
  1551 ;; This function is called by:
  1552 ;;		_disk_read
  1553 ;;		_disk_ioctl
  1554 ;; This function uses a non-reentrant model
  1555 ;;
  1556                           
  1557                           	psect	text5
  1558  00182A                     __ptext5:
  1559                           	opt stack 0
  1560  00182A                     _rcvr_datablock:
  1561                           	opt stack 28
  1562                           
  1563                           ;sdmm.c: 271: BYTE d[2];
  1564                           ;sdmm.c: 272: UINT tmr;
  1565                           ;sdmm.c: 275: for (tmr = 1000; tmr; tmr--) {
  1566                           
  1567                           ;incstack = 0
  1568  00182A  0E03               	movlw	3
  1569  00182C  6E0B               	movwf	rcvr_datablock@tmr+1,c
  1570  00182E  0EE8               	movlw	232
  1571  001830  6E0A               	movwf	rcvr_datablock@tmr,c
  1572  001832  D016               	goto	l3837
  1573  001834                     l3827:
  1574                           
  1575                           ;sdmm.c: 276: rcvr_mmc(d, 1);
  1576  001834  0E00               	movlw	high rcvr_datablock@d
  1577  001836  6E02               	movwf	rcvr_mmc@buff+1,c
  1578  001838  0E0C               	movlw	low rcvr_datablock@d
  1579  00183A  6E01               	movwf	rcvr_mmc@buff,c
  1580  00183C  0E00               	movlw	0
  1581  00183E  6E04               	movwf	rcvr_mmc@bc+1,c
  1582  001840  0E01               	movlw	1
  1583  001842  6E03               	movwf	rcvr_mmc@bc,c
  1584  001844  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  1585                           
  1586                           ;sdmm.c: 277: if (d[0] != 0xFF) break;
  1587  001848  280C               	incf	rcvr_datablock@d,w,c
  1588  00184A  A4D8               	btfss	status,2,c
  1589  00184C  D00D               	goto	l3839
  1590                           
  1591                           ;sdmm.c: 278: dly_us(100);
  1592  00184E  0E00               	movlw	0
  1593  001850  6E02               	movwf	dly_us@n+1,c
  1594  001852  0E64               	movlw	100
  1595  001854  6E01               	movwf	dly_us@n,c
  1596  001856  EC3C  F00D         	call	_dly_us	;wreg free
  1597  00185A  060A               	decf	rcvr_datablock@tmr,f,c
  1598  00185C  A0D8               	btfss	status,0,c
  1599  00185E  060B               	decf	rcvr_datablock@tmr+1,f,c
  1600  001860                     l3837:
  1601  001860  500B               	movf	rcvr_datablock@tmr+1,w,c
  1602  001862  100A               	iorwf	rcvr_datablock@tmr,w,c
  1603  001864  A4D8               	btfss	status,2,c
  1604  001866  D7E6               	goto	l3827
  1605  001868                     l3839:
  1606                           
  1607                           ;sdmm.c: 279: }
  1608                           ;sdmm.c: 280: if (d[0] != 0xFE) return 0;
  1609  001868  500C               	movf	rcvr_datablock@d,w,c
  1610  00186A  0AFE               	xorlw	254
  1611  00186C  B4D8               	btfsc	status,2,c
  1612  00186E  D004               	goto	l3845
  1613  001870  0E00               	movlw	0
  1614  001872  6E07               	movwf	?_rcvr_datablock+1,c
  1615  001874  0E00               	movlw	0
  1616  001876  D017               	goto	L5
  1617  001878                     l3845:
  1618                           
  1619                           ;sdmm.c: 282: rcvr_mmc(buff, btr);
  1620  001878  C007  F002         	movff	rcvr_datablock@buff+1,rcvr_mmc@buff+1
  1621  00187C  C006  F001         	movff	rcvr_datablock@buff,rcvr_mmc@buff
  1622  001880  C008  F003         	movff	rcvr_datablock@btr,rcvr_mmc@bc
  1623  001884  C009  F004         	movff	rcvr_datablock@btr+1,rcvr_mmc@bc+1
  1624  001888  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  1625                           
  1626                           ;sdmm.c: 283: rcvr_mmc(d, 2);
  1627  00188C  0E00               	movlw	high rcvr_datablock@d
  1628  00188E  6E02               	movwf	rcvr_mmc@buff+1,c
  1629  001890  0E0C               	movlw	low rcvr_datablock@d
  1630  001892  6E01               	movwf	rcvr_mmc@buff,c
  1631  001894  0E00               	movlw	0
  1632  001896  6E04               	movwf	rcvr_mmc@bc+1,c
  1633  001898  0E02               	movlw	2
  1634  00189A  6E03               	movwf	rcvr_mmc@bc,c
  1635  00189C  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  1636                           
  1637                           ;sdmm.c: 285: return 1;
  1638  0018A0  0E00               	movlw	0
  1639  0018A2  6E07               	movwf	?_rcvr_datablock+1,c
  1640  0018A4  0E01               	movlw	1
  1641  0018A6                     L5:
  1642  0018A6  6E06               	movwf	?_rcvr_datablock,c
  1643  0018A8  0012               	return	
  1644  0018AA                     __end_of_rcvr_datablock:
  1645                           	opt stack 0
  1646                           tblptru	equ	0xFF8
  1647                           tblptrh	equ	0xFF7
  1648                           tblptrl	equ	0xFF6
  1649                           tablat	equ	0xFF5
  1650                           postinc0	equ	0xFEE
  1651                           wreg	equ	0xFE8
  1652                           postinc1	equ	0xFE6
  1653                           postdec1	equ	0xFE5
  1654                           fsr1h	equ	0xFE2
  1655                           fsr1l	equ	0xFE1
  1656                           indf2	equ	0xFDF
  1657                           postinc2	equ	0xFDE
  1658                           fsr2h	equ	0xFDA
  1659                           fsr2l	equ	0xFD9
  1660                           status	equ	0xFD8
  1661                           
  1662 ;; *************** function _disk_status *****************
  1663 ;; Defined at:
  1664 ;;		line 380 in file "sdmm.c"
  1665 ;; Parameters:    Size  Location     Type
  1666 ;;  drv             1    wreg     unsigned char 
  1667 ;; Auto vars:     Size  Location     Type
  1668 ;;  drv             1    0[COMRAM] unsigned char 
  1669 ;; Return value:  Size  Location     Type
  1670 ;;                  1    wreg      unsigned char 
  1671 ;; Registers used:
  1672 ;;		wreg, status,2
  1673 ;; Tracked objects:
  1674 ;;		On entry : 0/0
  1675 ;;		On exit  : 0/0
  1676 ;;		Unchanged: 0/0
  1677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1678 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1679 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1680 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1681 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1682 ;;Total ram usage:        1 bytes
  1683 ;; Hardware stack levels used:    1
  1684 ;; This function calls:
  1685 ;;		Nothing
  1686 ;; This function is called by:
  1687 ;;		_disk_read
  1688 ;;		_disk_write
  1689 ;;		_disk_ioctl
  1690 ;;		_find_volume
  1691 ;;		_validate
  1692 ;; This function uses a non-reentrant model
  1693 ;;
  1694                           
  1695                           	psect	text6
  1696  001AE2                     __ptext6:
  1697                           	opt stack 0
  1698  001AE2                     _disk_status:
  1699                           	opt stack 29
  1700                           
  1701                           ;incstack = 0
  1702                           ;disk_status@drv stored from wreg
  1703  001AE2  6E01               	movwf	disk_status@drv,c
  1704                           
  1705                           ;sdmm.c: 384: if (drv) return 0x01;
  1706  001AE4  5001               	movf	disk_status@drv,w,c
  1707  001AE6  B4D8               	btfsc	status,2,c
  1708  001AE8  D002               	goto	l3933
  1709  001AEA  0E01               	movlw	1
  1710  001AEC  D001               	goto	l196
  1711  001AEE                     l3933:
  1712                           
  1713                           ;sdmm.c: 386: return Stat;
  1714  001AEE  507A               	movf	_Stat,w,c
  1715  001AF0                     l196:
  1716  001AF0  0012               	return	
  1717  001AF2                     __end_of_disk_status:
  1718                           	opt stack 0
  1719                           tblptru	equ	0xFF8
  1720                           tblptrh	equ	0xFF7
  1721                           tblptrl	equ	0xFF6
  1722                           tablat	equ	0xFF5
  1723                           postinc0	equ	0xFEE
  1724                           wreg	equ	0xFE8
  1725                           postinc1	equ	0xFE6
  1726                           postdec1	equ	0xFE5
  1727                           fsr1h	equ	0xFE2
  1728                           fsr1l	equ	0xFE1
  1729                           indf2	equ	0xFDF
  1730                           postinc2	equ	0xFDE
  1731                           fsr2h	equ	0xFDA
  1732                           fsr2l	equ	0xFD9
  1733                           status	equ	0xFD8
  1734                           
  1735 ;; *************** function _disk_initialize *****************
  1736 ;; Defined at:
  1737 ;;		line 395 in file "sdmm.c"
  1738 ;; Parameters:    Size  Location     Type
  1739 ;;  drv             1    wreg     unsigned char 
  1740 ;; Auto vars:     Size  Location     Type
  1741 ;;  drv             1   27[COMRAM] unsigned char 
  1742 ;;  buf             4   30[COMRAM] unsigned char [4]
  1743 ;;  tmr             2   38[COMRAM] unsigned int 
  1744 ;;  ty              1   37[COMRAM] unsigned char 
  1745 ;;  s               1   36[COMRAM] unsigned char 
  1746 ;;  cmd             1   35[COMRAM] unsigned char 
  1747 ;;  n               1   34[COMRAM] unsigned char 
  1748 ;; Return value:  Size  Location     Type
  1749 ;;                  1    wreg      unsigned char 
  1750 ;; Registers used:
  1751 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1752 ;; Tracked objects:
  1753 ;;		On entry : 0/0
  1754 ;;		On exit  : 0/0
  1755 ;;		Unchanged: 0/0
  1756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1757 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1758 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1759 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1760 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1761 ;;Total ram usage:       14 bytes
  1762 ;; Hardware stack levels used:    1
  1763 ;; Hardware stack levels required when called:    4
  1764 ;; This function calls:
  1765 ;;		_deselect
  1766 ;;		_dly_us
  1767 ;;		_rcvr_mmc
  1768 ;;		_send_cmd
  1769 ;; This function is called by:
  1770 ;;		_main
  1771 ;;		_find_volume
  1772 ;; This function uses a non-reentrant model
  1773 ;;
  1774                           
  1775                           	psect	text7
  1776  001076                     __ptext7:
  1777                           	opt stack 0
  1778  001076                     _disk_initialize:
  1779                           	opt stack 26
  1780                           
  1781                           ;incstack = 0
  1782                           ;disk_initialize@drv stored from wreg
  1783  001076  6E1C               	movwf	disk_initialize@drv,c
  1784                           
  1785                           ;sdmm.c: 399: BYTE n, ty, cmd, buf[4];
  1786                           ;sdmm.c: 400: UINT tmr;
  1787                           ;sdmm.c: 401: DSTATUS s;
  1788                           ;sdmm.c: 404: if (drv) return RES_NOTRDY;
  1789  001078  501C               	movf	disk_initialize@drv,w,c
  1790  00107A  B4D8               	btfsc	status,2,c
  1791  00107C  D002               	goto	l4247
  1792  00107E  0E03               	movlw	3
  1793  001080  D0F0               	goto	l200
  1794  001082                     l4247:
  1795                           
  1796                           ;sdmm.c: 406: dly_us(10000);
  1797  001082  0E27               	movlw	39
  1798  001084  6E02               	movwf	dly_us@n+1,c
  1799  001086  0E10               	movlw	16
  1800  001088  6E01               	movwf	dly_us@n,c
  1801  00108A  EC3C  F00D         	call	_dly_us	;wreg free
  1802                           
  1803                           ;sdmm.c: 407: (TRISC &= ~0x40); (PORTC |= 0x40);
  1804  00108E  9C94               	bcf	3988,6,c	;volatile
  1805  001090  8C82               	bsf	3970,6,c	;volatile
  1806                           
  1807                           ;sdmm.c: 408: (TRISC &= ~0x80); (PORTC &= ~0x08);
  1808  001092  9E94               	bcf	3988,7,c	;volatile
  1809  001094  9682               	bcf	3970,3,c	;volatile
  1810                           
  1811                           ;sdmm.c: 409: (TRISC &= ~0x20);
  1812  001096  9A94               	bcf	3988,5,c	;volatile
  1813                           
  1814                           ;sdmm.c: 410: (TRISC |= 0x10);
  1815  001098  8894               	bsf	3988,4,c	;volatile
  1816                           
  1817                           ;sdmm.c: 412: for (n = 10; n; n--) rcvr_mmc(buf, 1);
  1818  00109A  0E0A               	movlw	10
  1819  00109C  6E23               	movwf	disk_initialize@n,c
  1820  00109E  D00B               	goto	l4267
  1821  0010A0                     l4263:
  1822  0010A0  0E00               	movlw	high disk_initialize@buf
  1823  0010A2  6E02               	movwf	rcvr_mmc@buff+1,c
  1824  0010A4  0E1F               	movlw	low disk_initialize@buf
  1825  0010A6  6E01               	movwf	rcvr_mmc@buff,c
  1826  0010A8  0E00               	movlw	0
  1827  0010AA  6E04               	movwf	rcvr_mmc@bc+1,c
  1828  0010AC  0E01               	movlw	1
  1829  0010AE  6E03               	movwf	rcvr_mmc@bc,c
  1830  0010B0  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  1831  0010B4  0623               	decf	disk_initialize@n,f,c
  1832  0010B6                     l4267:
  1833  0010B6  6623               	tstfsz	disk_initialize@n,c
  1834  0010B8  D7F3               	goto	l4263
  1835                           
  1836                           ;sdmm.c: 414: ty = 0;
  1837  0010BA  0E00               	movlw	0
  1838  0010BC  6E26               	movwf	disk_initialize@ty,c
  1839                           
  1840                           ;sdmm.c: 415: if (send_cmd((0), 0) == 1) {
  1841  0010BE  0E00               	movlw	0
  1842  0010C0  6E0E               	movwf	send_cmd@arg,c
  1843  0010C2  0E00               	movlw	0
  1844  0010C4  6E0F               	movwf	send_cmd@arg+1,c
  1845  0010C6  0E00               	movlw	0
  1846  0010C8  6E10               	movwf	send_cmd@arg+2,c
  1847  0010CA  0E00               	movlw	0
  1848  0010CC  6E11               	movwf	send_cmd@arg+3,c
  1849  0010CE  0E00               	movlw	0
  1850  0010D0  EC37  F00B         	call	_send_cmd
  1851  0010D4  6E1B               	movwf	??_disk_initialize& (0+255),c
  1852  0010D6  041B               	decf	??_disk_initialize,w,c
  1853  0010D8  A4D8               	btfss	status,2,c
  1854  0010DA  D0B5               	goto	l4329
  1855                           
  1856                           ;sdmm.c: 416: if (send_cmd((8), 0x1AA) == 1) {
  1857  0010DC  0EAA               	movlw	170
  1858  0010DE  6E0E               	movwf	send_cmd@arg,c
  1859  0010E0  0E01               	movlw	1
  1860  0010E2  6E0F               	movwf	send_cmd@arg+1,c
  1861  0010E4  0E00               	movlw	0
  1862  0010E6  6E10               	movwf	send_cmd@arg+2,c
  1863  0010E8  0E00               	movlw	0
  1864  0010EA  6E11               	movwf	send_cmd@arg+3,c
  1865  0010EC  0E08               	movlw	8
  1866  0010EE  EC37  F00B         	call	_send_cmd
  1867  0010F2  6E1B               	movwf	??_disk_initialize& (0+255),c
  1868  0010F4  041B               	decf	??_disk_initialize,w,c
  1869  0010F6  A4D8               	btfss	status,2,c
  1870  0010F8  D05A               	goto	l4307
  1871                           
  1872                           ;sdmm.c: 417: rcvr_mmc(buf, 4);
  1873  0010FA  0E00               	movlw	high disk_initialize@buf
  1874  0010FC  6E02               	movwf	rcvr_mmc@buff+1,c
  1875  0010FE  0E1F               	movlw	low disk_initialize@buf
  1876  001100  6E01               	movwf	rcvr_mmc@buff,c
  1877  001102  0E00               	movlw	0
  1878  001104  6E04               	movwf	rcvr_mmc@bc+1,c
  1879  001106  0E04               	movlw	4
  1880  001108  6E03               	movwf	rcvr_mmc@bc,c
  1881  00110A  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  1882                           
  1883                           ;sdmm.c: 418: if (buf[2] == 0x01 && buf[3] == 0xAA) {
  1884  00110E  0421               	decf	disk_initialize@buf+2,w,c
  1885  001110  A4D8               	btfss	status,2,c
  1886  001112  D099               	goto	l4329
  1887  001114  5022               	movf	disk_initialize@buf+3,w,c
  1888  001116  0AAA               	xorlw	170
  1889  001118  A4D8               	btfss	status,2,c
  1890  00111A  D095               	goto	l4329
  1891                           
  1892                           ;sdmm.c: 419: for (tmr = 1000; tmr; tmr--) {
  1893  00111C  0E03               	movlw	3
  1894  00111E  6E28               	movwf	disk_initialize@tmr+1,c
  1895  001120  0EE8               	movlw	232
  1896  001122  6E27               	movwf	disk_initialize@tmr,c
  1897  001124  D017               	goto	l4291
  1898  001126                     l4283:
  1899                           
  1900                           ;sdmm.c: 420: if (send_cmd((0x80+41), 1UL << 30) == 0) break;
  1901  001126  0E00               	movlw	0
  1902  001128  6E0E               	movwf	send_cmd@arg,c
  1903  00112A  0E00               	movlw	0
  1904  00112C  6E0F               	movwf	send_cmd@arg+1,c
  1905  00112E  0E00               	movlw	0
  1906  001130  6E10               	movwf	send_cmd@arg+2,c
  1907  001132  0E40               	movlw	64
  1908  001134  6E11               	movwf	send_cmd@arg+3,c
  1909  001136  0EA9               	movlw	169
  1910  001138  EC37  F00B         	call	_send_cmd
  1911  00113C  0900               	iorlw	0
  1912  00113E  B4D8               	btfsc	status,2,c
  1913  001140  D00D               	goto	l4293
  1914                           
  1915                           ;sdmm.c: 421: dly_us(1000);
  1916  001142  0E03               	movlw	3
  1917  001144  6E02               	movwf	dly_us@n+1,c
  1918  001146  0EE8               	movlw	232
  1919  001148  6E01               	movwf	dly_us@n,c
  1920  00114A  EC3C  F00D         	call	_dly_us	;wreg free
  1921  00114E  0627               	decf	disk_initialize@tmr,f,c
  1922  001150  A0D8               	btfss	status,0,c
  1923  001152  0628               	decf	disk_initialize@tmr+1,f,c
  1924  001154                     l4291:
  1925  001154  5028               	movf	disk_initialize@tmr+1,w,c
  1926  001156  1027               	iorwf	disk_initialize@tmr,w,c
  1927  001158  A4D8               	btfss	status,2,c
  1928  00115A  D7E5               	goto	l4283
  1929  00115C                     l4293:
  1930                           
  1931                           ;sdmm.c: 422: }
  1932                           ;sdmm.c: 423: if (tmr && send_cmd((58), 0) == 0) {
  1933  00115C  5028               	movf	disk_initialize@tmr+1,w,c
  1934  00115E  1027               	iorwf	disk_initialize@tmr,w,c
  1935  001160  B4D8               	btfsc	status,2,c
  1936  001162  D071               	goto	l4329
  1937  001164  0E00               	movlw	0
  1938  001166  6E0E               	movwf	send_cmd@arg,c
  1939  001168  0E00               	movlw	0
  1940  00116A  6E0F               	movwf	send_cmd@arg+1,c
  1941  00116C  0E00               	movlw	0
  1942  00116E  6E10               	movwf	send_cmd@arg+2,c
  1943  001170  0E00               	movlw	0
  1944  001172  6E11               	movwf	send_cmd@arg+3,c
  1945  001174  0E3A               	movlw	58
  1946  001176  EC37  F00B         	call	_send_cmd
  1947  00117A  0900               	iorlw	0
  1948  00117C  A4D8               	btfss	status,2,c
  1949  00117E  D063               	goto	l4329
  1950                           
  1951                           ;sdmm.c: 424: rcvr_mmc(buf, 4);
  1952  001180  0E00               	movlw	high disk_initialize@buf
  1953  001182  6E02               	movwf	rcvr_mmc@buff+1,c
  1954  001184  0E1F               	movlw	low disk_initialize@buf
  1955  001186  6E01               	movwf	rcvr_mmc@buff,c
  1956  001188  0E00               	movlw	0
  1957  00118A  6E04               	movwf	rcvr_mmc@bc+1,c
  1958  00118C  0E04               	movlw	4
  1959  00118E  6E03               	movwf	rcvr_mmc@bc,c
  1960  001190  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  1961                           
  1962                           ;sdmm.c: 425: ty = (buf[0] & 0x40) ? 0x04 | 0x08 : 0x04;
  1963  001194  BC1F               	btfsc	disk_initialize@buf,6,c
  1964  001196  D004               	goto	l4303
  1965  001198  0E00               	movlw	0
  1966  00119A  6E1E               	movwf	_disk_initialize$227+1,c
  1967  00119C  0E04               	movlw	4
  1968  00119E  D003               	goto	L6
  1969  0011A0                     l4303:
  1970  0011A0  0E00               	movlw	0
  1971  0011A2  6E1E               	movwf	_disk_initialize$227+1,c
  1972  0011A4  0E0C               	movlw	12
  1973  0011A6                     L6:
  1974  0011A6  6E1D               	movwf	_disk_initialize$227,c
  1975  0011A8  C01D  F026         	movff	_disk_initialize$227,disk_initialize@ty
  1976  0011AC  D04C               	goto	l4329
  1977  0011AE                     l4307:
  1978                           
  1979                           ;sdmm.c: 429: if (send_cmd((0x80+41), 0) <= 1) {
  1980  0011AE  0E00               	movlw	0
  1981  0011B0  6E0E               	movwf	send_cmd@arg,c
  1982  0011B2  0E00               	movlw	0
  1983  0011B4  6E0F               	movwf	send_cmd@arg+1,c
  1984  0011B6  0E00               	movlw	0
  1985  0011B8  6E10               	movwf	send_cmd@arg+2,c
  1986  0011BA  0E00               	movlw	0
  1987  0011BC  6E11               	movwf	send_cmd@arg+3,c
  1988  0011BE  0EA9               	movlw	169
  1989  0011C0  EC37  F00B         	call	_send_cmd
  1990  0011C4  6E1B               	movwf	??_disk_initialize& (0+255),c
  1991  0011C6  0E02               	movlw	2
  1992  0011C8  5C1B               	subwf	??_disk_initialize,w,c
  1993  0011CA  B0D8               	btfsc	status,0,c
  1994  0011CC  D004               	goto	l4311
  1995                           
  1996                           ;sdmm.c: 430: ty = 0x02; cmd = (0x80+41);
  1997  0011CE  0E02               	movlw	2
  1998  0011D0  6E26               	movwf	disk_initialize@ty,c
  1999  0011D2  0EA9               	movlw	169
  2000  0011D4  D003               	goto	L7
  2001  0011D6                     l4311:
  2002                           
  2003                           ;sdmm.c: 432: ty = 0x01; cmd = (1);
  2004  0011D6  0E01               	movlw	1
  2005  0011D8  6E26               	movwf	disk_initialize@ty,c
  2006  0011DA  0E01               	movlw	1
  2007  0011DC                     L7:
  2008  0011DC  6E24               	movwf	disk_initialize@cmd,c
  2009                           
  2010                           ;sdmm.c: 433: }
  2011                           ;sdmm.c: 434: for (tmr = 1000; tmr; tmr--) {
  2012  0011DE  0E03               	movlw	3
  2013  0011E0  6E28               	movwf	disk_initialize@tmr+1,c
  2014  0011E2  0EE8               	movlw	232
  2015  0011E4  6E27               	movwf	disk_initialize@tmr,c
  2016  0011E6  D017               	goto	l4321
  2017  0011E8                     l4313:
  2018                           
  2019                           ;sdmm.c: 435: if (send_cmd(cmd, 0) == 0) break;
  2020  0011E8  0E00               	movlw	0
  2021  0011EA  6E0E               	movwf	send_cmd@arg,c
  2022  0011EC  0E00               	movlw	0
  2023  0011EE  6E0F               	movwf	send_cmd@arg+1,c
  2024  0011F0  0E00               	movlw	0
  2025  0011F2  6E10               	movwf	send_cmd@arg+2,c
  2026  0011F4  0E00               	movlw	0
  2027  0011F6  6E11               	movwf	send_cmd@arg+3,c
  2028  0011F8  5024               	movf	disk_initialize@cmd,w,c
  2029  0011FA  EC37  F00B         	call	_send_cmd
  2030  0011FE  0900               	iorlw	0
  2031  001200  B4D8               	btfsc	status,2,c
  2032  001202  D00D               	goto	l4323
  2033                           
  2034                           ;sdmm.c: 436: dly_us(1000);
  2035  001204  0E03               	movlw	3
  2036  001206  6E02               	movwf	dly_us@n+1,c
  2037  001208  0EE8               	movlw	232
  2038  00120A  6E01               	movwf	dly_us@n,c
  2039  00120C  EC3C  F00D         	call	_dly_us	;wreg free
  2040  001210  0627               	decf	disk_initialize@tmr,f,c
  2041  001212  A0D8               	btfss	status,0,c
  2042  001214  0628               	decf	disk_initialize@tmr+1,f,c
  2043  001216                     l4321:
  2044  001216  5028               	movf	disk_initialize@tmr+1,w,c
  2045  001218  1027               	iorwf	disk_initialize@tmr,w,c
  2046  00121A  A4D8               	btfss	status,2,c
  2047  00121C  D7E5               	goto	l4313
  2048  00121E                     l4323:
  2049                           
  2050                           ;sdmm.c: 437: }
  2051                           ;sdmm.c: 438: if (!tmr || send_cmd((16), 512) != 0)
  2052  00121E  5028               	movf	disk_initialize@tmr+1,w,c
  2053  001220  1027               	iorwf	disk_initialize@tmr,w,c
  2054  001222  B4D8               	btfsc	status,2,c
  2055  001224  D00E               	goto	l4327
  2056  001226  0E00               	movlw	0
  2057  001228  6E0E               	movwf	send_cmd@arg,c
  2058  00122A  0E02               	movlw	2
  2059  00122C  6E0F               	movwf	send_cmd@arg+1,c
  2060  00122E  0E00               	movlw	0
  2061  001230  6E10               	movwf	send_cmd@arg+2,c
  2062  001232  0E00               	movlw	0
  2063  001234  6E11               	movwf	send_cmd@arg+3,c
  2064  001236  0E10               	movlw	16
  2065  001238  EC37  F00B         	call	_send_cmd
  2066  00123C  0900               	iorlw	0
  2067  00123E  B4D8               	btfsc	status,2,c
  2068  001240  D002               	goto	l4329
  2069  001242                     l4327:
  2070                           
  2071                           ;sdmm.c: 439: ty = 0;
  2072  001242  0E00               	movlw	0
  2073  001244  6E26               	movwf	disk_initialize@ty,c
  2074  001246                     l4329:
  2075                           
  2076                           ;sdmm.c: 440: }
  2077                           ;sdmm.c: 441: }
  2078                           ;sdmm.c: 442: CardType = ty;
  2079  001246  C026  F069         	movff	disk_initialize@ty,_CardType
  2080                           
  2081                           ;sdmm.c: 443: s = ty ? 0 : 0x01;
  2082  00124A  5026               	movf	disk_initialize@ty,w,c
  2083  00124C  A4D8               	btfss	status,2,c
  2084  00124E  D002               	goto	u5450
  2085  001250  0E01               	movlw	1
  2086  001252  D001               	goto	u5456
  2087  001254                     u5450:
  2088  001254  0E00               	movlw	0
  2089  001256                     u5456:
  2090  001256  6E25               	movwf	disk_initialize@s,c
  2091                           
  2092                           ;sdmm.c: 444: Stat = s;
  2093  001258  C025  F07A         	movff	disk_initialize@s,_Stat
  2094                           
  2095                           ;sdmm.c: 446: deselect();
  2096  00125C  EC48  F00D         	call	_deselect	;wreg free
  2097                           
  2098                           ;sdmm.c: 448: return s;
  2099  001260  5025               	movf	disk_initialize@s,w,c
  2100  001262                     l200:
  2101  001262  0012               	return	
  2102  001264                     __end_of_disk_initialize:
  2103                           	opt stack 0
  2104                           tblptru	equ	0xFF8
  2105                           tblptrh	equ	0xFF7
  2106                           tblptrl	equ	0xFF6
  2107                           tablat	equ	0xFF5
  2108                           postinc0	equ	0xFEE
  2109                           wreg	equ	0xFE8
  2110                           postinc1	equ	0xFE6
  2111                           postdec1	equ	0xFE5
  2112                           fsr1h	equ	0xFE2
  2113                           fsr1l	equ	0xFE1
  2114                           indf2	equ	0xFDF
  2115                           postinc2	equ	0xFDE
  2116                           fsr2h	equ	0xFDA
  2117                           fsr2l	equ	0xFD9
  2118                           status	equ	0xFD8
  2119                           
  2120 ;; *************** function _send_cmd *****************
  2121 ;; Defined at:
  2122 ;;		line 325 in file "sdmm.c"
  2123 ;; Parameters:    Size  Location     Type
  2124 ;;  cmd             1    wreg     unsigned char 
  2125 ;;  arg             4   13[COMRAM] unsigned long 
  2126 ;; Auto vars:     Size  Location     Type
  2127 ;;  cmd             1   25[COMRAM] unsigned char 
  2128 ;;  buf             6   17[COMRAM] unsigned char [6]
  2129 ;;  d               1   24[COMRAM] unsigned char 
  2130 ;;  n               1   23[COMRAM] unsigned char 
  2131 ;; Return value:  Size  Location     Type
  2132 ;;                  1    wreg      unsigned char 
  2133 ;; Registers used:
  2134 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2135 ;; Tracked objects:
  2136 ;;		On entry : 0/0
  2137 ;;		On exit  : 0/0
  2138 ;;		Unchanged: 0/0
  2139 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2140 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2141 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2142 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2143 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2144 ;;Total ram usage:       13 bytes
  2145 ;; Hardware stack levels used:    1
  2146 ;; Hardware stack levels required when called:    3
  2147 ;; This function calls:
  2148 ;;		_deselect
  2149 ;;		_rcvr_mmc
  2150 ;;		_select
  2151 ;;		_xmit_mmc
  2152 ;; This function is called by:
  2153 ;;		_disk_initialize
  2154 ;;		_disk_read
  2155 ;;		_disk_write
  2156 ;;		_disk_ioctl
  2157 ;; This function uses a non-reentrant model
  2158 ;;
  2159                           
  2160                           	psect	text8
  2161  00166E                     __ptext8:
  2162                           	opt stack 0
  2163  00166E                     _send_cmd:
  2164                           	opt stack 26
  2165                           
  2166                           ;incstack = 0
  2167                           ;send_cmd@cmd stored from wreg
  2168  00166E  6E1A               	movwf	send_cmd@cmd,c
  2169                           
  2170                           ;sdmm.c: 337: }
  2171                           ;sdmm.c: 340: if (cmd != (12)) {
  2172  001670  501A               	movf	send_cmd@cmd,w,c
  2173  001672  0A0C               	xorlw	12
  2174  001674  B4D8               	btfsc	status,2,c
  2175  001676  D00A               	goto	l3887
  2176                           
  2177                           ;sdmm.c: 341: deselect();
  2178  001678  EC48  F00D         	call	_deselect	;wreg free
  2179                           
  2180                           ;sdmm.c: 342: if (!select()) return 0xFF;
  2181  00167C  ECE9  F00C         	call	_select	;wreg free
  2182  001680  500C               	movf	?_select+1,w,c
  2183  001682  100B               	iorwf	?_select,w,c
  2184  001684  A4D8               	btfss	status,2,c
  2185  001686  D002               	goto	l3887
  2186  001688  0EFF               	movlw	255
  2187  00168A  D044               	goto	l185
  2188  00168C                     l3887:
  2189                           
  2190                           ;sdmm.c: 343: }
  2191                           ;sdmm.c: 346: buf[0] = 0x40 | cmd;
  2192  00168C  501A               	movf	send_cmd@cmd,w,c
  2193  00168E  0940               	iorlw	64
  2194  001690  6E12               	movwf	send_cmd@buf,c
  2195                           
  2196                           ;sdmm.c: 347: buf[1] = (BYTE)(arg >> 24);
  2197  001692  C011  F013         	movff	send_cmd@arg+3,send_cmd@buf+1
  2198                           
  2199                           ;sdmm.c: 348: buf[2] = (BYTE)(arg >> 16);
  2200  001696  C010  F014         	movff	send_cmd@arg+2,send_cmd@buf+2
  2201                           
  2202                           ;sdmm.c: 349: buf[3] = (BYTE)(arg >> 8);
  2203  00169A  C00F  F015         	movff	send_cmd@arg+1,send_cmd@buf+3
  2204                           
  2205                           ;sdmm.c: 350: buf[4] = (BYTE)arg;
  2206  00169E  C00E  F016         	movff	send_cmd@arg,send_cmd@buf+4
  2207                           
  2208                           ;sdmm.c: 351: n = 0x01;
  2209  0016A2  0E01               	movlw	1
  2210  0016A4  6E18               	movwf	send_cmd@n,c
  2211                           
  2212                           ;sdmm.c: 352: if (cmd == (0)) n = 0x95;
  2213  0016A6  661A               	tstfsz	send_cmd@cmd,c
  2214  0016A8  D002               	goto	l3903
  2215  0016AA  0E95               	movlw	149
  2216  0016AC  6E18               	movwf	send_cmd@n,c
  2217  0016AE                     l3903:
  2218                           
  2219                           ;sdmm.c: 353: if (cmd == (8)) n = 0x87;
  2220  0016AE  501A               	movf	send_cmd@cmd,w,c
  2221  0016B0  0A08               	xorlw	8
  2222  0016B2  A4D8               	btfss	status,2,c
  2223  0016B4  D002               	goto	l3907
  2224  0016B6  0E87               	movlw	135
  2225  0016B8  6E18               	movwf	send_cmd@n,c
  2226  0016BA                     l3907:
  2227                           
  2228                           ;sdmm.c: 354: buf[5] = n;
  2229  0016BA  C018  F017         	movff	send_cmd@n,send_cmd@buf+5
  2230                           
  2231                           ;sdmm.c: 355: xmit_mmc(buf, 6);
  2232  0016BE  0E20               	movlw	32
  2233  0016C0  6E03               	movwf	xmit_mmc@buff+2,c
  2234  0016C2  0E00               	movlw	high send_cmd@buf
  2235  0016C4  6E02               	movwf	xmit_mmc@buff+1,c
  2236  0016C6  0E12               	movlw	low send_cmd@buf
  2237  0016C8  6E01               	movwf	xmit_mmc@buff,c
  2238  0016CA  0E00               	movlw	0
  2239  0016CC  6E05               	movwf	xmit_mmc@bc+1,c
  2240  0016CE  0E06               	movlw	6
  2241  0016D0  6E04               	movwf	xmit_mmc@bc,c
  2242  0016D2  ECE0  F00A         	call	_xmit_mmc	;wreg free
  2243                           
  2244                           ;sdmm.c: 358: if (cmd == (12)) rcvr_mmc(&d, 1);
  2245  0016D6  501A               	movf	send_cmd@cmd,w,c
  2246  0016D8  0A0C               	xorlw	12
  2247  0016DA  A4D8               	btfss	status,2,c
  2248  0016DC  D00A               	goto	l3915
  2249  0016DE  0E00               	movlw	high send_cmd@d
  2250  0016E0  6E02               	movwf	rcvr_mmc@buff+1,c
  2251  0016E2  0E19               	movlw	low send_cmd@d
  2252  0016E4  6E01               	movwf	rcvr_mmc@buff,c
  2253  0016E6  0E00               	movlw	0
  2254  0016E8  6E04               	movwf	rcvr_mmc@bc+1,c
  2255  0016EA  0E01               	movlw	1
  2256  0016EC  6E03               	movwf	rcvr_mmc@bc,c
  2257  0016EE  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  2258  0016F2                     l3915:
  2259                           
  2260                           ;sdmm.c: 359: n = 10;
  2261  0016F2  0E0A               	movlw	10
  2262  0016F4  6E18               	movwf	send_cmd@n,c
  2263  0016F6                     l3917:
  2264                           
  2265                           ;sdmm.c: 361: rcvr_mmc(&d, 1);
  2266  0016F6  0E00               	movlw	high send_cmd@d
  2267  0016F8  6E02               	movwf	rcvr_mmc@buff+1,c
  2268  0016FA  0E19               	movlw	low send_cmd@d
  2269  0016FC  6E01               	movwf	rcvr_mmc@buff,c
  2270  0016FE  0E00               	movlw	0
  2271  001700  6E04               	movwf	rcvr_mmc@bc+1,c
  2272  001702  0E01               	movlw	1
  2273  001704  6E03               	movwf	rcvr_mmc@bc,c
  2274  001706  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  2275                           
  2276                           ;sdmm.c: 362: while ((d & 0x80) && --n);
  2277  00170A  AE19               	btfss	send_cmd@d,7,c
  2278  00170C  D002               	goto	l3923
  2279  00170E  2E18               	decfsz	send_cmd@n,f,c
  2280  001710  D7F2               	goto	l3917
  2281  001712                     l3923:
  2282                           
  2283                           ;sdmm.c: 364: return d;
  2284  001712  5019               	movf	send_cmd@d,w,c
  2285  001714                     l185:
  2286  001714  0012               	return	
  2287  001716                     __end_of_send_cmd:
  2288                           	opt stack 0
  2289                           tblptru	equ	0xFF8
  2290                           tblptrh	equ	0xFF7
  2291                           tblptrl	equ	0xFF6
  2292                           tablat	equ	0xFF5
  2293                           postinc0	equ	0xFEE
  2294                           wreg	equ	0xFE8
  2295                           postinc1	equ	0xFE6
  2296                           postdec1	equ	0xFE5
  2297                           fsr1h	equ	0xFE2
  2298                           fsr1l	equ	0xFE1
  2299                           indf2	equ	0xFDF
  2300                           postinc2	equ	0xFDE
  2301                           fsr2h	equ	0xFDA
  2302                           fsr2l	equ	0xFD9
  2303                           status	equ	0xFD8
  2304                           
  2305 ;; *************** function _xmit_mmc *****************
  2306 ;; Defined at:
  2307 ;;		line 136 in file "sdmm.c"
  2308 ;; Parameters:    Size  Location     Type
  2309 ;;  buff            3    0[COMRAM] PTR const unsigned char 
  2310 ;;		 -> NULL(0), ROM(49151), send_cmd@buf(6), xmit_datablock@d(2), 
  2311 ;;		 -> buffer(512), 
  2312 ;;  bc              2    3[COMRAM] unsigned int 
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;  d               1    5[COMRAM] unsigned char 
  2315 ;; Return value:  Size  Location     Type
  2316 ;;		None               void
  2317 ;; Registers used:
  2318 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2324 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2325 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2327 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2328 ;;Total ram usage:        6 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; This function calls:
  2331 ;;		Nothing
  2332 ;; This function is called by:
  2333 ;;		_xmit_datablock
  2334 ;;		_send_cmd
  2335 ;; This function uses a non-reentrant model
  2336 ;;
  2337                           
  2338                           	psect	text9
  2339  0015C0                     __ptext9:
  2340                           	opt stack 0
  2341  0015C0                     _xmit_mmc:
  2342                           	opt stack 28
  2343  0015C0                     l120:
  2344                           
  2345                           ;sdmm.c: 145: d = *buff++;
  2346  0015C0  C001  FFF6         	movff	xmit_mmc@buff,tblptrl
  2347  0015C4  C002  FFF7         	movff	xmit_mmc@buff+1,tblptrh
  2348  0015C8  C003  FFF8         	movff	xmit_mmc@buff+2,tblptru
  2349  0015CC  BAF8               	btfsc	tblptru,5,c
  2350  0015CE  D003               	bra	u4057
  2351  0015D0  0008               	tblrd		*
  2352  0015D2  50F5               	movf	tablat,w,c
  2353  0015D4  D005               	bra	u4050
  2354  0015D6                     u4057:
  2355  0015D6  CFF6 FFE9          	movff	tblptrl,fsr0l
  2356  0015DA  CFF7 FFEA          	movff	tblptrh,fsr0h
  2357  0015DE  50EF               	movf	indf0,w,c
  2358  0015E0                     u4050:
  2359  0015E0  6E06               	movwf	xmit_mmc@d,c
  2360  0015E2  0E01               	movlw	1
  2361  0015E4  2601               	addwf	xmit_mmc@buff,f,c
  2362  0015E6  0E00               	movlw	0
  2363  0015E8  2202               	addwfc	xmit_mmc@buff+1,f,c
  2364  0015EA  0E00               	movlw	0
  2365  0015EC  2203               	addwfc	xmit_mmc@buff+2,f,c
  2366                           
  2367                           ;sdmm.c: 146: if (d & 0x80) (PORTC |= 0x20); else (PORTC &= ~0x20);
  2368  0015EE  AE06               	btfss	xmit_mmc@d,7,c
  2369  0015F0  D002               	goto	l3519
  2370  0015F2  8A82               	bsf	3970,5,c	;volatile
  2371  0015F4  D001               	goto	l122
  2372  0015F6                     l3519:
  2373  0015F6  9A82               	bcf	3970,5,c	;volatile
  2374  0015F8                     l122:
  2375                           
  2376                           ;sdmm.c: 147: (PORTC |= 0x08); (PORTC &= ~0x08);
  2377  0015F8  8682               	bsf	3970,3,c	;volatile
  2378  0015FA  9682               	bcf	3970,3,c	;volatile
  2379                           
  2380                           ;sdmm.c: 148: if (d & 0x40) (PORTC |= 0x20); else (PORTC &= ~0x20);
  2381  0015FC  AC06               	btfss	xmit_mmc@d,6,c
  2382  0015FE  D002               	goto	l3525
  2383  001600  8A82               	bsf	3970,5,c	;volatile
  2384  001602  D001               	goto	l124
  2385  001604                     l3525:
  2386  001604  9A82               	bcf	3970,5,c	;volatile
  2387  001606                     l124:
  2388                           
  2389                           ;sdmm.c: 149: (PORTC |= 0x08); (PORTC &= ~0x08);
  2390  001606  8682               	bsf	3970,3,c	;volatile
  2391  001608  9682               	bcf	3970,3,c	;volatile
  2392                           
  2393                           ;sdmm.c: 150: if (d & 0x20) (PORTC |= 0x20); else (PORTC &= ~0x20);
  2394  00160A  AA06               	btfss	xmit_mmc@d,5,c
  2395  00160C  D002               	goto	l3531
  2396  00160E  8A82               	bsf	3970,5,c	;volatile
  2397  001610  D001               	goto	l126
  2398  001612                     l3531:
  2399  001612  9A82               	bcf	3970,5,c	;volatile
  2400  001614                     l126:
  2401                           
  2402                           ;sdmm.c: 151: (PORTC |= 0x08); (PORTC &= ~0x08);
  2403  001614  8682               	bsf	3970,3,c	;volatile
  2404  001616  9682               	bcf	3970,3,c	;volatile
  2405                           
  2406                           ;sdmm.c: 152: if (d & 0x10) (PORTC |= 0x20); else (PORTC &= ~0x20);
  2407  001618  A806               	btfss	xmit_mmc@d,4,c
  2408  00161A  D002               	goto	l3537
  2409  00161C  8A82               	bsf	3970,5,c	;volatile
  2410  00161E  D001               	goto	l128
  2411  001620                     l3537:
  2412  001620  9A82               	bcf	3970,5,c	;volatile
  2413  001622                     l128:
  2414                           
  2415                           ;sdmm.c: 153: (PORTC |= 0x08); (PORTC &= ~0x08);
  2416  001622  8682               	bsf	3970,3,c	;volatile
  2417  001624  9682               	bcf	3970,3,c	;volatile
  2418                           
  2419                           ;sdmm.c: 154: if (d & 0x08) (PORTC |= 0x20); else (PORTC &= ~0x20);
  2420  001626  A606               	btfss	xmit_mmc@d,3,c
  2421  001628  D002               	goto	l3543
  2422  00162A  8A82               	bsf	3970,5,c	;volatile
  2423  00162C  D001               	goto	l130
  2424  00162E                     l3543:
  2425  00162E  9A82               	bcf	3970,5,c	;volatile
  2426  001630                     l130:
  2427                           
  2428                           ;sdmm.c: 155: (PORTC |= 0x08); (PORTC &= ~0x08);
  2429  001630  8682               	bsf	3970,3,c	;volatile
  2430  001632  9682               	bcf	3970,3,c	;volatile
  2431                           
  2432                           ;sdmm.c: 156: if (d & 0x04) (PORTC |= 0x20); else (PORTC &= ~0x20);
  2433  001634  A406               	btfss	xmit_mmc@d,2,c
  2434  001636  D002               	goto	l3549
  2435  001638  8A82               	bsf	3970,5,c	;volatile
  2436  00163A  D001               	goto	l132
  2437  00163C                     l3549:
  2438  00163C  9A82               	bcf	3970,5,c	;volatile
  2439  00163E                     l132:
  2440                           
  2441                           ;sdmm.c: 157: (PORTC |= 0x08); (PORTC &= ~0x08);
  2442  00163E  8682               	bsf	3970,3,c	;volatile
  2443  001640  9682               	bcf	3970,3,c	;volatile
  2444                           
  2445                           ;sdmm.c: 158: if (d & 0x02) (PORTC |= 0x20); else (PORTC &= ~0x20);
  2446  001642  A206               	btfss	xmit_mmc@d,1,c
  2447  001644  D002               	goto	l3555
  2448  001646  8A82               	bsf	3970,5,c	;volatile
  2449  001648  D001               	goto	l134
  2450  00164A                     l3555:
  2451  00164A  9A82               	bcf	3970,5,c	;volatile
  2452  00164C                     l134:
  2453                           
  2454                           ;sdmm.c: 159: (PORTC |= 0x08); (PORTC &= ~0x08);
  2455  00164C  8682               	bsf	3970,3,c	;volatile
  2456  00164E  9682               	bcf	3970,3,c	;volatile
  2457                           
  2458                           ;sdmm.c: 160: if (d & 0x01) (PORTC |= 0x20); else (PORTC &= ~0x20);
  2459  001650  A006               	btfss	xmit_mmc@d,0,c
  2460  001652  D002               	goto	l3561
  2461  001654  8A82               	bsf	3970,5,c	;volatile
  2462  001656  D001               	goto	l136
  2463  001658                     l3561:
  2464  001658  9A82               	bcf	3970,5,c	;volatile
  2465  00165A                     l136:
  2466                           
  2467                           ;sdmm.c: 161: (PORTC |= 0x08); (PORTC &= ~0x08);
  2468  00165A  8682               	bsf	3970,3,c	;volatile
  2469  00165C  9682               	bcf	3970,3,c	;volatile
  2470                           
  2471                           ;sdmm.c: 162: } while (--bc);
  2472  00165E  0604               	decf	xmit_mmc@bc,f,c
  2473  001660  A0D8               	btfss	status,0,c
  2474  001662  0605               	decf	xmit_mmc@bc+1,f,c
  2475  001664  5005               	movf	(xmit_mmc@bc+1)& (0+255),w,c
  2476  001666  1004               	iorwf	xmit_mmc@bc& (0+255),w,c
  2477  001668  B4D8               	btfsc	status,2,c
  2478  00166A  0012               	return	
  2479  00166C  D7A9               	goto	l120
  2480  00166E                     __end_of_xmit_mmc:
  2481                           	opt stack 0
  2482                           tblptru	equ	0xFF8
  2483                           tblptrh	equ	0xFF7
  2484                           tblptrl	equ	0xFF6
  2485                           tablat	equ	0xFF5
  2486                           indf0	equ	0xFEF
  2487                           postinc0	equ	0xFEE
  2488                           fsr0h	equ	0xFEA
  2489                           fsr0l	equ	0xFE9
  2490                           wreg	equ	0xFE8
  2491                           postinc1	equ	0xFE6
  2492                           postdec1	equ	0xFE5
  2493                           fsr1h	equ	0xFE2
  2494                           fsr1l	equ	0xFE1
  2495                           indf2	equ	0xFDF
  2496                           postinc2	equ	0xFDE
  2497                           fsr2h	equ	0xFDA
  2498                           fsr2l	equ	0xFD9
  2499                           status	equ	0xFD8
  2500                           
  2501 ;; *************** function _select *****************
  2502 ;; Defined at:
  2503 ;;		line 247 in file "sdmm.c"
  2504 ;; Parameters:    Size  Location     Type
  2505 ;;		None
  2506 ;; Auto vars:     Size  Location     Type
  2507 ;;  d               1   12[COMRAM] unsigned char 
  2508 ;; Return value:  Size  Location     Type
  2509 ;;                  2   10[COMRAM] int 
  2510 ;; Registers used:
  2511 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2512 ;; Tracked objects:
  2513 ;;		On entry : 0/0
  2514 ;;		On exit  : 0/0
  2515 ;;		Unchanged: 0/0
  2516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2517 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2518 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2519 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2520 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2521 ;;Total ram usage:        3 bytes
  2522 ;; Hardware stack levels used:    1
  2523 ;; Hardware stack levels required when called:    2
  2524 ;; This function calls:
  2525 ;;		_deselect
  2526 ;;		_rcvr_mmc
  2527 ;;		_wait_ready
  2528 ;; This function is called by:
  2529 ;;		_send_cmd
  2530 ;;		_disk_ioctl
  2531 ;; This function uses a non-reentrant model
  2532 ;;
  2533                           
  2534                           	psect	text10
  2535  0019D2                     __ptext10:
  2536                           	opt stack 0
  2537  0019D2                     _select:
  2538                           	opt stack 26
  2539                           
  2540                           ;sdmm.c: 249: BYTE d;
  2541                           ;sdmm.c: 251: (PORTC &= ~0x40);
  2542                           
  2543                           ;incstack = 0
  2544  0019D2  9C82               	bcf	3970,6,c	;volatile
  2545                           
  2546                           ;sdmm.c: 252: rcvr_mmc(&d, 1);
  2547  0019D4  0E00               	movlw	high select@d
  2548  0019D6  6E02               	movwf	rcvr_mmc@buff+1,c
  2549  0019D8  0E0D               	movlw	low select@d
  2550  0019DA  6E01               	movwf	rcvr_mmc@buff,c
  2551  0019DC  0E00               	movlw	0
  2552  0019DE  6E04               	movwf	rcvr_mmc@bc+1,c
  2553  0019E0  0E01               	movlw	1
  2554  0019E2  6E03               	movwf	rcvr_mmc@bc,c
  2555  0019E4  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  2556                           
  2557                           ;sdmm.c: 253: if (wait_ready()) return 1;
  2558  0019E8  EC80  F00C         	call	_wait_ready	;wreg free
  2559  0019EC  5007               	movf	?_wait_ready+1,w,c
  2560  0019EE  1006               	iorwf	?_wait_ready,w,c
  2561  0019F0  B4D8               	btfsc	status,2,c
  2562  0019F2  D004               	goto	l3575
  2563  0019F4  0E00               	movlw	0
  2564  0019F6  6E0C               	movwf	?_select+1,c
  2565  0019F8  0E01               	movlw	1
  2566  0019FA  D005               	goto	L8
  2567  0019FC                     l3575:
  2568                           
  2569                           ;sdmm.c: 255: deselect();
  2570  0019FC  EC48  F00D         	call	_deselect	;wreg free
  2571                           
  2572                           ;sdmm.c: 256: return 0;
  2573  001A00  0E00               	movlw	0
  2574  001A02  6E0C               	movwf	?_select+1,c
  2575  001A04  0E00               	movlw	0
  2576  001A06                     L8:
  2577  001A06  6E0B               	movwf	?_select,c
  2578  001A08  0012               	return	
  2579  001A0A                     __end_of_select:
  2580                           	opt stack 0
  2581                           tblptru	equ	0xFF8
  2582                           tblptrh	equ	0xFF7
  2583                           tblptrl	equ	0xFF6
  2584                           tablat	equ	0xFF5
  2585                           indf0	equ	0xFEF
  2586                           postinc0	equ	0xFEE
  2587                           fsr0h	equ	0xFEA
  2588                           fsr0l	equ	0xFE9
  2589                           wreg	equ	0xFE8
  2590                           postinc1	equ	0xFE6
  2591                           postdec1	equ	0xFE5
  2592                           fsr1h	equ	0xFE2
  2593                           fsr1l	equ	0xFE1
  2594                           indf2	equ	0xFDF
  2595                           postinc2	equ	0xFDE
  2596                           fsr2h	equ	0xFDA
  2597                           fsr2l	equ	0xFD9
  2598                           status	equ	0xFD8
  2599                           
  2600 ;; *************** function _wait_ready *****************
  2601 ;; Defined at:
  2602 ;;		line 210 in file "sdmm.c"
  2603 ;; Parameters:    Size  Location     Type
  2604 ;;		None
  2605 ;; Auto vars:     Size  Location     Type
  2606 ;;  tmr             2    7[COMRAM] unsigned int 
  2607 ;;  d               1    9[COMRAM] unsigned char 
  2608 ;; Return value:  Size  Location     Type
  2609 ;;                  2    5[COMRAM] int 
  2610 ;; Registers used:
  2611 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2612 ;; Tracked objects:
  2613 ;;		On entry : 0/0
  2614 ;;		On exit  : 0/0
  2615 ;;		Unchanged: 0/0
  2616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2617 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2618 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2619 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2620 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2621 ;;Total ram usage:        5 bytes
  2622 ;; Hardware stack levels used:    1
  2623 ;; Hardware stack levels required when called:    1
  2624 ;; This function calls:
  2625 ;;		_dly_us
  2626 ;;		_rcvr_mmc
  2627 ;; This function is called by:
  2628 ;;		_select
  2629 ;;		_xmit_datablock
  2630 ;; This function uses a non-reentrant model
  2631 ;;
  2632                           
  2633                           	psect	text11
  2634  001900                     __ptext11:
  2635                           	opt stack 0
  2636  001900                     _wait_ready:
  2637                           	opt stack 27
  2638                           
  2639                           ;sdmm.c: 212: BYTE d;
  2640                           ;sdmm.c: 213: UINT tmr;
  2641                           ;sdmm.c: 216: for (tmr = 5000; tmr; tmr--) {
  2642                           
  2643                           ;incstack = 0
  2644  001900  0E13               	movlw	19
  2645  001902  6E09               	movwf	wait_ready@tmr+1,c
  2646  001904  0E88               	movlw	136
  2647  001906  6E08               	movwf	wait_ready@tmr,c
  2648  001908  D016               	goto	l3495
  2649  00190A                     l3485:
  2650                           
  2651                           ;sdmm.c: 217: rcvr_mmc(&d, 1);
  2652  00190A  0E00               	movlw	high wait_ready@d
  2653  00190C  6E02               	movwf	rcvr_mmc@buff+1,c
  2654  00190E  0E0A               	movlw	low wait_ready@d
  2655  001910  6E01               	movwf	rcvr_mmc@buff,c
  2656  001912  0E00               	movlw	0
  2657  001914  6E04               	movwf	rcvr_mmc@bc+1,c
  2658  001916  0E01               	movlw	1
  2659  001918  6E03               	movwf	rcvr_mmc@bc,c
  2660  00191A  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  2661                           
  2662                           ;sdmm.c: 218: if (d == 0xFF) break;
  2663  00191E  280A               	incf	wait_ready@d,w,c
  2664  001920  B4D8               	btfsc	status,2,c
  2665  001922  D00D               	goto	l3497
  2666                           
  2667                           ;sdmm.c: 219: dly_us(100);
  2668  001924  0E00               	movlw	0
  2669  001926  6E02               	movwf	dly_us@n+1,c
  2670  001928  0E64               	movlw	100
  2671  00192A  6E01               	movwf	dly_us@n,c
  2672  00192C  EC3C  F00D         	call	_dly_us	;wreg free
  2673  001930  0608               	decf	wait_ready@tmr,f,c
  2674  001932  A0D8               	btfss	status,0,c
  2675  001934  0609               	decf	wait_ready@tmr+1,f,c
  2676  001936                     l3495:
  2677  001936  5009               	movf	wait_ready@tmr+1,w,c
  2678  001938  1008               	iorwf	wait_ready@tmr,w,c
  2679  00193A  A4D8               	btfss	status,2,c
  2680  00193C  D7E6               	goto	l3485
  2681  00193E                     l3497:
  2682                           
  2683                           ;sdmm.c: 220: }
  2684                           ;sdmm.c: 222: return tmr ? 1 : 0;
  2685  00193E  5009               	movf	wait_ready@tmr+1,w,c
  2686  001940  1008               	iorwf	wait_ready@tmr,w,c
  2687  001942  0E00               	movlw	0
  2688  001944  A4D8               	btfss	status,2,c
  2689  001946  0E01               	movlw	1
  2690  001948  6E06               	movwf	?_wait_ready,c
  2691  00194A  6A07               	clrf	?_wait_ready+1,c
  2692  00194C  0012               	return	
  2693  00194E                     __end_of_wait_ready:
  2694                           	opt stack 0
  2695                           tblptru	equ	0xFF8
  2696                           tblptrh	equ	0xFF7
  2697                           tblptrl	equ	0xFF6
  2698                           tablat	equ	0xFF5
  2699                           indf0	equ	0xFEF
  2700                           postinc0	equ	0xFEE
  2701                           fsr0h	equ	0xFEA
  2702                           fsr0l	equ	0xFE9
  2703                           wreg	equ	0xFE8
  2704                           postinc1	equ	0xFE6
  2705                           postdec1	equ	0xFE5
  2706                           fsr1h	equ	0xFE2
  2707                           fsr1l	equ	0xFE1
  2708                           indf2	equ	0xFDF
  2709                           postinc2	equ	0xFDE
  2710                           fsr2h	equ	0xFDA
  2711                           fsr2l	equ	0xFD9
  2712                           status	equ	0xFD8
  2713                           
  2714 ;; *************** function _dly_us *****************
  2715 ;; Defined at:
  2716 ;;		line 60 in file "sdmm.c"
  2717 ;; Parameters:    Size  Location     Type
  2718 ;;  n               2    0[COMRAM] unsigned int 
  2719 ;; Auto vars:     Size  Location     Type
  2720 ;;  tem             2    2[COMRAM] unsigned int 
  2721 ;; Return value:  Size  Location     Type
  2722 ;;		None               void
  2723 ;; Registers used:
  2724 ;;		wreg, status,2, status,0
  2725 ;; Tracked objects:
  2726 ;;		On entry : 0/0
  2727 ;;		On exit  : 0/0
  2728 ;;		Unchanged: 0/0
  2729 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2730 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2731 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2732 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2733 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2734 ;;Total ram usage:        4 bytes
  2735 ;; Hardware stack levels used:    1
  2736 ;; This function calls:
  2737 ;;		Nothing
  2738 ;; This function is called by:
  2739 ;;		_wait_ready
  2740 ;;		_rcvr_datablock
  2741 ;;		_disk_initialize
  2742 ;; This function uses a non-reentrant model
  2743 ;;
  2744                           
  2745                           	psect	text12
  2746  001A78                     __ptext12:
  2747                           	opt stack 0
  2748  001A78                     _dly_us:
  2749                           	opt stack 27
  2750  001A78                     l111:
  2751                           
  2752                           ;sdmm.c: 64: tem = n;
  2753  001A78  C001  F003         	movff	dly_us@n,dly_us@tem
  2754  001A7C  C002  F004         	movff	dly_us@n+1,dly_us@tem+1
  2755                           
  2756                           ;sdmm.c: 88: } while (--n);
  2757  001A80  0601               	decf	dly_us@n,f,c
  2758  001A82  A0D8               	btfss	status,0,c
  2759  001A84  0602               	decf	dly_us@n+1,f,c
  2760  001A86  5002               	movf	(dly_us@n+1)& (0+255),w,c
  2761  001A88  1001               	iorwf	dly_us@n& (0+255),w,c
  2762  001A8A  B4D8               	btfsc	status,2,c
  2763  001A8C  0012               	return	
  2764  001A8E  D7F4               	goto	l111
  2765  001A90                     __end_of_dly_us:
  2766                           	opt stack 0
  2767                           tblptru	equ	0xFF8
  2768                           tblptrh	equ	0xFF7
  2769                           tblptrl	equ	0xFF6
  2770                           tablat	equ	0xFF5
  2771                           indf0	equ	0xFEF
  2772                           postinc0	equ	0xFEE
  2773                           fsr0h	equ	0xFEA
  2774                           fsr0l	equ	0xFE9
  2775                           wreg	equ	0xFE8
  2776                           postinc1	equ	0xFE6
  2777                           postdec1	equ	0xFE5
  2778                           fsr1h	equ	0xFE2
  2779                           fsr1l	equ	0xFE1
  2780                           indf2	equ	0xFDF
  2781                           postinc2	equ	0xFDE
  2782                           fsr2h	equ	0xFDA
  2783                           fsr2l	equ	0xFD9
  2784                           status	equ	0xFD8
  2785                           
  2786 ;; *************** function _deselect *****************
  2787 ;; Defined at:
  2788 ;;		line 232 in file "sdmm.c"
  2789 ;; Parameters:    Size  Location     Type
  2790 ;;		None
  2791 ;; Auto vars:     Size  Location     Type
  2792 ;;  d               1    5[COMRAM] unsigned char 
  2793 ;; Return value:  Size  Location     Type
  2794 ;;		None               void
  2795 ;; Registers used:
  2796 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2797 ;; Tracked objects:
  2798 ;;		On entry : 0/0
  2799 ;;		On exit  : 0/0
  2800 ;;		Unchanged: 0/0
  2801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2802 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2803 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2804 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2805 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2806 ;;Total ram usage:        1 bytes
  2807 ;; Hardware stack levels used:    1
  2808 ;; Hardware stack levels required when called:    1
  2809 ;; This function calls:
  2810 ;;		_rcvr_mmc
  2811 ;; This function is called by:
  2812 ;;		_select
  2813 ;;		_send_cmd
  2814 ;;		_disk_initialize
  2815 ;;		_disk_read
  2816 ;;		_disk_write
  2817 ;;		_disk_ioctl
  2818 ;; This function uses a non-reentrant model
  2819 ;;
  2820                           
  2821                           	psect	text13
  2822  001A90                     __ptext13:
  2823                           	opt stack 0
  2824  001A90                     _deselect:
  2825                           	opt stack 26
  2826                           
  2827                           ;sdmm.c: 234: BYTE d;
  2828                           ;sdmm.c: 236: (PORTC |= 0x40);
  2829                           
  2830                           ;incstack = 0
  2831  001A90  8C82               	bsf	3970,6,c	;volatile
  2832                           
  2833                           ;sdmm.c: 237: rcvr_mmc(&d, 1);
  2834  001A92  0E00               	movlw	high deselect@d
  2835  001A94  6E02               	movwf	rcvr_mmc@buff+1,c
  2836  001A96  0E06               	movlw	low deselect@d
  2837  001A98  6E01               	movwf	rcvr_mmc@buff,c
  2838  001A9A  0E00               	movlw	0
  2839  001A9C  6E04               	movwf	rcvr_mmc@bc+1,c
  2840  001A9E  0E01               	movlw	1
  2841  001AA0  6E03               	movwf	rcvr_mmc@bc,c
  2842  001AA2  ECD4  F00B         	call	_rcvr_mmc	;wreg free
  2843  001AA6  0012               	return	
  2844  001AA8                     __end_of_deselect:
  2845                           	opt stack 0
  2846                           tblptru	equ	0xFF8
  2847                           tblptrh	equ	0xFF7
  2848                           tblptrl	equ	0xFF6
  2849                           tablat	equ	0xFF5
  2850                           indf0	equ	0xFEF
  2851                           postinc0	equ	0xFEE
  2852                           fsr0h	equ	0xFEA
  2853                           fsr0l	equ	0xFE9
  2854                           wreg	equ	0xFE8
  2855                           postinc1	equ	0xFE6
  2856                           postdec1	equ	0xFE5
  2857                           fsr1h	equ	0xFE2
  2858                           fsr1l	equ	0xFE1
  2859                           indf2	equ	0xFDF
  2860                           postinc2	equ	0xFDE
  2861                           fsr2h	equ	0xFDA
  2862                           fsr2l	equ	0xFD9
  2863                           status	equ	0xFD8
  2864                           
  2865 ;; *************** function _rcvr_mmc *****************
  2866 ;; Defined at:
  2867 ;;		line 172 in file "sdmm.c"
  2868 ;; Parameters:    Size  Location     Type
  2869 ;;  buff            2    0[COMRAM] PTR unsigned char 
  2870 ;;		 -> NULL(0), disk_ioctl@csd(16), disk_initialize@buf(4), send_cmd@d(1), 
  2871 ;;		 -> xmit_datablock@d(2), rcvr_datablock@d(2), select@d(1), deselect@d(1), 
  2872 ;;		 -> wait_ready@d(1), buffer(512), 
  2873 ;;  bc              2    2[COMRAM] unsigned int 
  2874 ;; Auto vars:     Size  Location     Type
  2875 ;;  r               1    4[COMRAM] unsigned char 
  2876 ;; Return value:  Size  Location     Type
  2877 ;;		None               void
  2878 ;; Registers used:
  2879 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  2880 ;; Tracked objects:
  2881 ;;		On entry : 0/0
  2882 ;;		On exit  : 0/0
  2883 ;;		Unchanged: 0/0
  2884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2885 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2886 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2887 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2888 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2889 ;;Total ram usage:        5 bytes
  2890 ;; Hardware stack levels used:    1
  2891 ;; This function calls:
  2892 ;;		Nothing
  2893 ;; This function is called by:
  2894 ;;		_wait_ready
  2895 ;;		_deselect
  2896 ;;		_select
  2897 ;;		_rcvr_datablock
  2898 ;;		_xmit_datablock
  2899 ;;		_send_cmd
  2900 ;;		_disk_initialize
  2901 ;; This function uses a non-reentrant model
  2902 ;;
  2903                           
  2904                           	psect	text14
  2905  0017A8                     __ptext14:
  2906                           	opt stack 0
  2907  0017A8                     _rcvr_mmc:
  2908                           	opt stack 27
  2909                           
  2910                           ;sdmm.c: 177: BYTE r;
  2911                           ;sdmm.c: 180: (PORTC |= 0x20);
  2912                           
  2913                           ;incstack = 0
  2914  0017A8  8A82               	bsf	3970,5,c	;volatile
  2915  0017AA                     l3425:
  2916                           
  2917                           ;sdmm.c: 183: r = 0; if ((PORTC & 0x10)) r++;
  2918  0017AA  0E00               	movlw	0
  2919  0017AC  6E05               	movwf	rcvr_mmc@r,c
  2920  0017AE  B882               	btfsc	3970,4,c	;volatile
  2921  0017B0  2A05               	incf	rcvr_mmc@r,f,c
  2922                           
  2923                           ;sdmm.c: 184: (PORTC |= 0x08); (PORTC &= ~0x08);
  2924  0017B2  8682               	bsf	3970,3,c	;volatile
  2925  0017B4  9682               	bcf	3970,3,c	;volatile
  2926                           
  2927                           ;sdmm.c: 185: r <<= 1; if ((PORTC & 0x10)) r++;
  2928  0017B6  90D8               	bcf	status,0,c
  2929  0017B8  3605               	rlcf	rcvr_mmc@r,f,c
  2930  0017BA  B882               	btfsc	3970,4,c	;volatile
  2931  0017BC  2A05               	incf	rcvr_mmc@r,f,c
  2932                           
  2933                           ;sdmm.c: 186: (PORTC |= 0x08); (PORTC &= ~0x08);
  2934  0017BE  8682               	bsf	3970,3,c	;volatile
  2935  0017C0  9682               	bcf	3970,3,c	;volatile
  2936                           
  2937                           ;sdmm.c: 187: r <<= 1; if ((PORTC & 0x10)) r++;
  2938  0017C2  90D8               	bcf	status,0,c
  2939  0017C4  3605               	rlcf	rcvr_mmc@r,f,c
  2940  0017C6  B882               	btfsc	3970,4,c	;volatile
  2941  0017C8  2A05               	incf	rcvr_mmc@r,f,c
  2942                           
  2943                           ;sdmm.c: 188: (PORTC |= 0x08); (PORTC &= ~0x08);
  2944  0017CA  8682               	bsf	3970,3,c	;volatile
  2945  0017CC  9682               	bcf	3970,3,c	;volatile
  2946                           
  2947                           ;sdmm.c: 189: r <<= 1; if ((PORTC & 0x10)) r++;
  2948  0017CE  90D8               	bcf	status,0,c
  2949  0017D0  3605               	rlcf	rcvr_mmc@r,f,c
  2950  0017D2  B882               	btfsc	3970,4,c	;volatile
  2951  0017D4  2A05               	incf	rcvr_mmc@r,f,c
  2952                           
  2953                           ;sdmm.c: 190: (PORTC |= 0x08); (PORTC &= ~0x08);
  2954  0017D6  8682               	bsf	3970,3,c	;volatile
  2955  0017D8  9682               	bcf	3970,3,c	;volatile
  2956                           
  2957                           ;sdmm.c: 191: r <<= 1; if ((PORTC & 0x10)) r++;
  2958  0017DA  90D8               	bcf	status,0,c
  2959  0017DC  3605               	rlcf	rcvr_mmc@r,f,c
  2960  0017DE  B882               	btfsc	3970,4,c	;volatile
  2961  0017E0  2A05               	incf	rcvr_mmc@r,f,c
  2962                           
  2963                           ;sdmm.c: 192: (PORTC |= 0x08); (PORTC &= ~0x08);
  2964  0017E2  8682               	bsf	3970,3,c	;volatile
  2965  0017E4  9682               	bcf	3970,3,c	;volatile
  2966                           
  2967                           ;sdmm.c: 193: r <<= 1; if ((PORTC & 0x10)) r++;
  2968  0017E6  90D8               	bcf	status,0,c
  2969  0017E8  3605               	rlcf	rcvr_mmc@r,f,c
  2970  0017EA  B882               	btfsc	3970,4,c	;volatile
  2971  0017EC  2A05               	incf	rcvr_mmc@r,f,c
  2972                           
  2973                           ;sdmm.c: 194: (PORTC |= 0x08); (PORTC &= ~0x08);
  2974  0017EE  8682               	bsf	3970,3,c	;volatile
  2975  0017F0  9682               	bcf	3970,3,c	;volatile
  2976                           
  2977                           ;sdmm.c: 195: r <<= 1; if ((PORTC & 0x10)) r++;
  2978  0017F2  90D8               	bcf	status,0,c
  2979  0017F4  3605               	rlcf	rcvr_mmc@r,f,c
  2980  0017F6  B882               	btfsc	3970,4,c	;volatile
  2981  0017F8  2A05               	incf	rcvr_mmc@r,f,c
  2982                           
  2983                           ;sdmm.c: 196: (PORTC |= 0x08); (PORTC &= ~0x08);
  2984  0017FA  8682               	bsf	3970,3,c	;volatile
  2985  0017FC  9682               	bcf	3970,3,c	;volatile
  2986                           
  2987                           ;sdmm.c: 197: r <<= 1; if ((PORTC & 0x10)) r++;
  2988  0017FE  90D8               	bcf	status,0,c
  2989  001800  3605               	rlcf	rcvr_mmc@r,f,c
  2990  001802  B882               	btfsc	3970,4,c	;volatile
  2991  001804  2A05               	incf	rcvr_mmc@r,f,c
  2992                           
  2993                           ;sdmm.c: 198: (PORTC |= 0x08); (PORTC &= ~0x08);
  2994  001806  8682               	bsf	3970,3,c	;volatile
  2995  001808  9682               	bcf	3970,3,c	;volatile
  2996                           
  2997                           ;sdmm.c: 199: *buff++ = r;
  2998  00180A  C001  FFD9         	movff	rcvr_mmc@buff,fsr2l
  2999  00180E  C002  FFDA         	movff	rcvr_mmc@buff+1,fsr2h
  3000  001812  C005  FFDF         	movff	rcvr_mmc@r,indf2
  3001  001816  4A01               	infsnz	rcvr_mmc@buff,f,c
  3002  001818  2A02               	incf	rcvr_mmc@buff+1,f,c
  3003                           
  3004                           ;sdmm.c: 200: } while (--bc);
  3005  00181A  0603               	decf	rcvr_mmc@bc,f,c
  3006  00181C  A0D8               	btfss	status,0,c
  3007  00181E  0604               	decf	rcvr_mmc@bc+1,f,c
  3008  001820  5004               	movf	(rcvr_mmc@bc+1)& (0+255),w,c
  3009  001822  1003               	iorwf	rcvr_mmc@bc& (0+255),w,c
  3010  001824  B4D8               	btfsc	status,2,c
  3011  001826  0012               	return	
  3012  001828  D7C0               	goto	l3425
  3013  00182A                     __end_of_rcvr_mmc:
  3014                           	opt stack 0
  3015                           tblptru	equ	0xFF8
  3016                           tblptrh	equ	0xFF7
  3017                           tblptrl	equ	0xFF6
  3018                           tablat	equ	0xFF5
  3019                           indf0	equ	0xFEF
  3020                           postinc0	equ	0xFEE
  3021                           fsr0h	equ	0xFEA
  3022                           fsr0l	equ	0xFE9
  3023                           wreg	equ	0xFE8
  3024                           postinc1	equ	0xFE6
  3025                           postdec1	equ	0xFE5
  3026                           fsr1h	equ	0xFE2
  3027                           fsr1l	equ	0xFE1
  3028                           indf2	equ	0xFDF
  3029                           postinc2	equ	0xFDE
  3030                           fsr2h	equ	0xFDA
  3031                           fsr2l	equ	0xFD9
  3032                           status	equ	0xFD8
  3033                           
  3034 ;; *************** function _delaymain *****************
  3035 ;; Defined at:
  3036 ;;		line 30 in file "main.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;  x               4    0[COMRAM] unsigned long 
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;		None               void
  3043 ;; Registers used:
  3044 ;;		wreg, status,2, status,0
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3050 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3051 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3053 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3054 ;;Total ram usage:        4 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; This function calls:
  3057 ;;		Nothing
  3058 ;; This function is called by:
  3059 ;;		_main
  3060 ;; This function uses a non-reentrant model
  3061 ;;
  3062                           
  3063                           	psect	text15
  3064  001A3C                     __ptext15:
  3065                           	opt stack 0
  3066  001A3C                     _delaymain:
  3067                           	opt stack 30
  3068  001A3C                     l2383:
  3069  001A3C  0601               	decf	delaymain@x,f,c
  3070  001A3E  0E00               	movlw	0
  3071  001A40  5A02               	subwfb	delaymain@x+1,f,c
  3072  001A42  5A03               	subwfb	delaymain@x+2,f,c
  3073  001A44  5A04               	subwfb	delaymain@x+3,f,c
  3074  001A46  2801               	incf	delaymain@x& (0+255),w,c
  3075  001A48  B4D8               	btfsc	status,2,c
  3076  001A4A  2802               	incf	(delaymain@x+1)& (0+255),w,c
  3077  001A4C  B4D8               	btfsc	status,2,c
  3078  001A4E  2803               	incf	(delaymain@x+2)& (0+255),w,c
  3079  001A50  B4D8               	btfsc	status,2,c
  3080  001A52  2804               	incf	(delaymain@x+3)& (0+255),w,c
  3081  001A54  B4D8               	btfsc	status,2,c
  3082  001A56  0012               	return	
  3083  001A58  D7F1               	goto	l2383
  3084  001A5A                     __end_of_delaymain:
  3085                           	opt stack 0
  3086                           tblptru	equ	0xFF8
  3087                           tblptrh	equ	0xFF7
  3088                           tblptrl	equ	0xFF6
  3089                           tablat	equ	0xFF5
  3090                           indf0	equ	0xFEF
  3091                           postinc0	equ	0xFEE
  3092                           fsr0h	equ	0xFEA
  3093                           fsr0l	equ	0xFE9
  3094                           wreg	equ	0xFE8
  3095                           postinc1	equ	0xFE6
  3096                           postdec1	equ	0xFE5
  3097                           fsr1h	equ	0xFE2
  3098                           fsr1l	equ	0xFE1
  3099                           indf2	equ	0xFDF
  3100                           postinc2	equ	0xFDE
  3101                           fsr2h	equ	0xFDA
  3102                           fsr2l	equ	0xFD9
  3103                           status	equ	0xFD8
  3104                           
  3105 ;; *************** function _LCD_string *****************
  3106 ;; Defined at:
  3107 ;;		line 54 in file "LCD.c"
  3108 ;; Parameters:    Size  Location     Type
  3109 ;;  ptr             2    8[COMRAM] PTR unsigned char 
  3110 ;;		 -> STR_6(16), STR_5(17), STR_4(16), STR_3(17), 
  3111 ;;		 -> STR_2(17), STR_1(17), 
  3112 ;; Auto vars:     Size  Location     Type
  3113 ;;		None
  3114 ;; Return value:  Size  Location     Type
  3115 ;;		None               void
  3116 ;; Registers used:
  3117 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3118 ;; Tracked objects:
  3119 ;;		On entry : 0/0
  3120 ;;		On exit  : 0/0
  3121 ;;		Unchanged: 0/0
  3122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3123 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3124 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3125 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3126 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3127 ;;Total ram usage:        2 bytes
  3128 ;; Hardware stack levels used:    1
  3129 ;; Hardware stack levels required when called:    3
  3130 ;; This function calls:
  3131 ;;		_LCD_func
  3132 ;; This function is called by:
  3133 ;;		_main
  3134 ;; This function uses a non-reentrant model
  3135 ;;
  3136                           
  3137                           	psect	text16
  3138  001A0A                     __ptext16:
  3139                           	opt stack 0
  3140  001A0A                     _LCD_string:
  3141                           	opt stack 27
  3142                           
  3143                           ;LCD.c: 55: while(*ptr != '\0'){
  3144                           
  3145                           ;incstack = 0
  3146  001A0A  D00D               	goto	l4239
  3147  001A0C                     l4235:
  3148                           
  3149                           ;LCD.c: 56: LCD_func(*ptr,1);
  3150  001A0C  0E01               	movlw	1
  3151  001A0E  6E03               	movwf	LCD_func@cmd,c
  3152  001A10  C009  FFF6         	movff	LCD_string@ptr,tblptrl
  3153  001A14  C00A  FFF7         	movff	LCD_string@ptr+1,tblptrh
  3154  001A18                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3155  001A18  6AF8               	clrf	tblptru,c
  3156  001A1A                     	endif
  3157  001A1A                     	if	0	;tblptru may be non-zero
  3158  001A1A                     	endif
  3159  001A1A  0008               	tblrd		*
  3160  001A1C  50F5               	movf	tablat,w,c
  3161  001A1E  EC55  F00C         	call	_LCD_func
  3162                           
  3163                           ;LCD.c: 57: ptr++;
  3164  001A22  4A09               	infsnz	LCD_string@ptr,f,c
  3165  001A24  2A0A               	incf	LCD_string@ptr+1,f,c
  3166  001A26                     l4239:
  3167  001A26  C009  FFF6         	movff	LCD_string@ptr,tblptrl
  3168  001A2A  C00A  FFF7         	movff	LCD_string@ptr+1,tblptrh
  3169  001A2E                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  3170  001A2E  6AF8               	clrf	tblptru,c
  3171  001A30                     	endif
  3172  001A30                     	if	0	;tblptru may be non-zero
  3173  001A30                     	endif
  3174  001A30  0008               	tblrd		*
  3175  001A32  50F5               	movf	tablat,w,c
  3176  001A34  0900               	iorlw	0
  3177  001A36  B4D8               	btfsc	status,2,c
  3178  001A38  0012               	return	
  3179  001A3A  D7E8               	goto	l4235
  3180  001A3C                     __end_of_LCD_string:
  3181                           	opt stack 0
  3182                           tblptru	equ	0xFF8
  3183                           tblptrh	equ	0xFF7
  3184                           tblptrl	equ	0xFF6
  3185                           tablat	equ	0xFF5
  3186                           indf0	equ	0xFEF
  3187                           postinc0	equ	0xFEE
  3188                           fsr0h	equ	0xFEA
  3189                           fsr0l	equ	0xFE9
  3190                           wreg	equ	0xFE8
  3191                           postinc1	equ	0xFE6
  3192                           postdec1	equ	0xFE5
  3193                           fsr1h	equ	0xFE2
  3194                           fsr1l	equ	0xFE1
  3195                           indf2	equ	0xFDF
  3196                           postinc2	equ	0xFDE
  3197                           fsr2h	equ	0xFDA
  3198                           fsr2l	equ	0xFD9
  3199                           status	equ	0xFD8
  3200                           
  3201 ;; *************** function _LCD_init *****************
  3202 ;; Defined at:
  3203 ;;		line 22 in file "LCD.c"
  3204 ;; Parameters:    Size  Location     Type
  3205 ;;		None
  3206 ;; Auto vars:     Size  Location     Type
  3207 ;;		None
  3208 ;; Return value:  Size  Location     Type
  3209 ;;		None               void
  3210 ;; Registers used:
  3211 ;;		wreg, status,2, status,0, cstack
  3212 ;; Tracked objects:
  3213 ;;		On entry : 0/0
  3214 ;;		On exit  : 0/0
  3215 ;;		Unchanged: 0/0
  3216 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3217 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3218 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3219 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3220 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3221 ;;Total ram usage:        0 bytes
  3222 ;; Hardware stack levels used:    1
  3223 ;; Hardware stack levels required when called:    3
  3224 ;; This function calls:
  3225 ;;		_LCD_func
  3226 ;; This function is called by:
  3227 ;;		_main
  3228 ;; This function uses a non-reentrant model
  3229 ;;
  3230                           
  3231                           	psect	text17
  3232  001994                     __ptext17:
  3233                           	opt stack 0
  3234  001994                     _LCD_init:
  3235                           	opt stack 27
  3236                           
  3237                           ;LCD.c: 23: LCD_func(0x01,0);
  3238                           
  3239                           ;incstack = 0
  3240  001994  0E00               	movlw	0
  3241  001996  6E03               	movwf	LCD_func@cmd,c
  3242  001998  0E01               	movlw	1
  3243  00199A  EC55  F00C         	call	_LCD_func
  3244                           
  3245                           ;LCD.c: 24: LCD_func(0x02,0);
  3246  00199E  0E00               	movlw	0
  3247  0019A0  6E03               	movwf	LCD_func@cmd,c
  3248  0019A2  0E02               	movlw	2
  3249  0019A4  EC55  F00C         	call	_LCD_func
  3250                           
  3251                           ;LCD.c: 26: LCD_func(0x06,0);
  3252  0019A8  0E00               	movlw	0
  3253  0019AA  6E03               	movwf	LCD_func@cmd,c
  3254  0019AC  0E06               	movlw	6
  3255  0019AE  EC55  F00C         	call	_LCD_func
  3256                           
  3257                           ;LCD.c: 33: LCD_func(0x0c,0);
  3258  0019B2  0E00               	movlw	0
  3259  0019B4  6E03               	movwf	LCD_func@cmd,c
  3260  0019B6  0E0C               	movlw	12
  3261  0019B8  EC55  F00C         	call	_LCD_func
  3262                           
  3263                           ;LCD.c: 34: LCD_func(0x28,0);
  3264  0019BC  0E00               	movlw	0
  3265  0019BE  6E03               	movwf	LCD_func@cmd,c
  3266  0019C0  0E28               	movlw	40
  3267  0019C2  EC55  F00C         	call	_LCD_func
  3268                           
  3269                           ;LCD.c: 36: LCD_func(0x80,0);
  3270  0019C6  0E00               	movlw	0
  3271  0019C8  6E03               	movwf	LCD_func@cmd,c
  3272  0019CA  0E80               	movlw	128
  3273  0019CC  EC55  F00C         	call	_LCD_func
  3274  0019D0  0012               	return	
  3275  0019D2                     __end_of_LCD_init:
  3276                           	opt stack 0
  3277                           tblptru	equ	0xFF8
  3278                           tblptrh	equ	0xFF7
  3279                           tblptrl	equ	0xFF6
  3280                           tablat	equ	0xFF5
  3281                           indf0	equ	0xFEF
  3282                           postinc0	equ	0xFEE
  3283                           fsr0h	equ	0xFEA
  3284                           fsr0l	equ	0xFE9
  3285                           wreg	equ	0xFE8
  3286                           postinc1	equ	0xFE6
  3287                           postdec1	equ	0xFE5
  3288                           fsr1h	equ	0xFE2
  3289                           fsr1l	equ	0xFE1
  3290                           indf2	equ	0xFDF
  3291                           postinc2	equ	0xFDE
  3292                           fsr2h	equ	0xFDA
  3293                           fsr2l	equ	0xFD9
  3294                           status	equ	0xFD8
  3295                           
  3296 ;; *************** function _LCD_cur *****************
  3297 ;; Defined at:
  3298 ;;		line 50 in file "LCD.c"
  3299 ;; Parameters:    Size  Location     Type
  3300 ;;  row             1    wreg     unsigned char 
  3301 ;;  col             1    8[COMRAM] unsigned char 
  3302 ;; Auto vars:     Size  Location     Type
  3303 ;;  row             1    9[COMRAM] unsigned char 
  3304 ;; Return value:  Size  Location     Type
  3305 ;;		None               void
  3306 ;; Registers used:
  3307 ;;		wreg, status,2, status,0, cstack
  3308 ;; Tracked objects:
  3309 ;;		On entry : 0/0
  3310 ;;		On exit  : 0/0
  3311 ;;		Unchanged: 0/0
  3312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3313 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3314 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3316 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3317 ;;Total ram usage:        2 bytes
  3318 ;; Hardware stack levels used:    1
  3319 ;; Hardware stack levels required when called:    3
  3320 ;; This function calls:
  3321 ;;		_LCD_func
  3322 ;; This function is called by:
  3323 ;;		_main
  3324 ;; This function uses a non-reentrant model
  3325 ;;
  3326                           
  3327                           	psect	text18
  3328  001AA8                     __ptext18:
  3329                           	opt stack 0
  3330  001AA8                     _LCD_cur:
  3331                           	opt stack 27
  3332                           
  3333                           ;incstack = 0
  3334                           ;LCD_cur@row stored from wreg
  3335  001AA8  6E0A               	movwf	LCD_cur@row,c
  3336                           
  3337                           ;LCD.c: 51: LCD_func(((0x80 + 0x40 * (row - 1)) + (col - 1)),0);
  3338  001AAA  0E00               	movlw	0
  3339  001AAC  6E03               	movwf	LCD_func@cmd,c
  3340  001AAE  400A               	rrncf	LCD_cur@row,w,c
  3341  001AB0  42E8               	rrncf	wreg,f,c
  3342  001AB2  0BC0               	andlw	192
  3343  001AB4  2409               	addwf	LCD_cur@col,w,c
  3344  001AB6  0F3F               	addlw	63
  3345  001AB8  EC55  F00C         	call	_LCD_func
  3346  001ABC  0012               	return	
  3347  001ABE                     __end_of_LCD_cur:
  3348                           	opt stack 0
  3349                           tblptru	equ	0xFF8
  3350                           tblptrh	equ	0xFF7
  3351                           tblptrl	equ	0xFF6
  3352                           tablat	equ	0xFF5
  3353                           indf0	equ	0xFEF
  3354                           postinc0	equ	0xFEE
  3355                           fsr0h	equ	0xFEA
  3356                           fsr0l	equ	0xFE9
  3357                           wreg	equ	0xFE8
  3358                           postinc1	equ	0xFE6
  3359                           postdec1	equ	0xFE5
  3360                           fsr1h	equ	0xFE2
  3361                           fsr1l	equ	0xFE1
  3362                           indf2	equ	0xFDF
  3363                           postinc2	equ	0xFDE
  3364                           fsr2h	equ	0xFDA
  3365                           fsr2l	equ	0xFD9
  3366                           status	equ	0xFD8
  3367                           
  3368 ;; *************** function _LCD_func *****************
  3369 ;; Defined at:
  3370 ;;		line 40 in file "LCD.c"
  3371 ;; Parameters:    Size  Location     Type
  3372 ;;  data            1    wreg     unsigned char 
  3373 ;;  cmd             1    2[COMRAM] unsigned char 
  3374 ;; Auto vars:     Size  Location     Type
  3375 ;;  data            1    7[COMRAM] unsigned char 
  3376 ;; Return value:  Size  Location     Type
  3377 ;;		None               void
  3378 ;; Registers used:
  3379 ;;		wreg, status,2, status,0, cstack
  3380 ;; Tracked objects:
  3381 ;;		On entry : 0/0
  3382 ;;		On exit  : 0/0
  3383 ;;		Unchanged: 0/0
  3384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3385 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3386 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3387 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3388 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3389 ;;Total ram usage:        6 bytes
  3390 ;; Hardware stack levels used:    1
  3391 ;; Hardware stack levels required when called:    2
  3392 ;; This function calls:
  3393 ;;		_LCD_enable
  3394 ;; This function is called by:
  3395 ;;		_LCD_init
  3396 ;;		_LCD_cur
  3397 ;;		_LCD_string
  3398 ;; This function uses a non-reentrant model
  3399 ;;
  3400                           
  3401                           	psect	text19
  3402  0018AA                     __ptext19:
  3403                           	opt stack 0
  3404  0018AA                     _LCD_func:
  3405                           	opt stack 27
  3406                           
  3407                           ;incstack = 0
  3408                           ;LCD_func@data stored from wreg
  3409  0018AA  6E08               	movwf	LCD_func@data,c
  3410                           
  3411                           ;LCD.c: 42: PORTD = cmd? PORTD|0x10:PORTD&~0x10;
  3412  0018AC  6603               	tstfsz	LCD_func@cmd,c
  3413  0018AE  D008               	goto	l3817
  3414  0018B0  CF83 F004          	movff	3971,??_LCD_func	;volatile
  3415  0018B4  0EEF               	movlw	239
  3416  0018B6  1604               	andwf	??_LCD_func,f,c
  3417  0018B8  5004               	movf	??_LCD_func,w,c
  3418  0018BA  6E06               	movwf	_LCD_func$36,c
  3419  0018BC  6A07               	clrf	_LCD_func$36+1,c
  3420  0018BE  D008               	goto	l3819
  3421  0018C0                     l3817:
  3422  0018C0  0E10               	movlw	16
  3423  0018C2  CF83 F004          	movff	3971,??_LCD_func	;volatile
  3424  0018C6  6A05               	clrf	(??_LCD_func+1)& (0+255),c
  3425  0018C8  1004               	iorwf	??_LCD_func,w,c
  3426  0018CA  6E06               	movwf	_LCD_func$36,c
  3427  0018CC  5005               	movf	??_LCD_func+1,w,c
  3428  0018CE  6E07               	movwf	_LCD_func$36+1,c
  3429  0018D0                     l3819:
  3430  0018D0  C006  FF83         	movff	_LCD_func$36,3971	;volatile
  3431                           
  3432                           ;LCD.c: 43: (PORTD = (PORTD&0xF0)|data>>4);
  3433  0018D4  C008  F004         	movff	LCD_func@data,??_LCD_func
  3434  0018D8  3A04               	swapf	??_LCD_func,f,c
  3435  0018DA  0E0F               	movlw	15
  3436  0018DC  1604               	andwf	??_LCD_func,f,c
  3437  0018DE  5083               	movf	3971,w,c	;volatile
  3438  0018E0  0BF0               	andlw	240
  3439  0018E2  1004               	iorwf	??_LCD_func,w,c
  3440  0018E4  6E83               	movwf	3971,c	;volatile
  3441                           
  3442                           ;LCD.c: 44: LCD_enable();
  3443  0018E6  EC2D  F00D         	call	_LCD_enable	;wreg free
  3444                           
  3445                           ;LCD.c: 46: (PORTD = (PORTD&0xF0)|data&0x0F);
  3446  0018EA  C008  F004         	movff	LCD_func@data,??_LCD_func
  3447  0018EE  0E0F               	movlw	15
  3448  0018F0  1604               	andwf	??_LCD_func,f,c
  3449  0018F2  5083               	movf	3971,w,c	;volatile
  3450  0018F4  0BF0               	andlw	240
  3451  0018F6  1004               	iorwf	??_LCD_func,w,c
  3452  0018F8  6E83               	movwf	3971,c	;volatile
  3453                           
  3454                           ;LCD.c: 47: LCD_enable();
  3455  0018FA  EC2D  F00D         	call	_LCD_enable	;wreg free
  3456  0018FE  0012               	return	
  3457  001900                     __end_of_LCD_func:
  3458                           	opt stack 0
  3459                           tblptru	equ	0xFF8
  3460                           tblptrh	equ	0xFF7
  3461                           tblptrl	equ	0xFF6
  3462                           tablat	equ	0xFF5
  3463                           indf0	equ	0xFEF
  3464                           postinc0	equ	0xFEE
  3465                           fsr0h	equ	0xFEA
  3466                           fsr0l	equ	0xFE9
  3467                           wreg	equ	0xFE8
  3468                           postinc1	equ	0xFE6
  3469                           postdec1	equ	0xFE5
  3470                           fsr1h	equ	0xFE2
  3471                           fsr1l	equ	0xFE1
  3472                           indf2	equ	0xFDF
  3473                           postinc2	equ	0xFDE
  3474                           fsr2h	equ	0xFDA
  3475                           fsr2l	equ	0xFD9
  3476                           status	equ	0xFD8
  3477                           
  3478 ;; *************** function _LCD_enable *****************
  3479 ;; Defined at:
  3480 ;;		line 13 in file "LCD.c"
  3481 ;; Parameters:    Size  Location     Type
  3482 ;;		None
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;		None
  3485 ;; Return value:  Size  Location     Type
  3486 ;;		None               void
  3487 ;; Registers used:
  3488 ;;		wreg, status,2, status,0, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3494 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3495 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3496 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3497 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3498 ;;Total ram usage:        0 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    1
  3501 ;; This function calls:
  3502 ;;		_LCD_delay
  3503 ;; This function is called by:
  3504 ;;		_LCD_func
  3505 ;; This function uses a non-reentrant model
  3506 ;;
  3507                           
  3508                           	psect	text20
  3509  001A5A                     __ptext20:
  3510                           	opt stack 0
  3511  001A5A                     _LCD_enable:
  3512                           	opt stack 27
  3513                           
  3514                           ;LCD.c: 15: PORTD |= 0x20;
  3515                           
  3516                           ;incstack = 0
  3517  001A5A  8A83               	bsf	3971,5,c	;volatile
  3518                           
  3519                           ;LCD.c: 16: LCD_delay(500);
  3520  001A5C  0E01               	movlw	1
  3521  001A5E  6E02               	movwf	LCD_delay@x+1,c
  3522  001A60  0EF4               	movlw	244
  3523  001A62  6E01               	movwf	LCD_delay@x,c
  3524  001A64  EC5F  F00D         	call	_LCD_delay	;wreg free
  3525                           
  3526                           ;LCD.c: 18: PORTD &= ~0x20;
  3527  001A68  9A83               	bcf	3971,5,c	;volatile
  3528                           
  3529                           ;LCD.c: 19: LCD_delay(500);
  3530  001A6A  0E01               	movlw	1
  3531  001A6C  6E02               	movwf	LCD_delay@x+1,c
  3532  001A6E  0EF4               	movlw	244
  3533  001A70  6E01               	movwf	LCD_delay@x,c
  3534  001A72  EC5F  F00D         	call	_LCD_delay	;wreg free
  3535  001A76  0012               	return	
  3536  001A78                     __end_of_LCD_enable:
  3537                           	opt stack 0
  3538                           tblptru	equ	0xFF8
  3539                           tblptrh	equ	0xFF7
  3540                           tblptrl	equ	0xFF6
  3541                           tablat	equ	0xFF5
  3542                           indf0	equ	0xFEF
  3543                           postinc0	equ	0xFEE
  3544                           fsr0h	equ	0xFEA
  3545                           fsr0l	equ	0xFE9
  3546                           wreg	equ	0xFE8
  3547                           postinc1	equ	0xFE6
  3548                           postdec1	equ	0xFE5
  3549                           fsr1h	equ	0xFE2
  3550                           fsr1l	equ	0xFE1
  3551                           indf2	equ	0xFDF
  3552                           postinc2	equ	0xFDE
  3553                           fsr2h	equ	0xFDA
  3554                           fsr2l	equ	0xFD9
  3555                           status	equ	0xFD8
  3556                           
  3557 ;; *************** function _LCD_delay *****************
  3558 ;; Defined at:
  3559 ;;		line 11 in file "LCD.c"
  3560 ;; Parameters:    Size  Location     Type
  3561 ;;  x               2    0[COMRAM] unsigned int 
  3562 ;; Auto vars:     Size  Location     Type
  3563 ;;		None
  3564 ;; Return value:  Size  Location     Type
  3565 ;;		None               void
  3566 ;; Registers used:
  3567 ;;		wreg, status,2, status,0
  3568 ;; Tracked objects:
  3569 ;;		On entry : 0/0
  3570 ;;		On exit  : 0/0
  3571 ;;		Unchanged: 0/0
  3572 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3573 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3574 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3575 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3576 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3577 ;;Total ram usage:        2 bytes
  3578 ;; Hardware stack levels used:    1
  3579 ;; This function calls:
  3580 ;;		Nothing
  3581 ;; This function is called by:
  3582 ;;		_LCD_enable
  3583 ;; This function uses a non-reentrant model
  3584 ;;
  3585                           
  3586                           	psect	text21
  3587  001ABE                     __ptext21:
  3588                           	opt stack 0
  3589  001ABE                     _LCD_delay:
  3590                           	opt stack 27
  3591  001ABE                     l3481:
  3592  001ABE  0601               	decf	LCD_delay@x,f,c
  3593  001AC0  A0D8               	btfss	status,0,c
  3594  001AC2  0602               	decf	LCD_delay@x+1,f,c
  3595  001AC4  2801               	incf	LCD_delay@x& (0+255),w,c
  3596  001AC6  B4D8               	btfsc	status,2,c
  3597  001AC8  2802               	incf	(LCD_delay@x+1)& (0+255),w,c
  3598  001ACA  B4D8               	btfsc	status,2,c
  3599  001ACC  0012               	return	
  3600  001ACE  D7F7               	goto	l3481
  3601  001AD0                     __end_of_LCD_delay:
  3602                           	opt stack 0
  3603                           tblptru	equ	0xFF8
  3604                           tblptrh	equ	0xFF7
  3605                           tblptrl	equ	0xFF6
  3606                           tablat	equ	0xFF5
  3607                           indf0	equ	0xFEF
  3608                           postinc0	equ	0xFEE
  3609                           fsr0h	equ	0xFEA
  3610                           fsr0l	equ	0xFE9
  3611                           wreg	equ	0xFE8
  3612                           postinc1	equ	0xFE6
  3613                           postdec1	equ	0xFE5
  3614                           fsr1h	equ	0xFE2
  3615                           fsr1l	equ	0xFE1
  3616                           indf2	equ	0xFDF
  3617                           postinc2	equ	0xFDE
  3618                           fsr2h	equ	0xFDA
  3619                           fsr2l	equ	0xFD9
  3620                           status	equ	0xFD8
  3621                           tblptru	equ	0xFF8
  3622                           tblptrh	equ	0xFF7
  3623                           tblptrl	equ	0xFF6
  3624                           tablat	equ	0xFF5
  3625                           indf0	equ	0xFEF
  3626                           postinc0	equ	0xFEE
  3627                           fsr0h	equ	0xFEA
  3628                           fsr0l	equ	0xFE9
  3629                           wreg	equ	0xFE8
  3630                           postinc1	equ	0xFE6
  3631                           postdec1	equ	0xFE5
  3632                           fsr1h	equ	0xFE2
  3633                           fsr1l	equ	0xFE1
  3634                           indf2	equ	0xFDF
  3635                           postinc2	equ	0xFDE
  3636                           fsr2h	equ	0xFDA
  3637                           fsr2l	equ	0xFD9
  3638                           status	equ	0xFD8
  3639                           
  3640                           	psect	rparam
  3641  0000                     tblptru	equ	0xFF8
  3642                           tblptrh	equ	0xFF7
  3643                           tblptrl	equ	0xFF6
  3644                           tablat	equ	0xFF5
  3645                           indf0	equ	0xFEF
  3646                           postinc0	equ	0xFEE
  3647                           fsr0h	equ	0xFEA
  3648                           fsr0l	equ	0xFE9
  3649                           wreg	equ	0xFE8
  3650                           postinc1	equ	0xFE6
  3651                           postdec1	equ	0xFE5
  3652                           fsr1h	equ	0xFE2
  3653                           fsr1l	equ	0xFE1
  3654                           indf2	equ	0xFDF
  3655                           postinc2	equ	0xFDE
  3656                           fsr2h	equ	0xFDA
  3657                           fsr2l	equ	0xFD9
  3658                           status	equ	0xFD8


Data Sizes:
    Strings     115
    Constant    0
    Data        17
    BSS         1107
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127     68     122
    BANK0           128      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_close@fp.fs	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_sync@fp.fs	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_write@fp.fs	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_read@fp.fs	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_open@fp.fs	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(COMRAM[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dj.fs	PTR struct . size(2) Largest target is 0

    validate@fil.dir_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    validate@fil.fs	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    ff@FatFs	PTR struct .[1] size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    follow_path@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(COMRAM[12]), 

    follow_path@dp.dir	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    follow_path@dp.fs	PTR struct . size(2) Largest target is 0

    create_name@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(COMRAM[12]), 

    create_name@dp.dir	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    create_name@dp.fs	PTR struct . size(2) Largest target is 0

    dir_register@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(COMRAM[12]), 

    dir_register@dp.dir	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dir_register@dp.fs	PTR struct . size(2) Largest target is 0

    dir_find@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(COMRAM[12]), 

    dir_find@dp.dir	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dir_find@dp.fs	PTR struct . size(2) Largest target is 0

    dir_alloc@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(COMRAM[12]), 

    dir_alloc@dp.dir	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dir_alloc@dp.fs	PTR struct . size(2) Largest target is 0

    dir_next@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(COMRAM[12]), 

    dir_next@dp.dir	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dir_next@dp.fs	PTR struct . size(2) Largest target is 0

    S301$fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(COMRAM[12]), 

    dir_sdi@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_open@sfn(COMRAM[12]), 

    S301$dir	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    dir_sdi@dp.dir	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S301$fs	PTR struct . size(2) Largest target is 0

    dir_sdi@dp.fs	PTR struct . size(2) Largest target is 0

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), buffer(BIGRAM[512]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), buffer(BIGRAM[512]), 

    xmit_datablock@buff	PTR const unsigned char  size(3) Largest target is 49151
		 -> NULL(NULL[0]), ROM(CODE[49151]), buffer(BIGRAM[512]), 

    rcvr_datablock@buff	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), disk_ioctl@csd(COMRAM[16]), buffer(BIGRAM[512]), 

    rcvr_mmc@buff	PTR unsigned char  size(2) Largest target is 512
		 -> NULL(NULL[0]), disk_ioctl@csd(COMRAM[16]), disk_initialize@buf(COMRAM[4]), send_cmd@d(COMRAM[1]), 
		 -> xmit_datablock@d(COMRAM[2]), rcvr_datablock@d(COMRAM[2]), select@d(COMRAM[1]), deselect@d(COMRAM[1]), 
		 -> wait_ready@d(COMRAM[1]), buffer(BIGRAM[512]), 

    xmit_mmc@buff	PTR const unsigned char  size(3) Largest target is 49151
		 -> NULL(NULL[0]), ROM(CODE[49151]), send_cmd@buf(COMRAM[6]), xmit_datablock@d(COMRAM[2]), 
		 -> buffer(BIGRAM[512]), 

    S62$dir_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fp.dir_ptr	PTR unsigned char  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S62$fs	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fp.fs	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    LCD_string@ptr	PTR unsigned char  size(2) Largest target is 17
		 -> STR_6(CODE[16]), STR_5(CODE[17]), STR_4(CODE[16]), STR_3(CODE[17]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_disk_initialize
    _disk_write->_send_cmd
    _xmit_datablock->_wait_ready
    _disk_read->_send_cmd
    _rcvr_datablock->_rcvr_mmc
    _disk_initialize->_send_cmd
    _send_cmd->_select
    _select->_wait_ready
    _wait_ready->_rcvr_mmc
    _deselect->_rcvr_mmc
    _LCD_string->_LCD_func
    _LCD_init->_LCD_func
    _LCD_cur->_LCD_func
    _LCD_enable->_LCD_delay

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                34    29      5   54333
                                             40 COMRAM    28    23      5
                            _LCD_cur
                           _LCD_init
                         _LCD_string
                          _delaymain
                    _disk_initialize
                          _disk_read
                         _disk_write
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _disk_write                                          10     2      8   19258
                                             26 COMRAM    10     2      8
                           _deselect
                        _disk_status
                           _send_cmd
                     _xmit_datablock
 ---------------------------------------------------------------------------------
 (2) _xmit_datablock                                       7     3      4    5099
                                             10 COMRAM     7     3      4
                           _rcvr_mmc
                         _wait_ready
                           _xmit_mmc
 ---------------------------------------------------------------------------------
 (1) _disk_read                                           13     5      8   16302
                                             26 COMRAM    13     5      8
                           _deselect
                        _disk_status
                     _rcvr_datablock
                           _send_cmd
 ---------------------------------------------------------------------------------
 (2) _rcvr_datablock                                       8     4      4    2526
                                              5 COMRAM     8     4      4
                             _dly_us
                           _rcvr_mmc
 ---------------------------------------------------------------------------------
 (2) _disk_status                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _disk_initialize                                     14    14      0   15503
                                             26 COMRAM    14    14      0
                           _deselect
                             _dly_us
                           _rcvr_mmc
                           _send_cmd
 ---------------------------------------------------------------------------------
 (2) _send_cmd                                            13     9      4   11204
                                             13 COMRAM    13     9      4
                           _deselect
                           _rcvr_mmc
                             _select
                           _xmit_mmc
 ---------------------------------------------------------------------------------
 (3) _xmit_mmc                                             6     1      5     606
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (3) _select                                               3     1      2    5746
                                             10 COMRAM     3     1      2
                           _deselect
                           _rcvr_mmc
                         _wait_ready
 ---------------------------------------------------------------------------------
 (3) _wait_ready                                           5     3      2    2204
                                              5 COMRAM     5     3      2
                             _dly_us
                           _rcvr_mmc
 ---------------------------------------------------------------------------------
 (4) _dly_us                                               4     2      2     365
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (4) _deselect                                             1     1      0    1771
                                              5 COMRAM     1     1      0
                           _rcvr_mmc
 ---------------------------------------------------------------------------------
 (4) _rcvr_mmc                                             5     1      4    1747
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (1) _delaymain                                            4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _LCD_string                                           2     0      2    1181
                                              8 COMRAM     2     0      2
                           _LCD_func
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0     752
                           _LCD_func
 ---------------------------------------------------------------------------------
 (1) _LCD_cur                                              2     1      1    1052
                                              8 COMRAM     2     1      1
                           _LCD_func
 ---------------------------------------------------------------------------------
 (2) _LCD_func                                             6     5      1     752
                                              2 COMRAM     6     5      1
                         _LCD_enable
 ---------------------------------------------------------------------------------
 (3) _LCD_enable                                           0     0      0     150
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (4) _LCD_delay                                            2     0      2     150
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_cur
     _LCD_func
       _LCD_enable
         _LCD_delay
   _LCD_init
     _LCD_func
       _LCD_enable
         _LCD_delay
   _LCD_string
     _LCD_func
       _LCD_enable
         _LCD_delay
   _delaymain
   _disk_initialize
     _deselect
       _rcvr_mmc
     _dly_us
     _rcvr_mmc
     _send_cmd
       _deselect
         _rcvr_mmc
       _rcvr_mmc
       _select
         _deselect
           _rcvr_mmc
         _rcvr_mmc
         _wait_ready
           _dly_us
           _rcvr_mmc
       _xmit_mmc
   _disk_read
     _deselect
       _rcvr_mmc
     _disk_status
     _rcvr_datablock
       _dly_us
       _rcvr_mmc
     _send_cmd
       _deselect
         _rcvr_mmc
       _rcvr_mmc
       _select
         _deselect
           _rcvr_mmc
         _rcvr_mmc
         _wait_ready
           _dly_us
           _rcvr_mmc
       _xmit_mmc
   _disk_write
     _deselect
       _rcvr_mmc
     _disk_status
     _send_cmd
       _deselect
         _rcvr_mmc
       _rcvr_mmc
       _select
         _deselect
           _rcvr_mmc
         _rcvr_mmc
         _wait_ready
           _dly_us
           _rcvr_mmc
       _xmit_mmc
     _xmit_datablock
       _rcvr_mmc
       _wait_ready
         _dly_us
         _rcvr_mmc
       _xmit_mmc
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0     42E      37       27.0%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80      0       0       5        0.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     44      7A       1       96.1%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      7A      34        0.0%
DATA                 0      0     4A8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Fri Jun 17 11:55:52 2016

                      l90 135A                        l82 1356                        l74 12B8  
                      l83 12F4                        l77 12B6                        l89 13EA  
                      _fp 0045          disk_write@sector 001D               ?_LCD_enable 0001  
                     l111 1A78                       l120 15C0                       l200 1262  
                     l130 1630                       l122 15F8                       l132 163E  
                     l124 1606                       l134 164C                       l126 1614  
                     l230 1524                       l136 165A                       l128 1622  
                     l242 1402                       l243 14FC                       l228 1510  
                     l244 1416                       l229 15BE                       l248 147C  
                     l185 1714                       l196 1AF0              disk_read@cmd 0027  
            disk_read@drv 0024                       wreg 000FE8               ?_LCD_string 0009  
       disk_initialize@ty 0026           __end_of_LCD_cur 1ABE                      l2383 1A3C  
                    l4311 11D6                      l4303 11A0                      l3425 17AA  
                    l4313 11E8                      l4321 1216                      l4235 1A0C  
                    l3531 1612                      l4323 121E                      l4307 11AE  
                    l3525 1604                      l4239 1A26                      l3543 162E  
                    l3519 15F6                      l4327 1242                      l4263 10A0  
                    l4247 1082                      l3481 1ABE                      l3561 1658  
                    l3537 1620                      l4329 1246                      l4361 158E  
                    l3555 164A                      l4283 1126                      l4291 1154  
                    l4267 10B6                      l4355 1560                      l3485 190A  
                    l3549 163C                      l4293 115C                      l4365 15AC  
                    l4349 1538                      l3495 1936                      l3575 19FC  
                    l3903 16AE                      l3817 18C0                      l3497 193E  
                    l4385 145E                      l3819 18D0                      l3923 1712  
                    l3915 16F2                      l3907 16BA                      l3827 1834  
                    l4395 14C6                      l3917 16F6                      l3933 1AEE  
                    l3845 1878                      l3837 1860                      l4389 1498  
                    l3839 1868                      l4399 14EA                      l3873 179E  
                    l4909 133E                      l3887 168C                      l4935 13D2  
                    l4927 138C                      l4883 1294                      l4897 12F0  
                    STR_1 1001                      STR_2 1034                      STR_3 1012  
                    STR_4 1045                      STR_5 1023                      STR_6 1055  
                    STR_7 1065                      u4050 15E0                      u4057 15D6  
                    u5450 1254                      u5540 15BC                      u5456 1256  
                    u4680 1796                      u6531 126E                      u5660 14FA  
                    u5485 1516                      u5575 1408                      _Fsid 0065  
                    _Stat 007A                      _main 1264                      _init 1AF2  
                    fsr0h 000FEA                      fsr1h 000FE2                      indf0 000FEF  
                    fsr0l 000FE9                      fsr2h 000FDA                      fsr1l 000FE1  
                    indf2 000FDF                      fsr2l 000FD9             disk_read@buff 001B  
             main@timeout 0040                      start 0000        __size_of_LCD_delay 0012  
      disk_initialize@cmd 0024        disk_initialize@buf 001F        disk_initialize@drv 001C  
      disk_initialize@tmr 0027          __end_of_LCD_func 1900          __end_of_LCD_init 19D2  
                   ?_main 0029                     ?_init 0001                     _PORTC 000F82  
                   _PORTD 000F83                     _TRISB 000F93                     _TRISC 000F94  
                   _TRISD 000F95                     _FatFs 0B52                     main@i 0042  
          disk_read@count 0021                     tablat 000FF5                     status 000FD8  
     __size_of_LCD_enable 001E             disk_write@drv 0024               LCD_func@cmd 0003  
         __initialization 194E       __size_of_LCD_string 0032              __end_of_main 13F0  
            __end_of_init 1B00                    ??_main 002E                    ??_init 0001  
           __activetblptr 000003                 ??_LCD_cur 000A         __end_of_LCD_delay 1AD0  
__size_of_disk_initialize 01EE          __end_of_deselect 1AA8      __size_of_disk_status 0010  
                  _buffer 0D80                    _dly_us 1A78                    clear_0 1956  
                  clear_1 1968                    _select 19D2          __end_of_send_cmd 1716  
            __pdataCOMRAM 006A          __end_of_rcvr_mmc 182A            disk_status@drv 0001  
            __mediumconst 0000           disk_read@sector 001D                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8           xmit_datablock@d 0010  
        __end_of_xmit_mmc 166E        rcvr_datablock@buff 0006                __accesstop 0080  
 __end_of__initialization 198E            disk_write@buff 001B                 ?_LCD_func 0003  
               ?_LCD_init 0001   __size_of_rcvr_datablock 0080              LCD_func@data 0008  
          __pcstackCOMRAM 0001        __size_of_delaymain 001E              ??_LCD_enable 0003  
            ??_LCD_string 000B        __size_of_disk_read 00C2                ??_LCD_func 0004  
              ??_LCD_init 0009        __end_of_LCD_enable 1A78        __end_of_LCD_string 1A3C  
 __size_of_xmit_datablock 0092                   ?_dly_us 0001         ??_disk_initialize 001B  
                 ?_select 000B                   _LCD_cur 1AA8                _disk_write 13F0  
             send_cmd@cmd 001A                 ?_deselect 0001               send_cmd@arg 000E  
             send_cmd@buf 0012         __end_of_delaymain 1A5A                 ?_send_cmd 000E  
                 __Hparam 0000                   __Lparam 0000                 ?_rcvr_mmc 0001  
       __end_of_disk_read 15C0                   ff@FatFs 0067              __psmallconst 1000  
         __size_of_dly_us 0018       _disk_initialize$227 001D                   __pcinit 194E  
                 __ramtop 1000                 ?_xmit_mmc 0001           __size_of_select 0038  
                 __ptext0 1264                   __ptext1 1AF2                   __ptext2 13F0  
                 __ptext3 1716                   __ptext4 14FE                   __ptext5 182A  
                 __ptext6 1AE2                   __ptext7 1076                   __ptext8 166E  
                 __ptext9 15C0              xmit_mmc@buff 0001                ??_deselect 0006  
                 main@cnt 003E                 _LCD_delay 1ABE      end_of_initialization 198E  
                 dly_us@n 0001                delaymain@x 0001            _rcvr_datablock 182A  
                 select@d 000D                ??_send_cmd 0012                ??_rcvr_mmc 0005  
                 postdec1 000FE5                   postinc0 000FEE                   postinc1 000FE6  
                 postinc2 000FDE               wait_ready@d 000A                _wait_ready 1900  
              ??_xmit_mmc 0006               ?_disk_write 001B           disk_write@count 0021  
              ?_LCD_delay 0001    __end_of_rcvr_datablock 18AA          disk_initialize@n 0023  
        disk_initialize@s 0025             ??_disk_status 0001                main@mytext 002E  
              main@status 0044         __size_of_LCD_func 0056         __size_of_LCD_init 003E  
          _xmit_datablock 1716             __pidataCOMRAM 1AD0            __end_of_dly_us 1A90  
          __end_of_select 1A0A                LCD_delay@x 0001                LCD_cur@col 0009  
              LCD_cur@row 000A       start_initialization 194E           ?_rcvr_datablock 0006  
         _disk_initialize 1076    __end_of_xmit_datablock 17A8       __size_of_disk_write 010E  
             ?_wait_ready 0006                  ??_dly_us 0003       __end_of_disk_status 1AF2  
                ??_select 000D         rcvr_datablock@btr 0008         rcvr_datablock@tmr 000A  
             __pbssBIGRAM 0B52                  ?_LCD_cur 0009               __pbssCOMRAM 0045  
     __end_of__stringdata 1074               ??_LCD_delay 0003         __size_of_deselect 0018  
           LCD_string@ptr 0009           ?_xmit_datablock 000B                 _delaymain 1A3C  
       __size_of_send_cmd 00A8         __size_of_rcvr_mmc 0082                 _disk_read 14FE  
             __smallconst 1000         __size_of_xmit_mmc 00AE   __end_of_disk_initialize 1264  
     __size_of_wait_ready 004E                rcvr_mmc@bc 0003                  _LCD_func 18AA  
                _LCD_init 1994               _disk_status 1AE2                ?_delaymain 0001  
               deselect@d 0006                 main@F3715 006A                ?_disk_read 001B  
             __stringdata 1001                  _CardType 0069              ??_disk_write 0023  
        __size_of_LCD_cur 0016                 dly_us@tem 0003                 copy_data0 1982  
             _LCD_func$36 0006                  __Hrparam 0000                  __Lrparam 0000  
      __end_of_disk_write 14FE       xmit_datablock@token 000E          ??_rcvr_datablock 000A  
                _deselect 1A90                  __ptext10 19D2                  __ptext11 1900  
                __ptext20 1A5A                  __ptext12 1A78                  __ptext21 1ABE  
                __ptext13 1A90                  __ptext14 17A8                  __ptext15 1A3C  
                __ptext16 1A0A                  __ptext17 1994                  __ptext18 1AA8  
                __ptext19 18AA          ?_disk_initialize 0001                 send_cmd@d 0019  
               send_cmd@n 0018             __size_of_main 018C             __size_of_init 000E  
              xmit_mmc@bc 0004                 rcvr_mmc@r 0005                  _send_cmd 166E  
             ??_delaymain 0005                  _rcvr_mmc 17A8              ??_wait_ready 0008  
            rcvr_mmc@buff 0001                  main@argc 0029                  main@argv 002B  
             ??_disk_read 0023             _disk_read$235 0025                  _xmit_mmc 15C0  
              _LCD_enable 1A5A                _LCD_string 1A0A           rcvr_datablock@d 000C  
           wait_ready@tmr 0008        xmit_datablock@buff 000B          ??_xmit_datablock 000F  
      __end_of_wait_ready 194E                 xmit_mmc@d 0006              ?_disk_status 0001  
