

Microchip Technology PIC18 LITE Macro Assembler V1.33 build 59893 
                                                                                               Sat Jul 30 01:03:56 2016

Microchip Technology Omniscient Code Generator (Lite mode) build 59893
     1                           	processor	18F4515
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	idataBANK0,global,class=CODE,delta=1
     6                           	psect	idataBANK1,global,class=CODE,delta=1
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    11                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1
    12                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1
    13                           	psect	bssBIGRAM,global,class=BIGRAM,space=1,delta=1
    14                           	psect	cstackBANK1,global,class=BANK1,space=1,delta=1
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	text50,global,reloc=2,class=CODE,delta=1
    68                           	psect	text51,global,reloc=2,class=CODE,delta=1
    69                           	psect	text52,global,reloc=2,class=CODE,delta=1
    70                           	psect	text53,global,reloc=2,class=CODE,delta=1
    71                           	psect	text54,global,reloc=2,class=CODE,delta=1
    72                           	psect	text55,global,reloc=2,class=CODE,delta=1
    73                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1
    74                           	psect	rparam,global,class=COMRAM,space=1,delta=1
    75  0000                     
    76                           	psect	idataBANK0
    77  0050D1                     __pidataBANK0:
    78                           	opt stack 0
    79                           
    80                           ;initializer for _Stat
    81  0050D1  01                 	db	1
    82                           
    83                           	psect	idataBANK1
    84  0050E0                     __pidataBANK1:
    85                           	opt stack 0
    86                           
    87                           ;initializer for main@F3718
    88  0050E0  68                 	db	104
    89  0050E1  65                 	db	101
    90  0050E2  6C                 	db	108
    91  0050E3  6C                 	db	108
    92  0050E4  6F                 	db	111
    93  0050E5  20                 	db	32
    94  0050E6  77                 	db	119
    95  0050E7  6F                 	db	111
    96  0050E8  72                 	db	114
    97  0050E9  6C                 	db	108
    98  0050EA  64                 	db	100
    99  0050EB  00                 	db	0
   100  0050EC  00                 	db	0
   101  0050ED  00                 	db	0
   102  0050EE  00                 	db	0
   103  0050EF  00                 	db	0
   104                           
   105                           	psect	mediumconst
   106  00BED2                     __pmediumconst:
   107                           	opt stack 0
   108  00BED2  00                 	db	0
   109  00BED3                     f_mkfs@cst:
   110                           	opt stack 0
   111  00BED3  8000               	dw	32768
   112  00BED5  4000               	dw	16384
   113  00BED7  2000               	dw	8192
   114  00BED9  1000               	dw	4096
   115  00BEDB  0800               	dw	2048
   116  00BEDD  4000               	dw	16384
   117  00BEDF  2000               	dw	8192
   118  00BEE1  1000               	dw	4096
   119  00BEE3  0800               	dw	2048
   120  00BEE5  0400               	dw	1024
   121  00BEE7  0200               	dw	512
   122  00BEE9                     __end_off_mkfs@cst:
   123                           	opt stack 0
   124  00BEE9                     f_mkfs@vst:
   125                           	opt stack 0
   126  00BEE9  0400               	dw	1024
   127  00BEEB  0200               	dw	512
   128  00BEED  0100               	dw	256
   129  00BEEF  0080               	dw	128
   130  00BEF1  0040               	dw	64
   131  00BEF3  0020               	dw	32
   132  00BEF5  0010               	dw	16
   133  00BEF7  0008               	dw	8
   134  00BEF9  0004               	dw	4
   135  00BEFB  0002               	dw	2
   136  00BEFD  0000               	dw	0
   137  00BEFF                     __end_off_mkfs@vst:
   138                           	opt stack 0
   139  00BEFF                     get_ldnumber@str:
   140                           	opt stack 0
   141  00BEFF  BFF7               	dw	STR_11& (0+65535)
   142  00BF01  BFEA               	dw	STR_12& (0+65535)
   143  00BF03  BFFB               	dw	STR_13& (0+65535)
   144  00BF05  BFEF               	dw	STR_14& (0+65535)
   145  00BF07  BFF3               	dw	STR_15& (0+65535)
   146  00BF09  BFDB               	dw	STR_16& (0+65535)
   147  00BF0B  BFE0               	dw	STR_17& (0+65535)
   148  00BF0D  BFE5               	dw	STR_18& (0+65535)
   149  00BF0F                     __end_ofget_ldnumber@str:
   150                           	opt stack 0
   151  0000                     _PORTC	set	3970
   152  0000                     _PORTD	set	3971
   153  0000                     _TRISB	set	3987
   154  0000                     _TRISC	set	3988
   155  0000                     _TRISD	set	3989
   156  00BF0F                     __stringdata:
   157                           	opt stack 0
   158  00BF0F  4E                 	db	78	;'N'
   159  00BF10  4F                 	db	79	;'O'
   160  00BF11  20                 	db	32
   161  00BF12  4E                 	db	78	;'N'
   162  00BF13  41                 	db	65	;'A'
   163  00BF14  4D                 	db	77	;'M'
   164  00BF15  45                 	db	69	;'E'
   165  00BF16  20                 	db	32
   166  00BF17  20                 	db	32
   167  00BF18  20                 	db	32
   168  00BF19  20                 	db	32
   169  00BF1A  46                 	db	70	;'F'
   170  00BF1B  41                 	db	65	;'A'
   171  00BF1C  54                 	db	84	;'T'
   172  00BF1D  20                 	db	32
   173  00BF1E  20                 	db	32
   174  00BF1F  20                 	db	32
   175  00BF20  20                 	db	32
   176  00BF21  20                 	db	32
   177  00BF22  00                 	db	0
   178  00BF23  4E                 	db	78	;'N'
   179  00BF24  4F                 	db	79	;'O'
   180  00BF25  20                 	db	32
   181  00BF26  4E                 	db	78	;'N'
   182  00BF27  41                 	db	65	;'A'
   183  00BF28  4D                 	db	77	;'M'
   184  00BF29  45                 	db	69	;'E'
   185  00BF2A  20                 	db	32
   186  00BF2B  20                 	db	32
   187  00BF2C  20                 	db	32
   188  00BF2D  20                 	db	32
   189  00BF2E  46                 	db	70	;'F'
   190  00BF2F  41                 	db	65	;'A'
   191  00BF30  54                 	db	84	;'T'
   192  00BF31  33                 	db	51	;'3'
   193  00BF32  32                 	db	50	;'2'
   194  00BF33  20                 	db	32
   195  00BF34  20                 	db	32
   196  00BF35  20                 	db	32
   197  00BF36  00                 	db	0
   198  00BF37                     STR_1:
   199  00BF37  53                 	db	83	;'S'
   200  00BF38  44                 	db	68	;'D'
   201  00BF39  2F                 	db	47
   202  00BF3A  4D                 	db	77	;'M'
   203  00BF3B  4D                 	db	77	;'M'
   204  00BF3C  43                 	db	67	;'C'
   205  00BF3D  20                 	db	32
   206  00BF3E  63                 	db	99	;'c'
   207  00BF3F  61                 	db	97	;'a'
   208  00BF40  72                 	db	114	;'r'
   209  00BF41  64                 	db	100	;'d'
   210  00BF42  20                 	db	32
   211  00BF43  4F                 	db	79	;'O'
   212  00BF44  4B                 	db	75	;'K'
   213  00BF45  21                 	db	33
   214  00BF46  20                 	db	32
   215  00BF47  00                 	db	0
   216  00BF48                     STR_2:
   217  00BF48  57                 	db	87	;'W'
   218  00BF49  61                 	db	97	;'a'
   219  00BF4A  69                 	db	105	;'i'
   220  00BF4B  74                 	db	116	;'t'
   221  00BF4C  2E                 	db	46
   222  00BF4D  2E                 	db	46
   223  00BF4E  2E                 	db	46
   224  00BF4F  20                 	db	32
   225  00BF50  57                 	db	87	;'W'
   226  00BF51  61                 	db	97	;'a'
   227  00BF52  69                 	db	105	;'i'
   228  00BF53  74                 	db	116	;'t'
   229  00BF54  2E                 	db	46
   230  00BF55  2E                 	db	46
   231  00BF56  2E                 	db	46
   232  00BF57  20                 	db	32
   233  00BF58  00                 	db	0
   234  00BF59  22                 	db	34
   235  00BF5A  2A                 	db	42
   236  00BF5B  2B                 	db	43
   237  00BF5C  2C                 	db	44
   238  00BF5D  2E                 	db	46
   239  00BF5E  3A                 	db	58	;':'
   240  00BF5F  3B                 	db	59	;';'
   241  00BF60  3C                 	db	60	;'<'
   242  00BF61  3D                 	db	61	;'='
   243  00BF62  3E                 	db	62	;'>'
   244  00BF63  3F                 	db	63	;'?'
   245  00BF64  5B                 	db	91	;'['
   246  00BF65  5D                 	db	93	;']'
   247  00BF66  7C                 	db	124
   248  00BF67  7F                 	db	127
   249  00BF68  00                 	db	0
   250  00BF69                     STR_6:
   251  00BF69  4F                 	db	79	;'O'
   252  00BF6A  70                 	db	112	;'p'
   253  00BF6B  65                 	db	101	;'e'
   254  00BF6C  6E                 	db	110	;'n'
   255  00BF6D  20                 	db	32
   256  00BF6E  46                 	db	70	;'F'
   257  00BF6F  61                 	db	97	;'a'
   258  00BF70  69                 	db	105	;'i'
   259  00BF71  6C                 	db	108	;'l'
   260  00BF72  73                 	db	115	;'s'
   261  00BF73  20                 	db	32
   262  00BF74  20                 	db	32
   263  00BF75  20                 	db	32
   264  00BF76  20                 	db	32
   265  00BF77  20                 	db	32
   266  00BF78  00                 	db	0
   267  00BF79                     STR_9:
   268  00BF79  43                 	db	67	;'C'
   269  00BF7A  6C                 	db	108	;'l'
   270  00BF7B  6F                 	db	111	;'o'
   271  00BF7C  73                 	db	115	;'s'
   272  00BF7D  65                 	db	101	;'e'
   273  00BF7E  20                 	db	32
   274  00BF7F  46                 	db	70	;'F'
   275  00BF80  61                 	db	97	;'a'
   276  00BF81  69                 	db	105	;'i'
   277  00BF82  6C                 	db	108	;'l'
   278  00BF83  73                 	db	115	;'s'
   279  00BF84  20                 	db	32
   280  00BF85  20                 	db	32
   281  00BF86  20                 	db	32
   282  00BF87  20                 	db	32
   283  00BF88  00                 	db	0
   284  00BF89                     STR_4:
   285  00BF89  6D                 	db	109	;'m'
   286  00BF8A  6F                 	db	111	;'o'
   287  00BF8B  75                 	db	117	;'u'
   288  00BF8C  6E                 	db	110	;'n'
   289  00BF8D  74                 	db	116	;'t'
   290  00BF8E  20                 	db	32
   291  00BF8F  46                 	db	70	;'F'
   292  00BF90  61                 	db	97	;'a'
   293  00BF91  69                 	db	105	;'i'
   294  00BF92  6C                 	db	108	;'l'
   295  00BF93  73                 	db	115	;'s'
   296  00BF94  20                 	db	32
   297  00BF95  20                 	db	32
   298  00BF96  20                 	db	32
   299  00BF97  20                 	db	32
   300  00BF98  00                 	db	0
   301  00BF99                     STR_8:
   302  00BF99  57                 	db	87	;'W'
   303  00BF9A  72                 	db	114	;'r'
   304  00BF9B  69                 	db	105	;'i'
   305  00BF9C  74                 	db	116	;'t'
   306  00BF9D  74                 	db	116	;'t'
   307  00BF9E  65                 	db	101	;'e'
   308  00BF9F  6E                 	db	110	;'n'
   309  00BFA0  20                 	db	32
   310  00BFA1  46                 	db	70	;'F'
   311  00BFA2  61                 	db	97	;'a'
   312  00BFA3  69                 	db	105	;'i'
   313  00BFA4  6C                 	db	108	;'l'
   314  00BFA5  73                 	db	115	;'s'
   315  00BFA6  20                 	db	32
   316  00BFA7  20                 	db	32
   317  00BFA8  00                 	db	0
   318  00BFA9                     STR_10:
   319  00BFA9  22                 	db	34
   320  00BFAA  2A                 	db	42
   321  00BFAB  2B                 	db	43
   322  00BFAC  2C                 	db	44
   323  00BFAD  3A                 	db	58	;':'
   324  00BFAE  3B                 	db	59	;';'
   325  00BFAF  3C                 	db	60	;'<'
   326  00BFB0  3D                 	db	61	;'='
   327  00BFB1  3E                 	db	62	;'>'
   328  00BFB2  3F                 	db	63	;'?'
   329  00BFB3  5B                 	db	91	;'['
   330  00BFB4  5D                 	db	93	;']'
   331  00BFB5  7C                 	db	124
   332  00BFB6  7F                 	db	127
   333  00BFB7  00                 	db	0
   334  00BFB8                     STR_7:
   335  00BFB8  41                 	db	65	;'A'
   336  00BFB9  6E                 	db	110	;'n'
   337  00BFBA  6B                 	db	107	;'k'
   338  00BFBB  69                 	db	105	;'i'
   339  00BFBC  74                 	db	116	;'t'
   340  00BFBD  20                 	db	32
   341  00BFBE  52                 	db	82	;'R'
   342  00BFBF  61                 	db	97	;'a'
   343  00BFC0  77                 	db	119	;'w'
   344  00BFC1  61                 	db	97	;'a'
   345  00BFC2  74                 	db	116	;'t'
   346  00BFC3  0D                 	db	13
   347  00BFC4  0A                 	db	10
   348  00BFC5  00                 	db	0
   349  00BFC6  EB                 	db	-21
   350  00BFC7  FE                 	db	-2
   351  00BFC8  90                 	db	-112
   352  00BFC9  4D                 	db	77	;'M'
   353  00BFCA  53                 	db	83	;'S'
   354  00BFCB  44                 	db	68	;'D'
   355  00BFCC  4F                 	db	79	;'O'
   356  00BFCD  53                 	db	83	;'S'
   357  00BFCE  35                 	db	53	;'5'
   358  00BFCF  2E                 	db	46
   359  00BFD0  30                 	db	48	;'0'
   360  00BFD1  00                 	db	0
   361  00BFD2                     STR_5:
   362  00BFD2  74                 	db	116	;'t'
   363  00BFD3  65                 	db	101	;'e'
   364  00BFD4  78                 	db	120	;'x'
   365  00BFD5  74                 	db	116	;'t'
   366  00BFD6  2E                 	db	46
   367  00BFD7  74                 	db	116	;'t'
   368  00BFD8  78                 	db	120	;'x'
   369  00BFD9  74                 	db	116	;'t'
   370  00BFDA  00                 	db	0
   371  00BFDB                     STR_16:
   372  00BFDB  55                 	db	85	;'U'
   373  00BFDC  53                 	db	83	;'S'
   374  00BFDD  42                 	db	66	;'B'
   375  00BFDE  31                 	db	49	;'1'
   376  00BFDF  00                 	db	0
   377  00BFE0                     STR_17:
   378  00BFE0  55                 	db	85	;'U'
   379  00BFE1  53                 	db	83	;'S'
   380  00BFE2  42                 	db	66	;'B'
   381  00BFE3  32                 	db	50	;'2'
   382  00BFE4  00                 	db	0
   383  00BFE5                     STR_18:
   384  00BFE5  55                 	db	85	;'U'
   385  00BFE6  53                 	db	83	;'S'
   386  00BFE7  42                 	db	66	;'B'
   387  00BFE8  33                 	db	51	;'3'
   388  00BFE9  00                 	db	0
   389  00BFEA                     STR_12:
   390  00BFEA  4E                 	db	78	;'N'
   391  00BFEB  41                 	db	65	;'A'
   392  00BFEC  4E                 	db	78	;'N'
   393  00BFED  44                 	db	68	;'D'
   394  00BFEE  00                 	db	0
   395  00BFEF                     STR_14:
   396  00BFEF  53                 	db	83	;'S'
   397  00BFF0  44                 	db	68	;'D'
   398  00BFF1  31                 	db	49	;'1'
   399  00BFF2  00                 	db	0
   400  00BFF3                     STR_15:
   401  00BFF3  53                 	db	83	;'S'
   402  00BFF4  44                 	db	68	;'D'
   403  00BFF5  32                 	db	50	;'2'
   404  00BFF6  00                 	db	0
   405  00BFF7                     STR_11:
   406  00BFF7  52                 	db	82	;'R'
   407  00BFF8  41                 	db	65	;'A'
   408  00BFF9  4D                 	db	77	;'M'
   409  00BFFA  00                 	db	0
   410  00BFFB                     STR_13:
   411  00BFFB  43                 	db	67	;'C'
   412  00BFFC  46                 	db	70	;'F'
   413  00BFFD  00                 	db	0
   414  00BFFE                     __end_of__stringdata:
   415                           	opt stack 0
   416  00BFFE  00                 	db	0	; dummy byte at the end
   417  0000                     
   418                           ; #config settings
   419                           
   420                           	psect	cinit
   421  00549A                     __pcinit:
   422                           	opt stack 0
   423  00549A                     start_initialization:
   424                           	opt stack 0
   425  00549A                     __initialization:
   426                           	opt stack 0
   427                           
   428                           ; Clear objects allocated to BIGRAM (1074 bytes)
   429  00549A  EE0B  F04E         	lfsr	0,__pbssBIGRAM
   430  00549E  EE14 F032          	lfsr	1,1074
   431  0054A2                     clear_0:
   432  0054A2  6AEE               	clrf	postinc0,c
   433  0054A4  50E5               	movf	postdec1,w,c
   434  0054A6  50E1               	movf	fsr1l,w,c
   435  0054A8  E1FC               	bnz	clear_0
   436  0054AA  50E2               	movf	fsr1h,w,c
   437  0054AC  E1FA               	bnz	clear_0
   438                           
   439                           ; Clear objects allocated to BANK1 (70 bytes)
   440  0054AE  EE01  F048         	lfsr	0,__pbssBANK1
   441  0054B2  0E46               	movlw	70
   442  0054B4                     clear_1:
   443  0054B4  6AEE               	clrf	postinc0,c
   444  0054B6  06E8               	decf	wreg,f,c
   445  0054B8  E1FD               	bnz	clear_1
   446                           
   447                           ; Clear objects allocated to BANK0 (7 bytes)
   448  0054BA  EE00  F0F8         	lfsr	0,__pbssBANK0
   449  0054BE  0E07               	movlw	7
   450  0054C0                     clear_2:
   451  0054C0  6AEE               	clrf	postinc0,c
   452  0054C2  06E8               	decf	wreg,f,c
   453  0054C4  E1FD               	bnz	clear_2
   454                           
   455                           ; Initialize objects allocated to BANK1 (16 bytes)
   456                           ; load TBLPTR registers with __pidataBANK1
   457  0054C6  0EE0               	movlw	low __pidataBANK1
   458  0054C8  6EF6               	movwf	tblptrl,c
   459  0054CA  0E50               	movlw	high __pidataBANK1
   460  0054CC  6EF7               	movwf	tblptrh,c
   461  0054CE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   462  0054D0  6EF8               	movwf	tblptru,c
   463  0054D2  EE01  F08E         	lfsr	0,__pdataBANK1
   464  0054D6  EE10 F010          	lfsr	1,16
   465  0054DA                     copy_data0:
   466  0054DA  0009               	tblrd		*+
   467  0054DC  CFF5 FFEE          	movff	tablat,postinc0
   468  0054E0  50E5               	movf	postdec1,w,c
   469  0054E2  50E1               	movf	fsr1l,w,c
   470  0054E4  E1FA               	bnz	copy_data0
   471                           
   472                           ; Initialize objects allocated to BANK0 (1 bytes)
   473                           ; load TBLPTR registers with __pidataBANK0
   474  0054E6  0ED1               	movlw	low __pidataBANK0
   475  0054E8  6EF6               	movwf	tblptrl,c
   476  0054EA  0E50               	movlw	high __pidataBANK0
   477  0054EC  6EF7               	movwf	tblptrh,c
   478  0054EE  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   479  0054F0  6EF8               	movwf	tblptru,c
   480  0054F2  0009               	tblrd		*+	;fetch initializer
   481  0054F4  CFF5 F0FF          	movff	tablat,__pdataBANK0
   482  0054F8                     end_of_initialization:
   483                           	opt stack 0
   484  0054F8                     __end_of__initialization:
   485                           	opt stack 0
   486  0054F8  0100               	movlb	0
   487  0054FA  EFBC  F037         	goto	_main	;jump to C main() function
   488                           tblptru	equ	0xFF8
   489                           tblptrh	equ	0xFF7
   490                           tblptrl	equ	0xFF6
   491                           tablat	equ	0xFF5
   492                           postinc0	equ	0xFEE
   493                           wreg	equ	0xFE8
   494                           postdec1	equ	0xFE5
   495                           fsr1h	equ	0xFE2
   496                           fsr1l	equ	0xFE1
   497                           
   498                           	psect	bssBANK0
   499  0000F8                     __pbssBANK0:
   500                           	opt stack 0
   501  0000F8                     _CardType:
   502                           	opt stack 0
   503  0000F8                     	ds	1
   504  0000F9                     _CurrVol:
   505                           	opt stack 0
   506  0000F9                     	ds	1
   507  0000FA                     _ab:
   508                           	opt stack 0
   509  0000FA                     	ds	1
   510  0000FB                     _ab1:
   511                           	opt stack 0
   512  0000FB                     	ds	1
   513  0000FC                     _ld1:
   514                           	opt stack 0
   515  0000FC                     	ds	1
   516  0000FD                     _ld2:
   517                           	opt stack 0
   518  0000FD                     	ds	1
   519  0000FE                     _ld3:
   520                           	opt stack 0
   521  0000FE                     	ds	1
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           postinc0	equ	0xFEE
   527                           wreg	equ	0xFE8
   528                           postdec1	equ	0xFE5
   529                           fsr1h	equ	0xFE2
   530                           fsr1l	equ	0xFE1
   531                           
   532                           	psect	dataBANK0
   533  0000FF                     __pdataBANK0:
   534                           	opt stack 0
   535  0000FF                     _Stat:
   536                           	opt stack 0
   537  0000FF                     	ds	1
   538                           tblptru	equ	0xFF8
   539                           tblptrh	equ	0xFF7
   540                           tblptrl	equ	0xFF6
   541                           tablat	equ	0xFF5
   542                           postinc0	equ	0xFEE
   543                           wreg	equ	0xFE8
   544                           postdec1	equ	0xFE5
   545                           fsr1h	equ	0xFE2
   546                           fsr1l	equ	0xFE1
   547                           
   548                           	psect	bssBANK1
   549  000148                     __pbssBANK1:
   550                           	opt stack 0
   551  000148                     ff@FatFs:
   552                           	opt stack 0
   553  000148                     	ds	10
   554  000152                     _myvar:
   555                           	opt stack 0
   556  000152                     	ds	5
   557  000157                     _Fsid:
   558                           	opt stack 0
   559  000157                     	ds	2
   560  000159                     _Tfs:
   561                           	opt stack 0
   562  000159                     	ds	2
   563  00015B                     _Tres:
   564                           	opt stack 0
   565  00015B                     	ds	2
   566  00015D                     _Trp:
   567                           	opt stack 0
   568  00015D                     	ds	2
   569  00015F                     _Tvol:
   570                           	opt stack 0
   571  00015F                     	ds	2
   572  000161                     _abc:
   573                           	opt stack 0
   574  000161                     	ds	2
   575  000163                     _ch:
   576                           	opt stack 0
   577  000163                     	ds	2
   578  000165                     _chr:
   579                           	opt stack 0
   580  000165                     	ds	2
   581  000167                     _tfs:
   582                           	opt stack 0
   583  000167                     	ds	2
   584  000169                     _AB1:
   585                           	opt stack 0
   586  000169                     	ds	1
   587  00016A                     _AB2:
   588                           	opt stack 0
   589  00016A                     	ds	1
   590  00016B                     _AB3:
   591                           	opt stack 0
   592  00016B                     	ds	1
   593  00016C                     _fp:
   594                           	opt stack 0
   595  00016C                     	ds	34
   596                           tblptru	equ	0xFF8
   597                           tblptrh	equ	0xFF7
   598                           tblptrl	equ	0xFF6
   599                           tablat	equ	0xFF5
   600                           postinc0	equ	0xFEE
   601                           wreg	equ	0xFE8
   602                           postdec1	equ	0xFE5
   603                           fsr1h	equ	0xFE2
   604                           fsr1l	equ	0xFE1
   605                           
   606                           	psect	dataBANK1
   607  00018E                     __pdataBANK1:
   608                           	opt stack 0
   609  00018E                     main@F3718:
   610                           	opt stack 0
   611  00018E                     	ds	16
   612                           tblptru	equ	0xFF8
   613                           tblptrh	equ	0xFF7
   614                           tblptrl	equ	0xFF6
   615                           tablat	equ	0xFF5
   616                           postinc0	equ	0xFEE
   617                           wreg	equ	0xFE8
   618                           postdec1	equ	0xFE5
   619                           fsr1h	equ	0xFE2
   620                           fsr1l	equ	0xFE1
   621                           
   622                           	psect	bssBIGRAM
   623  000B4E                     __pbssBIGRAM:
   624                           	opt stack 0
   625  000B4E                     _buffer:
   626                           	opt stack 0
   627  000B4E                     	ds	512
   628  000D4E                     _FatFs:
   629                           	opt stack 0
   630  000D4E                     	ds	562
   631                           tblptru	equ	0xFF8
   632                           tblptrh	equ	0xFF7
   633                           tblptrl	equ	0xFF6
   634                           tablat	equ	0xFF5
   635                           postinc0	equ	0xFEE
   636                           wreg	equ	0xFE8
   637                           postdec1	equ	0xFE5
   638                           fsr1h	equ	0xFE2
   639                           fsr1l	equ	0xFE1
   640                           
   641                           	psect	cstackBANK1
   642  000100                     __pcstackBANK1:
   643                           	opt stack 0
   644  000100                     f_open@sfn:
   645                           	opt stack 0
   646                           
   647                           ; 12 bytes @ 0x0
   648  000100                     	ds	12
   649  00010C                     f_open@cl:
   650                           	opt stack 0
   651                           
   652                           ; 4 bytes @ 0xC
   653  00010C                     	ds	4
   654  000110                     f_open@dw:
   655                           	opt stack 0
   656                           
   657                           ; 4 bytes @ 0x10
   658  000110                     	ds	4
   659  000114                     f_open@res:
   660                           	opt stack 0
   661                           
   662                           ; 1 bytes @ 0x14
   663  000114                     	ds	1
   664  000115                     f_open@dir:
   665                           	opt stack 0
   666                           
   667                           ; 2 bytes @ 0x15
   668  000115                     	ds	2
   669  000117                     f_open@dj:
   670                           	opt stack 0
   671                           
   672                           ; 25 bytes @ 0x17
   673  000117                     	ds	25
   674  000130                     main@mytext:
   675                           	opt stack 0
   676                           
   677                           ; 16 bytes @ 0x30
   678  000130                     	ds	16
   679  000140                     main@timeout:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x40
   683  000140                     	ds	2
   684  000142                     main@cnt:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x42
   688  000142                     	ds	2
   689  000144                     main@status:
   690                           	opt stack 0
   691                           
   692                           ; 1 bytes @ 0x44
   693  000144                     	ds	1
   694  000145                     main@ret:
   695                           	opt stack 0
   696                           
   697                           ; 2 bytes @ 0x45
   698  000145                     	ds	2
   699  000147                     main@chck:
   700                           	opt stack 0
   701                           
   702                           ; 1 bytes @ 0x47
   703  000147                     	ds	1
   704                           tblptru	equ	0xFF8
   705                           tblptrh	equ	0xFF7
   706                           tblptrl	equ	0xFF6
   707                           tablat	equ	0xFF5
   708                           postinc0	equ	0xFEE
   709                           wreg	equ	0xFE8
   710                           postdec1	equ	0xFE5
   711                           fsr1h	equ	0xFE2
   712                           fsr1l	equ	0xFE1
   713                           
   714                           	psect	cstackBANK0
   715  000080                     __pcstackBANK0:
   716                           	opt stack 0
   717  000080                     ??_remove_chain:
   718  000080                     ??_create_chain:
   719  000080                     ??_find_volume:
   720  000080                     dir_sdi@ic:
   721                           	opt stack 0
   722                           
   723                           ; 2 bytes @ 0x0
   724  000080                     	ds	2
   725  000082                     dir_sdi@sect:
   726                           	opt stack 0
   727                           
   728                           ; 4 bytes @ 0x2
   729  000082                     	ds	2
   730  000084                     create_chain@res:
   731                           	opt stack 0
   732                           
   733                           ; 1 bytes @ 0x4
   734  000084                     	ds	1
   735  000085                     create_chain@scl:
   736                           	opt stack 0
   737                           
   738                           ; 4 bytes @ 0x5
   739  000085                     	ds	1
   740  000086                     dir_sdi@clst:
   741                           	opt stack 0
   742                           
   743                           ; 4 bytes @ 0x6
   744  000086                     	ds	3
   745  000089                     remove_chain@scl:
   746                           	opt stack 0
   747  000089                     create_chain@ncl:
   748                           	opt stack 0
   749                           
   750                           ; 4 bytes @ 0x9
   751  000089                     	ds	4
   752  00008D                     create_chain@cs:
   753                           	opt stack 0
   754  00008D                     remove_chain@rt:
   755                           	opt stack 0
   756                           
   757                           ; 8 bytes @ 0xD
   758  00008D                     	ds	4
   759  000091                     dir_next@dp:
   760                           	opt stack 0
   761  000091                     f_write@fp:
   762                           	opt stack 0
   763                           
   764                           ; 2 bytes @ 0x11
   765  000091                     	ds	2
   766  000093                     dir_next@stretch:
   767                           	opt stack 0
   768  000093                     f_write@buff:
   769                           	opt stack 0
   770                           
   771                           ; 2 bytes @ 0x13
   772  000093                     	ds	2
   773  000095                     ??_dir_next:
   774  000095                     f_write@btw:
   775                           	opt stack 0
   776  000095                     remove_chain@ecl:
   777                           	opt stack 0
   778                           
   779                           ; 4 bytes @ 0x15
   780  000095                     	ds	2
   781  000097                     f_write@bw:
   782                           	opt stack 0
   783                           
   784                           ; 2 bytes @ 0x17
   785  000097                     	ds	2
   786  000099                     ??_f_write:
   787  000099                     remove_chain@res:
   788                           	opt stack 0
   789                           
   790                           ; 1 bytes @ 0x19
   791  000099                     	ds	1
   792  00009A                     remove_chain@nxt:
   793                           	opt stack 0
   794  00009A                     find_volume@br:
   795                           	opt stack 0
   796                           
   797                           ; 16 bytes @ 0x1A
   798  00009A                     	ds	2
   799  00009C                     dir_next@c:
   800                           	opt stack 0
   801                           
   802                           ; 2 bytes @ 0x1C
   803  00009C                     	ds	2
   804  00009E                     dir_next@i:
   805                           	opt stack 0
   806                           
   807                           ; 2 bytes @ 0x1E
   808  00009E                     	ds	2
   809  0000A0                     dir_next@clst:
   810                           	opt stack 0
   811                           
   812                           ; 4 bytes @ 0x20
   813  0000A0                     	ds	4
   814  0000A4                     dir_find@c:
   815                           	opt stack 0
   816  0000A4                     dir_alloc@dp:
   817                           	opt stack 0
   818                           
   819                           ; 2 bytes @ 0x24
   820  0000A4                     	ds	1
   821  0000A5                     dir_find@dir:
   822                           	opt stack 0
   823                           
   824                           ; 2 bytes @ 0x25
   825  0000A5                     	ds	1
   826  0000A6                     dir_alloc@nent:
   827                           	opt stack 0
   828                           
   829                           ; 2 bytes @ 0x26
   830  0000A6                     	ds	1
   831  0000A7                     dir_find@res:
   832                           	opt stack 0
   833                           
   834                           ; 1 bytes @ 0x27
   835  0000A7                     	ds	1
   836  0000A8                     dir_alloc@n:
   837                           	opt stack 0
   838  0000A8                     follow_path@dp:
   839                           	opt stack 0
   840                           
   841                           ; 2 bytes @ 0x28
   842  0000A8                     	ds	1
   843  0000A9                     f_write@res:
   844                           	opt stack 0
   845                           
   846                           ; 1 bytes @ 0x29
   847  0000A9                     	ds	1
   848  0000AA                     dir_alloc@res:
   849                           	opt stack 0
   850  0000AA                     follow_path@path:
   851                           	opt stack 0
   852  0000AA                     f_write@wbuff:
   853                           	opt stack 0
   854  0000AA                     _find_volume$1058:
   855                           	opt stack 0
   856                           
   857                           ; 4 bytes @ 0x2A
   858  0000AA                     	ds	1
   859  0000AB                     dir_register@dp:
   860                           	opt stack 0
   861                           
   862                           ; 2 bytes @ 0x2B
   863  0000AB                     	ds	1
   864  0000AC                     ??_follow_path:
   865  0000AC                     f_write@csect:
   866                           	opt stack 0
   867                           
   868                           ; 1 bytes @ 0x2C
   869  0000AC                     	ds	1
   870  0000AD                     f_write@cc:
   871                           	opt stack 0
   872                           
   873                           ; 2 bytes @ 0x2D
   874  0000AD                     	ds	1
   875  0000AE                     _find_volume$1059:
   876                           	opt stack 0
   877                           
   878                           ; 2 bytes @ 0x2E
   879  0000AE                     	ds	1
   880  0000AF                     f_write@sect:
   881                           	opt stack 0
   882                           
   883                           ; 4 bytes @ 0x2F
   884  0000AF                     	ds	1
   885  0000B0                     follow_path@dir:
   886                           	opt stack 0
   887  0000B0                     find_volume@szbfat:
   888                           	opt stack 0
   889                           
   890                           ; 4 bytes @ 0x30
   891  0000B0                     	ds	2
   892  0000B2                     follow_path@ns:
   893                           	opt stack 0
   894                           
   895                           ; 1 bytes @ 0x32
   896  0000B2                     	ds	1
   897  0000B3                     follow_path@res:
   898                           	opt stack 0
   899  0000B3                     f_write@wcnt:
   900                           	opt stack 0
   901                           
   902                           ; 2 bytes @ 0x33
   903  0000B3                     	ds	1
   904  0000B4                     find_volume@sysect:
   905                           	opt stack 0
   906                           
   907                           ; 4 bytes @ 0x34
   908  0000B4                     	ds	1
   909  0000B5                     f_write@clst:
   910                           	opt stack 0
   911                           
   912                           ; 4 bytes @ 0x35
   913  0000B5                     	ds	3
   914  0000B8                     find_volume@vol:
   915                           	opt stack 0
   916                           
   917                           ; 2 bytes @ 0x38
   918  0000B8                     	ds	2
   919  0000BA                     find_volume@nrsv:
   920                           	opt stack 0
   921                           
   922                           ; 2 bytes @ 0x3A
   923  0000BA                     	ds	2
   924  0000BC                     find_volume@tsect:
   925                           	opt stack 0
   926                           
   927                           ; 4 bytes @ 0x3C
   928  0000BC                     	ds	4
   929  0000C0                     find_volume@nclst:
   930                           	opt stack 0
   931                           
   932                           ; 4 bytes @ 0x40
   933  0000C0                     	ds	4
   934  0000C4                     find_volume@stat:
   935                           	opt stack 0
   936                           
   937                           ; 1 bytes @ 0x44
   938  0000C4                     	ds	1
   939  0000C5                     find_volume@pt:
   940                           	opt stack 0
   941                           
   942                           ; 2 bytes @ 0x45
   943  0000C5                     	ds	2
   944  0000C7                     find_volume@fasize:
   945                           	opt stack 0
   946                           
   947                           ; 4 bytes @ 0x47
   948  0000C7                     	ds	4
   949  0000CB                     find_volume@bsect:
   950                           	opt stack 0
   951                           
   952                           ; 4 bytes @ 0x4B
   953  0000CB                     	ds	4
   954  0000CF                     find_volume@i:
   955                           	opt stack 0
   956                           
   957                           ; 2 bytes @ 0x4F
   958  0000CF                     	ds	2
   959  0000D1                     find_volume@fmt:
   960                           	opt stack 0
   961                           
   962                           ; 1 bytes @ 0x51
   963  0000D1                     	ds	1
   964  0000D2                     find_volume@fs:
   965                           	opt stack 0
   966                           
   967                           ; 2 bytes @ 0x52
   968  0000D2                     	ds	2
   969  0000D4                     f_open@fp:
   970                           	opt stack 0
   971                           
   972                           ; 2 bytes @ 0x54
   973  0000D4                     	ds	2
   974  0000D6                     f_open@path:
   975                           	opt stack 0
   976                           
   977                           ; 2 bytes @ 0x56
   978  0000D6                     	ds	2
   979  0000D8                     f_open@mode:
   980                           	opt stack 0
   981                           
   982                           ; 1 bytes @ 0x58
   983  0000D8                     	ds	1
   984  0000D9                     ??_f_open:
   985                           
   986                           ; 0 bytes @ 0x59
   987  0000D9                     	ds	26
   988  0000F3                     
   989                           ; 2 bytes @ 0x73
   990  0000F3                     	ds	2
   991  0000F5                     
   992                           ; 3 bytes @ 0x75
   993  0000F5                     	ds	3
   994                           tblptru	equ	0xFF8
   995                           tblptrh	equ	0xFF7
   996                           tblptrl	equ	0xFF6
   997                           tablat	equ	0xFF5
   998                           postinc0	equ	0xFEE
   999                           wreg	equ	0xFE8
  1000                           postdec1	equ	0xFE5
  1001                           fsr1h	equ	0xFE2
  1002                           fsr1l	equ	0xFE1
  1003                           
  1004                           	psect	cstackCOMRAM
  1005  000001                     __pcstackCOMRAM:
  1006                           	opt stack 0
  1007  000001                     ?_mem_cmp:
  1008                           	opt stack 0
  1009  000001                     ?_chk_chr:
  1010                           	opt stack 0
  1011  000001                     ?_get_ldnumber:
  1012                           	opt stack 0
  1013  000001                     ?_ld_clust:
  1014                           	opt stack 0
  1015  000001                     ?___lmul:
  1016                           	opt stack 0
  1017  000001                     ?___lldiv:
  1018                           	opt stack 0
  1019  000001                     disk_status@drv:
  1020                           	opt stack 0
  1021  000001                     LCD_delay@x:
  1022                           	opt stack 0
  1023  000001                     dly_us@n:
  1024                           	opt stack 0
  1025  000001                     rcvr_mmc@buff:
  1026                           	opt stack 0
  1027  000001                     mem_cpy@dst:
  1028                           	opt stack 0
  1029  000001                     mem_set@dst:
  1030                           	opt stack 0
  1031  000001                     mem_cmp@dst:
  1032                           	opt stack 0
  1033  000001                     chk_chr@str:
  1034                           	opt stack 0
  1035  000001                     ld_clust@fs:
  1036                           	opt stack 0
  1037  000001                     st_clust@dir:
  1038                           	opt stack 0
  1039  000001                     get_ldnumber@path:
  1040                           	opt stack 0
  1041  000001                     xmit_mmc@buff:
  1042                           	opt stack 0
  1043  000001                     delaymain@x:
  1044                           	opt stack 0
  1045  000001                     ___lmul@multiplier:
  1046                           	opt stack 0
  1047  000001                     ___lldiv@dividend:
  1048                           	opt stack 0
  1049                           
  1050                           ; 4 bytes @ 0x0
  1051  000001                     	ds	1
  1052  000002                     validate@obj:
  1053                           	opt stack 0
  1054                           
  1055                           ; 2 bytes @ 0x1
  1056  000002                     	ds	1
  1057  000003                     ??_get_ldnumber:
  1058  000003                     LCD_func@cmd:
  1059                           	opt stack 0
  1060  000003                     rcvr_mmc@bc:
  1061                           	opt stack 0
  1062  000003                     mem_cpy@src:
  1063                           	opt stack 0
  1064  000003                     mem_set@val:
  1065                           	opt stack 0
  1066  000003                     mem_cmp@src:
  1067                           	opt stack 0
  1068  000003                     chk_chr@chr:
  1069                           	opt stack 0
  1070  000003                     ld_clust@dir:
  1071                           	opt stack 0
  1072  000003                     dly_us@tem:
  1073                           	opt stack 0
  1074  000003                     st_clust@cl:
  1075                           	opt stack 0
  1076                           
  1077                           ; 4 bytes @ 0x2
  1078  000003                     	ds	1
  1079  000004                     ??_LCD_func:
  1080  000004                     ??_validate:
  1081  000004                     xmit_mmc@bc:
  1082                           	opt stack 0
  1083                           
  1084                           ; 2 bytes @ 0x3
  1085  000004                     	ds	1
  1086  000005                     ??_chk_chr:
  1087  000005                     ??_ld_clust:
  1088  000005                     rcvr_mmc@r:
  1089                           	opt stack 0
  1090  000005                     mem_cpy@cnt:
  1091                           	opt stack 0
  1092  000005                     mem_set@cnt:
  1093                           	opt stack 0
  1094  000005                     mem_cmp@cnt:
  1095                           	opt stack 0
  1096  000005                     get_ldnumber@sp:
  1097                           	opt stack 0
  1098  000005                     ___lmul@multiplicand:
  1099                           	opt stack 0
  1100  000005                     ___lldiv@divisor:
  1101                           	opt stack 0
  1102                           
  1103                           ; 4 bytes @ 0x4
  1104  000005                     	ds	1
  1105  000006                     xmit_mmc@d:
  1106                           	opt stack 0
  1107  000006                     deselect@d:
  1108                           	opt stack 0
  1109  000006                     _LCD_func$36:
  1110                           	opt stack 0
  1111  000006                     validate@fil:
  1112                           	opt stack 0
  1113                           
  1114                           ; 2 bytes @ 0x5
  1115  000006                     	ds	1
  1116  000007                     ??_mem_cmp:
  1117  000007                     ??_st_clust:
  1118  000007                     ?_wait_ready:
  1119                           	opt stack 0
  1120  000007                     ?_rcvr_datablock:
  1121                           	opt stack 0
  1122  000007                     rcvr_datablock@buff:
  1123                           	opt stack 0
  1124  000007                     mem_cpy@d:
  1125                           	opt stack 0
  1126  000007                     mem_set@d:
  1127                           	opt stack 0
  1128  000007                     _get_ldnumber$973:
  1129                           	opt stack 0
  1130                           
  1131                           ; 2 bytes @ 0x6
  1132  000007                     	ds	1
  1133  000008                     LCD_func@data:
  1134                           	opt stack 0
  1135                           
  1136                           ; 1 bytes @ 0x7
  1137  000008                     	ds	1
  1138  000009                     LCD_cur@col:
  1139                           	opt stack 0
  1140  000009                     LCD_string@ptr:
  1141                           	opt stack 0
  1142  000009                     wait_ready@tmr:
  1143                           	opt stack 0
  1144  000009                     rcvr_datablock@btr:
  1145                           	opt stack 0
  1146  000009                     mem_cpy@s:
  1147                           	opt stack 0
  1148  000009                     create_name@dp:
  1149                           	opt stack 0
  1150  000009                     get_ldnumber@vol:
  1151                           	opt stack 0
  1152  000009                     ___lmul@product:
  1153                           	opt stack 0
  1154  000009                     ___lldiv@quotient:
  1155                           	opt stack 0
  1156                           
  1157                           ; 4 bytes @ 0x8
  1158  000009                     	ds	1
  1159  00000A                     LCD_cur@row:
  1160                           	opt stack 0
  1161  00000A                     mem_cmp@d:
  1162                           	opt stack 0
  1163                           
  1164                           ; 2 bytes @ 0x9
  1165  00000A                     	ds	1
  1166  00000B                     wait_ready@d:
  1167                           	opt stack 0
  1168  00000B                     get_ldnumber@c:
  1169                           	opt stack 0
  1170  00000B                     rcvr_datablock@tmr:
  1171                           	opt stack 0
  1172  00000B                     create_name@path:
  1173                           	opt stack 0
  1174                           
  1175                           ; 2 bytes @ 0xA
  1176  00000B                     	ds	1
  1177  00000C                     ?_select:
  1178                           	opt stack 0
  1179  00000C                     ?_xmit_datablock:
  1180                           	opt stack 0
  1181  00000C                     get_ldnumber@tc:
  1182                           	opt stack 0
  1183  00000C                     mem_cmp@s:
  1184                           	opt stack 0
  1185  00000C                     xmit_datablock@buff:
  1186                           	opt stack 0
  1187                           
  1188                           ; 3 bytes @ 0xB
  1189  00000C                     	ds	1
  1190  00000D                     ??_create_name:
  1191  00000D                     ?_clust2sect:
  1192                           	opt stack 0
  1193  00000D                     ___lldiv@counter:
  1194                           	opt stack 0
  1195  00000D                     rcvr_datablock@d:
  1196                           	opt stack 0
  1197  00000D                     clust2sect@fs:
  1198                           	opt stack 0
  1199  00000D                     get_ldnumber@tp:
  1200                           	opt stack 0
  1201                           
  1202                           ; 2 bytes @ 0xC
  1203  00000D                     	ds	1
  1204  00000E                     ?_clmt_clust:
  1205                           	opt stack 0
  1206  00000E                     select@d:
  1207                           	opt stack 0
  1208  00000E                     mem_cmp@r:
  1209                           	opt stack 0
  1210  00000E                     clmt_clust@fp:
  1211                           	opt stack 0
  1212                           
  1213                           ; 2 bytes @ 0xD
  1214  00000E                     	ds	1
  1215  00000F                     xmit_datablock@token:
  1216                           	opt stack 0
  1217  00000F                     get_ldnumber@i:
  1218                           	opt stack 0
  1219  00000F                     send_cmd@arg:
  1220                           	opt stack 0
  1221  00000F                     clust2sect@clst:
  1222                           	opt stack 0
  1223                           
  1224                           ; 4 bytes @ 0xE
  1225  00000F                     	ds	1
  1226  000010                     ??_xmit_datablock:
  1227  000010                     clmt_clust@ofs:
  1228                           	opt stack 0
  1229                           
  1230                           ; 4 bytes @ 0xF
  1231  000010                     	ds	1
  1232  000011                     xmit_datablock@d:
  1233                           	opt stack 0
  1234  000011                     _create_name$909:
  1235                           	opt stack 0
  1236  000011                     get_ldnumber@tt:
  1237                           	opt stack 0
  1238  000011                     ld_clust@cl:
  1239                           	opt stack 0
  1240                           
  1241                           ; 4 bytes @ 0x10
  1242  000011                     	ds	2
  1243  000013                     ??_clust2sect:
  1244  000013                     _create_name$912:
  1245                           	opt stack 0
  1246  000013                     send_cmd@buf:
  1247                           	opt stack 0
  1248                           
  1249                           ; 6 bytes @ 0x12
  1250  000013                     	ds	1
  1251  000014                     ??_clmt_clust:
  1252                           
  1253                           ; 0 bytes @ 0x13
  1254  000014                     	ds	1
  1255  000015                     create_name@b:
  1256                           	opt stack 0
  1257                           
  1258                           ; 1 bytes @ 0x14
  1259  000015                     	ds	1
  1260  000016                     create_name@ni:
  1261                           	opt stack 0
  1262                           
  1263                           ; 2 bytes @ 0x15
  1264  000016                     	ds	2
  1265  000018                     create_name@d:
  1266                           	opt stack 0
  1267                           
  1268                           ; 1 bytes @ 0x17
  1269  000018                     	ds	1
  1270  000019                     send_cmd@d:
  1271                           	opt stack 0
  1272  000019                     create_name@si:
  1273                           	opt stack 0
  1274  000019                     clmt_clust@cl:
  1275                           	opt stack 0
  1276                           
  1277                           ; 4 bytes @ 0x18
  1278  000019                     	ds	1
  1279  00001A                     send_cmd@n:
  1280                           	opt stack 0
  1281                           
  1282                           ; 1 bytes @ 0x19
  1283  00001A                     	ds	1
  1284  00001B                     send_cmd@cmd:
  1285                           	opt stack 0
  1286  00001B                     create_name@i:
  1287                           	opt stack 0
  1288                           
  1289                           ; 2 bytes @ 0x1A
  1290  00001B                     	ds	1
  1291  00001C                     ??_disk_initialize:
  1292  00001C                     disk_ioctl@ctrl:
  1293                           	opt stack 0
  1294  00001C                     disk_read@buff:
  1295                           	opt stack 0
  1296  00001C                     disk_write@buff:
  1297                           	opt stack 0
  1298                           
  1299                           ; 2 bytes @ 0x1B
  1300  00001C                     	ds	1
  1301  00001D                     disk_initialize@drv:
  1302                           	opt stack 0
  1303  00001D                     disk_ioctl@buff:
  1304                           	opt stack 0
  1305  00001D                     clmt_clust@tbl:
  1306                           	opt stack 0
  1307  00001D                     create_name@p:
  1308                           	opt stack 0
  1309                           
  1310                           ; 2 bytes @ 0x1C
  1311  00001D                     	ds	1
  1312  00001E                     _disk_initialize$255:
  1313                           	opt stack 0
  1314  00001E                     disk_read@sector:
  1315                           	opt stack 0
  1316  00001E                     disk_write@sector:
  1317                           	opt stack 0
  1318                           
  1319                           ; 4 bytes @ 0x1D
  1320  00001E                     	ds	1
  1321  00001F                     ??_disk_ioctl:
  1322  00001F                     create_name@sfn:
  1323                           	opt stack 0
  1324  00001F                     clmt_clust@ncl:
  1325                           	opt stack 0
  1326                           
  1327                           ; 4 bytes @ 0x1E
  1328  00001F                     	ds	1
  1329  000020                     disk_initialize@buf:
  1330                           	opt stack 0
  1331                           
  1332                           ; 4 bytes @ 0x1F
  1333  000020                     	ds	1
  1334  000021                     create_name@c:
  1335                           	opt stack 0
  1336                           
  1337                           ; 1 bytes @ 0x20
  1338  000021                     	ds	1
  1339  000022                     disk_read@count:
  1340                           	opt stack 0
  1341  000022                     disk_write@count:
  1342                           	opt stack 0
  1343                           
  1344                           ; 2 bytes @ 0x21
  1345  000022                     	ds	2
  1346  000024                     ??_disk_read:
  1347  000024                     ??_disk_write:
  1348  000024                     disk_initialize@n:
  1349                           	opt stack 0
  1350                           
  1351                           ; 1 bytes @ 0x23
  1352  000024                     	ds	1
  1353  000025                     disk_initialize@cmd:
  1354                           	opt stack 0
  1355  000025                     disk_read@drv:
  1356                           	opt stack 0
  1357  000025                     disk_write@drv:
  1358                           	opt stack 0
  1359                           
  1360                           ; 1 bytes @ 0x24
  1361  000025                     	ds	1
  1362  000026                     disk_initialize@s:
  1363                           	opt stack 0
  1364  000026                     _disk_read$263:
  1365                           	opt stack 0
  1366  000026                     sync_window@fs:
  1367                           	opt stack 0
  1368                           
  1369                           ; 2 bytes @ 0x25
  1370  000026                     	ds	1
  1371  000027                     disk_initialize@ty:
  1372                           	opt stack 0
  1373                           
  1374                           ; 1 bytes @ 0x26
  1375  000027                     	ds	1
  1376  000028                     ??_sync_window:
  1377  000028                     disk_read@cmd:
  1378                           	opt stack 0
  1379  000028                     disk_initialize@tmr:
  1380                           	opt stack 0
  1381                           
  1382                           ; 2 bytes @ 0x27
  1383  000028                     	ds	4
  1384  00002C                     disk_ioctl@csd:
  1385                           	opt stack 0
  1386                           
  1387                           ; 16 bytes @ 0x2B
  1388  00002C                     	ds	8
  1389  000034                     sync_window@res:
  1390                           	opt stack 0
  1391                           
  1392                           ; 1 bytes @ 0x33
  1393  000034                     	ds	1
  1394  000035                     sync_window@nf:
  1395                           	opt stack 0
  1396                           
  1397                           ; 2 bytes @ 0x34
  1398  000035                     	ds	2
  1399  000037                     sync_window@wsect:
  1400                           	opt stack 0
  1401                           
  1402                           ; 4 bytes @ 0x36
  1403  000037                     	ds	4
  1404  00003B                     move_window@fs:
  1405                           	opt stack 0
  1406                           
  1407                           ; 2 bytes @ 0x3A
  1408  00003B                     	ds	1
  1409  00003C                     disk_ioctl@drv:
  1410                           	opt stack 0
  1411                           
  1412                           ; 1 bytes @ 0x3B
  1413  00003C                     	ds	1
  1414  00003D                     disk_ioctl@n:
  1415                           	opt stack 0
  1416  00003D                     move_window@sector:
  1417                           	opt stack 0
  1418                           
  1419                           ; 4 bytes @ 0x3C
  1420  00003D                     	ds	1
  1421  00003E                     disk_ioctl@cs:
  1422                           	opt stack 0
  1423                           
  1424                           ; 4 bytes @ 0x3D
  1425  00003E                     	ds	3
  1426  000041                     ??_move_window:
  1427                           
  1428                           ; 0 bytes @ 0x40
  1429  000041                     	ds	1
  1430  000042                     disk_ioctl@res:
  1431                           	opt stack 0
  1432                           
  1433                           ; 1 bytes @ 0x41
  1434  000042                     	ds	1
  1435  000043                     sync_fs@fs:
  1436                           	opt stack 0
  1437                           
  1438                           ; 2 bytes @ 0x42
  1439  000043                     	ds	2
  1440  000045                     ??_sync_fs:
  1441  000045                     move_window@res:
  1442                           	opt stack 0
  1443                           
  1444                           ; 1 bytes @ 0x44
  1445  000045                     	ds	1
  1446  000046                     ?_get_fat:
  1447                           	opt stack 0
  1448  000046                     get_fat@fs:
  1449                           	opt stack 0
  1450  000046                     put_fat@fs:
  1451                           	opt stack 0
  1452  000046                     check_fs@fs:
  1453                           	opt stack 0
  1454                           
  1455                           ; 2 bytes @ 0x45
  1456  000046                     	ds	2
  1457  000048                     get_fat@clst:
  1458                           	opt stack 0
  1459  000048                     put_fat@clst:
  1460                           	opt stack 0
  1461  000048                     check_fs@sect:
  1462                           	opt stack 0
  1463                           
  1464                           ; 4 bytes @ 0x47
  1465  000048                     	ds	4
  1466  00004C                     ??_get_fat:
  1467  00004C                     ??_check_fs:
  1468  00004C                     put_fat@val:
  1469                           	opt stack 0
  1470                           
  1471                           ; 4 bytes @ 0x4B
  1472  00004C                     	ds	1
  1473  00004D                     sync_fs@res:
  1474                           	opt stack 0
  1475                           
  1476                           ; 1 bytes @ 0x4C
  1477  00004D                     	ds	1
  1478  00004E                     f_sync@fp:
  1479                           	opt stack 0
  1480                           
  1481                           ; 2 bytes @ 0x4D
  1482  00004E                     	ds	2
  1483  000050                     ??_put_fat:
  1484  000050                     ??_f_sync:
  1485                           
  1486                           ; 0 bytes @ 0x4F
  1487  000050                     	ds	4
  1488  000054                     f_sync@res:
  1489                           	opt stack 0
  1490                           
  1491                           ; 1 bytes @ 0x53
  1492  000054                     	ds	1
  1493  000055                     f_sync@tm:
  1494                           	opt stack 0
  1495                           
  1496                           ; 4 bytes @ 0x54
  1497  000055                     	ds	4
  1498  000059                     f_sync@dir:
  1499                           	opt stack 0
  1500                           
  1501                           ; 2 bytes @ 0x58
  1502  000059                     	ds	2
  1503  00005B                     f_close@fp:
  1504                           	opt stack 0
  1505                           
  1506                           ; 2 bytes @ 0x5A
  1507  00005B                     	ds	2
  1508  00005D                     f_close@res:
  1509                           	opt stack 0
  1510                           
  1511                           ; 1 bytes @ 0x5C
  1512  00005D                     	ds	9
  1513  000066                     _get_fat$524:
  1514                           	opt stack 0
  1515                           
  1516                           ; 2 bytes @ 0x65
  1517  000066                     	ds	2
  1518  000068                     get_fat@val:
  1519                           	opt stack 0
  1520                           
  1521                           ; 4 bytes @ 0x67
  1522  000068                     	ds	2
  1523  00006A                     find_volume@rfs:
  1524                           	opt stack 0
  1525                           
  1526                           ; 2 bytes @ 0x69
  1527  00006A                     	ds	2
  1528  00006C                     get_fat@wc:
  1529                           	opt stack 0
  1530  00006C                     find_volume@path:
  1531                           	opt stack 0
  1532                           
  1533                           ; 2 bytes @ 0x6B
  1534  00006C                     	ds	2
  1535  00006E                     find_volume@wmode:
  1536                           	opt stack 0
  1537  00006E                     get_fat@bc:
  1538                           	opt stack 0
  1539  00006E                     _put_fat$551:
  1540                           	opt stack 0
  1541                           
  1542                           ; 2 bytes @ 0x6D
  1543  00006E                     	ds	1
  1544  00006F                     f_mount@fs:
  1545                           	opt stack 0
  1546                           
  1547                           ; 2 bytes @ 0x6E
  1548  00006F                     	ds	1
  1549  000070                     get_fat@p:
  1550                           	opt stack 0
  1551  000070                     _put_fat$552:
  1552                           	opt stack 0
  1553                           
  1554                           ; 2 bytes @ 0x6F
  1555  000070                     	ds	1
  1556  000071                     f_mount@path:
  1557                           	opt stack 0
  1558                           
  1559                           ; 2 bytes @ 0x70
  1560  000071                     	ds	1
  1561  000072                     put_fat@bc:
  1562                           	opt stack 0
  1563  000072                     dir_sdi@dp:
  1564                           	opt stack 0
  1565                           
  1566                           ; 2 bytes @ 0x71
  1567  000072                     	ds	1
  1568  000073                     f_mount@opt:
  1569                           	opt stack 0
  1570                           
  1571                           ; 1 bytes @ 0x72
  1572  000073                     	ds	1
  1573  000074                     ??_f_mount:
  1574  000074                     put_fat@res:
  1575                           	opt stack 0
  1576  000074                     dir_sdi@idx:
  1577                           	opt stack 0
  1578                           
  1579                           ; 2 bytes @ 0x73
  1580  000074                     	ds	1
  1581  000075                     put_fat@p:
  1582                           	opt stack 0
  1583                           
  1584                           ; 2 bytes @ 0x74
  1585  000075                     	ds	1
  1586  000076                     ??_dir_sdi:
  1587  000076                     f_mount@res:
  1588                           	opt stack 0
  1589                           
  1590                           ; 1 bytes @ 0x75
  1591  000076                     	ds	1
  1592  000077                     ?_create_chain:
  1593                           	opt stack 0
  1594  000077                     remove_chain@fs:
  1595                           	opt stack 0
  1596  000077                     create_chain@fs:
  1597                           	opt stack 0
  1598  000077                     f_mount@cfs:
  1599                           	opt stack 0
  1600                           
  1601                           ; 2 bytes @ 0x76
  1602  000077                     	ds	2
  1603  000079                     f_mount@vol:
  1604                           	opt stack 0
  1605  000079                     remove_chain@clst:
  1606                           	opt stack 0
  1607  000079                     create_chain@clst:
  1608                           	opt stack 0
  1609                           
  1610                           ; 4 bytes @ 0x78
  1611  000079                     	ds	2
  1612  00007B                     f_mount@rp:
  1613                           	opt stack 0
  1614                           
  1615                           ; 2 bytes @ 0x7A
  1616  00007B                     	ds	2
  1617  00007D                     ??_dir_alloc:
  1618  00007D                     dir_find@dp:
  1619                           	opt stack 0
  1620                           
  1621                           ; 2 bytes @ 0x7C
  1622  00007D                     	ds	2
  1623  00007F                     ??_dir_find:
  1624  00007F                     dir_register@res:
  1625                           	opt stack 0
  1626                           
  1627                           ; 1 bytes @ 0x7E
  1628  00007F                     	ds	1
  1629  000080                     tblptru	equ	0xFF8
  1630                           tblptrh	equ	0xFF7
  1631                           tblptrl	equ	0xFF6
  1632                           tablat	equ	0xFF5
  1633                           postinc0	equ	0xFEE
  1634                           wreg	equ	0xFE8
  1635                           postdec1	equ	0xFE5
  1636                           fsr1h	equ	0xFE2
  1637                           fsr1l	equ	0xFE1
  1638                           
  1639                           ; 0 bytes @ 0x7F
  1640 ;;
  1641 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1642 ;;
  1643 ;; *************** function _main *****************
  1644 ;; Defined at:
  1645 ;;		line 43 in file "main.c"
  1646 ;; Parameters:    Size  Location     Type
  1647 ;;  argc            2  115[BANK0 ] int 
  1648 ;;  argv            3  117[BANK0 ] PTR PTR unsigned char 
  1649 ;; Auto vars:     Size  Location     Type
  1650 ;;  mytext         16   48[BANK1 ] unsigned char [16]
  1651 ;;  ptr             3    0        PTR unsigned char 
  1652 ;;  ret             2   69[BANK1 ] unsigned int 
  1653 ;;  cnt             2   66[BANK1 ] unsigned int 
  1654 ;;  timeout         2   64[BANK1 ] unsigned int 
  1655 ;;  chck            1   71[BANK1 ] unsigned char 
  1656 ;;  status          1   68[BANK1 ] unsigned char 
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  2  115[BANK0 ] int 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  1666 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1667 ;;      Locals:         0       0      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1669 ;;      Totals:         0       5      24       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  1670 ;;Total ram usage:       29 bytes
  1671 ;; Hardware stack levels required when called:   13
  1672 ;; This function calls:
  1673 ;;		_LCD_cur
  1674 ;;		_LCD_func
  1675 ;;		_LCD_init
  1676 ;;		_LCD_string
  1677 ;;		_delaymain
  1678 ;;		_f_close
  1679 ;;		_f_mount
  1680 ;;		_f_open
  1681 ;;		_f_write
  1682 ;;		_init
  1683 ;; This function is called by:
  1684 ;;		Startup code after reset
  1685 ;; This function uses a non-reentrant model
  1686 ;;
  1687                           
  1688                           	psect	text0
  1689  006F78                     __ptext0:
  1690                           	opt stack 0
  1691  006F78                     _main:
  1692                           	opt stack 18
  1693                           
  1694                           ;main.c: 44: unsigned char mytext[16] = "hello world";
  1695                           
  1696                           ;incstack = 0
  1697  006F78  EE21  F08E         	lfsr	2,main@F3718
  1698  006F7C  EE11  F030         	lfsr	1,main@mytext
  1699  006F80  0E10               	movlw	16
  1700  006F82                     u12541:
  1701  006F82  CFDE FFE6          	movff	postinc2,postinc1
  1702  006F86  2EE8               	decfsz	wreg,f,c
  1703  006F88  D7FC               	goto	u12541
  1704                           
  1705                           ;main.c: 46: unsigned char status =1;
  1706  006F8A  0E01               	movlw	1
  1707  006F8C  0101               	movlb	1	; () banked
  1708  006F8E  6F44               	movwf	main@status& (0+255),b
  1709                           
  1710                           ; BSR set to: 1
  1711                           ;main.c: 47: unsigned int timeout = 0;
  1712  006F90  0E00               	movlw	0
  1713  006F92  0101               	movlb	1	; () banked
  1714  006F94  6F41               	movwf	(main@timeout+1)& (0+255),b
  1715  006F96  0E00               	movlw	0
  1716  006F98  0101               	movlb	1	; () banked
  1717  006F9A  6F40               	movwf	main@timeout& (0+255),b
  1718                           
  1719                           ; BSR set to: 1
  1720                           ;main.c: 48: unsigned int cnt = 32;
  1721  006F9C  0E00               	movlw	0
  1722  006F9E  0101               	movlb	1	; () banked
  1723  006FA0  6F43               	movwf	(main@cnt+1)& (0+255),b
  1724  006FA2  0E20               	movlw	32
  1725  006FA4  0101               	movlb	1	; () banked
  1726  006FA6  6F42               	movwf	main@cnt& (0+255),b
  1727                           
  1728                           ; BSR set to: 1
  1729                           ;main.c: 49: char *ptr;
  1730                           ;main.c: 50: unsigned int ret;
  1731                           ;main.c: 51: unsigned char chck;
  1732                           ;main.c: 53: init();
  1733  006FA8  EC69  F028         	call	_init	;wreg free
  1734                           
  1735                           ;main.c: 54: LCD_init();
  1736  006FAC  EC34  F029         	call	_LCD_init	;wreg free
  1737                           
  1738                           ;main.c: 56: LCD_string((unsigned char *)"SD/MMC card OK! ");
  1739  006FB0  0EBF               	movlw	high STR_1
  1740  006FB2  6E0A               	movwf	LCD_string@ptr+1,c
  1741  006FB4  0E37               	movlw	low STR_1
  1742  006FB6  6E09               	movwf	LCD_string@ptr,c
  1743  006FB8  ECE3  F028         	call	_LCD_string	;wreg free
  1744                           
  1745                           ;main.c: 57: delaymain(100000); delaymain(100000);
  1746  006FBC  0EA0               	movlw	160
  1747  006FBE  6E01               	movwf	delaymain@x,c
  1748  006FC0  0E86               	movlw	134
  1749  006FC2  6E02               	movwf	delaymain@x+1,c
  1750  006FC4  0E01               	movlw	1
  1751  006FC6  6E03               	movwf	delaymain@x+2,c
  1752  006FC8  0E00               	movlw	0
  1753  006FCA  6E04               	movwf	delaymain@x+3,c
  1754  006FCC  ECBE  F028         	call	_delaymain	;wreg free
  1755  006FD0  0EA0               	movlw	160
  1756  006FD2  6E01               	movwf	delaymain@x,c
  1757  006FD4  0E86               	movlw	134
  1758  006FD6  6E02               	movwf	delaymain@x+1,c
  1759  006FD8  0E01               	movlw	1
  1760  006FDA  6E03               	movwf	delaymain@x+2,c
  1761  006FDC  0E00               	movlw	0
  1762  006FDE  6E04               	movwf	delaymain@x+3,c
  1763  006FE0  ECBE  F028         	call	_delaymain	;wreg free
  1764                           
  1765                           ;main.c: 59: LCD_string((unsigned char *)"Wait... Wait... ");
  1766  006FE4  0EBF               	movlw	high STR_2
  1767  006FE6  6E0A               	movwf	LCD_string@ptr+1,c
  1768  006FE8  0E48               	movlw	low STR_2
  1769  006FEA  6E09               	movwf	LCD_string@ptr,c
  1770  006FEC  ECE3  F028         	call	_LCD_string	;wreg free
  1771                           
  1772                           ;main.c: 60: delaymain(100000); delaymain(100000);
  1773  006FF0  0EA0               	movlw	160
  1774  006FF2  6E01               	movwf	delaymain@x,c
  1775  006FF4  0E86               	movlw	134
  1776  006FF6  6E02               	movwf	delaymain@x+1,c
  1777  006FF8  0E01               	movlw	1
  1778  006FFA  6E03               	movwf	delaymain@x+2,c
  1779  006FFC  0E00               	movlw	0
  1780  006FFE  6E04               	movwf	delaymain@x+3,c
  1781  007000  ECBE  F028         	call	_delaymain	;wreg free
  1782  007004  0EA0               	movlw	160
  1783  007006  6E01               	movwf	delaymain@x,c
  1784  007008  0E86               	movlw	134
  1785  00700A  6E02               	movwf	delaymain@x+1,c
  1786  00700C  0E01               	movlw	1
  1787  00700E  6E03               	movwf	delaymain@x+2,c
  1788  007010  0E00               	movlw	0
  1789  007012  6E04               	movwf	delaymain@x+3,c
  1790  007014  ECBE  F028         	call	_delaymain	;wreg free
  1791                           
  1792                           ;main.c: 62: chck = f_mount(&FatFs, "", 1);
  1793  007018  0E0D               	movlw	high _FatFs
  1794  00701A  6E70               	movwf	f_mount@fs+1,c
  1795  00701C  0E4E               	movlw	low _FatFs
  1796  00701E  6E6F               	movwf	f_mount@fs,c
  1797  007020  0EBF               	movlw	high (STR_7+13)
  1798  007022  6E72               	movwf	f_mount@path+1,c
  1799  007024  0EC5               	movlw	low (STR_7+13)
  1800  007026  6E71               	movwf	f_mount@path,c
  1801  007028  0E01               	movlw	1
  1802  00702A  6E73               	movwf	f_mount@opt,c
  1803  00702C  EC63  F030         	call	_f_mount	;wreg free
  1804  007030  0101               	movlb	1	; () banked
  1805  007032  6F47               	movwf	main@chck& (0+255),b
  1806                           
  1807                           ; BSR set to: 1
  1808                           ;main.c: 63: if( chck != FR_OK){
  1809  007034  0101               	movlb	1	; () banked
  1810  007036  5147               	movf	main@chck& (0+255),w,b
  1811  007038  B4D8               	btfsc	status,2,c
  1812  00703A  D026               	goto	l9269
  1813                           
  1814                           ; BSR set to: 1
  1815                           ;main.c: 64: LCD_cur(1,1);
  1816  00703C  0E01               	movlw	1
  1817  00703E  6E09               	movwf	LCD_cur@col,c
  1818  007040  0E01               	movlw	1
  1819  007042  EC8A  F028         	call	_LCD_cur
  1820                           
  1821                           ;main.c: 65: LCD_string("mount Fails    ");
  1822  007046  0EBF               	movlw	high STR_4
  1823  007048  6E0A               	movwf	LCD_string@ptr+1,c
  1824  00704A  0E89               	movlw	low STR_4
  1825  00704C  6E09               	movwf	LCD_string@ptr,c
  1826  00704E  ECE3  F028         	call	_LCD_string	;wreg free
  1827                           
  1828                           ;main.c: 66: LCD_func(chck + '0',1);
  1829  007052  0E01               	movlw	1
  1830  007054  6E03               	movwf	LCD_func@cmd,c
  1831  007056  0101               	movlb	1	; () banked
  1832  007058  5147               	movf	main@chck& (0+255),w,b
  1833  00705A  0F30               	addlw	48
  1834  00705C  ECA1  F029         	call	_LCD_func
  1835                           
  1836                           ;main.c: 67: delaymain(100000); delaymain(100000);
  1837  007060  0EA0               	movlw	160
  1838  007062  6E01               	movwf	delaymain@x,c
  1839  007064  0E86               	movlw	134
  1840  007066  6E02               	movwf	delaymain@x+1,c
  1841  007068  0E01               	movlw	1
  1842  00706A  6E03               	movwf	delaymain@x+2,c
  1843  00706C  0E00               	movlw	0
  1844  00706E  6E04               	movwf	delaymain@x+3,c
  1845  007070  ECBE  F028         	call	_delaymain	;wreg free
  1846  007074  0EA0               	movlw	160
  1847  007076  6E01               	movwf	delaymain@x,c
  1848  007078  0E86               	movlw	134
  1849  00707A  6E02               	movwf	delaymain@x+1,c
  1850  00707C  0E01               	movlw	1
  1851  00707E  6E03               	movwf	delaymain@x+2,c
  1852  007080  0E00               	movlw	0
  1853  007082  6E04               	movwf	delaymain@x+3,c
  1854  007084  ECBE  F028         	call	_delaymain	;wreg free
  1855  007088                     l9269:
  1856                           
  1857                           ;main.c: 68: }
  1858                           ;main.c: 70: chck = f_open(&fp,"text.txt",0x02 | 0x08);
  1859  007088  0101               	movlb	1	; () banked
  1860  00708A  0E01               	movlw	high _fp
  1861  00708C  0100               	movlb	0	; () banked
  1862  00708E  6FD5               	movwf	(f_open@fp+1)& (0+255),b
  1863  007090  0101               	movlb	1	; () banked
  1864  007092  0E6C               	movlw	low _fp
  1865  007094  0100               	movlb	0	; () banked
  1866  007096  6FD4               	movwf	f_open@fp& (0+255),b
  1867  007098  0EBF               	movlw	high STR_5
  1868  00709A  0100               	movlb	0	; () banked
  1869  00709C  6FD7               	movwf	(f_open@path+1)& (0+255),b
  1870  00709E  0ED2               	movlw	low STR_5
  1871  0070A0  0100               	movlb	0	; () banked
  1872  0070A2  6FD6               	movwf	f_open@path& (0+255),b
  1873  0070A4  0E0A               	movlw	10
  1874  0070A6  0100               	movlb	0	; () banked
  1875  0070A8  6FD8               	movwf	f_open@mode& (0+255),b
  1876  0070AA  EC1F  F04A         	call	_f_open	;wreg free
  1877  0070AE  0101               	movlb	1	; () banked
  1878  0070B0  6F47               	movwf	main@chck& (0+255),b
  1879                           
  1880                           ; BSR set to: 1
  1881                           ;main.c: 71: if( chck != FR_OK){
  1882  0070B2  0101               	movlb	1	; () banked
  1883  0070B4  5147               	movf	main@chck& (0+255),w,b
  1884  0070B6  B4D8               	btfsc	status,2,c
  1885  0070B8  D026               	goto	l9283
  1886                           
  1887                           ; BSR set to: 1
  1888                           ;main.c: 72: LCD_cur(1,1);
  1889  0070BA  0E01               	movlw	1
  1890  0070BC  6E09               	movwf	LCD_cur@col,c
  1891  0070BE  0E01               	movlw	1
  1892  0070C0  EC8A  F028         	call	_LCD_cur
  1893                           
  1894                           ;main.c: 73: LCD_string("Open Fails     ");
  1895  0070C4  0EBF               	movlw	high STR_6
  1896  0070C6  6E0A               	movwf	LCD_string@ptr+1,c
  1897  0070C8  0E69               	movlw	low STR_6
  1898  0070CA  6E09               	movwf	LCD_string@ptr,c
  1899  0070CC  ECE3  F028         	call	_LCD_string	;wreg free
  1900                           
  1901                           ;main.c: 74: LCD_func(chck + '0',1);
  1902  0070D0  0E01               	movlw	1
  1903  0070D2  6E03               	movwf	LCD_func@cmd,c
  1904  0070D4  0101               	movlb	1	; () banked
  1905  0070D6  5147               	movf	main@chck& (0+255),w,b
  1906  0070D8  0F30               	addlw	48
  1907  0070DA  ECA1  F029         	call	_LCD_func
  1908                           
  1909                           ;main.c: 75: delaymain(100000); delaymain(100000);
  1910  0070DE  0EA0               	movlw	160
  1911  0070E0  6E01               	movwf	delaymain@x,c
  1912  0070E2  0E86               	movlw	134
  1913  0070E4  6E02               	movwf	delaymain@x+1,c
  1914  0070E6  0E01               	movlw	1
  1915  0070E8  6E03               	movwf	delaymain@x+2,c
  1916  0070EA  0E00               	movlw	0
  1917  0070EC  6E04               	movwf	delaymain@x+3,c
  1918  0070EE  ECBE  F028         	call	_delaymain	;wreg free
  1919  0070F2  0EA0               	movlw	160
  1920  0070F4  6E01               	movwf	delaymain@x,c
  1921  0070F6  0E86               	movlw	134
  1922  0070F8  6E02               	movwf	delaymain@x+1,c
  1923  0070FA  0E01               	movlw	1
  1924  0070FC  6E03               	movwf	delaymain@x+2,c
  1925  0070FE  0E00               	movlw	0
  1926  007100  6E04               	movwf	delaymain@x+3,c
  1927  007102  ECBE  F028         	call	_delaymain	;wreg free
  1928  007106                     l9283:
  1929                           
  1930                           ;main.c: 76: }
  1931                           ;main.c: 78: chck = f_write (&fp,"Ankit Rawat\r\n",13, &ret);
  1932  007106  0101               	movlb	1	; () banked
  1933  007108  0E01               	movlw	high _fp
  1934  00710A  0100               	movlb	0	; () banked
  1935  00710C  6F92               	movwf	(f_write@fp+1)& (0+255),b
  1936  00710E  0101               	movlb	1	; () banked
  1937  007110  0E6C               	movlw	low _fp
  1938  007112  0100               	movlb	0	; () banked
  1939  007114  6F91               	movwf	f_write@fp& (0+255),b
  1940  007116  0EBF               	movlw	high STR_7
  1941  007118  0100               	movlb	0	; () banked
  1942  00711A  6F94               	movwf	(f_write@buff+1)& (0+255),b
  1943  00711C  0EB8               	movlw	low STR_7
  1944  00711E  0100               	movlb	0	; () banked
  1945  007120  6F93               	movwf	f_write@buff& (0+255),b
  1946  007122  0E00               	movlw	0
  1947  007124  0100               	movlb	0	; () banked
  1948  007126  6F96               	movwf	(f_write@btw+1)& (0+255),b
  1949  007128  0E0D               	movlw	13
  1950  00712A  0100               	movlb	0	; () banked
  1951  00712C  6F95               	movwf	f_write@btw& (0+255),b
  1952  00712E  0101               	movlb	1	; () banked
  1953  007130  0E01               	movlw	high main@ret
  1954  007132  0100               	movlb	0	; () banked
  1955  007134  6F98               	movwf	(f_write@bw+1)& (0+255),b
  1956  007136  0101               	movlb	1	; () banked
  1957  007138  0E45               	movlw	low main@ret
  1958  00713A  0100               	movlb	0	; () banked
  1959  00713C  6F97               	movwf	f_write@bw& (0+255),b
  1960  00713E  ECDE  F04D         	call	_f_write	;wreg free
  1961  007142  0101               	movlb	1	; () banked
  1962  007144  6F47               	movwf	main@chck& (0+255),b
  1963                           
  1964                           ; BSR set to: 1
  1965                           ;main.c: 79: if( chck != FR_OK){
  1966  007146  0101               	movlb	1	; () banked
  1967  007148  5147               	movf	main@chck& (0+255),w,b
  1968  00714A  B4D8               	btfsc	status,2,c
  1969  00714C  D026               	goto	l9297
  1970                           
  1971                           ; BSR set to: 1
  1972                           ;main.c: 80: LCD_cur(1,1);
  1973  00714E  0E01               	movlw	1
  1974  007150  6E09               	movwf	LCD_cur@col,c
  1975  007152  0E01               	movlw	1
  1976  007154  EC8A  F028         	call	_LCD_cur
  1977                           
  1978                           ;main.c: 81: LCD_string("Written Fails  ");
  1979  007158  0EBF               	movlw	high STR_8
  1980  00715A  6E0A               	movwf	LCD_string@ptr+1,c
  1981  00715C  0E99               	movlw	low STR_8
  1982  00715E  6E09               	movwf	LCD_string@ptr,c
  1983  007160  ECE3  F028         	call	_LCD_string	;wreg free
  1984                           
  1985                           ;main.c: 82: LCD_func(chck + '0',1);
  1986  007164  0E01               	movlw	1
  1987  007166  6E03               	movwf	LCD_func@cmd,c
  1988  007168  0101               	movlb	1	; () banked
  1989  00716A  5147               	movf	main@chck& (0+255),w,b
  1990  00716C  0F30               	addlw	48
  1991  00716E  ECA1  F029         	call	_LCD_func
  1992                           
  1993                           ;main.c: 83: delaymain(100000); delaymain(100000);
  1994  007172  0EA0               	movlw	160
  1995  007174  6E01               	movwf	delaymain@x,c
  1996  007176  0E86               	movlw	134
  1997  007178  6E02               	movwf	delaymain@x+1,c
  1998  00717A  0E01               	movlw	1
  1999  00717C  6E03               	movwf	delaymain@x+2,c
  2000  00717E  0E00               	movlw	0
  2001  007180  6E04               	movwf	delaymain@x+3,c
  2002  007182  ECBE  F028         	call	_delaymain	;wreg free
  2003  007186  0EA0               	movlw	160
  2004  007188  6E01               	movwf	delaymain@x,c
  2005  00718A  0E86               	movlw	134
  2006  00718C  6E02               	movwf	delaymain@x+1,c
  2007  00718E  0E01               	movlw	1
  2008  007190  6E03               	movwf	delaymain@x+2,c
  2009  007192  0E00               	movlw	0
  2010  007194  6E04               	movwf	delaymain@x+3,c
  2011  007196  ECBE  F028         	call	_delaymain	;wreg free
  2012  00719A                     l9297:
  2013                           
  2014                           ;main.c: 84: }
  2015                           ;main.c: 87: chck = f_close(&fp);
  2016  00719A  0101               	movlb	1	; () banked
  2017  00719C  0E01               	movlw	high _fp
  2018  00719E  6E5C               	movwf	f_close@fp+1,c
  2019  0071A0  0101               	movlb	1	; () banked
  2020  0071A2  0E6C               	movlw	low _fp
  2021  0071A4  6E5B               	movwf	f_close@fp,c
  2022  0071A6  EC18  F029         	call	_f_close	;wreg free
  2023  0071AA  0101               	movlb	1	; () banked
  2024  0071AC  6F47               	movwf	main@chck& (0+255),b
  2025                           
  2026                           ; BSR set to: 1
  2027                           ;main.c: 88: if( chck != FR_OK){
  2028  0071AE  0101               	movlb	1	; () banked
  2029  0071B0  5147               	movf	main@chck& (0+255),w,b
  2030  0071B2  B4D8               	btfsc	status,2,c
  2031  0071B4  D026               	goto	l78
  2032                           
  2033                           ; BSR set to: 1
  2034                           ;main.c: 89: LCD_cur(1,1);
  2035  0071B6  0E01               	movlw	1
  2036  0071B8  6E09               	movwf	LCD_cur@col,c
  2037  0071BA  0E01               	movlw	1
  2038  0071BC  EC8A  F028         	call	_LCD_cur
  2039                           
  2040                           ;main.c: 90: LCD_string("Close Fails    ");
  2041  0071C0  0EBF               	movlw	high STR_9
  2042  0071C2  6E0A               	movwf	LCD_string@ptr+1,c
  2043  0071C4  0E79               	movlw	low STR_9
  2044  0071C6  6E09               	movwf	LCD_string@ptr,c
  2045  0071C8  ECE3  F028         	call	_LCD_string	;wreg free
  2046                           
  2047                           ;main.c: 91: LCD_func(chck + '0',1);
  2048  0071CC  0E01               	movlw	1
  2049  0071CE  6E03               	movwf	LCD_func@cmd,c
  2050  0071D0  0101               	movlb	1	; () banked
  2051  0071D2  5147               	movf	main@chck& (0+255),w,b
  2052  0071D4  0F30               	addlw	48
  2053  0071D6  ECA1  F029         	call	_LCD_func
  2054                           
  2055                           ;main.c: 92: delaymain(100000); delaymain(100000);
  2056  0071DA  0EA0               	movlw	160
  2057  0071DC  6E01               	movwf	delaymain@x,c
  2058  0071DE  0E86               	movlw	134
  2059  0071E0  6E02               	movwf	delaymain@x+1,c
  2060  0071E2  0E01               	movlw	1
  2061  0071E4  6E03               	movwf	delaymain@x+2,c
  2062  0071E6  0E00               	movlw	0
  2063  0071E8  6E04               	movwf	delaymain@x+3,c
  2064  0071EA  ECBE  F028         	call	_delaymain	;wreg free
  2065  0071EE  0EA0               	movlw	160
  2066  0071F0  6E01               	movwf	delaymain@x,c
  2067  0071F2  0E86               	movlw	134
  2068  0071F4  6E02               	movwf	delaymain@x+1,c
  2069  0071F6  0E01               	movlw	1
  2070  0071F8  6E03               	movwf	delaymain@x+2,c
  2071  0071FA  0E00               	movlw	0
  2072  0071FC  6E04               	movwf	delaymain@x+3,c
  2073  0071FE  ECBE  F028         	call	_delaymain	;wreg free
  2074  007202                     l78:
  2075  007202  D7FF               	goto	l78
  2076  007204                     __end_of_main:
  2077                           	opt stack 0
  2078                           tblptru	equ	0xFF8
  2079                           tblptrh	equ	0xFF7
  2080                           tblptrl	equ	0xFF6
  2081                           tablat	equ	0xFF5
  2082                           postinc0	equ	0xFEE
  2083                           wreg	equ	0xFE8
  2084                           postinc1	equ	0xFE6
  2085                           postdec1	equ	0xFE5
  2086                           fsr1h	equ	0xFE2
  2087                           fsr1l	equ	0xFE1
  2088                           postinc2	equ	0xFDE
  2089                           status	equ	0xFD8
  2090                           
  2091 ;; *************** function _init *****************
  2092 ;; Defined at:
  2093 ;;		line 34 in file "main.c"
  2094 ;; Parameters:    Size  Location     Type
  2095 ;;		None
  2096 ;; Auto vars:     Size  Location     Type
  2097 ;;		None
  2098 ;; Return value:  Size  Location     Type
  2099 ;;		None               void
  2100 ;; Registers used:
  2101 ;;		wreg, status,2
  2102 ;; Tracked objects:
  2103 ;;		On entry : 0/0
  2104 ;;		On exit  : 0/0
  2105 ;;		Unchanged: 0/0
  2106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2107 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2108 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2109 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2110 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2111 ;;Total ram usage:        0 bytes
  2112 ;; Hardware stack levels used:    1
  2113 ;; This function calls:
  2114 ;;		Nothing
  2115 ;; This function is called by:
  2116 ;;		_main
  2117 ;; This function uses a non-reentrant model
  2118 ;;
  2119                           
  2120                           	psect	text1
  2121  0050D2                     __ptext1:
  2122                           	opt stack 0
  2123  0050D2                     _init:
  2124                           	opt stack 30
  2125                           
  2126                           ;main.c: 36: TRISC = 0x10;
  2127                           
  2128                           ;incstack = 0
  2129  0050D2  0E10               	movlw	16
  2130  0050D4  6E94               	movwf	3988,c	;volatile
  2131                           
  2132                           ;main.c: 37: TRISD = 0xC0;
  2133  0050D6  0EC0               	movlw	192
  2134  0050D8  6E95               	movwf	3989,c	;volatile
  2135                           
  2136                           ;main.c: 38: TRISB = 0x20;
  2137  0050DA  0E20               	movlw	32
  2138  0050DC  6E93               	movwf	3987,c	;volatile
  2139  0050DE  0012               	return	
  2140  0050E0                     __end_of_init:
  2141                           	opt stack 0
  2142                           tblptru	equ	0xFF8
  2143                           tblptrh	equ	0xFF7
  2144                           tblptrl	equ	0xFF6
  2145                           tablat	equ	0xFF5
  2146                           postinc0	equ	0xFEE
  2147                           wreg	equ	0xFE8
  2148                           postinc1	equ	0xFE6
  2149                           postdec1	equ	0xFE5
  2150                           fsr1h	equ	0xFE2
  2151                           fsr1l	equ	0xFE1
  2152                           postinc2	equ	0xFDE
  2153                           status	equ	0xFD8
  2154                           
  2155 ;; *************** function _f_write *****************
  2156 ;; Defined at:
  2157 ;;		line 2779 in file "ff.c"
  2158 ;; Parameters:    Size  Location     Type
  2159 ;;  fp              2   17[BANK0 ] PTR struct .
  2160 ;;		 -> fp(34), 
  2161 ;;  buff            2   19[BANK0 ] PTR const void 
  2162 ;;		 -> pb.buf(64), f_printf@pb(71), pb.buf(64), f_puts@pb(71), 
  2163 ;;		 -> pb.buf(64), f_putc@pb(71), STR_7(14), 
  2164 ;;  btw             2   21[BANK0 ] unsigned int 
  2165 ;;  bw              2   23[BANK0 ] PTR unsigned int 
  2166 ;;		 -> f_printf@nw(2), f_puts@nw(2), f_putc@nw(2), putc_bfd@bw(2), 
  2167 ;;		 -> main@ret(2), 
  2168 ;; Auto vars:     Size  Location     Type
  2169 ;;  clst            4   53[BANK0 ] unsigned long 
  2170 ;;  sect            4   47[BANK0 ] unsigned long 
  2171 ;;  wcnt            2   51[BANK0 ] unsigned int 
  2172 ;;  cc              2   45[BANK0 ] unsigned int 
  2173 ;;  wbuff           2   42[BANK0 ] PTR const unsigned char 
  2174 ;;		 -> pb.buf(64), f_printf@pb(71), pb.buf(64), f_puts@pb(71), 
  2175 ;;		 -> pb.buf(64), f_putc@pb(71), STR_7(14), 
  2176 ;;  csect           1   44[BANK0 ] unsigned char 
  2177 ;;  res             1   41[BANK0 ] enum E67
  2178 ;; Return value:  Size  Location     Type
  2179 ;;                  1    wreg      enum E3569
  2180 ;; Registers used:
  2181 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2182 ;; Tracked objects:
  2183 ;;		On entry : 0/0
  2184 ;;		On exit  : 0/0
  2185 ;;		Unchanged: 0/0
  2186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  2187 ;;      Params:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2188 ;;      Locals:         0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2189 ;;      Temps:          0      16       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2190 ;;      Totals:         0      40       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  2191 ;;Total ram usage:       40 bytes
  2192 ;; Hardware stack levels used:    1
  2193 ;; Hardware stack levels required when called:    9
  2194 ;; This function calls:
  2195 ;;		_clmt_clust
  2196 ;;		_clust2sect
  2197 ;;		_create_chain
  2198 ;;		_disk_write
  2199 ;;		_mem_cpy
  2200 ;;		_move_window
  2201 ;;		_sync_window
  2202 ;;		_validate
  2203 ;; This function is called by:
  2204 ;;		_main
  2205 ;;		_putc_bfd
  2206 ;;		_f_putc
  2207 ;;		_f_puts
  2208 ;;		_f_printf
  2209 ;; This function uses a non-reentrant model
  2210 ;;
  2211                           
  2212                           	psect	text2
  2213  009BBC                     __ptext2:
  2214                           	opt stack 0
  2215  009BBC                     _f_write:
  2216                           	opt stack 21
  2217                           
  2218                           ;ff.c: 2786: FRESULT res;
  2219                           ;ff.c: 2787: DWORD clst, sect;
  2220                           ;ff.c: 2788: UINT wcnt, cc;
  2221                           ;ff.c: 2789: const BYTE *wbuff = (const BYTE*)buff;
  2222                           
  2223                           ;incstack = 0
  2224  009BBC  0100               	movlb	0	; () banked
  2225  009BBE  C094  F0AB         	movff	f_write@buff+1,f_write@wbuff+1
  2226  009BC2  0100               	movlb	0	; () banked
  2227  009BC4  C093  F0AA         	movff	f_write@buff,f_write@wbuff
  2228                           
  2229                           ; BSR set to: 0
  2230                           ;ff.c: 2790: BYTE csect;
  2231                           ;ff.c: 2793: *bw = 0;
  2232  009BC8  C097  FFD9         	movff	f_write@bw,fsr2l
  2233  009BCC  C098  FFDA         	movff	f_write@bw+1,fsr2h
  2234  009BD0  0E00               	movlw	0
  2235  009BD2  6EDE               	movwf	postinc2,c
  2236  009BD4  0E00               	movlw	0
  2237  009BD6  6EDD               	movwf	postdec2,c
  2238                           
  2239                           ; BSR set to: 0
  2240                           ;ff.c: 2795: res = validate(fp);
  2241  009BD8  0100               	movlb	0	; () banked
  2242  009BDA  C092  F003         	movff	f_write@fp+1,validate@obj+1
  2243  009BDE  0100               	movlb	0	; () banked
  2244  009BE0  C091  F002         	movff	f_write@fp,validate@obj
  2245  009BE4  ECC2  F02B         	call	_validate	;wreg free
  2246  009BE8  0100               	movlb	0	; () banked
  2247  009BEA  6FA9               	movwf	f_write@res& (0+255),b
  2248                           
  2249                           ; BSR set to: 0
  2250                           ;ff.c: 2796: if (res != FR_OK) return res;
  2251  009BEC  0100               	movlb	0	; () banked
  2252  009BEE  51A9               	movf	f_write@res& (0+255),w,b
  2253  009BF0  B4D8               	btfsc	status,2,c
  2254  009BF2  D004               	goto	l8815
  2255                           
  2256                           ; BSR set to: 0
  2257  009BF4  0100               	movlb	0	; () banked
  2258  009BF6  51A9               	movf	f_write@res& (0+255),w,b
  2259  009BF8  EF31  F053         	goto	l829
  2260  009BFC                     l8815:
  2261                           
  2262                           ; BSR set to: 0
  2263                           ;ff.c: 2797: if (fp->err)
  2264  009BFC  0100               	movlb	0	; () banked
  2265  009BFE  EE20 F005          	lfsr	2,5
  2266  009C02  0100               	movlb	0	; () banked
  2267  009C04  5191               	movf	f_write@fp& (0+255),w,b
  2268  009C06  26D9               	addwf	fsr2l,f,c
  2269  009C08  0100               	movlb	0	; () banked
  2270  009C0A  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2271  009C0C  22DA               	addwfc	fsr2h,f,c
  2272  009C0E  50DF               	movf	indf2,w,c
  2273  009C10  B4D8               	btfsc	status,2,c
  2274  009C12  D00C               	goto	l8821
  2275                           
  2276                           ; BSR set to: 0
  2277                           ;ff.c: 2798: return (FRESULT)fp->err;
  2278  009C14  0100               	movlb	0	; () banked
  2279  009C16  EE20 F005          	lfsr	2,5
  2280  009C1A  0100               	movlb	0	; () banked
  2281  009C1C  5191               	movf	f_write@fp& (0+255),w,b
  2282  009C1E  26D9               	addwf	fsr2l,f,c
  2283  009C20  0100               	movlb	0	; () banked
  2284  009C22  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2285  009C24  22DA               	addwfc	fsr2h,f,c
  2286  009C26  50DF               	movf	indf2,w,c
  2287  009C28  EF31  F053         	goto	l829
  2288  009C2C                     l8821:
  2289                           
  2290                           ; BSR set to: 0
  2291                           ;ff.c: 2799: if (!(fp->flag & 0x02))
  2292  009C2C  0100               	movlb	0	; () banked
  2293  009C2E  EE20 F004          	lfsr	2,4
  2294  009C32  0100               	movlb	0	; () banked
  2295  009C34  5191               	movf	f_write@fp& (0+255),w,b
  2296  009C36  26D9               	addwf	fsr2l,f,c
  2297  009C38  0100               	movlb	0	; () banked
  2298  009C3A  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2299  009C3C  22DA               	addwfc	fsr2h,f,c
  2300  009C3E  50DF               	movf	indf2,w,c
  2301  009C40  0100               	movlb	0	; () banked
  2302  009C42  6F99               	movwf	??_f_write& (0+255),b
  2303  009C44  0100               	movlb	0	; () banked
  2304  009C46  B399               	btfsc	??_f_write& (0+255),1,b
  2305  009C48  D003               	goto	l8827
  2306                           
  2307                           ; BSR set to: 0
  2308                           ;ff.c: 2800: return FR_DENIED;
  2309  009C4A  0E07               	movlw	7
  2310  009C4C  EF31  F053         	goto	l829
  2311  009C50                     l8827:
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;ff.c: 2801: if (fp->fptr + btw < fp->fptr) btw = 0;
  2315  009C50  0100               	movlb	0	; () banked
  2316  009C52  EE20 F006          	lfsr	2,6
  2317  009C56  0100               	movlb	0	; () banked
  2318  009C58  5191               	movf	f_write@fp& (0+255),w,b
  2319  009C5A  26D9               	addwf	fsr2l,f,c
  2320  009C5C  0100               	movlb	0	; () banked
  2321  009C5E  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2322  009C60  22DA               	addwfc	fsr2h,f,c
  2323  009C62  CFDE F099          	movff	postinc2,??_f_write
  2324  009C66  CFDE F09A          	movff	postinc2,??_f_write+1
  2325  009C6A  CFDE F09B          	movff	postinc2,??_f_write+2
  2326  009C6E  CFDE F09C          	movff	postinc2,??_f_write+3
  2327  009C72  0100               	movlb	0	; () banked
  2328  009C74  EE20 F006          	lfsr	2,6
  2329  009C78  0100               	movlb	0	; () banked
  2330  009C7A  5191               	movf	f_write@fp& (0+255),w,b
  2331  009C7C  26D9               	addwf	fsr2l,f,c
  2332  009C7E  0100               	movlb	0	; () banked
  2333  009C80  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2334  009C82  22DA               	addwfc	fsr2h,f,c
  2335  009C84  CFDE F09D          	movff	postinc2,??_f_write+4
  2336  009C88  CFDE F09E          	movff	postinc2,??_f_write+5
  2337  009C8C  CFDE F09F          	movff	postinc2,??_f_write+6
  2338  009C90  CFDE F0A0          	movff	postinc2,??_f_write+7
  2339  009C94  0100               	movlb	0	; () banked
  2340  009C96  5195               	movf	f_write@btw& (0+255),w,b
  2341  009C98  0100               	movlb	0	; () banked
  2342  009C9A  259D               	addwf	(??_f_write+4)& (0+255),w,b
  2343  009C9C  0100               	movlb	0	; () banked
  2344  009C9E  6FA1               	movwf	(??_f_write+8)& (0+255),b
  2345  009CA0  0100               	movlb	0	; () banked
  2346  009CA2  5196               	movf	(f_write@btw+1)& (0+255),w,b
  2347  009CA4  0100               	movlb	0	; () banked
  2348  009CA6  219E               	addwfc	(??_f_write+5)& (0+255),w,b
  2349  009CA8  0100               	movlb	0	; () banked
  2350  009CAA  6FA2               	movwf	(??_f_write+9)& (0+255),b
  2351  009CAC  0E00               	movlw	0
  2352  009CAE  0100               	movlb	0	; () banked
  2353  009CB0  219F               	addwfc	(??_f_write+6)& (0+255),w,b
  2354  009CB2  0100               	movlb	0	; () banked
  2355  009CB4  6FA3               	movwf	(??_f_write+10)& (0+255),b
  2356  009CB6  0E00               	movlw	0
  2357  009CB8  0100               	movlb	0	; () banked
  2358  009CBA  21A0               	addwfc	(??_f_write+7)& (0+255),w,b
  2359  009CBC  0100               	movlb	0	; () banked
  2360  009CBE  6FA4               	movwf	(??_f_write+11)& (0+255),b
  2361  009CC0  0100               	movlb	0	; () banked
  2362  009CC2  5199               	movf	??_f_write& (0+255),w,b
  2363  009CC4  0100               	movlb	0	; () banked
  2364  009CC6  5DA1               	subwf	(??_f_write+8)& (0+255),w,b
  2365  009CC8  0100               	movlb	0	; () banked
  2366  009CCA  519A               	movf	(??_f_write+1)& (0+255),w,b
  2367  009CCC  0100               	movlb	0	; () banked
  2368  009CCE  59A2               	subwfb	(??_f_write+9)& (0+255),w,b
  2369  009CD0  0100               	movlb	0	; () banked
  2370  009CD2  519B               	movf	(??_f_write+2)& (0+255),w,b
  2371  009CD4  0100               	movlb	0	; () banked
  2372  009CD6  59A3               	subwfb	(??_f_write+10)& (0+255),w,b
  2373  009CD8  0100               	movlb	0	; () banked
  2374  009CDA  519C               	movf	(??_f_write+3)& (0+255),w,b
  2375  009CDC  0100               	movlb	0	; () banked
  2376  009CDE  59A4               	subwfb	(??_f_write+11)& (0+255),w,b
  2377  009CE0  B0D8               	btfsc	status,0,c
  2378  009CE2  EFCF  F052         	goto	l8957
  2379                           
  2380                           ; BSR set to: 0
  2381  009CE6  0E00               	movlw	0
  2382  009CE8  0100               	movlb	0	; () banked
  2383  009CEA  6F96               	movwf	(f_write@btw+1)& (0+255),b
  2384  009CEC  0E00               	movlw	0
  2385  009CEE  0100               	movlb	0	; () banked
  2386  009CF0  6F95               	movwf	f_write@btw& (0+255),b
  2387  009CF2  EFCF  F052         	goto	l8957
  2388  009CF6                     l8831:
  2389                           
  2390                           ; BSR set to: 0
  2391                           ;ff.c: 2805: if ((fp->fptr % ((UINT)512)) == 0) {
  2392  009CF6  0100               	movlb	0	; () banked
  2393  009CF8  EE20 F006          	lfsr	2,6
  2394  009CFC  0100               	movlb	0	; () banked
  2395  009CFE  5191               	movf	f_write@fp& (0+255),w,b
  2396  009D00  26D9               	addwf	fsr2l,f,c
  2397  009D02  0100               	movlb	0	; () banked
  2398  009D04  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2399  009D06  22DA               	addwfc	fsr2h,f,c
  2400  009D08  0EFF               	movlw	255
  2401  009D0A  14DE               	andwf	postinc2,w,c
  2402  009D0C  0100               	movlb	0	; () banked
  2403  009D0E  6F99               	movwf	??_f_write& (0+255),b
  2404  009D10  0E01               	movlw	1
  2405  009D12  14DE               	andwf	postinc2,w,c
  2406  009D14  0100               	movlb	0	; () banked
  2407  009D16  6F9A               	movwf	(??_f_write+1)& (0+255),b
  2408  009D18  0E00               	movlw	0
  2409  009D1A  14DE               	andwf	postinc2,w,c
  2410  009D1C  0100               	movlb	0	; () banked
  2411  009D1E  6F9B               	movwf	(??_f_write+2)& (0+255),b
  2412  009D20  0E00               	movlw	0
  2413  009D22  14DE               	andwf	postinc2,w,c
  2414  009D24  0100               	movlb	0	; () banked
  2415  009D26  6F9C               	movwf	(??_f_write+3)& (0+255),b
  2416  009D28  0100               	movlb	0	; () banked
  2417  009D2A  519C               	movf	(??_f_write+3)& (0+255),w,b
  2418  009D2C  1199               	iorwf	??_f_write& (0+255),w,b
  2419  009D2E  119A               	iorwf	(??_f_write+1)& (0+255),w,b
  2420  009D30  119B               	iorwf	(??_f_write+2)& (0+255),w,b
  2421  009D32  A4D8               	btfss	status,2,c
  2422  009D34  D35B               	goto	l8931
  2423                           
  2424                           ; BSR set to: 0
  2425                           ;ff.c: 2806: csect = (BYTE)(fp->fptr / ((UINT)512) & (fp->fs->csize - 1));
  2426  009D36  0100               	movlb	0	; () banked
  2427  009D38  EE20 F006          	lfsr	2,6
  2428  009D3C  0100               	movlb	0	; () banked
  2429  009D3E  5191               	movf	f_write@fp& (0+255),w,b
  2430  009D40  26D9               	addwf	fsr2l,f,c
  2431  009D42  0100               	movlb	0	; () banked
  2432  009D44  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2433  009D46  22DA               	addwfc	fsr2h,f,c
  2434  009D48  CFDE F099          	movff	postinc2,??_f_write
  2435  009D4C  CFDE F09A          	movff	postinc2,??_f_write+1
  2436  009D50  CFDE F09B          	movff	postinc2,??_f_write+2
  2437  009D54  CFDE F09C          	movff	postinc2,??_f_write+3
  2438  009D58  0E0A               	movlw	10
  2439  009D5A  D006               	goto	u11760
  2440  009D5C                     u11765:
  2441  009D5C  0100               	movlb	0	; () banked
  2442  009D5E  90D8               	bcf	status,0,c
  2443  009D60  339C               	rrcf	(??_f_write+3)& (0+255),f,b
  2444  009D62  339B               	rrcf	(??_f_write+2)& (0+255),f,b
  2445  009D64  339A               	rrcf	(??_f_write+1)& (0+255),f,b
  2446  009D66  3399               	rrcf	??_f_write& (0+255),f,b
  2447  009D68                     u11760:
  2448  009D68  2EE8               	decfsz	wreg,f,c
  2449  009D6A  D7F8               	goto	u11765
  2450  009D6C  C091  FFD9         	movff	f_write@fp,fsr2l
  2451  009D70  C092  FFDA         	movff	f_write@fp+1,fsr2h
  2452  009D74  EE10 F002          	lfsr	1,2
  2453  009D78  50DE               	movf	postinc2,w,c
  2454  009D7A  26E1               	addwf	fsr1l,f,c
  2455  009D7C  50DD               	movf	postdec2,w,c
  2456  009D7E  22E2               	addwfc	fsr1h,f,c
  2457  009D80  50E7               	movf	indf1,w,c
  2458  009D82  0100               	movlb	0	; () banked
  2459  009D84  6F9D               	movwf	(??_f_write+4)& (0+255),b
  2460  009D86  0100               	movlb	0	; () banked
  2461  009D88  059D               	decf	(??_f_write+4)& (0+255),w,b
  2462  009D8A  0100               	movlb	0	; () banked
  2463  009D8C  1599               	andwf	??_f_write& (0+255),w,b
  2464  009D8E  0100               	movlb	0	; () banked
  2465  009D90  6FAC               	movwf	f_write@csect& (0+255),b
  2466                           
  2467                           ; BSR set to: 0
  2468                           ;ff.c: 2807: if (!csect) {
  2469  009D92  0100               	movlb	0	; () banked
  2470  009D94  67AC               	tstfsz	f_write@csect& (0+255),b
  2471  009D96  D0F3               	goto	l8875
  2472                           
  2473                           ; BSR set to: 0
  2474                           ;ff.c: 2808: if (fp->fptr == 0) {
  2475  009D98  0100               	movlb	0	; () banked
  2476  009D9A  EE20 F006          	lfsr	2,6
  2477  009D9E  0100               	movlb	0	; () banked
  2478  009DA0  5191               	movf	f_write@fp& (0+255),w,b
  2479  009DA2  26D9               	addwf	fsr2l,f,c
  2480  009DA4  0100               	movlb	0	; () banked
  2481  009DA6  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2482  009DA8  22DA               	addwfc	fsr2h,f,c
  2483  009DAA  CFDE F099          	movff	postinc2,??_f_write
  2484  009DAE  CFDE F09A          	movff	postinc2,??_f_write+1
  2485  009DB2  CFDE F09B          	movff	postinc2,??_f_write+2
  2486  009DB6  CFDE F09C          	movff	postinc2,??_f_write+3
  2487  009DBA  0100               	movlb	0	; () banked
  2488  009DBC  519C               	movf	(??_f_write+3)& (0+255),w,b
  2489  009DBE  1199               	iorwf	??_f_write& (0+255),w,b
  2490  009DC0  119A               	iorwf	(??_f_write+1)& (0+255),w,b
  2491  009DC2  119B               	iorwf	(??_f_write+2)& (0+255),w,b
  2492  009DC4  A4D8               	btfss	status,2,c
  2493  009DC6  D02F               	goto	l8845
  2494                           
  2495                           ; BSR set to: 0
  2496                           ;ff.c: 2809: clst = fp->sclust;
  2497  009DC8  0100               	movlb	0	; () banked
  2498  009DCA  EE20 F00E          	lfsr	2,14
  2499  009DCE  0100               	movlb	0	; () banked
  2500  009DD0  5191               	movf	f_write@fp& (0+255),w,b
  2501  009DD2  26D9               	addwf	fsr2l,f,c
  2502  009DD4  0100               	movlb	0	; () banked
  2503  009DD6  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2504  009DD8  22DA               	addwfc	fsr2h,f,c
  2505  009DDA  0100               	movlb	0	; () banked
  2506  009DDC  CFDE F0B5          	movff	postinc2,f_write@clst
  2507  009DE0  0100               	movlb	0	; () banked
  2508  009DE2  CFDE F0B6          	movff	postinc2,f_write@clst+1
  2509  009DE6  0100               	movlb	0	; () banked
  2510  009DE8  CFDE F0B7          	movff	postinc2,f_write@clst+2
  2511  009DEC  0100               	movlb	0	; () banked
  2512  009DEE  CFDE F0B8          	movff	postinc2,f_write@clst+3
  2513                           
  2514                           ; BSR set to: 0
  2515                           ;ff.c: 2810: if (clst == 0)
  2516  009DF2  0100               	movlb	0	; () banked
  2517  009DF4  51B8               	movf	(f_write@clst+3)& (0+255),w,b
  2518  009DF6  11B5               	iorwf	f_write@clst& (0+255),w,b
  2519  009DF8  11B6               	iorwf	(f_write@clst+1)& (0+255),w,b
  2520  009DFA  11B7               	iorwf	(f_write@clst+2)& (0+255),w,b
  2521  009DFC  A4D8               	btfss	status,2,c
  2522  009DFE  D065               	goto	l8851
  2523                           
  2524                           ; BSR set to: 0
  2525                           ;ff.c: 2811: clst = create_chain(fp->fs, 0);
  2526  009E00  C091  FFD9         	movff	f_write@fp,fsr2l
  2527  009E04  C092  FFDA         	movff	f_write@fp+1,fsr2h
  2528  009E08  CFDE F077          	movff	postinc2,create_chain@fs
  2529  009E0C  CFDD F078          	movff	postdec2,create_chain@fs+1
  2530  009E10  0E00               	movlw	0
  2531  009E12  6E79               	movwf	create_chain@clst,c
  2532  009E14  0E00               	movlw	0
  2533  009E16  6E7A               	movwf	create_chain@clst+1,c
  2534  009E18  0E00               	movlw	0
  2535  009E1A  6E7B               	movwf	create_chain@clst+2,c
  2536  009E1C  0E00               	movlw	0
  2537  009E1E  6E7C               	movwf	create_chain@clst+3,c
  2538  009E20  ECE7  F040         	call	_create_chain	;wreg free
  2539  009E24  D04A               	goto	L1
  2540  009E26                     l8845:
  2541                           
  2542                           ;ff.c: 2814: if (fp->cltbl)
  2543  009E26  0100               	movlb	0	; () banked
  2544  009E28  EE20 F020          	lfsr	2,32
  2545  009E2C  0100               	movlb	0	; () banked
  2546  009E2E  5191               	movf	f_write@fp& (0+255),w,b
  2547  009E30  26D9               	addwf	fsr2l,f,c
  2548  009E32  0100               	movlb	0	; () banked
  2549  009E34  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2550  009E36  22DA               	addwfc	fsr2h,f,c
  2551  009E38  50DE               	movf	postinc2,w,c
  2552  009E3A  10DD               	iorwf	postdec2,w,c
  2553  009E3C  B4D8               	btfsc	status,2,c
  2554  009E3E  D022               	goto	l8849
  2555                           
  2556                           ; BSR set to: 0
  2557                           ;ff.c: 2815: clst = clmt_clust(fp, fp->fptr);
  2558  009E40  0100               	movlb	0	; () banked
  2559  009E42  C092  F00F         	movff	f_write@fp+1,clmt_clust@fp+1
  2560  009E46  0100               	movlb	0	; () banked
  2561  009E48  C091  F00E         	movff	f_write@fp,clmt_clust@fp
  2562  009E4C  0100               	movlb	0	; () banked
  2563  009E4E  EE20 F006          	lfsr	2,6
  2564  009E52  0100               	movlb	0	; () banked
  2565  009E54  5191               	movf	f_write@fp& (0+255),w,b
  2566  009E56  26D9               	addwf	fsr2l,f,c
  2567  009E58  0100               	movlb	0	; () banked
  2568  009E5A  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2569  009E5C  22DA               	addwfc	fsr2h,f,c
  2570  009E5E  CFDE F010          	movff	postinc2,clmt_clust@ofs
  2571  009E62  CFDE F011          	movff	postinc2,clmt_clust@ofs+1
  2572  009E66  CFDE F012          	movff	postinc2,clmt_clust@ofs+2
  2573  009E6A  CFDE F013          	movff	postinc2,clmt_clust@ofs+3
  2574  009E6E  ECD1  F02F         	call	_clmt_clust	;wreg free
  2575  009E72  C00E  F0B5         	movff	?_clmt_clust,f_write@clst
  2576  009E76  C00F  F0B6         	movff	?_clmt_clust+1,f_write@clst+1
  2577  009E7A  C010  F0B7         	movff	?_clmt_clust+2,f_write@clst+2
  2578  009E7E  C011  F0B8         	movff	?_clmt_clust+3,f_write@clst+3
  2579  009E82  D023               	goto	l8851
  2580  009E84                     l8849:
  2581                           
  2582                           ;ff.c: 2816: else
  2583                           ;ff.c: 2818: clst = create_chain(fp->fs, fp->clust);
  2584  009E84  C091  FFD9         	movff	f_write@fp,fsr2l
  2585  009E88  C092  FFDA         	movff	f_write@fp+1,fsr2h
  2586  009E8C  CFDE F077          	movff	postinc2,create_chain@fs
  2587  009E90  CFDD F078          	movff	postdec2,create_chain@fs+1
  2588  009E94  0100               	movlb	0	; () banked
  2589  009E96  EE20 F012          	lfsr	2,18
  2590  009E9A  0100               	movlb	0	; () banked
  2591  009E9C  5191               	movf	f_write@fp& (0+255),w,b
  2592  009E9E  26D9               	addwf	fsr2l,f,c
  2593  009EA0  0100               	movlb	0	; () banked
  2594  009EA2  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2595  009EA4  22DA               	addwfc	fsr2h,f,c
  2596  009EA6  CFDE F079          	movff	postinc2,create_chain@clst
  2597  009EAA  CFDE F07A          	movff	postinc2,create_chain@clst+1
  2598  009EAE  CFDE F07B          	movff	postinc2,create_chain@clst+2
  2599  009EB2  CFDE F07C          	movff	postinc2,create_chain@clst+3
  2600  009EB6  ECE7  F040         	call	_create_chain	;wreg free
  2601  009EBA                     L1:
  2602  009EBA  C077  F0B5         	movff	?_create_chain,f_write@clst
  2603  009EBE  C078  F0B6         	movff	?_create_chain+1,f_write@clst+1
  2604  009EC2  C079  F0B7         	movff	?_create_chain+2,f_write@clst+2
  2605  009EC6  C07A  F0B8         	movff	?_create_chain+3,f_write@clst+3
  2606  009ECA                     l8851:
  2607                           
  2608                           ;ff.c: 2819: }
  2609                           ;ff.c: 2820: if (clst == 0) break;
  2610  009ECA  0100               	movlb	0	; () banked
  2611  009ECC  51B8               	movf	(f_write@clst+3)& (0+255),w,b
  2612  009ECE  11B5               	iorwf	f_write@clst& (0+255),w,b
  2613  009ED0  11B6               	iorwf	(f_write@clst+1)& (0+255),w,b
  2614  009ED2  11B7               	iorwf	(f_write@clst+2)& (0+255),w,b
  2615  009ED4  B4D8               	btfsc	status,2,c
  2616  009ED6  D369               	goto	l8959
  2617                           
  2618                           ; BSR set to: 0
  2619                           ;ff.c: 2821: if (clst == 1) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  2620                           
  2621                           ; BSR set to: 0
  2622                           
  2623                           ; BSR set to: 0
  2624  009ED8  0100               	movlb	0	; () banked
  2625  009EDA  05B5               	decf	f_write@clst& (0+255),w,b
  2626  009EDC  11B6               	iorwf	(f_write@clst+1)& (0+255),w,b
  2627  009EDE  11B7               	iorwf	(f_write@clst+2)& (0+255),w,b
  2628  009EE0  11B8               	iorwf	(f_write@clst+3)& (0+255),w,b
  2629  009EE2  B4D8               	btfsc	status,2,c
  2630  009EE4  D0BB               	goto	u11870
  2631                           
  2632                           ; BSR set to: 0
  2633                           ;ff.c: 2822: if (clst == 0xFFFFFFFF) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR
      +                          ; };
  2634                           
  2635                           ; BSR set to: 0
  2636                           
  2637                           ; BSR set to: 0
  2638                           
  2639                           ; BSR set to: 0
  2640                           
  2641                           ; BSR set to: 0
  2642  009EE6  0100               	movlb	0	; () banked
  2643  009EE8  29B5               	incf	f_write@clst& (0+255),w,b
  2644  009EEA  B4D8               	btfsc	status,2,c
  2645  009EEC  29B6               	incf	(f_write@clst+1)& (0+255),w,b
  2646  009EEE  B4D8               	btfsc	status,2,c
  2647  009EF0  29B7               	incf	(f_write@clst+2)& (0+255),w,b
  2648  009EF2  B4D8               	btfsc	status,2,c
  2649  009EF4  29B8               	incf	(f_write@clst+3)& (0+255),w,b
  2650  009EF6  B4D8               	btfsc	status,2,c
  2651  009EF8  D2CE               	goto	u11980
  2652                           
  2653                           ; BSR set to: 0
  2654                           ;ff.c: 2823: fp->clust = clst;
  2655                           
  2656                           ; BSR set to: 0
  2657                           
  2658                           ; BSR set to: 0
  2659                           
  2660                           ; BSR set to: 0
  2661                           
  2662                           ; BSR set to: 0
  2663  009EFA  0100               	movlb	0	; () banked
  2664  009EFC  EE20 F012          	lfsr	2,18
  2665  009F00  0100               	movlb	0	; () banked
  2666  009F02  5191               	movf	f_write@fp& (0+255),w,b
  2667  009F04  26D9               	addwf	fsr2l,f,c
  2668  009F06  0100               	movlb	0	; () banked
  2669  009F08  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2670  009F0A  22DA               	addwfc	fsr2h,f,c
  2671  009F0C  0100               	movlb	0	; () banked
  2672  009F0E  C0B5  FFDE         	movff	f_write@clst,postinc2
  2673  009F12  0100               	movlb	0	; () banked
  2674  009F14  C0B6  FFDE         	movff	f_write@clst+1,postinc2
  2675  009F18  0100               	movlb	0	; () banked
  2676  009F1A  C0B7  FFDE         	movff	f_write@clst+2,postinc2
  2677  009F1E  0100               	movlb	0	; () banked
  2678  009F20  C0B8  FFDE         	movff	f_write@clst+3,postinc2
  2679                           
  2680                           ;ff.c: 2824: if (fp->sclust == 0) fp->sclust = clst;
  2681  009F24  0100               	movlb	0	; () banked
  2682  009F26  EE20 F00E          	lfsr	2,14
  2683  009F2A  0100               	movlb	0	; () banked
  2684  009F2C  5191               	movf	f_write@fp& (0+255),w,b
  2685  009F2E  26D9               	addwf	fsr2l,f,c
  2686  009F30  0100               	movlb	0	; () banked
  2687  009F32  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2688  009F34  22DA               	addwfc	fsr2h,f,c
  2689  009F36  CFDE F099          	movff	postinc2,??_f_write
  2690  009F3A  CFDE F09A          	movff	postinc2,??_f_write+1
  2691  009F3E  CFDE F09B          	movff	postinc2,??_f_write+2
  2692  009F42  CFDE F09C          	movff	postinc2,??_f_write+3
  2693  009F46  0100               	movlb	0	; () banked
  2694  009F48  519C               	movf	(??_f_write+3)& (0+255),w,b
  2695  009F4A  1199               	iorwf	??_f_write& (0+255),w,b
  2696  009F4C  119A               	iorwf	(??_f_write+1)& (0+255),w,b
  2697  009F4E  119B               	iorwf	(??_f_write+2)& (0+255),w,b
  2698  009F50  A4D8               	btfss	status,2,c
  2699  009F52  D015               	goto	l8875
  2700                           
  2701                           ; BSR set to: 0
  2702  009F54  0100               	movlb	0	; () banked
  2703  009F56  EE20 F00E          	lfsr	2,14
  2704  009F5A  0100               	movlb	0	; () banked
  2705  009F5C  5191               	movf	f_write@fp& (0+255),w,b
  2706  009F5E  26D9               	addwf	fsr2l,f,c
  2707  009F60  0100               	movlb	0	; () banked
  2708  009F62  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2709  009F64  22DA               	addwfc	fsr2h,f,c
  2710  009F66  0100               	movlb	0	; () banked
  2711  009F68  C0B5  FFDE         	movff	f_write@clst,postinc2
  2712  009F6C  0100               	movlb	0	; () banked
  2713  009F6E  C0B6  FFDE         	movff	f_write@clst+1,postinc2
  2714  009F72  0100               	movlb	0	; () banked
  2715  009F74  C0B7  FFDE         	movff	f_write@clst+2,postinc2
  2716  009F78  0100               	movlb	0	; () banked
  2717  009F7A  C0B8  FFDE         	movff	f_write@clst+3,postinc2
  2718  009F7E                     l8875:
  2719                           
  2720                           ; BSR set to: 0
  2721                           ;ff.c: 2825: }
  2722                           ;ff.c: 2827: if (fp->fs->winsect == fp->dsect && sync_window(fp->fs))
  2723  009F7E  0100               	movlb	0	; () banked
  2724  009F80  EE20 F016          	lfsr	2,22
  2725  009F84  0100               	movlb	0	; () banked
  2726  009F86  5191               	movf	f_write@fp& (0+255),w,b
  2727  009F88  26D9               	addwf	fsr2l,f,c
  2728  009F8A  0100               	movlb	0	; () banked
  2729  009F8C  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2730  009F8E  22DA               	addwfc	fsr2h,f,c
  2731  009F90  CFDE F099          	movff	postinc2,??_f_write
  2732  009F94  CFDE F09A          	movff	postinc2,??_f_write+1
  2733  009F98  CFDE F09B          	movff	postinc2,??_f_write+2
  2734  009F9C  CFDE F09C          	movff	postinc2,??_f_write+3
  2735  009FA0  C091  FFD9         	movff	f_write@fp,fsr2l
  2736  009FA4  C092  FFDA         	movff	f_write@fp+1,fsr2h
  2737  009FA8  EE10 F02E          	lfsr	1,46
  2738  009FAC  50DE               	movf	postinc2,w,c
  2739  009FAE  26E1               	addwf	fsr1l,f,c
  2740  009FB0  50DD               	movf	postdec2,w,c
  2741  009FB2  22E2               	addwfc	fsr1h,f,c
  2742  009FB4  CFE6 F09D          	movff	postinc1,??_f_write+4
  2743  009FB8  CFE6 F09E          	movff	postinc1,??_f_write+5
  2744  009FBC  CFE6 F09F          	movff	postinc1,??_f_write+6
  2745  009FC0  CFE6 F0A0          	movff	postinc1,??_f_write+7
  2746  009FC4  0100               	movlb	0	; () banked
  2747  009FC6  519C               	movf	(??_f_write+3)& (0+255),w,b
  2748  009FC8  0100               	movlb	0	; () banked
  2749  009FCA  19A0               	xorwf	(??_f_write+7)& (0+255),w,b
  2750  009FCC  E10E               	bnz	u11855
  2751  009FCE  0100               	movlb	0	; () banked
  2752  009FD0  519B               	movf	(??_f_write+2)& (0+255),w,b
  2753  009FD2  0100               	movlb	0	; () banked
  2754  009FD4  199F               	xorwf	(??_f_write+6)& (0+255),w,b
  2755  009FD6  E109               	bnz	u11855
  2756  009FD8  0100               	movlb	0	; () banked
  2757  009FDA  519A               	movf	(??_f_write+1)& (0+255),w,b
  2758  009FDC  0100               	movlb	0	; () banked
  2759  009FDE  199E               	xorwf	(??_f_write+5)& (0+255),w,b
  2760  009FE0  E104               	bnz	u11855
  2761  009FE2  0100               	movlb	0	; () banked
  2762  009FE4  5199               	movf	??_f_write& (0+255),w,b
  2763  009FE6  0100               	movlb	0	; () banked
  2764  009FE8  199D               	xorwf	(??_f_write+4)& (0+255),w,b
  2765  009FEA                     u11855:
  2766  009FEA  A4D8               	btfss	status,2,c
  2767  009FEC  D00D               	goto	l8885
  2768                           
  2769                           ; BSR set to: 0
  2770  009FEE  C091  FFD9         	movff	f_write@fp,fsr2l
  2771  009FF2  C092  FFDA         	movff	f_write@fp+1,fsr2h
  2772  009FF6  CFDE F026          	movff	postinc2,sync_window@fs
  2773  009FFA  CFDD F027          	movff	postdec2,sync_window@fs+1
  2774  009FFE  EC8F  F031         	call	_sync_window	;wreg free
  2775  00A002  0900               	iorlw	0
  2776  00A004  A4D8               	btfss	status,2,c
  2777  00A006  D247               	goto	u11980
  2778  00A008                     l8885:
  2779                           
  2780                           ;ff.c: 2836: sect = clust2sect(fp->fs, fp->clust);
  2781  00A008  C091  FFD9         	movff	f_write@fp,fsr2l
  2782  00A00C  C092  FFDA         	movff	f_write@fp+1,fsr2h
  2783  00A010  CFDE F00D          	movff	postinc2,clust2sect@fs
  2784  00A014  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  2785  00A018  0100               	movlb	0	; () banked
  2786  00A01A  EE20 F012          	lfsr	2,18
  2787  00A01E  0100               	movlb	0	; () banked
  2788  00A020  5191               	movf	f_write@fp& (0+255),w,b
  2789  00A022  26D9               	addwf	fsr2l,f,c
  2790  00A024  0100               	movlb	0	; () banked
  2791  00A026  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2792  00A028  22DA               	addwfc	fsr2h,f,c
  2793  00A02A  CFDE F00F          	movff	postinc2,clust2sect@clst
  2794  00A02E  CFDE F010          	movff	postinc2,clust2sect@clst+1
  2795  00A032  CFDE F011          	movff	postinc2,clust2sect@clst+2
  2796  00A036  CFDE F012          	movff	postinc2,clust2sect@clst+3
  2797  00A03A  EC7E  F02D         	call	_clust2sect	;wreg free
  2798  00A03E  C00D  F0AF         	movff	?_clust2sect,f_write@sect
  2799  00A042  C00E  F0B0         	movff	?_clust2sect+1,f_write@sect+1
  2800  00A046  C00F  F0B1         	movff	?_clust2sect+2,f_write@sect+2
  2801  00A04A  C010  F0B2         	movff	?_clust2sect+3,f_write@sect+3
  2802                           
  2803                           ;ff.c: 2837: if (!sect) { fp->err = (BYTE)(FR_INT_ERR); return FR_INT_ERR; };
  2804  00A04E  0100               	movlb	0	; () banked
  2805  00A050  51B2               	movf	(f_write@sect+3)& (0+255),w,b
  2806  00A052  11AF               	iorwf	f_write@sect& (0+255),w,b
  2807  00A054  11B0               	iorwf	(f_write@sect+1)& (0+255),w,b
  2808  00A056  11B1               	iorwf	(f_write@sect+2)& (0+255),w,b
  2809  00A058  A4D8               	btfss	status,2,c
  2810  00A05A  D00D               	goto	l8895
  2811  00A05C                     u11870:
  2812                           
  2813                           ; BSR set to: 0
  2814  00A05C  0100               	movlb	0	; () banked
  2815  00A05E  EE20 F005          	lfsr	2,5
  2816  00A062  0100               	movlb	0	; () banked
  2817  00A064  5191               	movf	f_write@fp& (0+255),w,b
  2818  00A066  26D9               	addwf	fsr2l,f,c
  2819  00A068  0100               	movlb	0	; () banked
  2820  00A06A  5192               	movf	(f_write@fp+1)& (0+255),w,b
  2821  00A06C  22DA               	addwfc	fsr2h,f,c
  2822  00A06E  0E02               	movlw	2
  2823  00A070  6EDF               	movwf	indf2,c
  2824                           
  2825                           ; BSR set to: 0
  2826  00A072  0E02               	movlw	2
  2827  00A074  D2F6               	goto	l829
  2828  00A076                     l8895:
  2829                           
  2830                           ; BSR set to: 0
  2831                           ;ff.c: 2838: sect += csect;
  2832  00A076  0100               	movlb	0	; () banked
  2833  00A078  51AC               	movf	f_write@csect& (0+255),w,b
  2834  00A07A  0100               	movlb	0	; () banked
  2835  00A07C  27AF               	addwf	f_write@sect& (0+255),f,b
  2836  00A07E  0E00               	movlw	0
  2837  00A080  0100               	movlb	0	; () banked
  2838  00A082  23B0               	addwfc	(f_write@sect+1)& (0+255),f,b
  2839  00A084  0100               	movlb	0	; () banked
  2840  00A086  23B1               	addwfc	(f_write@sect+2)& (0+255),f,b
  2841  00A088  0100               	movlb	0	; () banked
  2842  00A08A  23B2               	addwfc	(f_write@sect+3)& (0+255),f,b
  2843                           
  2844                           ;ff.c: 2839: cc = btw / ((UINT)512);
  2845  00A08C  0100               	movlb	0	; () banked
  2846  00A08E  C095  F099         	movff	f_write@btw,??_f_write
  2847  00A092  0100               	movlb	0	; () banked
  2848  00A094  C096  F09A         	movff	f_write@btw+1,??_f_write+1
  2849  00A098  0E09               	movlw	9
  2850  00A09A  0100               	movlb	0	; () banked
  2851  00A09C  6F9B               	movwf	(??_f_write+2)& (0+255),b
  2852  00A09E                     u11885:
  2853  00A09E  0100               	movlb	0	; () banked
  2854  00A0A0  90D8               	bcf	status,0,c
  2855  00A0A2  339A               	rrcf	(??_f_write+1)& (0+255),f,b
  2856  00A0A4  3399               	rrcf	??_f_write& (0+255),f,b
  2857  00A0A6  0100               	movlb	0	; () banked
  2858  00A0A8  2F9B               	decfsz	(??_f_write+2)& (0+255),f,b
  2859  00A0AA  D7F9               	goto	u11885
  2860  00A0AC  C099  F0AD         	movff	??_f_write,f_write@cc
  2861  00A0B0  C09A  F0AE         	movff	??_f_write+1,f_write@cc+1
  2862                           
  2863                           ;ff.c: 2840: if (cc) {
  2864  00A0B4  0100               	movlb	0	; () banked
  2865  00A0B6  51AE               	movf	(f_write@cc+1)& (0+255),w,b
  2866  00A0B8  11AD               	iorwf	f_write@cc& (0+255),w,b
  2867  00A0BA  B4D8               	btfsc	status,2,c
  2868  00A0BC  D12B               	goto	l8917
  2869                           
  2870                           ; BSR set to: 0
  2871                           ;ff.c: 2841: if (csect + cc > fp->fs->csize)
  2872  00A0BE  0100               	movlb	0	; () banked
  2873  00A0C0  51AC               	movf	f_write@csect& (0+255),w,b
  2874  00A0C2  0100               	movlb	0	; () banked
  2875  00A0C4  25AD               	addwf	f_write@cc& (0+255),w,b
  2876  00A0C6  0100               	movlb	0	; () banked
  2877  00A0C8  6F99               	movwf	??_f_write& (0+255),b
  2878  00A0CA  0E00               	movlw	0
  2879  00A0CC  0100               	movlb	0	; () banked
  2880  00A0CE  21AE               	addwfc	(f_write@cc+1)& (0+255),w,b
  2881  00A0D0  0100               	movlb	0	; () banked
  2882  00A0D2  6F9A               	movwf	(??_f_write+1)& (0+255),b
  2883  00A0D4  C091  FFD9         	movff	f_write@fp,fsr2l
  2884  00A0D8  C092  FFDA         	movff	f_write@fp+1,fsr2h
  2885  00A0DC  EE10 F002          	lfsr	1,2
  2886  00A0E0  50DE               	movf	postinc2,w,c
  2887  00A0E2  26E1               	addwf	fsr1l,f,c
  2888  00A0E4  50DD               	movf	postdec2,w,c
  2889  00A0E6  22E2               	addwfc	fsr1h,f,c
  2890  00A0E8  50E7               	movf	indf1,w,c
  2891  00A0EA  0100               	movlb	0	; () banked
  2892  00A0EC  6F9B               	movwf	(??_f_write+2)& (0+255),b
  2893  00A0EE  6B9C               	clrf	(??_f_write+3)& (0+255),b
  2894  00A0F0  0100               	movlb	0	; () banked
  2895  00A0F2  5199               	movf	??_f_write& (0+255),w,b
  2896  00A0F4  0100               	movlb	0	; () banked
  2897  00A0F6  5D9B               	subwf	(??_f_write+2)& (0+255),w,b
  2898  00A0F8  0100               	movlb	0	; () banked
  2899  00A0FA  519A               	movf	(??_f_write+1)& (0+255),w,b
  2900  00A0FC  0100               	movlb	0	; () banked
  2901  00A0FE  599C               	subwfb	(??_f_write+3)& (0+255),w,b
  2902  00A100  B0D8               	btfsc	status,0,c
  2903  00A102  D022               	goto	l8901
  2904                           
  2905                           ; BSR set to: 0
  2906                           ;ff.c: 2842: cc = fp->fs->csize - csect;
  2907  00A104  0100               	movlb	0	; () banked
  2908  00A106  51AC               	movf	f_write@csect& (0+255),w,b
  2909  00A108  0100               	movlb	0	; () banked
  2910  00A10A  6F99               	movwf	??_f_write& (0+255),b
  2911  00A10C  6B9A               	clrf	(??_f_write+1)& (0+255),b
  2912  00A10E  0100               	movlb	0	; () banked
  2913  00A110  1F99               	comf	??_f_write& (0+255),f,b
  2914  00A112  1F9A               	comf	(??_f_write+1)& (0+255),f,b
  2915  00A114  4B99               	infsnz	??_f_write& (0+255),f,b
  2916  00A116  2B9A               	incf	(??_f_write+1)& (0+255),f,b
  2917  00A118  C091  FFD9         	movff	f_write@fp,fsr2l
  2918  00A11C  C092  FFDA         	movff	f_write@fp+1,fsr2h
  2919  00A120  EE10 F002          	lfsr	1,2
  2920  00A124  50DE               	movf	postinc2,w,c
  2921  00A126  26E1               	addwf	fsr1l,f,c
  2922  00A128  50DD               	movf	postdec2,w,c
  2923  00A12A  22E2               	addwfc	fsr1h,f,c
  2924  00A12C  50E7               	movf	indf1,w,c
  2925  00A12E  0100               	movlb	0	; () banked
  2926  00A130  6F9B               	movwf	(??_f_write+2)& (0+255),b
  2927  00A132  0100               	movlb	0	; () banked
  2928  00A134  519B               	movf	(??_f_write+2)& (0+255),w,b
  2929  00A136  0100               	movlb	0	; () banked
  2930  00A138  2599               	addwf	??_f_write& (0+255),w,b
  2931  00A13A  0100               	movlb	0	; () banked
  2932  00A13C  6FAD               	movwf	f_write@cc& (0+255),b
  2933  00A13E  0E00               	movlw	0
  2934  00A140  0100               	movlb	0	; () banked
  2935  00A142  219A               	addwfc	(??_f_write+1)& (0+255),w,b
  2936  00A144  0100               	movlb	0	; () banked
  2937  00A146  6FAE               	movwf	(f_write@cc+1)& (0+255),b
  2938  00A148                     l8901:
  2939                           
  2940                           ; BSR set to: 0
  2941                           ;ff.c: 2843: if (disk_write(fp->fs->drv, wbuff, sect, cc) != RES_OK)
  2942  00A148  0100               	movlb	0	; () banked
  2943  00A14A  C0AB  F01D         	movff	f_write@wbuff+1,disk_write@buff+1
  2944  00A14E  0100               	movlb	0	; () banked
  2945  00A150  C0AA  F01C         	movff	f_write@wbuff,disk_write@buff
  2946  00A154  C0AF  F01E         	movff	f_write@sect,disk_write@sector
  2947  00A158  C0B0  F01F         	movff	f_write@sect+1,disk_write@sector+1
  2948  00A15C  C0B1  F020         	movff	f_write@sect+2,disk_write@sector+2
  2949  00A160  C0B2  F021         	movff	f_write@sect+3,disk_write@sector+3
  2950  00A164  C0AD  F022         	movff	f_write@cc,disk_write@count
  2951  00A168  C0AE  F023         	movff	f_write@cc+1,disk_write@count+1
  2952  00A16C  C091  FFD9         	movff	f_write@fp,fsr2l
  2953  00A170  C092  FFDA         	movff	f_write@fp+1,fsr2h
  2954  00A174  EE10 F001          	lfsr	1,1
  2955  00A178  50DE               	movf	postinc2,w,c
  2956  00A17A  26E1               	addwf	fsr1l,f,c
  2957  00A17C  50DD               	movf	postdec2,w,c
  2958  00A17E  22E2               	addwfc	fsr1h,f,c
  2959  00A180  50E7               	movf	indf1,w,c
  2960  00A182  EC45  F02F         	call	_disk_write
  2961  00A186  0900               	iorlw	0
  2962  00A188  A4D8               	btfss	status,2,c
  2963  00A18A  D185               	goto	u11980
  2964                           
  2965                           ;ff.c: 2847: if (fp->fs->winsect - sect < cc) {
  2966                           
  2967                           ; BSR set to: 0
  2968                           
  2969                           ; BSR set to: 0
  2970                           
  2971                           ; BSR set to: 0
  2972                           
  2973                           ;ff.c: 2844: { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  2974  00A18C  0100               	movlb	0	; () banked
  2975  00A18E  51AD               	movf	f_write@cc& (0+255),w,b
  2976  00A190  0100               	movlb	0	; () banked
  2977  00A192  6F99               	movwf	??_f_write& (0+255),b
  2978  00A194  0100               	movlb	0	; () banked
  2979  00A196  51AE               	movf	(f_write@cc+1)& (0+255),w,b
  2980  00A198  0100               	movlb	0	; () banked
  2981  00A19A  6F9A               	movwf	(??_f_write+1)& (0+255),b
  2982  00A19C  0100               	movlb	0	; () banked
  2983  00A19E  6B9B               	clrf	(??_f_write+2)& (0+255),b
  2984  00A1A0  0100               	movlb	0	; () banked
  2985  00A1A2  6B9C               	clrf	(??_f_write+3)& (0+255),b
  2986  00A1A4  C091  FFD9         	movff	f_write@fp,fsr2l
  2987  00A1A8  C092  FFDA         	movff	f_write@fp+1,fsr2h
  2988  00A1AC  EE10 F02E          	lfsr	1,46
  2989  00A1B0  50DE               	movf	postinc2,w,c
  2990  00A1B2  26E1               	addwf	fsr1l,f,c
  2991  00A1B4  50DD               	movf	postdec2,w,c
  2992  00A1B6  22E2               	addwfc	fsr1h,f,c
  2993  00A1B8  CFE6 F09D          	movff	postinc1,??_f_write+4
  2994  00A1BC  CFE6 F09E          	movff	postinc1,??_f_write+5
  2995  00A1C0  CFE6 F09F          	movff	postinc1,??_f_write+6
  2996  00A1C4  CFE6 F0A0          	movff	postinc1,??_f_write+7
  2997  00A1C8  0100               	movlb	0	; () banked
  2998  00A1CA  C0AF  F0A1         	movff	f_write@sect,??_f_write+8
  2999  00A1CE  0100               	movlb	0	; () banked
  3000  00A1D0  C0B0  F0A2         	movff	f_write@sect+1,??_f_write+9
  3001  00A1D4  0100               	movlb	0	; () banked
  3002  00A1D6  C0B1  F0A3         	movff	f_write@sect+2,??_f_write+10
  3003  00A1DA  0100               	movlb	0	; () banked
  3004  00A1DC  C0B2  F0A4         	movff	f_write@sect+3,??_f_write+11
  3005  00A1E0  0100               	movlb	0	; () banked
  3006  00A1E2  1FA1               	comf	(??_f_write+8)& (0+255),f,b
  3007  00A1E4  1FA2               	comf	(??_f_write+9)& (0+255),f,b
  3008  00A1E6  1FA3               	comf	(??_f_write+10)& (0+255),f,b
  3009  00A1E8  1FA4               	comf	(??_f_write+11)& (0+255),f,b
  3010  00A1EA  2BA1               	incf	(??_f_write+8)& (0+255),f,b
  3011  00A1EC  0E00               	movlw	0
  3012  00A1EE  23A2               	addwfc	(??_f_write+9)& (0+255),f,b
  3013  00A1F0  23A3               	addwfc	(??_f_write+10)& (0+255),f,b
  3014  00A1F2  23A4               	addwfc	(??_f_write+11)& (0+255),f,b
  3015  00A1F4  0100               	movlb	0	; () banked
  3016  00A1F6  519D               	movf	(??_f_write+4)& (0+255),w,b
  3017  00A1F8  0100               	movlb	0	; () banked
  3018  00A1FA  25A1               	addwf	(??_f_write+8)& (0+255),w,b
  3019  00A1FC  0100               	movlb	0	; () banked
  3020  00A1FE  6FA5               	movwf	(??_f_write+12)& (0+255),b
  3021  00A200  0100               	movlb	0	; () banked
  3022  00A202  519E               	movf	(??_f_write+5)& (0+255),w,b
  3023  00A204  0100               	movlb	0	; () banked
  3024  00A206  21A2               	addwfc	(??_f_write+9)& (0+255),w,b
  3025  00A208  0100               	movlb	0	; () banked
  3026  00A20A  6FA6               	movwf	(??_f_write+13)& (0+255),b
  3027  00A20C  0100               	movlb	0	; () banked
  3028  00A20E  519F               	movf	(??_f_write+6)& (0+255),w,b
  3029  00A210  0100               	movlb	0	; () banked
  3030  00A212  21A3               	addwfc	(??_f_write+10)& (0+255),w,b
  3031  00A214  0100               	movlb	0	; () banked
  3032  00A216  6FA7               	movwf	(??_f_write+14)& (0+255),b
  3033  00A218  0100               	movlb	0	; () banked
  3034  00A21A  51A0               	movf	(??_f_write+7)& (0+255),w,b
  3035  00A21C  0100               	movlb	0	; () banked
  3036  00A21E  21A4               	addwfc	(??_f_write+11)& (0+255),w,b
  3037  00A220  0100               	movlb	0	; () banked
  3038  00A222  6FA8               	movwf	(??_f_write+15)& (0+255),b
  3039  00A224  0100               	movlb	0	; () banked
  3040  00A226  5199               	movf	??_f_write& (0+255),w,b
  3041  00A228  0100               	movlb	0	; () banked
  3042  00A22A  5DA5               	subwf	(??_f_write+12)& (0+255),w,b
  3043  00A22C  0100               	movlb	0	; () banked
  3044  00A22E  519A               	movf	(??_f_write+1)& (0+255),w,b
  3045  00A230  0100               	movlb	0	; () banked
  3046  00A232  59A6               	subwfb	(??_f_write+13)& (0+255),w,b
  3047  00A234  0100               	movlb	0	; () banked
  3048  00A236  519B               	movf	(??_f_write+2)& (0+255),w,b
  3049  00A238  0100               	movlb	0	; () banked
  3050  00A23A  59A7               	subwfb	(??_f_write+14)& (0+255),w,b
  3051  00A23C  0100               	movlb	0	; () banked
  3052  00A23E  519C               	movf	(??_f_write+3)& (0+255),w,b
  3053  00A240  0100               	movlb	0	; () banked
  3054  00A242  59A8               	subwfb	(??_f_write+15)& (0+255),w,b
  3055  00A244  B0D8               	btfsc	status,0,c
  3056  00A246  D054               	goto	l8915
  3057                           
  3058                           ; BSR set to: 0
  3059                           ;ff.c: 2848: mem_cpy(fp->fs->win, wbuff + ((fp->fs->winsect - sect) * ((UINT)512)), ((UI
      +                          NT)512));
  3060  00A248  C091  FFD9         	movff	f_write@fp,fsr2l
  3061  00A24C  C092  FFDA         	movff	f_write@fp+1,fsr2h
  3062  00A250  CFDE F099          	movff	postinc2,??_f_write
  3063  00A254  CFDD F09A          	movff	postdec2,??_f_write+1
  3064  00A258  0E32               	movlw	50
  3065  00A25A  0100               	movlb	0	; () banked
  3066  00A25C  2599               	addwf	??_f_write& (0+255),w,b
  3067  00A25E  6E01               	movwf	mem_cpy@dst,c
  3068  00A260  0E00               	movlw	0
  3069  00A262  0100               	movlb	0	; () banked
  3070  00A264  219A               	addwfc	(??_f_write+1)& (0+255),w,b
  3071  00A266  6E02               	movwf	mem_cpy@dst+1,c
  3072  00A268  C091  FFD9         	movff	f_write@fp,fsr2l
  3073  00A26C  C092  FFDA         	movff	f_write@fp+1,fsr2h
  3074  00A270  EE10 F02E          	lfsr	1,46
  3075  00A274  50DE               	movf	postinc2,w,c
  3076  00A276  26E1               	addwf	fsr1l,f,c
  3077  00A278  50DD               	movf	postdec2,w,c
  3078  00A27A  22E2               	addwfc	fsr1h,f,c
  3079  00A27C  CFE6 F09B          	movff	postinc1,??_f_write+2
  3080  00A280  CFE5 F09C          	movff	postdec1,??_f_write+3
  3081  00A284  0100               	movlb	0	; () banked
  3082  00A286  C0AF  F09D         	movff	f_write@sect,??_f_write+4
  3083  00A28A  0100               	movlb	0	; () banked
  3084  00A28C  C0B0  F09E         	movff	f_write@sect+1,??_f_write+5
  3085  00A290  0100               	movlb	0	; () banked
  3086  00A292  1F9D               	comf	(??_f_write+4)& (0+255),f,b
  3087  00A294  1F9E               	comf	(??_f_write+5)& (0+255),f,b
  3088  00A296  4B9D               	infsnz	(??_f_write+4)& (0+255),f,b
  3089  00A298  2B9E               	incf	(??_f_write+5)& (0+255),f,b
  3090  00A29A  0100               	movlb	0	; () banked
  3091  00A29C  519B               	movf	(??_f_write+2)& (0+255),w,b
  3092  00A29E  0100               	movlb	0	; () banked
  3093  00A2A0  279D               	addwf	(??_f_write+4)& (0+255),f,b
  3094  00A2A2  0100               	movlb	0	; () banked
  3095  00A2A4  519C               	movf	(??_f_write+3)& (0+255),w,b
  3096  00A2A6  0100               	movlb	0	; () banked
  3097  00A2A8  239E               	addwfc	(??_f_write+5)& (0+255),f,b
  3098  00A2AA  0E09               	movlw	9
  3099  00A2AC                     u11935:
  3100  00A2AC  90D8               	bcf	status,0,c
  3101  00A2AE  0100               	movlb	0	; () banked
  3102  00A2B0  379D               	rlcf	(??_f_write+4)& (0+255),f,b
  3103  00A2B2  379E               	rlcf	(??_f_write+5)& (0+255),f,b
  3104  00A2B4  2EE8               	decfsz	wreg,f,c
  3105  00A2B6  D7FA               	goto	u11935
  3106  00A2B8  0100               	movlb	0	; () banked
  3107  00A2BA  519D               	movf	(??_f_write+4)& (0+255),w,b
  3108  00A2BC  0100               	movlb	0	; () banked
  3109  00A2BE  25AA               	addwf	f_write@wbuff& (0+255),w,b
  3110  00A2C0  6E03               	movwf	mem_cpy@src,c
  3111  00A2C2  0100               	movlb	0	; () banked
  3112  00A2C4  519E               	movf	(??_f_write+5)& (0+255),w,b
  3113  00A2C6  0100               	movlb	0	; () banked
  3114  00A2C8  21AB               	addwfc	(f_write@wbuff+1)& (0+255),w,b
  3115  00A2CA  6E04               	movwf	mem_cpy@src+1,c
  3116  00A2CC  0E02               	movlw	2
  3117  00A2CE  6E06               	movwf	mem_cpy@cnt+1,c
  3118  00A2D0  0E00               	movlw	0
  3119  00A2D2  6E05               	movwf	mem_cpy@cnt,c
  3120  00A2D4  EC22  F02A         	call	_mem_cpy	;wreg free
  3121                           
  3122                           ;ff.c: 2849: fp->fs->wflag = 0;
  3123  00A2D8  C091  FFD9         	movff	f_write@fp,fsr2l
  3124  00A2DC  C092  FFDA         	movff	f_write@fp+1,fsr2h
  3125  00A2E0  EE10 F004          	lfsr	1,4
  3126  00A2E4  50DE               	movf	postinc2,w,c
  3127  00A2E6  26E1               	addwf	fsr1l,f,c
  3128  00A2E8  50DD               	movf	postdec2,w,c
  3129  00A2EA  22E2               	addwfc	fsr1h,f,c
  3130  00A2EC  0E00               	movlw	0
  3131  00A2EE  6EE7               	movwf	indf1,c
  3132  00A2F0                     l8915:
  3133                           
  3134                           ;ff.c: 2850: }
  3135                           ;ff.c: 2858: wcnt = ((UINT)512) * cc;
  3136  00A2F0  0100               	movlb	0	; () banked
  3137  00A2F2  C0AD  F099         	movff	f_write@cc,??_f_write
  3138  00A2F6  0100               	movlb	0	; () banked
  3139  00A2F8  C0AE  F09A         	movff	f_write@cc+1,??_f_write+1
  3140  00A2FC  0E09               	movlw	9
  3141  00A2FE                     u11945:
  3142  00A2FE  90D8               	bcf	status,0,c
  3143  00A300  0100               	movlb	0	; () banked
  3144  00A302  3799               	rlcf	??_f_write& (0+255),f,b
  3145  00A304  379A               	rlcf	(??_f_write+1)& (0+255),f,b
  3146  00A306  2EE8               	decfsz	wreg,f,c
  3147  00A308  D7FA               	goto	u11945
  3148  00A30A  C099  F0B3         	movff	??_f_write,f_write@wcnt
  3149  00A30E  C09A  F0B4         	movff	??_f_write+1,f_write@wcnt+1
  3150                           
  3151                           ;ff.c: 2859: continue;
  3152  00A312  D117               	goto	l8949
  3153  00A314                     l8917:
  3154                           
  3155                           ; BSR set to: 0
  3156                           ;ff.c: 2860: }
  3157                           ;ff.c: 2862: if (fp->fptr >= fp->fsize) {
  3158  00A314  0100               	movlb	0	; () banked
  3159  00A316  EE20 F00A          	lfsr	2,10
  3160  00A31A  0100               	movlb	0	; () banked
  3161  00A31C  5191               	movf	f_write@fp& (0+255),w,b
  3162  00A31E  26D9               	addwf	fsr2l,f,c
  3163  00A320  0100               	movlb	0	; () banked
  3164  00A322  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3165  00A324  22DA               	addwfc	fsr2h,f,c
  3166  00A326  CFDE F099          	movff	postinc2,??_f_write
  3167  00A32A  CFDE F09A          	movff	postinc2,??_f_write+1
  3168  00A32E  CFDE F09B          	movff	postinc2,??_f_write+2
  3169  00A332  CFDE F09C          	movff	postinc2,??_f_write+3
  3170  00A336  0100               	movlb	0	; () banked
  3171  00A338  EE20 F006          	lfsr	2,6
  3172  00A33C  0100               	movlb	0	; () banked
  3173  00A33E  5191               	movf	f_write@fp& (0+255),w,b
  3174  00A340  26D9               	addwf	fsr2l,f,c
  3175  00A342  0100               	movlb	0	; () banked
  3176  00A344  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3177  00A346  22DA               	addwfc	fsr2h,f,c
  3178  00A348  CFDE F09D          	movff	postinc2,??_f_write+4
  3179  00A34C  CFDE F09E          	movff	postinc2,??_f_write+5
  3180  00A350  CFDE F09F          	movff	postinc2,??_f_write+6
  3181  00A354  CFDE F0A0          	movff	postinc2,??_f_write+7
  3182  00A358  0100               	movlb	0	; () banked
  3183  00A35A  5199               	movf	??_f_write& (0+255),w,b
  3184  00A35C  0100               	movlb	0	; () banked
  3185  00A35E  5D9D               	subwf	(??_f_write+4)& (0+255),w,b
  3186  00A360  0100               	movlb	0	; () banked
  3187  00A362  519A               	movf	(??_f_write+1)& (0+255),w,b
  3188  00A364  0100               	movlb	0	; () banked
  3189  00A366  599E               	subwfb	(??_f_write+5)& (0+255),w,b
  3190  00A368  0100               	movlb	0	; () banked
  3191  00A36A  519B               	movf	(??_f_write+2)& (0+255),w,b
  3192  00A36C  0100               	movlb	0	; () banked
  3193  00A36E  599F               	subwfb	(??_f_write+6)& (0+255),w,b
  3194  00A370  0100               	movlb	0	; () banked
  3195  00A372  519C               	movf	(??_f_write+3)& (0+255),w,b
  3196  00A374  0100               	movlb	0	; () banked
  3197  00A376  59A0               	subwfb	(??_f_write+7)& (0+255),w,b
  3198  00A378  A0D8               	btfss	status,0,c
  3199  00A37A  D023               	goto	l8929
  3200                           
  3201                           ; BSR set to: 0
  3202                           ;ff.c: 2863: if (sync_window(fp->fs)) { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ER
      +                          R; };
  3203  00A37C  C091  FFD9         	movff	f_write@fp,fsr2l
  3204  00A380  C092  FFDA         	movff	f_write@fp+1,fsr2h
  3205  00A384  CFDE F026          	movff	postinc2,sync_window@fs
  3206  00A388  CFDD F027          	movff	postdec2,sync_window@fs+1
  3207  00A38C  EC8F  F031         	call	_sync_window	;wreg free
  3208  00A390  0900               	iorlw	0
  3209  00A392  A4D8               	btfss	status,2,c
  3210  00A394  D080               	goto	u11980
  3211                           
  3212                           ;ff.c: 2864: fp->fs->winsect = sect;
  3213                           
  3214                           ; BSR set to: 0
  3215                           
  3216                           ; BSR set to: 0
  3217                           
  3218                           ; BSR set to: 0
  3219  00A396  C091  FFD9         	movff	f_write@fp,fsr2l
  3220  00A39A  C092  FFDA         	movff	f_write@fp+1,fsr2h
  3221  00A39E  EE10 F02E          	lfsr	1,46
  3222  00A3A2  50DE               	movf	postinc2,w,c
  3223  00A3A4  26E1               	addwf	fsr1l,f,c
  3224  00A3A6  50DD               	movf	postdec2,w,c
  3225  00A3A8  22E2               	addwfc	fsr1h,f,c
  3226  00A3AA  0100               	movlb	0	; () banked
  3227  00A3AC  C0AF  FFE6         	movff	f_write@sect,postinc1
  3228  00A3B0  0100               	movlb	0	; () banked
  3229  00A3B2  C0B0  FFE6         	movff	f_write@sect+1,postinc1
  3230  00A3B6  0100               	movlb	0	; () banked
  3231  00A3B8  C0B1  FFE6         	movff	f_write@sect+2,postinc1
  3232  00A3BC  0100               	movlb	0	; () banked
  3233  00A3BE  C0B2  FFE6         	movff	f_write@sect+3,postinc1
  3234  00A3C2                     l8929:
  3235                           
  3236                           ; BSR set to: 0
  3237                           ;ff.c: 2865: }
  3238                           ;ff.c: 2873: fp->dsect = sect;
  3239  00A3C2  0100               	movlb	0	; () banked
  3240  00A3C4  EE20 F016          	lfsr	2,22
  3241  00A3C8  0100               	movlb	0	; () banked
  3242  00A3CA  5191               	movf	f_write@fp& (0+255),w,b
  3243  00A3CC  26D9               	addwf	fsr2l,f,c
  3244  00A3CE  0100               	movlb	0	; () banked
  3245  00A3D0  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3246  00A3D2  22DA               	addwfc	fsr2h,f,c
  3247  00A3D4  0100               	movlb	0	; () banked
  3248  00A3D6  C0AF  FFDE         	movff	f_write@sect,postinc2
  3249  00A3DA  0100               	movlb	0	; () banked
  3250  00A3DC  C0B0  FFDE         	movff	f_write@sect+1,postinc2
  3251  00A3E0  0100               	movlb	0	; () banked
  3252  00A3E2  C0B1  FFDE         	movff	f_write@sect+2,postinc2
  3253  00A3E6  0100               	movlb	0	; () banked
  3254  00A3E8  C0B2  FFDE         	movff	f_write@sect+3,postinc2
  3255  00A3EC                     l8931:
  3256                           
  3257                           ; BSR set to: 0
  3258                           ;ff.c: 2874: }
  3259                           ;ff.c: 2875: wcnt = ((UINT)512) - ((UINT)fp->fptr % ((UINT)512));
  3260  00A3EC  0EFF               	movlw	255
  3261  00A3EE  0100               	movlb	0	; () banked
  3262  00A3F0  6F99               	movwf	??_f_write& (0+255),b
  3263  00A3F2  0E01               	movlw	1
  3264  00A3F4  6F9A               	movwf	(??_f_write+1)& (0+255),b
  3265  00A3F6  0100               	movlb	0	; () banked
  3266  00A3F8  EE20 F006          	lfsr	2,6
  3267  00A3FC  0100               	movlb	0	; () banked
  3268  00A3FE  5191               	movf	f_write@fp& (0+255),w,b
  3269  00A400  26D9               	addwf	fsr2l,f,c
  3270  00A402  0100               	movlb	0	; () banked
  3271  00A404  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3272  00A406  22DA               	addwfc	fsr2h,f,c
  3273  00A408  CFDE F09B          	movff	postinc2,??_f_write+2
  3274  00A40C  CFDD F09C          	movff	postdec2,??_f_write+3
  3275  00A410  0100               	movlb	0	; () banked
  3276  00A412  5199               	movf	??_f_write& (0+255),w,b
  3277  00A414  0100               	movlb	0	; () banked
  3278  00A416  179B               	andwf	(??_f_write+2)& (0+255),f,b
  3279  00A418  0100               	movlb	0	; () banked
  3280  00A41A  519A               	movf	(??_f_write+1)& (0+255),w,b
  3281  00A41C  0100               	movlb	0	; () banked
  3282  00A41E  179C               	andwf	(??_f_write+3)& (0+255),f,b
  3283  00A420  0100               	movlb	0	; () banked
  3284  00A422  1F9B               	comf	(??_f_write+2)& (0+255),f,b
  3285  00A424  1F9C               	comf	(??_f_write+3)& (0+255),f,b
  3286  00A426  4B9B               	infsnz	(??_f_write+2)& (0+255),f,b
  3287  00A428  2B9C               	incf	(??_f_write+3)& (0+255),f,b
  3288  00A42A  0E00               	movlw	0
  3289  00A42C  0100               	movlb	0	; () banked
  3290  00A42E  259B               	addwf	(??_f_write+2)& (0+255),w,b
  3291  00A430  0100               	movlb	0	; () banked
  3292  00A432  6FB3               	movwf	f_write@wcnt& (0+255),b
  3293  00A434  0E02               	movlw	2
  3294  00A436  0100               	movlb	0	; () banked
  3295  00A438  219C               	addwfc	(??_f_write+3)& (0+255),w,b
  3296  00A43A  0100               	movlb	0	; () banked
  3297  00A43C  6FB4               	movwf	(f_write@wcnt+1)& (0+255),b
  3298                           
  3299                           ; BSR set to: 0
  3300                           ;ff.c: 2876: if (wcnt > btw) wcnt = btw;
  3301  00A43E  0100               	movlb	0	; () banked
  3302  00A440  51B3               	movf	f_write@wcnt& (0+255),w,b
  3303  00A442  0100               	movlb	0	; () banked
  3304  00A444  5D95               	subwf	f_write@btw& (0+255),w,b
  3305  00A446  0100               	movlb	0	; () banked
  3306  00A448  51B4               	movf	(f_write@wcnt+1)& (0+255),w,b
  3307  00A44A  0100               	movlb	0	; () banked
  3308  00A44C  5996               	subwfb	(f_write@btw+1)& (0+255),w,b
  3309  00A44E  B0D8               	btfsc	status,0,c
  3310  00A450  D004               	goto	l8937
  3311                           
  3312                           ; BSR set to: 0
  3313  00A452  C095  F0B3         	movff	f_write@btw,f_write@wcnt
  3314  00A456  C096  F0B4         	movff	f_write@btw+1,f_write@wcnt+1
  3315  00A45A                     l8937:
  3316                           
  3317                           ; BSR set to: 0
  3318                           ;ff.c: 2878: if (move_window(fp->fs, fp->dsect) != FR_OK)
  3319  00A45A  C091  FFD9         	movff	f_write@fp,fsr2l
  3320  00A45E  C092  FFDA         	movff	f_write@fp+1,fsr2h
  3321  00A462  CFDE F03B          	movff	postinc2,move_window@fs
  3322  00A466  CFDD F03C          	movff	postdec2,move_window@fs+1
  3323  00A46A  0100               	movlb	0	; () banked
  3324  00A46C  EE20 F016          	lfsr	2,22
  3325  00A470  0100               	movlb	0	; () banked
  3326  00A472  5191               	movf	f_write@fp& (0+255),w,b
  3327  00A474  26D9               	addwf	fsr2l,f,c
  3328  00A476  0100               	movlb	0	; () banked
  3329  00A478  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3330  00A47A  22DA               	addwfc	fsr2h,f,c
  3331  00A47C  CFDE F03D          	movff	postinc2,move_window@sector
  3332  00A480  CFDE F03E          	movff	postinc2,move_window@sector+1
  3333  00A484  CFDE F03F          	movff	postinc2,move_window@sector+2
  3334  00A488  CFDE F040          	movff	postinc2,move_window@sector+3
  3335  00A48C  EC66  F02C         	call	_move_window	;wreg free
  3336  00A490  0900               	iorlw	0
  3337  00A492  B4D8               	btfsc	status,2,c
  3338  00A494  D00D               	goto	l8945
  3339  00A496                     u11980:
  3340                           
  3341                           ;ff.c: 2879: { fp->err = (BYTE)(FR_DISK_ERR); return FR_DISK_ERR; };
  3342  00A496  0100               	movlb	0	; () banked
  3343  00A498  EE20 F005          	lfsr	2,5
  3344  00A49C  0100               	movlb	0	; () banked
  3345  00A49E  5191               	movf	f_write@fp& (0+255),w,b
  3346  00A4A0  26D9               	addwf	fsr2l,f,c
  3347  00A4A2  0100               	movlb	0	; () banked
  3348  00A4A4  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3349  00A4A6  22DA               	addwfc	fsr2h,f,c
  3350  00A4A8  0E01               	movlw	1
  3351  00A4AA  6EDF               	movwf	indf2,c
  3352                           
  3353                           ; BSR set to: 0
  3354  00A4AC  0E01               	movlw	1
  3355  00A4AE  D0D9               	goto	l829
  3356  00A4B0                     l8945:
  3357                           
  3358                           ;ff.c: 2880: mem_cpy(&fp->fs->win[fp->fptr % ((UINT)512)], wbuff, wcnt);
  3359  00A4B0  0EFF               	movlw	255
  3360  00A4B2  0100               	movlb	0	; () banked
  3361  00A4B4  6F99               	movwf	??_f_write& (0+255),b
  3362  00A4B6  0E01               	movlw	1
  3363  00A4B8  6F9A               	movwf	(??_f_write+1)& (0+255),b
  3364  00A4BA  0100               	movlb	0	; () banked
  3365  00A4BC  EE20 F006          	lfsr	2,6
  3366  00A4C0  0100               	movlb	0	; () banked
  3367  00A4C2  5191               	movf	f_write@fp& (0+255),w,b
  3368  00A4C4  26D9               	addwf	fsr2l,f,c
  3369  00A4C6  0100               	movlb	0	; () banked
  3370  00A4C8  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3371  00A4CA  22DA               	addwfc	fsr2h,f,c
  3372  00A4CC  CFDE F09B          	movff	postinc2,??_f_write+2
  3373  00A4D0  CFDD F09C          	movff	postdec2,??_f_write+3
  3374  00A4D4  0100               	movlb	0	; () banked
  3375  00A4D6  5199               	movf	??_f_write& (0+255),w,b
  3376  00A4D8  0100               	movlb	0	; () banked
  3377  00A4DA  179B               	andwf	(??_f_write+2)& (0+255),f,b
  3378  00A4DC  0100               	movlb	0	; () banked
  3379  00A4DE  519A               	movf	(??_f_write+1)& (0+255),w,b
  3380  00A4E0  0100               	movlb	0	; () banked
  3381  00A4E2  179C               	andwf	(??_f_write+3)& (0+255),f,b
  3382  00A4E4  0E32               	movlw	50
  3383  00A4E6  0100               	movlb	0	; () banked
  3384  00A4E8  279B               	addwf	(??_f_write+2)& (0+255),f,b
  3385  00A4EA  0E00               	movlw	0
  3386  00A4EC  239C               	addwfc	(??_f_write+3)& (0+255),f,b
  3387  00A4EE  C091  FFD9         	movff	f_write@fp,fsr2l
  3388  00A4F2  C092  FFDA         	movff	f_write@fp+1,fsr2h
  3389  00A4F6  CFDE F09D          	movff	postinc2,??_f_write+4
  3390  00A4FA  CFDD F09E          	movff	postdec2,??_f_write+5
  3391  00A4FE  0100               	movlb	0	; () banked
  3392  00A500  519B               	movf	(??_f_write+2)& (0+255),w,b
  3393  00A502  0100               	movlb	0	; () banked
  3394  00A504  259D               	addwf	(??_f_write+4)& (0+255),w,b
  3395  00A506  6E01               	movwf	mem_cpy@dst,c
  3396  00A508  0100               	movlb	0	; () banked
  3397  00A50A  519C               	movf	(??_f_write+3)& (0+255),w,b
  3398  00A50C  0100               	movlb	0	; () banked
  3399  00A50E  219E               	addwfc	(??_f_write+5)& (0+255),w,b
  3400  00A510  6E02               	movwf	mem_cpy@dst+1,c
  3401  00A512  0100               	movlb	0	; () banked
  3402  00A514  C0AB  F004         	movff	f_write@wbuff+1,mem_cpy@src+1
  3403  00A518  0100               	movlb	0	; () banked
  3404  00A51A  C0AA  F003         	movff	f_write@wbuff,mem_cpy@src
  3405  00A51E  C0B3  F005         	movff	f_write@wcnt,mem_cpy@cnt
  3406  00A522  C0B4  F006         	movff	f_write@wcnt+1,mem_cpy@cnt+1
  3407  00A526  EC22  F02A         	call	_mem_cpy	;wreg free
  3408                           
  3409                           ;ff.c: 2881: fp->fs->wflag = 1;
  3410  00A52A  C091  FFD9         	movff	f_write@fp,fsr2l
  3411  00A52E  C092  FFDA         	movff	f_write@fp+1,fsr2h
  3412  00A532  EE10 F004          	lfsr	1,4
  3413  00A536  50DE               	movf	postinc2,w,c
  3414  00A538  26E1               	addwf	fsr1l,f,c
  3415  00A53A  50DD               	movf	postdec2,w,c
  3416  00A53C  22E2               	addwfc	fsr1h,f,c
  3417  00A53E  0E01               	movlw	1
  3418  00A540  6EE7               	movwf	indf1,c
  3419  00A542                     l8949:
  3420  00A542  0100               	movlb	0	; () banked
  3421  00A544  51B3               	movf	f_write@wcnt& (0+255),w,b
  3422  00A546  0100               	movlb	0	; () banked
  3423  00A548  27AA               	addwf	f_write@wbuff& (0+255),f,b
  3424  00A54A  0100               	movlb	0	; () banked
  3425  00A54C  51B4               	movf	(f_write@wcnt+1)& (0+255),w,b
  3426  00A54E  0100               	movlb	0	; () banked
  3427  00A550  23AB               	addwfc	(f_write@wbuff+1)& (0+255),f,b
  3428                           
  3429                           ; BSR set to: 0
  3430  00A552  0100               	movlb	0	; () banked
  3431  00A554  EE20 F006          	lfsr	2,6
  3432  00A558  0100               	movlb	0	; () banked
  3433  00A55A  5191               	movf	f_write@fp& (0+255),w,b
  3434  00A55C  26D9               	addwf	fsr2l,f,c
  3435  00A55E  0100               	movlb	0	; () banked
  3436  00A560  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3437  00A562  22DA               	addwfc	fsr2h,f,c
  3438  00A564  0100               	movlb	0	; () banked
  3439  00A566  51B3               	movf	f_write@wcnt& (0+255),w,b
  3440  00A568  26DE               	addwf	postinc2,f,c
  3441  00A56A  0100               	movlb	0	; () banked
  3442  00A56C  51B4               	movf	(f_write@wcnt+1)& (0+255),w,b
  3443  00A56E  22DE               	addwfc	postinc2,f,c
  3444  00A570  0E00               	movlw	0
  3445  00A572  22DE               	addwfc	postinc2,f,c
  3446  00A574  22DD               	addwfc	postdec2,f,c
  3447  00A576  52DD               	movf	postdec2,f,c
  3448  00A578  52DD               	movf	postdec2,f,c
  3449                           
  3450                           ; BSR set to: 0
  3451  00A57A  C097  FFD9         	movff	f_write@bw,fsr2l
  3452  00A57E  C098  FFDA         	movff	f_write@bw+1,fsr2h
  3453  00A582  0100               	movlb	0	; () banked
  3454  00A584  51B3               	movf	f_write@wcnt& (0+255),w,b
  3455  00A586  26DE               	addwf	postinc2,f,c
  3456  00A588  0100               	movlb	0	; () banked
  3457  00A58A  51B4               	movf	(f_write@wcnt+1)& (0+255),w,b
  3458  00A58C  22DD               	addwfc	postdec2,f,c
  3459                           
  3460                           ; BSR set to: 0
  3461  00A58E  0100               	movlb	0	; () banked
  3462  00A590  51B3               	movf	f_write@wcnt& (0+255),w,b
  3463  00A592  0100               	movlb	0	; () banked
  3464  00A594  5F95               	subwf	f_write@btw& (0+255),f,b
  3465  00A596  0100               	movlb	0	; () banked
  3466  00A598  51B4               	movf	(f_write@wcnt+1)& (0+255),w,b
  3467  00A59A  0100               	movlb	0	; () banked
  3468  00A59C  5B96               	subwfb	(f_write@btw+1)& (0+255),f,b
  3469  00A59E                     l8957:
  3470                           
  3471                           ; BSR set to: 0
  3472  00A59E  0100               	movlb	0	; () banked
  3473  00A5A0  5196               	movf	(f_write@btw+1)& (0+255),w,b
  3474  00A5A2  1195               	iorwf	f_write@btw& (0+255),w,b
  3475  00A5A4  A4D8               	btfss	status,2,c
  3476  00A5A6  EF7B  F04E         	goto	l8831
  3477  00A5AA                     l8959:
  3478                           
  3479                           ; BSR set to: 0
  3480                           ;ff.c: 2886: }
  3481                           ;ff.c: 2888: if (fp->fptr > fp->fsize) fp->fsize = fp->fptr;
  3482  00A5AA  0100               	movlb	0	; () banked
  3483  00A5AC  EE20 F006          	lfsr	2,6
  3484  00A5B0  0100               	movlb	0	; () banked
  3485  00A5B2  5191               	movf	f_write@fp& (0+255),w,b
  3486  00A5B4  26D9               	addwf	fsr2l,f,c
  3487  00A5B6  0100               	movlb	0	; () banked
  3488  00A5B8  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3489  00A5BA  22DA               	addwfc	fsr2h,f,c
  3490  00A5BC  CFDE F099          	movff	postinc2,??_f_write
  3491  00A5C0  CFDE F09A          	movff	postinc2,??_f_write+1
  3492  00A5C4  CFDE F09B          	movff	postinc2,??_f_write+2
  3493  00A5C8  CFDE F09C          	movff	postinc2,??_f_write+3
  3494  00A5CC  0100               	movlb	0	; () banked
  3495  00A5CE  EE20 F00A          	lfsr	2,10
  3496  00A5D2  0100               	movlb	0	; () banked
  3497  00A5D4  5191               	movf	f_write@fp& (0+255),w,b
  3498  00A5D6  26D9               	addwf	fsr2l,f,c
  3499  00A5D8  0100               	movlb	0	; () banked
  3500  00A5DA  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3501  00A5DC  22DA               	addwfc	fsr2h,f,c
  3502  00A5DE  CFDE F09D          	movff	postinc2,??_f_write+4
  3503  00A5E2  CFDE F09E          	movff	postinc2,??_f_write+5
  3504  00A5E6  CFDE F09F          	movff	postinc2,??_f_write+6
  3505  00A5EA  CFDE F0A0          	movff	postinc2,??_f_write+7
  3506  00A5EE  0100               	movlb	0	; () banked
  3507  00A5F0  5199               	movf	??_f_write& (0+255),w,b
  3508  00A5F2  0100               	movlb	0	; () banked
  3509  00A5F4  5D9D               	subwf	(??_f_write+4)& (0+255),w,b
  3510  00A5F6  0100               	movlb	0	; () banked
  3511  00A5F8  519A               	movf	(??_f_write+1)& (0+255),w,b
  3512  00A5FA  0100               	movlb	0	; () banked
  3513  00A5FC  599E               	subwfb	(??_f_write+5)& (0+255),w,b
  3514  00A5FE  0100               	movlb	0	; () banked
  3515  00A600  519B               	movf	(??_f_write+2)& (0+255),w,b
  3516  00A602  0100               	movlb	0	; () banked
  3517  00A604  599F               	subwfb	(??_f_write+6)& (0+255),w,b
  3518  00A606  0100               	movlb	0	; () banked
  3519  00A608  519C               	movf	(??_f_write+3)& (0+255),w,b
  3520  00A60A  0100               	movlb	0	; () banked
  3521  00A60C  59A0               	subwfb	(??_f_write+7)& (0+255),w,b
  3522  00A60E  B0D8               	btfsc	status,0,c
  3523  00A610  D01C               	goto	l8963
  3524                           
  3525                           ; BSR set to: 0
  3526  00A612  0100               	movlb	0	; () banked
  3527  00A614  EE20 F006          	lfsr	2,6
  3528  00A618  0100               	movlb	0	; () banked
  3529  00A61A  5191               	movf	f_write@fp& (0+255),w,b
  3530  00A61C  26D9               	addwf	fsr2l,f,c
  3531  00A61E  0100               	movlb	0	; () banked
  3532  00A620  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3533  00A622  22DA               	addwfc	fsr2h,f,c
  3534  00A624  0100               	movlb	0	; () banked
  3535  00A626  EE10 F00A          	lfsr	1,10
  3536  00A62A  0100               	movlb	0	; () banked
  3537  00A62C  5191               	movf	f_write@fp& (0+255),w,b
  3538  00A62E  26E1               	addwf	fsr1l,f,c
  3539  00A630  0100               	movlb	0	; () banked
  3540  00A632  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3541  00A634  22E2               	addwfc	fsr1h,f,c
  3542  00A636  CFDE FFE6          	movff	postinc2,postinc1
  3543  00A63A  CFDE FFE6          	movff	postinc2,postinc1
  3544  00A63E  CFDE FFE6          	movff	postinc2,postinc1
  3545  00A642  CFDD FFE5          	movff	postdec2,postdec1
  3546  00A646  52E5               	movf	postdec1,f,c
  3547  00A648  52E5               	movf	postdec1,f,c
  3548  00A64A                     l8963:
  3549                           
  3550                           ; BSR set to: 0
  3551                           ;ff.c: 2889: fp->flag |= 0x20;
  3552  00A64A  0100               	movlb	0	; () banked
  3553  00A64C  EE20 F004          	lfsr	2,4
  3554  00A650  0100               	movlb	0	; () banked
  3555  00A652  5191               	movf	f_write@fp& (0+255),w,b
  3556  00A654  26D9               	addwf	fsr2l,f,c
  3557  00A656  0100               	movlb	0	; () banked
  3558  00A658  5192               	movf	(f_write@fp+1)& (0+255),w,b
  3559  00A65A  22DA               	addwfc	fsr2h,f,c
  3560  00A65C  0E00               	movlw	0
  3561  00A65E  8ADB               	bsf	plusw2,5,c
  3562                           
  3563                           ; BSR set to: 0
  3564                           ;ff.c: 2891: return FR_OK;
  3565  00A660  0E00               	movlw	0
  3566  00A662                     l829:
  3567                           
  3568                           ; BSR set to: 0
  3569  00A662  0012               	return	
  3570  00A664                     __end_of_f_write:
  3571                           	opt stack 0
  3572                           tblptru	equ	0xFF8
  3573                           tblptrh	equ	0xFF7
  3574                           tblptrl	equ	0xFF6
  3575                           tablat	equ	0xFF5
  3576                           postinc0	equ	0xFEE
  3577                           wreg	equ	0xFE8
  3578                           indf1	equ	0xFE7
  3579                           postinc1	equ	0xFE6
  3580                           postdec1	equ	0xFE5
  3581                           fsr1h	equ	0xFE2
  3582                           fsr1l	equ	0xFE1
  3583                           indf2	equ	0xFDF
  3584                           postinc2	equ	0xFDE
  3585                           postdec2	equ	0xFDD
  3586                           plusw2	equ	0xFDB
  3587                           fsr2h	equ	0xFDA
  3588                           fsr2l	equ	0xFD9
  3589                           status	equ	0xFD8
  3590                           
  3591 ;; *************** function _clmt_clust *****************
  3592 ;; Defined at:
  3593 ;;		line 1095 in file "ff.c"
  3594 ;; Parameters:    Size  Location     Type
  3595 ;;  fp              2   13[COMRAM] PTR struct .
  3596 ;;		 -> fp(34), 
  3597 ;;  ofs             4   15[COMRAM] unsigned long 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  ncl             4   30[COMRAM] unsigned long 
  3600 ;;  cl              4   24[COMRAM] unsigned long 
  3601 ;;  tbl             2   28[COMRAM] PTR unsigned long 
  3602 ;;		 -> NULL(0), 
  3603 ;; Return value:  Size  Location     Type
  3604 ;;                  4   13[COMRAM] unsigned long 
  3605 ;; Registers used:
  3606 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  3607 ;; Tracked objects:
  3608 ;;		On entry : 0/0
  3609 ;;		On exit  : 0/0
  3610 ;;		Unchanged: 0/0
  3611 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3612 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3613 ;;      Locals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3614 ;;      Temps:          5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3615 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3616 ;;Total ram usage:       21 bytes
  3617 ;; Hardware stack levels used:    1
  3618 ;; Hardware stack levels required when called:    1
  3619 ;; This function calls:
  3620 ;;		___lldiv
  3621 ;; This function is called by:
  3622 ;;		_f_write
  3623 ;;		_f_read
  3624 ;;		_f_lseek
  3625 ;; This function uses a non-reentrant model
  3626 ;;
  3627                           
  3628                           	psect	text3
  3629  005FA2                     __ptext3:
  3630                           	opt stack 0
  3631  005FA2                     _clmt_clust:
  3632                           	opt stack 28
  3633                           
  3634                           ;ff.c: 1100: DWORD cl, ncl, *tbl;
  3635                           ;ff.c: 1103: tbl = fp->cltbl + 1;
  3636                           
  3637                           ; BSR set to: 0
  3638                           ;incstack = 0
  3639  005FA2  EE20 F020          	lfsr	2,32
  3640  005FA6  500E               	movf	clmt_clust@fp,w,c
  3641  005FA8  26D9               	addwf	fsr2l,f,c
  3642  005FAA  500F               	movf	clmt_clust@fp+1,w,c
  3643  005FAC  22DA               	addwfc	fsr2h,f,c
  3644  005FAE  CFDE F014          	movff	postinc2,??_clmt_clust
  3645  005FB2  CFDD F015          	movff	postdec2,??_clmt_clust+1
  3646  005FB6  0E04               	movlw	4
  3647  005FB8  2414               	addwf	??_clmt_clust,w,c
  3648  005FBA  6E1D               	movwf	clmt_clust@tbl,c
  3649  005FBC  0E00               	movlw	0
  3650  005FBE  2015               	addwfc	??_clmt_clust+1,w,c
  3651  005FC0  6E1E               	movwf	clmt_clust@tbl+1,c
  3652                           
  3653                           ;ff.c: 1104: cl = ofs / ((UINT)512) / fp->fs->csize;
  3654  005FC2  C010  F014         	movff	clmt_clust@ofs,??_clmt_clust
  3655  005FC6  C011  F015         	movff	clmt_clust@ofs+1,??_clmt_clust+1
  3656  005FCA  C012  F016         	movff	clmt_clust@ofs+2,??_clmt_clust+2
  3657  005FCE  C013  F017         	movff	clmt_clust@ofs+3,??_clmt_clust+3
  3658  005FD2  0E0A               	movlw	10
  3659  005FD4  D005               	goto	u10680
  3660  005FD6                     u10685:
  3661  005FD6  90D8               	bcf	status,0,c
  3662  005FD8  3217               	rrcf	??_clmt_clust+3,f,c
  3663  005FDA  3216               	rrcf	??_clmt_clust+2,f,c
  3664  005FDC  3215               	rrcf	??_clmt_clust+1,f,c
  3665  005FDE  3214               	rrcf	??_clmt_clust,f,c
  3666  005FE0                     u10680:
  3667  005FE0  2EE8               	decfsz	wreg,f,c
  3668  005FE2  D7F9               	goto	u10685
  3669  005FE4  C014  F001         	movff	??_clmt_clust,___lldiv@dividend
  3670  005FE8  C015  F002         	movff	??_clmt_clust+1,___lldiv@dividend+1
  3671  005FEC  C016  F003         	movff	??_clmt_clust+2,___lldiv@dividend+2
  3672  005FF0  C017  F004         	movff	??_clmt_clust+3,___lldiv@dividend+3
  3673  005FF4  C00E  FFD9         	movff	clmt_clust@fp,fsr2l
  3674  005FF8  C00F  FFDA         	movff	clmt_clust@fp+1,fsr2h
  3675  005FFC  EE10 F002          	lfsr	1,2
  3676  006000  50DE               	movf	postinc2,w,c
  3677  006002  26E1               	addwf	fsr1l,f,c
  3678  006004  50DD               	movf	postdec2,w,c
  3679  006006  22E2               	addwfc	fsr1h,f,c
  3680  006008  50E7               	movf	indf1,w,c
  3681  00600A  6E18               	movwf	(??_clmt_clust+4)& (0+255),c
  3682  00600C  5018               	movf	??_clmt_clust+4,w,c
  3683  00600E  6E05               	movwf	___lldiv@divisor,c
  3684  006010  6A06               	clrf	___lldiv@divisor+1,c
  3685  006012  6A07               	clrf	___lldiv@divisor+2,c
  3686  006014  6A08               	clrf	___lldiv@divisor+3,c
  3687  006016  EC38  F02B         	call	___lldiv	;wreg free
  3688  00601A  C001  F019         	movff	?___lldiv,clmt_clust@cl
  3689  00601E  C002  F01A         	movff	?___lldiv+1,clmt_clust@cl+1
  3690  006022  C003  F01B         	movff	?___lldiv+2,clmt_clust@cl+2
  3691  006026  C004  F01C         	movff	?___lldiv+3,clmt_clust@cl+3
  3692  00602A                     l8081:
  3693                           
  3694                           ;ff.c: 1106: ncl = *tbl++;
  3695  00602A  C01D  FFD9         	movff	clmt_clust@tbl,fsr2l
  3696  00602E  C01E  FFDA         	movff	clmt_clust@tbl+1,fsr2h
  3697  006032  CFDE F01F          	movff	postinc2,clmt_clust@ncl
  3698  006036  CFDE F020          	movff	postinc2,clmt_clust@ncl+1
  3699  00603A  CFDE F021          	movff	postinc2,clmt_clust@ncl+2
  3700  00603E  CFDE F022          	movff	postinc2,clmt_clust@ncl+3
  3701  006042  0E04               	movlw	4
  3702  006044  261D               	addwf	clmt_clust@tbl,f,c
  3703  006046  0E00               	movlw	0
  3704  006048  221E               	addwfc	clmt_clust@tbl+1,f,c
  3705                           
  3706                           ;ff.c: 1107: if (!ncl) return 0;
  3707  00604A  5022               	movf	clmt_clust@ncl+3,w,c
  3708  00604C  101F               	iorwf	clmt_clust@ncl,w,c
  3709  00604E  1020               	iorwf	clmt_clust@ncl+1,w,c
  3710  006050  1021               	iorwf	clmt_clust@ncl+2,w,c
  3711  006052  A4D8               	btfss	status,2,c
  3712  006054  D008               	goto	l8091
  3713  006056  0E00               	movlw	0
  3714  006058  6E0E               	movwf	?_clmt_clust,c
  3715  00605A  0E00               	movlw	0
  3716  00605C  6E0F               	movwf	?_clmt_clust+1,c
  3717  00605E  0E00               	movlw	0
  3718  006060  6E10               	movwf	?_clmt_clust+2,c
  3719  006062  0E00               	movlw	0
  3720  006064  D02E               	goto	L2
  3721  006066                     l8091:
  3722                           
  3723                           ;ff.c: 1108: if (cl < ncl) break;
  3724  006066  501F               	movf	clmt_clust@ncl,w,c
  3725  006068  5C19               	subwf	clmt_clust@cl,w,c
  3726  00606A  5020               	movf	clmt_clust@ncl+1,w,c
  3727  00606C  581A               	subwfb	clmt_clust@cl+1,w,c
  3728  00606E  5021               	movf	clmt_clust@ncl+2,w,c
  3729  006070  581B               	subwfb	clmt_clust@cl+2,w,c
  3730  006072  5022               	movf	clmt_clust@ncl+3,w,c
  3731  006074  581C               	subwfb	clmt_clust@cl+3,w,c
  3732  006076  A0D8               	btfss	status,0,c
  3733  006078  D00D               	goto	l8097
  3734                           
  3735                           ;ff.c: 1109: cl -= ncl; tbl++;
  3736  00607A  501F               	movf	clmt_clust@ncl,w,c
  3737  00607C  5E19               	subwf	clmt_clust@cl,f,c
  3738  00607E  5020               	movf	clmt_clust@ncl+1,w,c
  3739  006080  5A1A               	subwfb	clmt_clust@cl+1,f,c
  3740  006082  5021               	movf	clmt_clust@ncl+2,w,c
  3741  006084  5A1B               	subwfb	clmt_clust@cl+2,f,c
  3742  006086  5022               	movf	clmt_clust@ncl+3,w,c
  3743  006088  5A1C               	subwfb	clmt_clust@cl+3,f,c
  3744  00608A  0E04               	movlw	4
  3745  00608C  261D               	addwf	clmt_clust@tbl,f,c
  3746  00608E  0E00               	movlw	0
  3747  006090  221E               	addwfc	clmt_clust@tbl+1,f,c
  3748                           
  3749                           ;ff.c: 1110: }
  3750  006092  D7CB               	goto	l8081
  3751  006094                     l8097:
  3752                           
  3753                           ;ff.c: 1111: return cl + *tbl;
  3754  006094  C01D  FFD9         	movff	clmt_clust@tbl,fsr2l
  3755  006098  C01E  FFDA         	movff	clmt_clust@tbl+1,fsr2h
  3756  00609C  CFDE F014          	movff	postinc2,??_clmt_clust
  3757  0060A0  CFDE F015          	movff	postinc2,??_clmt_clust+1
  3758  0060A4  CFDE F016          	movff	postinc2,??_clmt_clust+2
  3759  0060A8  CFDE F017          	movff	postinc2,??_clmt_clust+3
  3760  0060AC  5019               	movf	clmt_clust@cl,w,c
  3761  0060AE  2414               	addwf	??_clmt_clust,w,c
  3762  0060B0  6E0E               	movwf	?_clmt_clust,c
  3763  0060B2  501A               	movf	clmt_clust@cl+1,w,c
  3764  0060B4  2015               	addwfc	??_clmt_clust+1,w,c
  3765  0060B6  6E0F               	movwf	?_clmt_clust+1,c
  3766  0060B8  501B               	movf	clmt_clust@cl+2,w,c
  3767  0060BA  2016               	addwfc	??_clmt_clust+2,w,c
  3768  0060BC  6E10               	movwf	?_clmt_clust+2,c
  3769  0060BE  501C               	movf	clmt_clust@cl+3,w,c
  3770  0060C0  2017               	addwfc	??_clmt_clust+3,w,c
  3771  0060C2                     L2:
  3772  0060C2  6E11               	movwf	?_clmt_clust+3,c
  3773  0060C4  0012               	return	
  3774  0060C6                     __end_of_clmt_clust:
  3775                           	opt stack 0
  3776                           tblptru	equ	0xFF8
  3777                           tblptrh	equ	0xFF7
  3778                           tblptrl	equ	0xFF6
  3779                           tablat	equ	0xFF5
  3780                           postinc0	equ	0xFEE
  3781                           wreg	equ	0xFE8
  3782                           indf1	equ	0xFE7
  3783                           postinc1	equ	0xFE6
  3784                           postdec1	equ	0xFE5
  3785                           fsr1h	equ	0xFE2
  3786                           fsr1l	equ	0xFE1
  3787                           indf2	equ	0xFDF
  3788                           postinc2	equ	0xFDE
  3789                           postdec2	equ	0xFDD
  3790                           plusw2	equ	0xFDB
  3791                           fsr2h	equ	0xFDA
  3792                           fsr2l	equ	0xFD9
  3793                           status	equ	0xFD8
  3794                           
  3795 ;; *************** function _f_open *****************
  3796 ;; Defined at:
  3797 ;;		line 2532 in file "ff.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;  fp              2   84[BANK0 ] PTR struct .
  3800 ;;		 -> fp(34), 
  3801 ;;  path            2   86[BANK0 ] PTR const unsigned char 
  3802 ;;		 -> STR_5(9), STR_3(1), 
  3803 ;;  mode            1   88[BANK0 ] unsigned char 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  dj             25   23[BANK1 ] struct .
  3806 ;;  sfn            12    0[BANK1 ] unsigned char [12]
  3807 ;;  dw              4   16[BANK1 ] unsigned long 
  3808 ;;  cl              4   12[BANK1 ] unsigned long 
  3809 ;;  dir             2   21[BANK1 ] PTR unsigned char 
  3810 ;;		 -> NULL(0), FatFs(562), 
  3811 ;;  res             1   20[BANK1 ] enum E67
  3812 ;; Return value:  Size  Location     Type
  3813 ;;                  1    wreg      enum E3569
  3814 ;; Registers used:
  3815 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3816 ;; Tracked objects:
  3817 ;;		On entry : 0/0
  3818 ;;		On exit  : 0/0
  3819 ;;		Unchanged: 0/0
  3820 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  3821 ;;      Params:         0       5       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3822 ;;      Locals:         0       0      48       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3823 ;;      Temps:          0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3824 ;;      Totals:         0      31      48       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  3825 ;;Total ram usage:       79 bytes
  3826 ;; Hardware stack levels used:    1
  3827 ;; Hardware stack levels required when called:   12
  3828 ;; This function calls:
  3829 ;;		_dir_register
  3830 ;;		_find_volume
  3831 ;;		_follow_path
  3832 ;;		_ld_clust
  3833 ;;		_move_window
  3834 ;;		_remove_chain
  3835 ;;		_st_clust
  3836 ;; This function is called by:
  3837 ;;		_main
  3838 ;; This function uses a non-reentrant model
  3839 ;;
  3840                           
  3841                           	psect	text4
  3842  00943E                     __ptext4:
  3843                           	opt stack 0
  3844  00943E                     _f_open:
  3845                           	opt stack 18
  3846                           
  3847                           ;ff.c: 2538: FRESULT res;
  3848                           ;ff.c: 2539: DIR dj;
  3849                           ;ff.c: 2540: BYTE *dir;
  3850                           ;ff.c: 2541: BYTE sfn[12];
  3851                           ;ff.c: 2543: DWORD dw, cl;
  3852                           ;ff.c: 2546: abc = 12;
  3853                           
  3854                           ;incstack = 0
  3855  00943E  0E00               	movlw	0
  3856  009440  0101               	movlb	1	; () banked
  3857  009442  6F62               	movwf	(_abc+1)& (0+255),b
  3858  009444  0E0C               	movlw	12
  3859  009446  0101               	movlb	1	; () banked
  3860  009448  6F61               	movwf	_abc& (0+255),b
  3861                           
  3862                           ; BSR set to: 1
  3863                           ;ff.c: 2547: if (!fp) return FR_INVALID_OBJECT;
  3864  00944A  0100               	movlb	0	; () banked
  3865  00944C  51D5               	movf	(f_open@fp+1)& (0+255),w,b
  3866  00944E  11D4               	iorwf	f_open@fp& (0+255),w,b
  3867  009450  A4D8               	btfss	status,2,c
  3868  009452  D002               	goto	l8647
  3869                           
  3870                           ; BSR set to: 0
  3871  009454  0E09               	movlw	9
  3872  009456  D3B1               	goto	l778
  3873  009458                     l8647:
  3874                           
  3875                           ; BSR set to: 0
  3876                           ;ff.c: 2548: fp->fs = 0;
  3877  009458  C0D4  FFD9         	movff	f_open@fp,fsr2l
  3878  00945C  C0D5  FFDA         	movff	f_open@fp+1,fsr2h
  3879  009460  0E00               	movlw	0
  3880  009462  6EDE               	movwf	postinc2,c
  3881  009464  0E00               	movlw	0
  3882  009466  6EDD               	movwf	postdec2,c
  3883                           
  3884                           ; BSR set to: 0
  3885                           ;ff.c: 2549: abc++;
  3886  009468  0101               	movlb	1	; () banked
  3887  00946A  4B61               	infsnz	_abc& (0+255),f,b
  3888  00946C  2B62               	incf	(_abc+1)& (0+255),f,b
  3889                           
  3890                           ; BSR set to: 1
  3891                           ;ff.c: 2552: abc = 61;
  3892  00946E  0E00               	movlw	0
  3893  009470  0101               	movlb	1	; () banked
  3894  009472  6F62               	movwf	(_abc+1)& (0+255),b
  3895  009474  0E3D               	movlw	61
  3896  009476  0101               	movlb	1	; () banked
  3897  009478  6F61               	movwf	_abc& (0+255),b
  3898                           
  3899                           ; BSR set to: 1
  3900                           ;ff.c: 2553: mode &= 0x01 | 0x02 | 0x08 | 0x10 | 0x04;
  3901  00947A  0E1F               	movlw	31
  3902  00947C  0100               	movlb	0	; () banked
  3903  00947E  17D8               	andwf	f_open@mode& (0+255),f,b
  3904                           
  3905                           ; BSR set to: 0
  3906                           ;ff.c: 2554: res = find_volume(&dj.fs, &path, (BYTE)(mode & ~0x01));
  3907  009480  0101               	movlb	1	; () banked
  3908  009482  0E01               	movlw	high f_open@dj
  3909  009484  6E6B               	movwf	find_volume@rfs+1,c
  3910  009486  0101               	movlb	1	; () banked
  3911  009488  0E17               	movlw	low f_open@dj
  3912  00948A  6E6A               	movwf	find_volume@rfs,c
  3913  00948C  0100               	movlb	0	; () banked
  3914  00948E  0E00               	movlw	high f_open@path
  3915  009490  6E6D               	movwf	find_volume@path+1,c
  3916  009492  0100               	movlb	0	; () banked
  3917  009494  0ED6               	movlw	low f_open@path
  3918  009496  6E6C               	movwf	find_volume@path,c
  3919  009498  0100               	movlb	0	; () banked
  3920  00949A  51D8               	movf	f_open@mode& (0+255),w,b
  3921  00949C  0BFE               	andlw	254
  3922  00949E  6E6E               	movwf	find_volume@wmode,c
  3923  0094A0  EC32  F053         	call	_find_volume	;wreg free
  3924  0094A4  0101               	movlb	1	; () banked
  3925  0094A6  6F14               	movwf	f_open@res& (0+255),b
  3926                           
  3927                           ; BSR set to: 1
  3928                           ;ff.c: 2561: abc++;
  3929  0094A8  0101               	movlb	1	; () banked
  3930  0094AA  4B61               	infsnz	_abc& (0+255),f,b
  3931  0094AC  2B62               	incf	(_abc+1)& (0+255),f,b
  3932                           
  3933                           ; BSR set to: 1
  3934                           ;ff.c: 2562: if (res == FR_OK) {
  3935  0094AE  0101               	movlb	1	; () banked
  3936  0094B0  6714               	tstfsz	f_open@res& (0+255),b
  3937  0094B2  D381               	goto	l8799
  3938                           
  3939                           ; BSR set to: 1
  3940                           ;ff.c: 2563: abc = 96;
  3941  0094B4  0E00               	movlw	0
  3942  0094B6  0101               	movlb	1	; () banked
  3943  0094B8  6F62               	movwf	(_abc+1)& (0+255),b
  3944  0094BA  0E60               	movlw	96
  3945  0094BC  0101               	movlb	1	; () banked
  3946  0094BE  6F61               	movwf	_abc& (0+255),b
  3947                           
  3948                           ; BSR set to: 1
  3949                           ;ff.c: 2564: (dj).fn = sfn;
  3950  0094C0  0101               	movlb	1	; () banked
  3951  0094C2  0E01               	movlw	high f_open@sfn
  3952  0094C4  0101               	movlb	1	; () banked
  3953  0094C6  6F2C               	movwf	(f_open@dj+21)& (0+255),b
  3954  0094C8  0101               	movlb	1	; () banked
  3955  0094CA  0E00               	movlw	low f_open@sfn
  3956  0094CC  0101               	movlb	1	; () banked
  3957  0094CE  6F2B               	movwf	(f_open@dj+20)& (0+255),b
  3958                           
  3959                           ; BSR set to: 1
  3960                           ;ff.c: 2565: res = follow_path(&dj, path);
  3961  0094D0  0101               	movlb	1	; () banked
  3962  0094D2  0E01               	movlw	high f_open@dj
  3963  0094D4  0100               	movlb	0	; () banked
  3964  0094D6  6FA9               	movwf	(follow_path@dp+1)& (0+255),b
  3965  0094D8  0101               	movlb	1	; () banked
  3966  0094DA  0E17               	movlw	low f_open@dj
  3967  0094DC  0100               	movlb	0	; () banked
  3968  0094DE  6FA8               	movwf	follow_path@dp& (0+255),b
  3969  0094E0  0100               	movlb	0	; () banked
  3970  0094E2  C0D7  F0AB         	movff	f_open@path+1,follow_path@path+1
  3971  0094E6  0100               	movlb	0	; () banked
  3972  0094E8  C0D6  F0AA         	movff	f_open@path,follow_path@path
  3973  0094EC  EC97  F036         	call	_follow_path	;wreg free
  3974  0094F0  0101               	movlb	1	; () banked
  3975  0094F2  6F14               	movwf	f_open@res& (0+255),b
  3976                           
  3977                           ; BSR set to: 1
  3978                           ;ff.c: 2566: dir = dj.dir;
  3979  0094F4  0101               	movlb	1	; () banked
  3980  0094F6  C12A  F116         	movff	f_open@dj+19,f_open@dir+1
  3981  0094FA  0101               	movlb	1	; () banked
  3982  0094FC  C129  F115         	movff	f_open@dj+18,f_open@dir
  3983                           
  3984                           ; BSR set to: 1
  3985                           ;ff.c: 2568: if (res == FR_OK) {
  3986  009500  0101               	movlb	1	; () banked
  3987  009502  6714               	tstfsz	f_open@res& (0+255),b
  3988  009504  D00E               	goto	l8677
  3989                           
  3990                           ; BSR set to: 1
  3991                           ;ff.c: 2569: abc = 97;
  3992  009506  0E00               	movlw	0
  3993  009508  0101               	movlb	1	; () banked
  3994  00950A  6F62               	movwf	(_abc+1)& (0+255),b
  3995  00950C  0E61               	movlw	97
  3996  00950E  0101               	movlb	1	; () banked
  3997  009510  6F61               	movwf	_abc& (0+255),b
  3998                           
  3999                           ; BSR set to: 1
  4000                           ;ff.c: 2570: if (!dir)
  4001  009512  0101               	movlb	1	; () banked
  4002  009514  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4003  009516  1115               	iorwf	f_open@dir& (0+255),w,b
  4004  009518  A4D8               	btfss	status,2,c
  4005  00951A  D003               	goto	l8677
  4006                           
  4007                           ; BSR set to: 1
  4008                           ;ff.c: 2571: res = FR_INVALID_NAME;
  4009  00951C  0E06               	movlw	6
  4010  00951E  0101               	movlb	1	; () banked
  4011  009520  6F14               	movwf	f_open@res& (0+255),b
  4012  009522                     l8677:
  4013                           
  4014                           ; BSR set to: 1
  4015                           ;ff.c: 2576: }
  4016                           ;ff.c: 2577: abc++;
  4017  009522  0101               	movlb	1	; () banked
  4018  009524  4B61               	infsnz	_abc& (0+255),f,b
  4019  009526  2B62               	incf	(_abc+1)& (0+255),f,b
  4020                           
  4021                           ; BSR set to: 1
  4022                           ;ff.c: 2579: if (mode & (0x08 | 0x10 | 0x04)) {
  4023  009528  C0D8  F0D9         	movff	f_open@mode,??_f_open
  4024  00952C  0E1C               	movlw	28
  4025  00952E  0100               	movlb	0	; () banked
  4026  009530  17D9               	andwf	??_f_open& (0+255),f,b
  4027  009532  B4D8               	btfsc	status,2,c
  4028  009534  D1A6               	goto	l8753
  4029                           
  4030                           ; BSR set to: 0
  4031                           ;ff.c: 2580: abc = 98;
  4032  009536  0E00               	movlw	0
  4033  009538  0101               	movlb	1	; () banked
  4034  00953A  6F62               	movwf	(_abc+1)& (0+255),b
  4035  00953C  0E62               	movlw	98
  4036  00953E  0101               	movlb	1	; () banked
  4037  009540  6F61               	movwf	_abc& (0+255),b
  4038                           
  4039                           ;ff.c: 2581: if (res != FR_OK) { abc = 133;
  4040  009542  0101               	movlb	1	; () banked
  4041  009544  5114               	movf	f_open@res& (0+255),w,b
  4042  009546  B4D8               	btfsc	status,2,c
  4043  009548  D026               	goto	l8695
  4044                           
  4045                           ; BSR set to: 1
  4046  00954A  0E00               	movlw	0
  4047  00954C  0101               	movlb	1	; () banked
  4048  00954E  6F62               	movwf	(_abc+1)& (0+255),b
  4049  009550  0E85               	movlw	133
  4050  009552  0101               	movlb	1	; () banked
  4051  009554  6F61               	movwf	_abc& (0+255),b
  4052                           
  4053                           ; BSR set to: 1
  4054                           ;ff.c: 2582: if (res == FR_NO_FILE)
  4055  009556  0101               	movlb	1	; () banked
  4056  009558  5114               	movf	f_open@res& (0+255),w,b
  4057  00955A  0A04               	xorlw	4
  4058  00955C  A4D8               	btfss	status,2,c
  4059  00955E  D00C               	goto	l8689
  4060                           
  4061                           ; BSR set to: 1
  4062                           ;ff.c: 2586: res = dir_register(&dj);
  4063  009560  0101               	movlb	1	; () banked
  4064  009562  0E01               	movlw	high f_open@dj
  4065  009564  0100               	movlb	0	; () banked
  4066  009566  6FAC               	movwf	(dir_register@dp+1)& (0+255),b
  4067  009568  0101               	movlb	1	; () banked
  4068  00956A  0E17               	movlw	low f_open@dj
  4069  00956C  0100               	movlb	0	; () banked
  4070  00956E  6FAB               	movwf	dir_register@dp& (0+255),b
  4071  009570  EC4B  F02E         	call	_dir_register	;wreg free
  4072  009574  0101               	movlb	1	; () banked
  4073  009576  6F14               	movwf	f_open@res& (0+255),b
  4074  009578                     l8689:
  4075                           
  4076                           ; BSR set to: 1
  4077                           ;ff.c: 2588: mode |= 0x08;
  4078  009578  0100               	movlb	0	; () banked
  4079  00957A  87D8               	bsf	f_open@mode& (0+255),3,b
  4080                           
  4081                           ; BSR set to: 0
  4082                           ;ff.c: 2589: dir = dj.dir; abc = 157;
  4083  00957C  0101               	movlb	1	; () banked
  4084  00957E  C12A  F116         	movff	f_open@dj+19,f_open@dir+1
  4085  009582  0101               	movlb	1	; () banked
  4086  009584  C129  F115         	movff	f_open@dj+18,f_open@dir
  4087                           
  4088                           ; BSR set to: 1
  4089  009588  0E00               	movlw	0
  4090  00958A  0101               	movlb	1	; () banked
  4091  00958C  6F62               	movwf	(_abc+1)& (0+255),b
  4092  00958E  0E9D               	movlw	157
  4093  009590  0101               	movlb	1	; () banked
  4094  009592  6F61               	movwf	_abc& (0+255),b
  4095                           
  4096                           ;ff.c: 2590: }
  4097  009594  D01F               	goto	l8703
  4098  009596                     l8695:
  4099                           
  4100                           ; BSR set to: 1
  4101                           ;ff.c: 2591: else { abc = 134;
  4102  009596  0E00               	movlw	0
  4103  009598  0101               	movlb	1	; () banked
  4104  00959A  6F62               	movwf	(_abc+1)& (0+255),b
  4105  00959C  0E86               	movlw	134
  4106  00959E  0101               	movlb	1	; () banked
  4107  0095A0  6F61               	movwf	_abc& (0+255),b
  4108                           
  4109                           ; BSR set to: 1
  4110                           ;ff.c: 2592: if (dir[11] & (0x01 | 0x10)) {
  4111  0095A2  0101               	movlb	1	; () banked
  4112  0095A4  EE20 F00B          	lfsr	2,11
  4113  0095A8  0101               	movlb	1	; () banked
  4114  0095AA  5115               	movf	f_open@dir& (0+255),w,b
  4115  0095AC  26D9               	addwf	fsr2l,f,c
  4116  0095AE  0101               	movlb	1	; () banked
  4117  0095B0  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4118  0095B2  22DA               	addwfc	fsr2h,f,c
  4119  0095B4  50DF               	movf	indf2,w,c
  4120  0095B6  0100               	movlb	0	; () banked
  4121  0095B8  6FD9               	movwf	??_f_open& (0+255),b
  4122  0095BA  0E11               	movlw	17
  4123  0095BC  0100               	movlb	0	; () banked
  4124  0095BE  17D9               	andwf	??_f_open& (0+255),f,b
  4125  0095C0  B4D8               	btfsc	status,2,c
  4126  0095C2  D002               	goto	l786
  4127                           
  4128                           ; BSR set to: 0
  4129                           ;ff.c: 2593: res = FR_DENIED;
  4130  0095C4  0E07               	movlw	7
  4131  0095C6  D004               	goto	L3
  4132  0095C8                     l786:
  4133                           
  4134                           ; BSR set to: 0
  4135                           ;ff.c: 2595: if (mode & 0x04)
  4136  0095C8  0100               	movlb	0	; () banked
  4137  0095CA  A5D8               	btfss	f_open@mode& (0+255),2,b
  4138  0095CC  D003               	goto	l8703
  4139                           
  4140                           ; BSR set to: 0
  4141                           ;ff.c: 2596: res = FR_EXIST;
  4142  0095CE  0E08               	movlw	8
  4143  0095D0                     L3:
  4144  0095D0  0101               	movlb	1	; () banked
  4145  0095D2  6F14               	movwf	f_open@res& (0+255),b
  4146  0095D4                     l8703:
  4147                           
  4148                           ;ff.c: 2597: }
  4149                           ;ff.c: 2598: }
  4150                           ;ff.c: 2599: if (res == FR_OK && (mode & 0x08)) { abc = 136;
  4151  0095D4  0101               	movlb	1	; () banked
  4152  0095D6  6714               	tstfsz	f_open@res& (0+255),b
  4153  0095D8  D183               	goto	l8765
  4154                           
  4155                           ; BSR set to: 1
  4156  0095DA  0100               	movlb	0	; () banked
  4157  0095DC  A7D8               	btfss	f_open@mode& (0+255),3,b
  4158  0095DE  D180               	goto	l8765
  4159                           
  4160                           ; BSR set to: 0
  4161  0095E0  0E00               	movlw	0
  4162  0095E2  0101               	movlb	1	; () banked
  4163  0095E4  6F62               	movwf	(_abc+1)& (0+255),b
  4164  0095E6  0E88               	movlw	136
  4165  0095E8  0101               	movlb	1	; () banked
  4166  0095EA  6F61               	movwf	_abc& (0+255),b
  4167                           
  4168                           ;ff.c: 2600: dw = ((DWORD)(2016 - 1980) << 25 | (DWORD)7 << 21 | (DWORD)30 << 16);
  4169  0095EC  0E00               	movlw	0
  4170  0095EE  0101               	movlb	1	; () banked
  4171  0095F0  6F10               	movwf	f_open@dw& (0+255),b
  4172  0095F2  0E00               	movlw	0
  4173  0095F4  0101               	movlb	1	; () banked
  4174  0095F6  6F11               	movwf	(f_open@dw+1)& (0+255),b
  4175  0095F8  0EFE               	movlw	254
  4176  0095FA  0101               	movlb	1	; () banked
  4177  0095FC  6F12               	movwf	(f_open@dw+2)& (0+255),b
  4178  0095FE  0E48               	movlw	72
  4179  009600  0101               	movlb	1	; () banked
  4180  009602  6F13               	movwf	(f_open@dw+3)& (0+255),b
  4181                           
  4182                           ; BSR set to: 1
  4183                           ;ff.c: 2601: *(BYTE*)(dir + 14)=(BYTE)(dw); *((BYTE*)(dir + 14)+1)=(BYTE)((WORD)(dw)>>8)
      +                          ; *((BYTE*)(dir + 14)+2)=(BYTE)((DWORD)(dw)>>16); *((BYTE*)(dir + 14)+3)=(BYTE)((DWORD)(
      +                          dw)>>24);
  4184  009604  0101               	movlb	1	; () banked
  4185  009606  EE20 F00E          	lfsr	2,14
  4186  00960A  0101               	movlb	1	; () banked
  4187  00960C  5115               	movf	f_open@dir& (0+255),w,b
  4188  00960E  26D9               	addwf	fsr2l,f,c
  4189  009610  0101               	movlb	1	; () banked
  4190  009612  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4191  009614  22DA               	addwfc	fsr2h,f,c
  4192  009616  0101               	movlb	1	; () banked
  4193  009618  C110  FFDF         	movff	f_open@dw,indf2
  4194                           
  4195                           ; BSR set to: 1
  4196  00961C  0101               	movlb	1	; () banked
  4197  00961E  EE20 F00F          	lfsr	2,15
  4198  009622  0101               	movlb	1	; () banked
  4199  009624  5115               	movf	f_open@dir& (0+255),w,b
  4200  009626  26D9               	addwf	fsr2l,f,c
  4201  009628  0101               	movlb	1	; () banked
  4202  00962A  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4203  00962C  22DA               	addwfc	fsr2h,f,c
  4204  00962E  0101               	movlb	1	; () banked
  4205  009630  C111  F0D9         	movff	f_open@dw+1,??_f_open
  4206  009634  C0D9  F0DA         	movff	??_f_open,??_f_open+1
  4207  009638  0100               	movlb	0	; () banked
  4208  00963A  6BDB               	clrf	(??_f_open+2)& (0+255),b
  4209  00963C  0100               	movlb	0	; () banked
  4210  00963E  51DA               	movf	(??_f_open+1)& (0+255),w,b
  4211  009640  6EDF               	movwf	indf2,c
  4212                           
  4213                           ; BSR set to: 0
  4214  009642  0101               	movlb	1	; () banked
  4215  009644  EE20 F010          	lfsr	2,16
  4216  009648  0101               	movlb	1	; () banked
  4217  00964A  5115               	movf	f_open@dir& (0+255),w,b
  4218  00964C  26D9               	addwf	fsr2l,f,c
  4219  00964E  0101               	movlb	1	; () banked
  4220  009650  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4221  009652  22DA               	addwfc	fsr2h,f,c
  4222  009654  0101               	movlb	1	; () banked
  4223  009656  C112  FFDF         	movff	f_open@dw+2,indf2
  4224                           
  4225                           ; BSR set to: 1
  4226  00965A  0101               	movlb	1	; () banked
  4227  00965C  EE20 F011          	lfsr	2,17
  4228  009660  0101               	movlb	1	; () banked
  4229  009662  5115               	movf	f_open@dir& (0+255),w,b
  4230  009664  26D9               	addwf	fsr2l,f,c
  4231  009666  0101               	movlb	1	; () banked
  4232  009668  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4233  00966A  22DA               	addwfc	fsr2h,f,c
  4234  00966C  0101               	movlb	1	; () banked
  4235  00966E  C113  FFDF         	movff	f_open@dw+3,indf2
  4236                           
  4237                           ; BSR set to: 1
  4238                           ;ff.c: 2602: *(BYTE*)(dir + 22)=(BYTE)(dw); *((BYTE*)(dir + 22)+1)=(BYTE)((WORD)(dw)>>8)
      +                          ; *((BYTE*)(dir + 22)+2)=(BYTE)((DWORD)(dw)>>16); *((BYTE*)(dir + 22)+3)=(BYTE)((DWORD)(
      +                          dw)>>24);
  4239  009672  0101               	movlb	1	; () banked
  4240  009674  EE20 F016          	lfsr	2,22
  4241  009678  0101               	movlb	1	; () banked
  4242  00967A  5115               	movf	f_open@dir& (0+255),w,b
  4243  00967C  26D9               	addwf	fsr2l,f,c
  4244  00967E  0101               	movlb	1	; () banked
  4245  009680  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4246  009682  22DA               	addwfc	fsr2h,f,c
  4247  009684  0101               	movlb	1	; () banked
  4248  009686  C110  FFDF         	movff	f_open@dw,indf2
  4249                           
  4250                           ; BSR set to: 1
  4251  00968A  0101               	movlb	1	; () banked
  4252  00968C  EE20 F017          	lfsr	2,23
  4253  009690  0101               	movlb	1	; () banked
  4254  009692  5115               	movf	f_open@dir& (0+255),w,b
  4255  009694  26D9               	addwf	fsr2l,f,c
  4256  009696  0101               	movlb	1	; () banked
  4257  009698  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4258  00969A  22DA               	addwfc	fsr2h,f,c
  4259  00969C  0101               	movlb	1	; () banked
  4260  00969E  C111  F0D9         	movff	f_open@dw+1,??_f_open
  4261  0096A2  C0D9  F0DA         	movff	??_f_open,??_f_open+1
  4262  0096A6  0100               	movlb	0	; () banked
  4263  0096A8  6BDB               	clrf	(??_f_open+2)& (0+255),b
  4264  0096AA  0100               	movlb	0	; () banked
  4265  0096AC  51DA               	movf	(??_f_open+1)& (0+255),w,b
  4266  0096AE  6EDF               	movwf	indf2,c
  4267                           
  4268                           ; BSR set to: 0
  4269  0096B0  0101               	movlb	1	; () banked
  4270  0096B2  EE20 F018          	lfsr	2,24
  4271  0096B6  0101               	movlb	1	; () banked
  4272  0096B8  5115               	movf	f_open@dir& (0+255),w,b
  4273  0096BA  26D9               	addwf	fsr2l,f,c
  4274  0096BC  0101               	movlb	1	; () banked
  4275  0096BE  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4276  0096C0  22DA               	addwfc	fsr2h,f,c
  4277  0096C2  0101               	movlb	1	; () banked
  4278  0096C4  C112  FFDF         	movff	f_open@dw+2,indf2
  4279                           
  4280                           ; BSR set to: 1
  4281  0096C8  0101               	movlb	1	; () banked
  4282  0096CA  EE20 F019          	lfsr	2,25
  4283  0096CE  0101               	movlb	1	; () banked
  4284  0096D0  5115               	movf	f_open@dir& (0+255),w,b
  4285  0096D2  26D9               	addwf	fsr2l,f,c
  4286  0096D4  0101               	movlb	1	; () banked
  4287  0096D6  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4288  0096D8  22DA               	addwfc	fsr2h,f,c
  4289  0096DA  0101               	movlb	1	; () banked
  4290  0096DC  C113  FFDF         	movff	f_open@dw+3,indf2
  4291                           
  4292                           ; BSR set to: 1
  4293                           ;ff.c: 2603: dir[11] = 0;
  4294  0096E0  0101               	movlb	1	; () banked
  4295  0096E2  EE20 F00B          	lfsr	2,11
  4296  0096E6  0101               	movlb	1	; () banked
  4297  0096E8  5115               	movf	f_open@dir& (0+255),w,b
  4298  0096EA  26D9               	addwf	fsr2l,f,c
  4299  0096EC  0101               	movlb	1	; () banked
  4300  0096EE  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4301  0096F0  22DA               	addwfc	fsr2h,f,c
  4302  0096F2  0E00               	movlw	0
  4303  0096F4  6EDF               	movwf	indf2,c
  4304                           
  4305                           ; BSR set to: 1
  4306                           ;ff.c: 2604: *(BYTE*)(dir + 28)=(BYTE)(0); *((BYTE*)(dir + 28)+1)=(BYTE)((WORD)(0)>>8); 
      +                          *((BYTE*)(dir + 28)+2)=(BYTE)((DWORD)(0)>>16); *((BYTE*)(dir + 28)+3)=(BYTE)((DWORD)(0)>
      +                          >24);
  4307  0096F6  0101               	movlb	1	; () banked
  4308  0096F8  EE20 F01C          	lfsr	2,28
  4309  0096FC  0101               	movlb	1	; () banked
  4310  0096FE  5115               	movf	f_open@dir& (0+255),w,b
  4311  009700  26D9               	addwf	fsr2l,f,c
  4312  009702  0101               	movlb	1	; () banked
  4313  009704  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4314  009706  22DA               	addwfc	fsr2h,f,c
  4315  009708  0E00               	movlw	0
  4316  00970A  6EDF               	movwf	indf2,c
  4317                           
  4318                           ; BSR set to: 1
  4319  00970C  0101               	movlb	1	; () banked
  4320  00970E  EE20 F01D          	lfsr	2,29
  4321  009712  0101               	movlb	1	; () banked
  4322  009714  5115               	movf	f_open@dir& (0+255),w,b
  4323  009716  26D9               	addwf	fsr2l,f,c
  4324  009718  0101               	movlb	1	; () banked
  4325  00971A  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4326  00971C  22DA               	addwfc	fsr2h,f,c
  4327  00971E  0E00               	movlw	0
  4328  009720  6EDF               	movwf	indf2,c
  4329                           
  4330                           ; BSR set to: 1
  4331  009722  0101               	movlb	1	; () banked
  4332  009724  EE20 F01E          	lfsr	2,30
  4333  009728  0101               	movlb	1	; () banked
  4334  00972A  5115               	movf	f_open@dir& (0+255),w,b
  4335  00972C  26D9               	addwf	fsr2l,f,c
  4336  00972E  0101               	movlb	1	; () banked
  4337  009730  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4338  009732  22DA               	addwfc	fsr2h,f,c
  4339  009734  0E00               	movlw	0
  4340  009736  6EDF               	movwf	indf2,c
  4341                           
  4342                           ; BSR set to: 1
  4343  009738  0101               	movlb	1	; () banked
  4344  00973A  EE20 F01F          	lfsr	2,31
  4345  00973E  0101               	movlb	1	; () banked
  4346  009740  5115               	movf	f_open@dir& (0+255),w,b
  4347  009742  26D9               	addwf	fsr2l,f,c
  4348  009744  0101               	movlb	1	; () banked
  4349  009746  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4350  009748  22DA               	addwfc	fsr2h,f,c
  4351  00974A  0E00               	movlw	0
  4352  00974C  6EDF               	movwf	indf2,c
  4353                           
  4354                           ; BSR set to: 1
  4355                           ;ff.c: 2605: cl = ld_clust(dj.fs, dir);
  4356  00974E  0101               	movlb	1	; () banked
  4357  009750  C118  F002         	movff	f_open@dj+1,ld_clust@fs+1
  4358  009754  0101               	movlb	1	; () banked
  4359  009756  C117  F001         	movff	f_open@dj,ld_clust@fs
  4360  00975A  0101               	movlb	1	; () banked
  4361  00975C  C116  F004         	movff	f_open@dir+1,ld_clust@dir+1
  4362  009760  0101               	movlb	1	; () banked
  4363  009762  C115  F003         	movff	f_open@dir,ld_clust@dir
  4364  009766  ECE2  F02D         	call	_ld_clust	;wreg free
  4365  00976A  C001  F10C         	movff	?_ld_clust,f_open@cl
  4366  00976E  C002  F10D         	movff	?_ld_clust+1,f_open@cl+1
  4367  009772  C003  F10E         	movff	?_ld_clust+2,f_open@cl+2
  4368  009776  C004  F10F         	movff	?_ld_clust+3,f_open@cl+3
  4369                           
  4370                           ;ff.c: 2606: st_clust(dir, 0);
  4371  00977A  0101               	movlb	1	; () banked
  4372  00977C  C116  F002         	movff	f_open@dir+1,st_clust@dir+1
  4373  009780  0101               	movlb	1	; () banked
  4374  009782  C115  F001         	movff	f_open@dir,st_clust@dir
  4375  009786  0E00               	movlw	0
  4376  009788  6E03               	movwf	st_clust@cl,c
  4377  00978A  0E00               	movlw	0
  4378  00978C  6E04               	movwf	st_clust@cl+1,c
  4379  00978E  0E00               	movlw	0
  4380  009790  6E05               	movwf	st_clust@cl+2,c
  4381  009792  0E00               	movlw	0
  4382  009794  6E06               	movwf	st_clust@cl+3,c
  4383  009796  ECCC  F029         	call	_st_clust	;wreg free
  4384                           
  4385                           ;ff.c: 2607: dj.fs->wflag = 1;
  4386  00979A  0101               	movlb	1	; () banked
  4387  00979C  EE20 F004          	lfsr	2,4
  4388  0097A0  0101               	movlb	1	; () banked
  4389  0097A2  5117               	movf	f_open@dj& (0+255),w,b
  4390  0097A4  26D9               	addwf	fsr2l,f,c
  4391  0097A6  0101               	movlb	1	; () banked
  4392  0097A8  5118               	movf	(f_open@dj+1)& (0+255),w,b
  4393  0097AA  22DA               	addwfc	fsr2h,f,c
  4394  0097AC  0E01               	movlw	1
  4395  0097AE  6EDF               	movwf	indf2,c
  4396                           
  4397                           ; BSR set to: 1
  4398                           ;ff.c: 2608: if (cl) {
  4399  0097B0  0101               	movlb	1	; () banked
  4400  0097B2  510F               	movf	(f_open@cl+3)& (0+255),w,b
  4401  0097B4  110C               	iorwf	f_open@cl& (0+255),w,b
  4402  0097B6  110D               	iorwf	(f_open@cl+1)& (0+255),w,b
  4403  0097B8  110E               	iorwf	(f_open@cl+2)& (0+255),w,b
  4404  0097BA  B4D8               	btfsc	status,2,c
  4405  0097BC  D091               	goto	l8765
  4406                           
  4407                           ; BSR set to: 1
  4408                           ;ff.c: 2609: dw = dj.fs->winsect;
  4409  0097BE  0101               	movlb	1	; () banked
  4410  0097C0  EE20 F02E          	lfsr	2,46
  4411  0097C4  0101               	movlb	1	; () banked
  4412  0097C6  5117               	movf	f_open@dj& (0+255),w,b
  4413  0097C8  26D9               	addwf	fsr2l,f,c
  4414  0097CA  0101               	movlb	1	; () banked
  4415  0097CC  5118               	movf	(f_open@dj+1)& (0+255),w,b
  4416  0097CE  22DA               	addwfc	fsr2h,f,c
  4417  0097D0  0101               	movlb	1	; () banked
  4418  0097D2  CFDE F110          	movff	postinc2,f_open@dw
  4419  0097D6  0101               	movlb	1	; () banked
  4420  0097D8  CFDE F111          	movff	postinc2,f_open@dw+1
  4421  0097DC  0101               	movlb	1	; () banked
  4422  0097DE  CFDE F112          	movff	postinc2,f_open@dw+2
  4423  0097E2  0101               	movlb	1	; () banked
  4424  0097E4  CFDE F113          	movff	postinc2,f_open@dw+3
  4425                           
  4426                           ; BSR set to: 1
  4427                           ;ff.c: 2610: res = remove_chain(dj.fs, cl);
  4428  0097E8  0101               	movlb	1	; () banked
  4429  0097EA  C118  F078         	movff	f_open@dj+1,remove_chain@fs+1
  4430  0097EE  0101               	movlb	1	; () banked
  4431  0097F0  C117  F077         	movff	f_open@dj,remove_chain@fs
  4432  0097F4  C10C  F079         	movff	f_open@cl,remove_chain@clst
  4433  0097F8  C10D  F07A         	movff	f_open@cl+1,remove_chain@clst+1
  4434  0097FC  C10E  F07B         	movff	f_open@cl+2,remove_chain@clst+2
  4435  009800  C10F  F07C         	movff	f_open@cl+3,remove_chain@clst+3
  4436  009804  EC56  F03A         	call	_remove_chain	;wreg free
  4437  009808  0101               	movlb	1	; () banked
  4438  00980A  6F14               	movwf	f_open@res& (0+255),b
  4439                           
  4440                           ; BSR set to: 1
  4441                           ;ff.c: 2611: if (res == FR_OK) {
  4442  00980C  0101               	movlb	1	; () banked
  4443  00980E  6714               	tstfsz	f_open@res& (0+255),b
  4444  009810  D067               	goto	l8765
  4445                           
  4446                           ; BSR set to: 1
  4447                           ;ff.c: 2612: dj.fs->last_clust = cl - 1;
  4448  009812  0EFF               	movlw	255
  4449  009814  0101               	movlb	1	; () banked
  4450  009816  250C               	addwf	f_open@cl& (0+255),w,b
  4451  009818  0100               	movlb	0	; () banked
  4452  00981A  6FD9               	movwf	??_f_open& (0+255),b
  4453  00981C  0EFF               	movlw	255
  4454  00981E  0101               	movlb	1	; () banked
  4455  009820  210D               	addwfc	(f_open@cl+1)& (0+255),w,b
  4456  009822  0100               	movlb	0	; () banked
  4457  009824  6FDA               	movwf	(??_f_open+1)& (0+255),b
  4458  009826  0EFF               	movlw	255
  4459  009828  0101               	movlb	1	; () banked
  4460  00982A  210E               	addwfc	(f_open@cl+2)& (0+255),w,b
  4461  00982C  0100               	movlb	0	; () banked
  4462  00982E  6FDB               	movwf	(??_f_open+2)& (0+255),b
  4463  009830  0EFF               	movlw	255
  4464  009832  0101               	movlb	1	; () banked
  4465  009834  210F               	addwfc	(f_open@cl+3)& (0+255),w,b
  4466  009836  0100               	movlb	0	; () banked
  4467  009838  6FDC               	movwf	(??_f_open+3)& (0+255),b
  4468  00983A  0101               	movlb	1	; () banked
  4469  00983C  EE20 F00A          	lfsr	2,10
  4470  009840  0101               	movlb	1	; () banked
  4471  009842  5117               	movf	f_open@dj& (0+255),w,b
  4472  009844  26D9               	addwf	fsr2l,f,c
  4473  009846  0101               	movlb	1	; () banked
  4474  009848  5118               	movf	(f_open@dj+1)& (0+255),w,b
  4475  00984A  22DA               	addwfc	fsr2h,f,c
  4476  00984C  C0D9  FFDE         	movff	??_f_open,postinc2
  4477  009850  C0DA  FFDE         	movff	??_f_open+1,postinc2
  4478  009854  C0DB  FFDE         	movff	??_f_open+2,postinc2
  4479  009858  C0DC  FFDD         	movff	??_f_open+3,postdec2
  4480  00985C  06D9               	decf	fsr2l,f,c
  4481  00985E  06D9               	decf	fsr2l,f,c
  4482                           
  4483                           ; BSR set to: 1
  4484                           ;ff.c: 2613: res = move_window(dj.fs, dw);
  4485  009860  0101               	movlb	1	; () banked
  4486  009862  C118  F03C         	movff	f_open@dj+1,move_window@fs+1
  4487  009866  0101               	movlb	1	; () banked
  4488  009868  C117  F03B         	movff	f_open@dj,move_window@fs
  4489  00986C  C110  F03D         	movff	f_open@dw,move_window@sector
  4490  009870  C111  F03E         	movff	f_open@dw+1,move_window@sector+1
  4491  009874  C112  F03F         	movff	f_open@dw+2,move_window@sector+2
  4492  009878  C113  F040         	movff	f_open@dw+3,move_window@sector+3
  4493  00987C  EC66  F02C         	call	_move_window	;wreg free
  4494  009880  D02D               	goto	L5
  4495  009882                     l8753:
  4496                           
  4497                           ;ff.c: 2618: else { abc = 99;
  4498  009882  0E00               	movlw	0
  4499  009884  0101               	movlb	1	; () banked
  4500  009886  6F62               	movwf	(_abc+1)& (0+255),b
  4501  009888  0E63               	movlw	99
  4502  00988A  0101               	movlb	1	; () banked
  4503  00988C  6F61               	movwf	_abc& (0+255),b
  4504                           
  4505                           ; BSR set to: 1
  4506                           ;ff.c: 2619: if (res == FR_OK) {
  4507  00988E  0101               	movlb	1	; () banked
  4508  009890  6714               	tstfsz	f_open@res& (0+255),b
  4509  009892  D026               	goto	l8765
  4510                           
  4511                           ; BSR set to: 1
  4512                           ;ff.c: 2620: if (dir[11] & 0x10) {
  4513  009894  0101               	movlb	1	; () banked
  4514  009896  EE20 F00B          	lfsr	2,11
  4515  00989A  0101               	movlb	1	; () banked
  4516  00989C  5115               	movf	f_open@dir& (0+255),w,b
  4517  00989E  26D9               	addwf	fsr2l,f,c
  4518  0098A0  0101               	movlb	1	; () banked
  4519  0098A2  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4520  0098A4  22DA               	addwfc	fsr2h,f,c
  4521  0098A6  50DF               	movf	indf2,w,c
  4522  0098A8  0100               	movlb	0	; () banked
  4523  0098AA  6FD9               	movwf	??_f_open& (0+255),b
  4524  0098AC  0100               	movlb	0	; () banked
  4525  0098AE  A9D9               	btfss	??_f_open& (0+255),4,b
  4526  0098B0  D002               	goto	l794
  4527                           
  4528                           ; BSR set to: 0
  4529                           ;ff.c: 2621: res = FR_NO_FILE;
  4530  0098B2  0E04               	movlw	4
  4531  0098B4  D013               	goto	L5
  4532  0098B6                     l794:
  4533                           
  4534                           ; BSR set to: 0
  4535                           ;ff.c: 2623: if ((mode & 0x02) && (dir[11] & 0x01))
  4536  0098B6  0100               	movlb	0	; () banked
  4537  0098B8  A3D8               	btfss	f_open@mode& (0+255),1,b
  4538  0098BA  D012               	goto	l8765
  4539                           
  4540                           ; BSR set to: 0
  4541  0098BC  0101               	movlb	1	; () banked
  4542  0098BE  EE20 F00B          	lfsr	2,11
  4543  0098C2  0101               	movlb	1	; () banked
  4544  0098C4  5115               	movf	f_open@dir& (0+255),w,b
  4545  0098C6  26D9               	addwf	fsr2l,f,c
  4546  0098C8  0101               	movlb	1	; () banked
  4547  0098CA  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4548  0098CC  22DA               	addwfc	fsr2h,f,c
  4549  0098CE  50DF               	movf	indf2,w,c
  4550  0098D0  0100               	movlb	0	; () banked
  4551  0098D2  6FD9               	movwf	??_f_open& (0+255),b
  4552  0098D4  0100               	movlb	0	; () banked
  4553  0098D6  A1D9               	btfss	??_f_open& (0+255),0,b
  4554  0098D8  D003               	goto	l8765
  4555                           
  4556                           ; BSR set to: 0
  4557                           ;ff.c: 2624: res = FR_DENIED;
  4558  0098DA  0E07               	movlw	7
  4559  0098DC                     L5:
  4560  0098DC  0101               	movlb	1	; () banked
  4561  0098DE  6F14               	movwf	f_open@res& (0+255),b
  4562  0098E0                     l8765:
  4563                           
  4564                           ;ff.c: 2625: }
  4565                           ;ff.c: 2626: }
  4566                           ;ff.c: 2627: }
  4567                           ;ff.c: 2628: if (res == FR_OK) { abc = 125;
  4568  0098E0  0101               	movlb	1	; () banked
  4569  0098E2  6714               	tstfsz	f_open@res& (0+255),b
  4570  0098E4  D036               	goto	l8777
  4571                           
  4572                           ; BSR set to: 1
  4573  0098E6  0E00               	movlw	0
  4574  0098E8  0101               	movlb	1	; () banked
  4575  0098EA  6F62               	movwf	(_abc+1)& (0+255),b
  4576  0098EC  0E7D               	movlw	125
  4577  0098EE  0101               	movlb	1	; () banked
  4578  0098F0  6F61               	movwf	_abc& (0+255),b
  4579                           
  4580                           ; BSR set to: 1
  4581                           ;ff.c: 2629: if (mode & 0x08)
  4582  0098F2  0100               	movlb	0	; () banked
  4583  0098F4  A7D8               	btfss	f_open@mode& (0+255),3,b
  4584  0098F6  D002               	goto	l8773
  4585                           
  4586                           ; BSR set to: 0
  4587                           ;ff.c: 2630: mode |= 0x20;
  4588  0098F8  0100               	movlb	0	; () banked
  4589  0098FA  8BD8               	bsf	f_open@mode& (0+255),5,b
  4590  0098FC                     l8773:
  4591                           
  4592                           ; BSR set to: 0
  4593                           ;ff.c: 2631: fp->dir_sect = dj.fs->winsect;
  4594  0098FC  0101               	movlb	1	; () banked
  4595  0098FE  EE20 F02E          	lfsr	2,46
  4596  009902  0101               	movlb	1	; () banked
  4597  009904  5117               	movf	f_open@dj& (0+255),w,b
  4598  009906  26D9               	addwf	fsr2l,f,c
  4599  009908  0101               	movlb	1	; () banked
  4600  00990A  5118               	movf	(f_open@dj+1)& (0+255),w,b
  4601  00990C  22DA               	addwfc	fsr2h,f,c
  4602  00990E  0100               	movlb	0	; () banked
  4603  009910  EE10 F01A          	lfsr	1,26
  4604  009914  0100               	movlb	0	; () banked
  4605  009916  51D4               	movf	f_open@fp& (0+255),w,b
  4606  009918  26E1               	addwf	fsr1l,f,c
  4607  00991A  0100               	movlb	0	; () banked
  4608  00991C  51D5               	movf	(f_open@fp+1)& (0+255),w,b
  4609  00991E  22E2               	addwfc	fsr1h,f,c
  4610  009920  CFDE FFE6          	movff	postinc2,postinc1
  4611  009924  CFDE FFE6          	movff	postinc2,postinc1
  4612  009928  CFDE FFE6          	movff	postinc2,postinc1
  4613  00992C  CFDD FFE5          	movff	postdec2,postdec1
  4614  009930  52E5               	movf	postdec1,f,c
  4615  009932  52E5               	movf	postdec1,f,c
  4616                           
  4617                           ; BSR set to: 0
  4618                           ;ff.c: 2632: fp->dir_ptr = dir;
  4619  009934  0100               	movlb	0	; () banked
  4620  009936  EE20 F01E          	lfsr	2,30
  4621  00993A  0100               	movlb	0	; () banked
  4622  00993C  51D4               	movf	f_open@fp& (0+255),w,b
  4623  00993E  26D9               	addwf	fsr2l,f,c
  4624  009940  0100               	movlb	0	; () banked
  4625  009942  51D5               	movf	(f_open@fp+1)& (0+255),w,b
  4626  009944  22DA               	addwfc	fsr2h,f,c
  4627  009946  0101               	movlb	1	; () banked
  4628  009948  C115  FFDE         	movff	f_open@dir,postinc2
  4629  00994C  0101               	movlb	1	; () banked
  4630  00994E  C116  FFDD         	movff	f_open@dir+1,postdec2
  4631  009952                     l8777:
  4632                           
  4633                           ; BSR set to: 1
  4634                           ;ff.c: 2637: }
  4635                           ;ff.c: 2651: ;
  4636                           ;ff.c: 2653: if (res == FR_OK) { abc = 127;
  4637  009952  0101               	movlb	1	; () banked
  4638  009954  6714               	tstfsz	f_open@res& (0+255),b
  4639  009956  D12F               	goto	l8799
  4640                           
  4641                           ; BSR set to: 1
  4642  009958  0E00               	movlw	0
  4643  00995A  0101               	movlb	1	; () banked
  4644  00995C  6F62               	movwf	(_abc+1)& (0+255),b
  4645  00995E  0E7F               	movlw	127
  4646  009960  0101               	movlb	1	; () banked
  4647  009962  6F61               	movwf	_abc& (0+255),b
  4648                           
  4649                           ; BSR set to: 1
  4650                           ;ff.c: 2654: fp->flag = mode;
  4651  009964  0100               	movlb	0	; () banked
  4652  009966  EE20 F004          	lfsr	2,4
  4653  00996A  0100               	movlb	0	; () banked
  4654  00996C  51D4               	movf	f_open@fp& (0+255),w,b
  4655  00996E  26D9               	addwf	fsr2l,f,c
  4656  009970  0100               	movlb	0	; () banked
  4657  009972  51D5               	movf	(f_open@fp+1)& (0+255),w,b
  4658  009974  22DA               	addwfc	fsr2h,f,c
  4659  009976  0100               	movlb	0	; () banked
  4660  009978  C0D8  FFDF         	movff	f_open@mode,indf2
  4661                           
  4662                           ; BSR set to: 0
  4663                           ;ff.c: 2655: fp->err = 0;
  4664  00997C  0100               	movlb	0	; () banked
  4665  00997E  EE20 F005          	lfsr	2,5
  4666  009982  0100               	movlb	0	; () banked
  4667  009984  51D4               	movf	f_open@fp& (0+255),w,b
  4668  009986  26D9               	addwf	fsr2l,f,c
  4669  009988  0100               	movlb	0	; () banked
  4670  00998A  51D5               	movf	(f_open@fp+1)& (0+255),w,b
  4671  00998C  22DA               	addwfc	fsr2h,f,c
  4672  00998E  0E00               	movlw	0
  4673  009990  6EDF               	movwf	indf2,c
  4674                           
  4675                           ; BSR set to: 0
  4676                           ;ff.c: 2656: fp->sclust = ld_clust(dj.fs, dir);
  4677  009992  0101               	movlb	1	; () banked
  4678  009994  C118  F002         	movff	f_open@dj+1,ld_clust@fs+1
  4679  009998  0101               	movlb	1	; () banked
  4680  00999A  C117  F001         	movff	f_open@dj,ld_clust@fs
  4681  00999E  0101               	movlb	1	; () banked
  4682  0099A0  C116  F004         	movff	f_open@dir+1,ld_clust@dir+1
  4683  0099A4  0101               	movlb	1	; () banked
  4684  0099A6  C115  F003         	movff	f_open@dir,ld_clust@dir
  4685  0099AA  ECE2  F02D         	call	_ld_clust	;wreg free
  4686  0099AE  C001  F0D9         	movff	?_ld_clust,??_f_open
  4687  0099B2  C002  F0DA         	movff	?_ld_clust+1,??_f_open+1
  4688  0099B6  C003  F0DB         	movff	?_ld_clust+2,??_f_open+2
  4689  0099BA  C004  F0DC         	movff	?_ld_clust+3,??_f_open+3
  4690  0099BE  0100               	movlb	0	; () banked
  4691  0099C0  EE20 F00E          	lfsr	2,14
  4692  0099C4  0100               	movlb	0	; () banked
  4693  0099C6  51D4               	movf	f_open@fp& (0+255),w,b
  4694  0099C8  26D9               	addwf	fsr2l,f,c
  4695  0099CA  0100               	movlb	0	; () banked
  4696  0099CC  51D5               	movf	(f_open@fp+1)& (0+255),w,b
  4697  0099CE  22DA               	addwfc	fsr2h,f,c
  4698  0099D0  C0D9  FFDE         	movff	??_f_open,postinc2
  4699  0099D4  C0DA  FFDE         	movff	??_f_open+1,postinc2
  4700  0099D8  C0DB  FFDE         	movff	??_f_open+2,postinc2
  4701  0099DC  C0DC  FFDD         	movff	??_f_open+3,postdec2
  4702  0099E0  06D9               	decf	fsr2l,f,c
  4703  0099E2  06D9               	decf	fsr2l,f,c
  4704                           
  4705                           ; BSR set to: 0
  4706                           ;ff.c: 2657: fp->fsize = (DWORD)(((DWORD)*((BYTE*)(dir + 28)+3)<<24)|((DWORD)*((BYTE*)(d
      +                          ir + 28)+2)<<16)|((WORD)*((BYTE*)(dir + 28)+1)<<8)|*(BYTE*)(dir + 28));
  4707  0099E4  0101               	movlb	1	; () banked
  4708  0099E6  EE20 F01D          	lfsr	2,29
  4709  0099EA  0101               	movlb	1	; () banked
  4710  0099EC  5115               	movf	f_open@dir& (0+255),w,b
  4711  0099EE  26D9               	addwf	fsr2l,f,c
  4712  0099F0  0101               	movlb	1	; () banked
  4713  0099F2  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4714  0099F4  22DA               	addwfc	fsr2h,f,c
  4715  0099F6  50DF               	movf	indf2,w,c
  4716  0099F8  0100               	movlb	0	; () banked
  4717  0099FA  6FD9               	movwf	??_f_open& (0+255),b
  4718  0099FC  0100               	movlb	0	; () banked
  4719  0099FE  51D9               	movf	??_f_open& (0+255),w,b
  4720  009A00  0100               	movlb	0	; () banked
  4721  009A02  6FDB               	movwf	(??_f_open+2)& (0+255),b
  4722  009A04  6BDA               	clrf	(??_f_open+1)& (0+255),b
  4723  009A06  0101               	movlb	1	; () banked
  4724  009A08  EE20 F01E          	lfsr	2,30
  4725  009A0C  0101               	movlb	1	; () banked
  4726  009A0E  5115               	movf	f_open@dir& (0+255),w,b
  4727  009A10  26D9               	addwf	fsr2l,f,c
  4728  009A12  0101               	movlb	1	; () banked
  4729  009A14  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4730  009A16  22DA               	addwfc	fsr2h,f,c
  4731  009A18  50DF               	movf	indf2,w,c
  4732  009A1A  0100               	movlb	0	; () banked
  4733  009A1C  6FDC               	movwf	(??_f_open+3)& (0+255),b
  4734  009A1E  C0DC  F0DD         	movff	??_f_open+3,??_f_open+4
  4735  009A22  0100               	movlb	0	; () banked
  4736  009A24  6BDE               	clrf	(??_f_open+5)& (0+255),b
  4737  009A26  6BDF               	clrf	(??_f_open+6)& (0+255),b
  4738  009A28  6BE0               	clrf	(??_f_open+7)& (0+255),b
  4739  009A2A  C0DE  F0E0         	movff	??_f_open+5,??_f_open+7
  4740  009A2E  C0DD  F0DF         	movff	??_f_open+4,??_f_open+6
  4741  009A32  0100               	movlb	0	; () banked
  4742  009A34  6BDE               	clrf	(??_f_open+5)& (0+255),b
  4743  009A36  6BDD               	clrf	(??_f_open+4)& (0+255),b
  4744  009A38  0101               	movlb	1	; () banked
  4745  009A3A  EE20 F01F          	lfsr	2,31
  4746  009A3E  0101               	movlb	1	; () banked
  4747  009A40  5115               	movf	f_open@dir& (0+255),w,b
  4748  009A42  26D9               	addwf	fsr2l,f,c
  4749  009A44  0101               	movlb	1	; () banked
  4750  009A46  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4751  009A48  22DA               	addwfc	fsr2h,f,c
  4752  009A4A  50DF               	movf	indf2,w,c
  4753  009A4C  0100               	movlb	0	; () banked
  4754  009A4E  6FE1               	movwf	(??_f_open+8)& (0+255),b
  4755  009A50  C0E1  F0E2         	movff	??_f_open+8,??_f_open+9
  4756  009A54  0100               	movlb	0	; () banked
  4757  009A56  6BE3               	clrf	(??_f_open+10)& (0+255),b
  4758  009A58  6BE4               	clrf	(??_f_open+11)& (0+255),b
  4759  009A5A  6BE5               	clrf	(??_f_open+12)& (0+255),b
  4760  009A5C  C0E2  F0E5         	movff	??_f_open+9,??_f_open+12
  4761  009A60  0100               	movlb	0	; () banked
  4762  009A62  6BE4               	clrf	(??_f_open+11)& (0+255),b
  4763  009A64  6BE3               	clrf	(??_f_open+10)& (0+255),b
  4764  009A66  6BE2               	clrf	(??_f_open+9)& (0+255),b
  4765  009A68  0100               	movlb	0	; () banked
  4766  009A6A  51DD               	movf	(??_f_open+4)& (0+255),w,b
  4767  009A6C  0100               	movlb	0	; () banked
  4768  009A6E  11E2               	iorwf	(??_f_open+9)& (0+255),w,b
  4769  009A70  0100               	movlb	0	; () banked
  4770  009A72  6FE6               	movwf	(??_f_open+13)& (0+255),b
  4771  009A74  0100               	movlb	0	; () banked
  4772  009A76  51DE               	movf	(??_f_open+5)& (0+255),w,b
  4773  009A78  0100               	movlb	0	; () banked
  4774  009A7A  11E3               	iorwf	(??_f_open+10)& (0+255),w,b
  4775  009A7C  0100               	movlb	0	; () banked
  4776  009A7E  6FE7               	movwf	(??_f_open+14)& (0+255),b
  4777  009A80  0100               	movlb	0	; () banked
  4778  009A82  51DF               	movf	(??_f_open+6)& (0+255),w,b
  4779  009A84  0100               	movlb	0	; () banked
  4780  009A86  11E4               	iorwf	(??_f_open+11)& (0+255),w,b
  4781  009A88  0100               	movlb	0	; () banked
  4782  009A8A  6FE8               	movwf	(??_f_open+15)& (0+255),b
  4783  009A8C  0100               	movlb	0	; () banked
  4784  009A8E  51E0               	movf	(??_f_open+7)& (0+255),w,b
  4785  009A90  0100               	movlb	0	; () banked
  4786  009A92  11E5               	iorwf	(??_f_open+12)& (0+255),w,b
  4787  009A94  0100               	movlb	0	; () banked
  4788  009A96  6FE9               	movwf	(??_f_open+16)& (0+255),b
  4789  009A98  0100               	movlb	0	; () banked
  4790  009A9A  51DA               	movf	(??_f_open+1)& (0+255),w,b
  4791  009A9C  0100               	movlb	0	; () banked
  4792  009A9E  11E6               	iorwf	(??_f_open+13)& (0+255),w,b
  4793  009AA0  0100               	movlb	0	; () banked
  4794  009AA2  6FEA               	movwf	(??_f_open+17)& (0+255),b
  4795  009AA4  0100               	movlb	0	; () banked
  4796  009AA6  51DB               	movf	(??_f_open+2)& (0+255),w,b
  4797  009AA8  0100               	movlb	0	; () banked
  4798  009AAA  11E7               	iorwf	(??_f_open+14)& (0+255),w,b
  4799  009AAC  0100               	movlb	0	; () banked
  4800  009AAE  6FEB               	movwf	(??_f_open+18)& (0+255),b
  4801  009AB0  0E00               	movlw	0
  4802  009AB2  0100               	movlb	0	; () banked
  4803  009AB4  11E8               	iorwf	(??_f_open+15)& (0+255),w,b
  4804  009AB6  0100               	movlb	0	; () banked
  4805  009AB8  6FEC               	movwf	(??_f_open+19)& (0+255),b
  4806  009ABA  0E00               	movlw	0
  4807  009ABC  0100               	movlb	0	; () banked
  4808  009ABE  11E9               	iorwf	(??_f_open+16)& (0+255),w,b
  4809  009AC0  0100               	movlb	0	; () banked
  4810  009AC2  6FED               	movwf	(??_f_open+20)& (0+255),b
  4811  009AC4  0101               	movlb	1	; () banked
  4812  009AC6  EE20 F01C          	lfsr	2,28
  4813  009ACA  0101               	movlb	1	; () banked
  4814  009ACC  5115               	movf	f_open@dir& (0+255),w,b
  4815  009ACE  26D9               	addwf	fsr2l,f,c
  4816  009AD0  0101               	movlb	1	; () banked
  4817  009AD2  5116               	movf	(f_open@dir+1)& (0+255),w,b
  4818  009AD4  22DA               	addwfc	fsr2h,f,c
  4819  009AD6  50DF               	movf	indf2,w,c
  4820  009AD8  0100               	movlb	0	; () banked
  4821  009ADA  6FEE               	movwf	(??_f_open+21)& (0+255),b
  4822  009ADC  0100               	movlb	0	; () banked
  4823  009ADE  51EE               	movf	(??_f_open+21)& (0+255),w,b
  4824  009AE0  0100               	movlb	0	; () banked
  4825  009AE2  11EA               	iorwf	(??_f_open+17)& (0+255),w,b
  4826  009AE4  0100               	movlb	0	; () banked
  4827  009AE6  6FEF               	movwf	(??_f_open+22)& (0+255),b
  4828  009AE8  0100               	movlb	0	; () banked
  4829  009AEA  51EB               	movf	(??_f_open+18)& (0+255),w,b
  4830  009AEC  0100               	movlb	0	; () banked
  4831  009AEE  6FF0               	movwf	(??_f_open+23)& (0+255),b
  4832  009AF0  0100               	movlb	0	; () banked
  4833  009AF2  51EC               	movf	(??_f_open+19)& (0+255),w,b
  4834  009AF4  0100               	movlb	0	; () banked
  4835  009AF6  6FF1               	movwf	(??_f_open+24)& (0+255),b
  4836  009AF8  0100               	movlb	0	; () banked
  4837  009AFA  51ED               	movf	(??_f_open+20)& (0+255),w,b
  4838  009AFC  0100               	movlb	0	; () banked
  4839  009AFE  6FF2               	movwf	(??_f_open+25)& (0+255),b
  4840  009B00  0100               	movlb	0	; () banked
  4841  009B02  EE20 F00A          	lfsr	2,10
  4842  009B06  0100               	movlb	0	; () banked
  4843  009B08  51D4               	movf	f_open@fp& (0+255),w,b
  4844  009B0A  26D9               	addwf	fsr2l,f,c
  4845  009B0C  0100               	movlb	0	; () banked
  4846  009B0E  51D5               	movf	(f_open@fp+1)& (0+255),w,b
  4847  009B10  22DA               	addwfc	fsr2h,f,c
  4848  009B12  C0EF  FFDE         	movff	??_f_open+22,postinc2
  4849  009B16  C0F0  FFDE         	movff	??_f_open+23,postinc2
  4850  009B1A  C0F1  FFDE         	movff	??_f_open+24,postinc2
  4851  009B1E  C0F2  FFDD         	movff	??_f_open+25,postdec2
  4852  009B22  06D9               	decf	fsr2l,f,c
  4853  009B24  06D9               	decf	fsr2l,f,c
  4854                           
  4855                           ; BSR set to: 0
  4856                           ;ff.c: 2658: fp->fptr = 0;
  4857  009B26  0100               	movlb	0	; () banked
  4858  009B28  EE20 F006          	lfsr	2,6
  4859  009B2C  0100               	movlb	0	; () banked
  4860  009B2E  51D4               	movf	f_open@fp& (0+255),w,b
  4861  009B30  26D9               	addwf	fsr2l,f,c
  4862  009B32  0100               	movlb	0	; () banked
  4863  009B34  51D5               	movf	(f_open@fp+1)& (0+255),w,b
  4864  009B36  22DA               	addwfc	fsr2h,f,c
  4865  009B38  6ADE               	clrf	postinc2,c
  4866  009B3A  6ADE               	clrf	postinc2,c
  4867  009B3C  6ADE               	clrf	postinc2,c
  4868  009B3E  6ADD               	clrf	postdec2,c
  4869                           
  4870                           ; BSR set to: 0
  4871                           ;ff.c: 2659: fp->dsect = 0;
  4872  009B40  0100               	movlb	0	; () banked
  4873  009B42  EE20 F016          	lfsr	2,22
  4874  009B46  0100               	movlb	0	; () banked
  4875  009B48  51D4               	movf	f_open@fp& (0+255),w,b
  4876  009B4A  26D9               	addwf	fsr2l,f,c
  4877  009B4C  0100               	movlb	0	; () banked
  4878  009B4E  51D5               	movf	(f_open@fp+1)& (0+255),w,b
  4879  009B50  22DA               	addwfc	fsr2h,f,c
  4880  009B52  6ADE               	clrf	postinc2,c
  4881  009B54  6ADE               	clrf	postinc2,c
  4882  009B56  6ADE               	clrf	postinc2,c
  4883  009B58  6ADD               	clrf	postdec2,c
  4884                           
  4885                           ; BSR set to: 0
  4886                           ;ff.c: 2661: fp->cltbl = 0;
  4887  009B5A  0100               	movlb	0	; () banked
  4888  009B5C  EE20 F020          	lfsr	2,32
  4889  009B60  0100               	movlb	0	; () banked
  4890  009B62  51D4               	movf	f_open@fp& (0+255),w,b
  4891  009B64  26D9               	addwf	fsr2l,f,c
  4892  009B66  0100               	movlb	0	; () banked
  4893  009B68  51D5               	movf	(f_open@fp+1)& (0+255),w,b
  4894  009B6A  22DA               	addwfc	fsr2h,f,c
  4895  009B6C  0E00               	movlw	0
  4896  009B6E  6EDE               	movwf	postinc2,c
  4897  009B70  0E00               	movlw	0
  4898  009B72  6EDD               	movwf	postdec2,c
  4899                           
  4900                           ; BSR set to: 0
  4901                           ;ff.c: 2663: fp->fs = dj.fs;
  4902  009B74  C0D4  FFD9         	movff	f_open@fp,fsr2l
  4903  009B78  C0D5  FFDA         	movff	f_open@fp+1,fsr2h
  4904  009B7C  0101               	movlb	1	; () banked
  4905  009B7E  C117  FFDE         	movff	f_open@dj,postinc2
  4906  009B82  0101               	movlb	1	; () banked
  4907  009B84  C118  FFDD         	movff	f_open@dj+1,postdec2
  4908                           
  4909                           ; BSR set to: 1
  4910                           ;ff.c: 2664: fp->id = fp->fs->id;
  4911  009B88  C0D4  FFD9         	movff	f_open@fp,fsr2l
  4912  009B8C  C0D5  FFDA         	movff	f_open@fp+1,fsr2h
  4913  009B90  EE10 F006          	lfsr	1,6
  4914  009B94  50DE               	movf	postinc2,w,c
  4915  009B96  26E1               	addwf	fsr1l,f,c
  4916  009B98  50DD               	movf	postdec2,w,c
  4917  009B9A  22E2               	addwfc	fsr1h,f,c
  4918  009B9C  0100               	movlb	0	; () banked
  4919  009B9E  EE20 F002          	lfsr	2,2
  4920  009BA2  0100               	movlb	0	; () banked
  4921  009BA4  51D4               	movf	f_open@fp& (0+255),w,b
  4922  009BA6  26D9               	addwf	fsr2l,f,c
  4923  009BA8  0100               	movlb	0	; () banked
  4924  009BAA  51D5               	movf	(f_open@fp+1)& (0+255),w,b
  4925  009BAC  22DA               	addwfc	fsr2h,f,c
  4926  009BAE  CFE6 FFDE          	movff	postinc1,postinc2
  4927  009BB2  CFE5 FFDD          	movff	postdec1,postdec2
  4928  009BB6                     l8799:
  4929                           
  4930                           ;ff.c: 2665: }
  4931                           ;ff.c: 2666: }
  4932                           ;ff.c: 2668: return res;
  4933  009BB6  0101               	movlb	1	; () banked
  4934  009BB8  5114               	movf	f_open@res& (0+255),w,b
  4935  009BBA                     l778:
  4936  009BBA  0012               	return	
  4937  009BBC                     __end_of_f_open:
  4938                           	opt stack 0
  4939                           tblptru	equ	0xFF8
  4940                           tblptrh	equ	0xFF7
  4941                           tblptrl	equ	0xFF6
  4942                           tablat	equ	0xFF5
  4943                           postinc0	equ	0xFEE
  4944                           wreg	equ	0xFE8
  4945                           indf1	equ	0xFE7
  4946                           postinc1	equ	0xFE6
  4947                           postdec1	equ	0xFE5
  4948                           fsr1h	equ	0xFE2
  4949                           fsr1l	equ	0xFE1
  4950                           indf2	equ	0xFDF
  4951                           postinc2	equ	0xFDE
  4952                           postdec2	equ	0xFDD
  4953                           plusw2	equ	0xFDB
  4954                           fsr2h	equ	0xFDA
  4955                           fsr2l	equ	0xFD9
  4956                           status	equ	0xFD8
  4957                           
  4958 ;; *************** function _remove_chain *****************
  4959 ;; Defined at:
  4960 ;;		line 980 in file "ff.c"
  4961 ;; Parameters:    Size  Location     Type
  4962 ;;  fs              2  118[COMRAM] PTR struct .
  4963 ;;		 -> NULL(0), FatFs(562), 
  4964 ;;  clst            4  120[COMRAM] unsigned long 
  4965 ;; Auto vars:     Size  Location     Type
  4966 ;;  rt              8   13[BANK0 ] unsigned long [2]
  4967 ;;  nxt             4   26[BANK0 ] unsigned long 
  4968 ;;  ecl             4   21[BANK0 ] unsigned long 
  4969 ;;  scl             4    9[BANK0 ] unsigned long 
  4970 ;;  res             1   25[BANK0 ] enum E67
  4971 ;; Return value:  Size  Location     Type
  4972 ;;                  1    wreg      enum E67
  4973 ;; Registers used:
  4974 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  4975 ;; Tracked objects:
  4976 ;;		On entry : 0/0
  4977 ;;		On exit  : 0/0
  4978 ;;		Unchanged: 0/0
  4979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  4980 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4981 ;;      Locals:         0      21       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4982 ;;      Temps:          0       9       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4983 ;;      Totals:         6      30       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  4984 ;;Total ram usage:       36 bytes
  4985 ;; Hardware stack levels used:    1
  4986 ;; Hardware stack levels required when called:    8
  4987 ;; This function calls:
  4988 ;;		_clust2sect
  4989 ;;		_disk_ioctl
  4990 ;;		_get_fat
  4991 ;;		_put_fat
  4992 ;; This function is called by:
  4993 ;;		_f_open
  4994 ;;		_f_truncate
  4995 ;;		_f_unlink
  4996 ;;		_f_mkdir
  4997 ;; This function uses a non-reentrant model
  4998 ;;
  4999                           
  5000                           	psect	text5
  5001  0074AC                     __ptext5:
  5002                           	opt stack 0
  5003  0074AC                     _remove_chain:
  5004                           	opt stack 21
  5005                           
  5006                           ;ff.c: 985: FRESULT res;
  5007                           ;ff.c: 986: DWORD nxt;
  5008                           ;ff.c: 988: DWORD scl = clst, ecl = clst, rt[2];
  5009                           
  5010                           ;incstack = 0
  5011  0074AC  C079  F089         	movff	remove_chain@clst,remove_chain@scl
  5012  0074B0  C07A  F08A         	movff	remove_chain@clst+1,remove_chain@scl+1
  5013  0074B4  C07B  F08B         	movff	remove_chain@clst+2,remove_chain@scl+2
  5014  0074B8  C07C  F08C         	movff	remove_chain@clst+3,remove_chain@scl+3
  5015  0074BC  C079  F095         	movff	remove_chain@clst,remove_chain@ecl
  5016  0074C0  C07A  F096         	movff	remove_chain@clst+1,remove_chain@ecl+1
  5017  0074C4  C07B  F097         	movff	remove_chain@clst+2,remove_chain@ecl+2
  5018  0074C8  C07C  F098         	movff	remove_chain@clst+3,remove_chain@ecl+3
  5019                           
  5020                           ;ff.c: 991: if (clst < 2 || clst >= fs->n_fatent) {
  5021  0074CC  0E02               	movlw	2
  5022  0074CE  5C79               	subwf	remove_chain@clst,w,c
  5023  0074D0  0E00               	movlw	0
  5024  0074D2  587A               	subwfb	remove_chain@clst+1,w,c
  5025  0074D4  0E00               	movlw	0
  5026  0074D6  587B               	subwfb	remove_chain@clst+2,w,c
  5027  0074D8  0E00               	movlw	0
  5028  0074DA  587C               	subwfb	remove_chain@clst+3,w,c
  5029  0074DC  A0D8               	btfss	status,0,c
  5030  0074DE  D044               	goto	u10620
  5031  0074E0  EE20 F016          	lfsr	2,22
  5032  0074E4  5077               	movf	remove_chain@fs,w,c
  5033  0074E6  26D9               	addwf	fsr2l,f,c
  5034  0074E8  5078               	movf	remove_chain@fs+1,w,c
  5035  0074EA  22DA               	addwfc	fsr2h,f,c
  5036  0074EC  CFDE F080          	movff	postinc2,??_remove_chain
  5037  0074F0  CFDE F081          	movff	postinc2,??_remove_chain+1
  5038  0074F4  CFDE F082          	movff	postinc2,??_remove_chain+2
  5039  0074F8  CFDE F083          	movff	postinc2,??_remove_chain+3
  5040  0074FC  0100               	movlb	0	; () banked
  5041  0074FE  5180               	movf	??_remove_chain& (0+255),w,b
  5042  007500  5C79               	subwf	remove_chain@clst,w,c
  5043  007502  0100               	movlb	0	; () banked
  5044  007504  5181               	movf	(??_remove_chain+1)& (0+255),w,b
  5045  007506  587A               	subwfb	remove_chain@clst+1,w,c
  5046  007508  0100               	movlb	0	; () banked
  5047  00750A  5182               	movf	(??_remove_chain+2)& (0+255),w,b
  5048  00750C  587B               	subwfb	remove_chain@clst+2,w,c
  5049  00750E  0100               	movlb	0	; () banked
  5050  007510  5183               	movf	(??_remove_chain+3)& (0+255),w,b
  5051  007512  587C               	subwfb	remove_chain@clst+3,w,c
  5052  007514  B0D8               	btfsc	status,0,c
  5053                           
  5054                           ; BSR set to: 0
  5055  007516  D028               	goto	u10620
  5056                           
  5057                           ; BSR set to: 0
  5058                           ;ff.c: 995: res = FR_OK;
  5059                           
  5060                           ; BSR set to: 0
  5061                           
  5062                           ;ff.c: 994: } else {
  5063                           
  5064                           ;ff.c: 992: res = FR_INT_ERR;
  5065  007518  0E00               	movlw	0
  5066  00751A  0100               	movlb	0	; () banked
  5067  00751C  6F99               	movwf	remove_chain@res& (0+255),b
  5068                           
  5069                           ;ff.c: 996: while (clst < fs->n_fatent) {
  5070  00751E  D134               	goto	l8071
  5071  007520                     l8035:
  5072                           
  5073                           ; BSR set to: 0
  5074                           ;ff.c: 997: nxt = get_fat(fs, clst);
  5075  007520  C078  F047         	movff	remove_chain@fs+1,get_fat@fs+1
  5076  007524  C077  F046         	movff	remove_chain@fs,get_fat@fs
  5077  007528  C079  F048         	movff	remove_chain@clst,get_fat@clst
  5078  00752C  C07A  F049         	movff	remove_chain@clst+1,get_fat@clst+1
  5079  007530  C07B  F04A         	movff	remove_chain@clst+2,get_fat@clst+2
  5080  007534  C07C  F04B         	movff	remove_chain@clst+3,get_fat@clst+3
  5081  007538  ECD8  F042         	call	_get_fat	;wreg free
  5082  00753C  C046  F09A         	movff	?_get_fat,remove_chain@nxt
  5083  007540  C047  F09B         	movff	?_get_fat+1,remove_chain@nxt+1
  5084  007544  C048  F09C         	movff	?_get_fat+2,remove_chain@nxt+2
  5085  007548  C049  F09D         	movff	?_get_fat+3,remove_chain@nxt+3
  5086                           
  5087                           ;ff.c: 998: if (nxt == 0) break;
  5088  00754C  0100               	movlb	0	; () banked
  5089  00754E  519D               	movf	(remove_chain@nxt+3)& (0+255),w,b
  5090  007550  119A               	iorwf	remove_chain@nxt& (0+255),w,b
  5091  007552  119B               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  5092  007554  119C               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  5093  007556  B4D8               	btfsc	status,2,c
  5094  007558  D133               	goto	l8073
  5095                           
  5096                           ; BSR set to: 0
  5097                           ;ff.c: 999: if (nxt == 1) { res = FR_INT_ERR; break; }
  5098                           
  5099                           ; BSR set to: 0
  5100                           
  5101                           ; BSR set to: 0
  5102  00755A  0100               	movlb	0	; () banked
  5103  00755C  059A               	decf	remove_chain@nxt& (0+255),w,b
  5104  00755E  119B               	iorwf	(remove_chain@nxt+1)& (0+255),w,b
  5105  007560  119C               	iorwf	(remove_chain@nxt+2)& (0+255),w,b
  5106  007562  119D               	iorwf	(remove_chain@nxt+3)& (0+255),w,b
  5107  007564  A4D8               	btfss	status,2,c
  5108  007566  D002               	goto	l8045
  5109  007568                     u10620:
  5110                           
  5111                           ; BSR set to: 0
  5112  007568  0E02               	movlw	2
  5113  00756A  D00B               	goto	L6
  5114  00756C                     l8045:
  5115                           
  5116                           ; BSR set to: 0
  5117                           ;ff.c: 1000: if (nxt == 0xFFFFFFFF) { res = FR_DISK_ERR; break; }
  5118  00756C  0100               	movlb	0	; () banked
  5119  00756E  299A               	incf	remove_chain@nxt& (0+255),w,b
  5120  007570  B4D8               	btfsc	status,2,c
  5121  007572  299B               	incf	(remove_chain@nxt+1)& (0+255),w,b
  5122  007574  B4D8               	btfsc	status,2,c
  5123  007576  299C               	incf	(remove_chain@nxt+2)& (0+255),w,b
  5124  007578  B4D8               	btfsc	status,2,c
  5125  00757A  299D               	incf	(remove_chain@nxt+3)& (0+255),w,b
  5126  00757C  A4D8               	btfss	status,2,c
  5127  00757E  D004               	goto	l8049
  5128                           
  5129                           ; BSR set to: 0
  5130  007580  0E01               	movlw	1
  5131  007582                     L6:
  5132  007582  0100               	movlb	0	; () banked
  5133  007584  6F99               	movwf	remove_chain@res& (0+255),b
  5134  007586  D11C               	goto	l8073
  5135  007588                     l8049:
  5136                           
  5137                           ; BSR set to: 0
  5138                           ;ff.c: 1001: res = put_fat(fs, clst, 0);
  5139  007588  C078  F047         	movff	remove_chain@fs+1,put_fat@fs+1
  5140  00758C  C077  F046         	movff	remove_chain@fs,put_fat@fs
  5141  007590  C079  F048         	movff	remove_chain@clst,put_fat@clst
  5142  007594  C07A  F049         	movff	remove_chain@clst+1,put_fat@clst+1
  5143  007598  C07B  F04A         	movff	remove_chain@clst+2,put_fat@clst+2
  5144  00759C  C07C  F04B         	movff	remove_chain@clst+3,put_fat@clst+3
  5145  0075A0  0E00               	movlw	0
  5146  0075A2  6E4C               	movwf	put_fat@val,c
  5147  0075A4  0E00               	movlw	0
  5148  0075A6  6E4D               	movwf	put_fat@val+1,c
  5149  0075A8  0E00               	movlw	0
  5150  0075AA  6E4E               	movwf	put_fat@val+2,c
  5151  0075AC  0E00               	movlw	0
  5152  0075AE  6E4F               	movwf	put_fat@val+3,c
  5153  0075B0  ECFC  F044         	call	_put_fat	;wreg free
  5154  0075B4  0100               	movlb	0	; () banked
  5155  0075B6  6F99               	movwf	remove_chain@res& (0+255),b
  5156                           
  5157                           ; BSR set to: 0
  5158                           ;ff.c: 1002: if (res != FR_OK) break;
  5159  0075B8  0100               	movlb	0	; () banked
  5160  0075BA  5199               	movf	remove_chain@res& (0+255),w,b
  5161  0075BC  A4D8               	btfss	status,2,c
  5162  0075BE  D100               	goto	l8073
  5163                           
  5164                           ; BSR set to: 0
  5165                           ;ff.c: 1003: if (fs->free_clust != 0xFFFFFFFF) {
  5166                           
  5167                           ; BSR set to: 0
  5168                           
  5169                           ; BSR set to: 0
  5170  0075C0  EE20 F00E          	lfsr	2,14
  5171  0075C4  5077               	movf	remove_chain@fs,w,c
  5172  0075C6  26D9               	addwf	fsr2l,f,c
  5173  0075C8  5078               	movf	remove_chain@fs+1,w,c
  5174  0075CA  22DA               	addwfc	fsr2h,f,c
  5175  0075CC  CFDE F080          	movff	postinc2,??_remove_chain
  5176  0075D0  CFDE F081          	movff	postinc2,??_remove_chain+1
  5177  0075D4  CFDE F082          	movff	postinc2,??_remove_chain+2
  5178  0075D8  CFDE F083          	movff	postinc2,??_remove_chain+3
  5179  0075DC  0100               	movlb	0	; () banked
  5180  0075DE  2980               	incf	??_remove_chain& (0+255),w,b
  5181  0075E0  B4D8               	btfsc	status,2,c
  5182  0075E2  2981               	incf	(??_remove_chain+1)& (0+255),w,b
  5183  0075E4  B4D8               	btfsc	status,2,c
  5184  0075E6  2982               	incf	(??_remove_chain+2)& (0+255),w,b
  5185  0075E8  B4D8               	btfsc	status,2,c
  5186  0075EA  2983               	incf	(??_remove_chain+3)& (0+255),w,b
  5187  0075EC  B4D8               	btfsc	status,2,c
  5188  0075EE  D013               	goto	l8059
  5189                           
  5190                           ; BSR set to: 0
  5191                           ;ff.c: 1004: fs->free_clust++;
  5192  0075F0  EE20 F00E          	lfsr	2,14
  5193  0075F4  5077               	movf	remove_chain@fs,w,c
  5194  0075F6  26D9               	addwf	fsr2l,f,c
  5195  0075F8  5078               	movf	remove_chain@fs+1,w,c
  5196  0075FA  22DA               	addwfc	fsr2h,f,c
  5197  0075FC  2ADE               	incf	postinc2,f,c
  5198  0075FE  0E00               	movlw	0
  5199  007600  22DE               	addwfc	postinc2,f,c
  5200  007602  22DE               	addwfc	postinc2,f,c
  5201  007604  22DD               	addwfc	postdec2,f,c
  5202                           
  5203                           ;ff.c: 1005: fs->fsi_flag |= 1;
  5204  007606  EE20 F005          	lfsr	2,5
  5205  00760A  5077               	movf	remove_chain@fs,w,c
  5206  00760C  26D9               	addwf	fsr2l,f,c
  5207  00760E  5078               	movf	remove_chain@fs+1,w,c
  5208  007610  22DA               	addwfc	fsr2h,f,c
  5209  007612  0E00               	movlw	0
  5210  007614  80DB               	bsf	plusw2,0,c
  5211  007616                     l8059:
  5212                           
  5213                           ; BSR set to: 0
  5214                           ;ff.c: 1006: }
  5215                           ;ff.c: 1008: if (ecl + 1 == nxt) {
  5216  007616  0E01               	movlw	1
  5217  007618  0100               	movlb	0	; () banked
  5218  00761A  2595               	addwf	remove_chain@ecl& (0+255),w,b
  5219  00761C  0100               	movlb	0	; () banked
  5220  00761E  6F80               	movwf	??_remove_chain& (0+255),b
  5221  007620  0E00               	movlw	0
  5222  007622  0100               	movlb	0	; () banked
  5223  007624  2196               	addwfc	(remove_chain@ecl+1)& (0+255),w,b
  5224  007626  0100               	movlb	0	; () banked
  5225  007628  6F81               	movwf	(??_remove_chain+1)& (0+255),b
  5226  00762A  0E00               	movlw	0
  5227  00762C  0100               	movlb	0	; () banked
  5228  00762E  2197               	addwfc	(remove_chain@ecl+2)& (0+255),w,b
  5229  007630  0100               	movlb	0	; () banked
  5230  007632  6F82               	movwf	(??_remove_chain+2)& (0+255),b
  5231  007634  0E00               	movlw	0
  5232  007636  0100               	movlb	0	; () banked
  5233  007638  2198               	addwfc	(remove_chain@ecl+3)& (0+255),w,b
  5234  00763A  0100               	movlb	0	; () banked
  5235  00763C  6F83               	movwf	(??_remove_chain+3)& (0+255),b
  5236  00763E  0100               	movlb	0	; () banked
  5237  007640  519D               	movf	(remove_chain@nxt+3)& (0+255),w,b
  5238  007642  0100               	movlb	0	; () banked
  5239  007644  1983               	xorwf	(??_remove_chain+3)& (0+255),w,b
  5240  007646  E10E               	bnz	u10665
  5241  007648  0100               	movlb	0	; () banked
  5242  00764A  519C               	movf	(remove_chain@nxt+2)& (0+255),w,b
  5243  00764C  0100               	movlb	0	; () banked
  5244  00764E  1982               	xorwf	(??_remove_chain+2)& (0+255),w,b
  5245  007650  E109               	bnz	u10665
  5246  007652  0100               	movlb	0	; () banked
  5247  007654  519B               	movf	(remove_chain@nxt+1)& (0+255),w,b
  5248  007656  0100               	movlb	0	; () banked
  5249  007658  1981               	xorwf	(??_remove_chain+1)& (0+255),w,b
  5250  00765A  E104               	bnz	u10665
  5251  00765C  0100               	movlb	0	; () banked
  5252  00765E  519A               	movf	remove_chain@nxt& (0+255),w,b
  5253  007660  0100               	movlb	0	; () banked
  5254  007662  1980               	xorwf	??_remove_chain& (0+255),w,b
  5255  007664                     u10665:
  5256  007664  A4D8               	btfss	status,2,c
  5257  007666  D009               	goto	l8063
  5258                           
  5259                           ; BSR set to: 0
  5260                           ;ff.c: 1009: ecl = nxt;
  5261  007668  C09A  F095         	movff	remove_chain@nxt,remove_chain@ecl
  5262  00766C  C09B  F096         	movff	remove_chain@nxt+1,remove_chain@ecl+1
  5263  007670  C09C  F097         	movff	remove_chain@nxt+2,remove_chain@ecl+2
  5264  007674  C09D  F098         	movff	remove_chain@nxt+3,remove_chain@ecl+3
  5265                           
  5266                           ;ff.c: 1010: } else {
  5267  007678  D07F               	goto	l8069
  5268  00767A                     l8063:
  5269                           
  5270                           ; BSR set to: 0
  5271                           ;ff.c: 1011: rt[0] = clust2sect(fs, scl);
  5272  00767A  C078  F00E         	movff	remove_chain@fs+1,clust2sect@fs+1
  5273  00767E  C077  F00D         	movff	remove_chain@fs,clust2sect@fs
  5274  007682  C089  F00F         	movff	remove_chain@scl,clust2sect@clst
  5275  007686  C08A  F010         	movff	remove_chain@scl+1,clust2sect@clst+1
  5276  00768A  C08B  F011         	movff	remove_chain@scl+2,clust2sect@clst+2
  5277  00768E  C08C  F012         	movff	remove_chain@scl+3,clust2sect@clst+3
  5278  007692  EC7E  F02D         	call	_clust2sect	;wreg free
  5279  007696  C00D  F08D         	movff	?_clust2sect,remove_chain@rt
  5280  00769A  C00E  F08E         	movff	?_clust2sect+1,remove_chain@rt+1
  5281  00769E  C00F  F08F         	movff	?_clust2sect+2,remove_chain@rt+2
  5282  0076A2  C010  F090         	movff	?_clust2sect+3,remove_chain@rt+3
  5283                           
  5284                           ;ff.c: 1012: rt[1] = clust2sect(fs, ecl) + fs->csize - 1;
  5285  0076A6  C078  F00E         	movff	remove_chain@fs+1,clust2sect@fs+1
  5286  0076AA  C077  F00D         	movff	remove_chain@fs,clust2sect@fs
  5287  0076AE  C095  F00F         	movff	remove_chain@ecl,clust2sect@clst
  5288  0076B2  C096  F010         	movff	remove_chain@ecl+1,clust2sect@clst+1
  5289  0076B6  C097  F011         	movff	remove_chain@ecl+2,clust2sect@clst+2
  5290  0076BA  C098  F012         	movff	remove_chain@ecl+3,clust2sect@clst+3
  5291  0076BE  EC7E  F02D         	call	_clust2sect	;wreg free
  5292  0076C2  C00D  F080         	movff	?_clust2sect,??_remove_chain
  5293  0076C6  C00E  F081         	movff	?_clust2sect+1,??_remove_chain+1
  5294  0076CA  C00F  F082         	movff	?_clust2sect+2,??_remove_chain+2
  5295  0076CE  C010  F083         	movff	?_clust2sect+3,??_remove_chain+3
  5296  0076D2  EE20 F002          	lfsr	2,2
  5297  0076D6  5077               	movf	remove_chain@fs,w,c
  5298  0076D8  26D9               	addwf	fsr2l,f,c
  5299  0076DA  5078               	movf	remove_chain@fs+1,w,c
  5300  0076DC  22DA               	addwfc	fsr2h,f,c
  5301  0076DE  50DF               	movf	indf2,w,c
  5302  0076E0  0100               	movlb	0	; () banked
  5303  0076E2  6F84               	movwf	(??_remove_chain+4)& (0+255),b
  5304  0076E4  0100               	movlb	0	; () banked
  5305  0076E6  5184               	movf	(??_remove_chain+4)& (0+255),w,b
  5306  0076E8  0100               	movlb	0	; () banked
  5307  0076EA  2580               	addwf	??_remove_chain& (0+255),w,b
  5308  0076EC  0100               	movlb	0	; () banked
  5309  0076EE  6F85               	movwf	(??_remove_chain+5)& (0+255),b
  5310  0076F0  0E00               	movlw	0
  5311  0076F2  0100               	movlb	0	; () banked
  5312  0076F4  2181               	addwfc	(??_remove_chain+1)& (0+255),w,b
  5313  0076F6  0100               	movlb	0	; () banked
  5314  0076F8  6F86               	movwf	(??_remove_chain+6)& (0+255),b
  5315  0076FA  0E00               	movlw	0
  5316  0076FC  0100               	movlb	0	; () banked
  5317  0076FE  2182               	addwfc	(??_remove_chain+2)& (0+255),w,b
  5318  007700  0100               	movlb	0	; () banked
  5319  007702  6F87               	movwf	(??_remove_chain+7)& (0+255),b
  5320  007704  0E00               	movlw	0
  5321  007706  0100               	movlb	0	; () banked
  5322  007708  2183               	addwfc	(??_remove_chain+3)& (0+255),w,b
  5323  00770A  0100               	movlb	0	; () banked
  5324  00770C  6F88               	movwf	(??_remove_chain+8)& (0+255),b
  5325  00770E  0EFF               	movlw	255
  5326  007710  0100               	movlb	0	; () banked
  5327  007712  2585               	addwf	(??_remove_chain+5)& (0+255),w,b
  5328  007714  0100               	movlb	0	; () banked
  5329  007716  6F91               	movwf	(remove_chain@rt+4)& (0+255),b
  5330  007718  0EFF               	movlw	255
  5331  00771A  0100               	movlb	0	; () banked
  5332  00771C  2186               	addwfc	(??_remove_chain+6)& (0+255),w,b
  5333  00771E  0100               	movlb	0	; () banked
  5334  007720  6F92               	movwf	(remove_chain@rt+5)& (0+255),b
  5335  007722  0EFF               	movlw	255
  5336  007724  0100               	movlb	0	; () banked
  5337  007726  2187               	addwfc	(??_remove_chain+7)& (0+255),w,b
  5338  007728  0100               	movlb	0	; () banked
  5339  00772A  6F93               	movwf	(remove_chain@rt+6)& (0+255),b
  5340  00772C  0EFF               	movlw	255
  5341  00772E  0100               	movlb	0	; () banked
  5342  007730  2188               	addwfc	(??_remove_chain+8)& (0+255),w,b
  5343  007732  0100               	movlb	0	; () banked
  5344  007734  6F94               	movwf	(remove_chain@rt+7)& (0+255),b
  5345                           
  5346                           ; BSR set to: 0
  5347                           ;ff.c: 1013: disk_ioctl(fs->drv, 4, rt);
  5348  007736  0E04               	movlw	4
  5349  007738  6E1C               	movwf	disk_ioctl@ctrl,c
  5350  00773A  0100               	movlb	0	; () banked
  5351  00773C  0E00               	movlw	high remove_chain@rt
  5352  00773E  6E1E               	movwf	disk_ioctl@buff+1,c
  5353  007740  0100               	movlb	0	; () banked
  5354  007742  0E8D               	movlw	low remove_chain@rt
  5355  007744  6E1D               	movwf	disk_ioctl@buff,c
  5356  007746  EE20 F001          	lfsr	2,1
  5357  00774A  5077               	movf	remove_chain@fs,w,c
  5358  00774C  26D9               	addwf	fsr2l,f,c
  5359  00774E  5078               	movf	remove_chain@fs+1,w,c
  5360  007750  22DA               	addwfc	fsr2h,f,c
  5361  007752  50DF               	movf	indf2,w,c
  5362  007754  EC59  F033         	call	_disk_ioctl
  5363                           
  5364                           ;ff.c: 1014: scl = ecl = nxt;
  5365  007758  C09A  F095         	movff	remove_chain@nxt,remove_chain@ecl
  5366  00775C  C09B  F096         	movff	remove_chain@nxt+1,remove_chain@ecl+1
  5367  007760  C09C  F097         	movff	remove_chain@nxt+2,remove_chain@ecl+2
  5368  007764  C09D  F098         	movff	remove_chain@nxt+3,remove_chain@ecl+3
  5369  007768  C095  F089         	movff	remove_chain@ecl,remove_chain@scl
  5370  00776C  C096  F08A         	movff	remove_chain@ecl+1,remove_chain@scl+1
  5371  007770  C097  F08B         	movff	remove_chain@ecl+2,remove_chain@scl+2
  5372  007774  C098  F08C         	movff	remove_chain@ecl+3,remove_chain@scl+3
  5373  007778                     l8069:
  5374                           
  5375                           ;ff.c: 1015: }
  5376                           ;ff.c: 1017: clst = nxt;
  5377  007778  C09A  F079         	movff	remove_chain@nxt,remove_chain@clst
  5378  00777C  C09B  F07A         	movff	remove_chain@nxt+1,remove_chain@clst+1
  5379  007780  C09C  F07B         	movff	remove_chain@nxt+2,remove_chain@clst+2
  5380  007784  C09D  F07C         	movff	remove_chain@nxt+3,remove_chain@clst+3
  5381  007788                     l8071:
  5382  007788  EE20 F016          	lfsr	2,22
  5383  00778C  5077               	movf	remove_chain@fs,w,c
  5384  00778E  26D9               	addwf	fsr2l,f,c
  5385  007790  5078               	movf	remove_chain@fs+1,w,c
  5386  007792  22DA               	addwfc	fsr2h,f,c
  5387  007794  CFDE F080          	movff	postinc2,??_remove_chain
  5388  007798  CFDE F081          	movff	postinc2,??_remove_chain+1
  5389  00779C  CFDE F082          	movff	postinc2,??_remove_chain+2
  5390  0077A0  CFDE F083          	movff	postinc2,??_remove_chain+3
  5391  0077A4  0100               	movlb	0	; () banked
  5392  0077A6  5180               	movf	??_remove_chain& (0+255),w,b
  5393  0077A8  5C79               	subwf	remove_chain@clst,w,c
  5394  0077AA  0100               	movlb	0	; () banked
  5395  0077AC  5181               	movf	(??_remove_chain+1)& (0+255),w,b
  5396  0077AE  587A               	subwfb	remove_chain@clst+1,w,c
  5397  0077B0  0100               	movlb	0	; () banked
  5398  0077B2  5182               	movf	(??_remove_chain+2)& (0+255),w,b
  5399  0077B4  587B               	subwfb	remove_chain@clst+2,w,c
  5400  0077B6  0100               	movlb	0	; () banked
  5401  0077B8  5183               	movf	(??_remove_chain+3)& (0+255),w,b
  5402  0077BA  587C               	subwfb	remove_chain@clst+3,w,c
  5403  0077BC  A0D8               	btfss	status,0,c
  5404  0077BE  D6B0               	goto	l8035
  5405  0077C0                     l8073:
  5406                           
  5407                           ; BSR set to: 0
  5408                           ;ff.c: 1018: }
  5409                           ;ff.c: 1019: }
  5410                           ;ff.c: 1021: return res;
  5411  0077C0  0100               	movlb	0	; () banked
  5412  0077C2  5199               	movf	remove_chain@res& (0+255),w,b
  5413                           
  5414                           ; BSR set to: 0
  5415                           
  5416                           ; BSR set to: 0
  5417  0077C4  0012               	return	
  5418  0077C6                     __end_of_remove_chain:
  5419                           	opt stack 0
  5420                           tblptru	equ	0xFF8
  5421                           tblptrh	equ	0xFF7
  5422                           tblptrl	equ	0xFF6
  5423                           tablat	equ	0xFF5
  5424                           postinc0	equ	0xFEE
  5425                           wreg	equ	0xFE8
  5426                           indf1	equ	0xFE7
  5427                           postinc1	equ	0xFE6
  5428                           postdec1	equ	0xFE5
  5429                           fsr1h	equ	0xFE2
  5430                           fsr1l	equ	0xFE1
  5431                           indf2	equ	0xFDF
  5432                           postinc2	equ	0xFDE
  5433                           postdec2	equ	0xFDD
  5434                           plusw2	equ	0xFDB
  5435                           fsr2h	equ	0xFDA
  5436                           fsr2l	equ	0xFD9
  5437                           status	equ	0xFD8
  5438                           
  5439 ;; *************** function _follow_path *****************
  5440 ;; Defined at:
  5441 ;;		line 2095 in file "ff.c"
  5442 ;; Parameters:    Size  Location     Type
  5443 ;;  dp              2   40[BANK0 ] PTR struct .
  5444 ;;		 -> f_utime@dj(25), f_rename@djn(25), f_rename@djo(25), f_chmod@dj(25), 
  5445 ;;		 -> f_mkdir@dj(25), f_unlink@dj(25), f_stat@dj(25), f_chdir@dj(25), 
  5446 ;;		 -> f_open@dj(25), 
  5447 ;;  path            2   42[BANK0 ] PTR const unsigned char 
  5448 ;;		 -> STR_5(9), STR_3(1), 
  5449 ;; Auto vars:     Size  Location     Type
  5450 ;;  dir             2   48[BANK0 ] PTR unsigned char 
  5451 ;;		 -> NULL(0), FatFs(562), 
  5452 ;;  res             1   51[BANK0 ] enum E67
  5453 ;;  ns              1   50[BANK0 ] unsigned char 
  5454 ;; Return value:  Size  Location     Type
  5455 ;;                  1    wreg      enum E67
  5456 ;; Registers used:
  5457 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5458 ;; Tracked objects:
  5459 ;;		On entry : 0/0
  5460 ;;		On exit  : 0/0
  5461 ;;		Unchanged: 0/0
  5462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5463 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5464 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5465 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5466 ;;      Totals:         0      12       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5467 ;;Total ram usage:       12 bytes
  5468 ;; Hardware stack levels used:    1
  5469 ;; Hardware stack levels required when called:   11
  5470 ;; This function calls:
  5471 ;;		_create_name
  5472 ;;		_dir_find
  5473 ;;		_dir_sdi
  5474 ;;		_ld_clust
  5475 ;; This function is called by:
  5476 ;;		_f_open
  5477 ;;		_f_chdir
  5478 ;;		_f_opendir
  5479 ;;		_f_stat
  5480 ;;		_f_unlink
  5481 ;;		_f_mkdir
  5482 ;;		_f_chmod
  5483 ;;		_f_rename
  5484 ;;		_f_utime
  5485 ;; This function uses a non-reentrant model
  5486 ;;
  5487                           
  5488                           	psect	text6
  5489  006D2E                     __ptext6:
  5490                           	opt stack 0
  5491  006D2E                     _follow_path:
  5492                           	opt stack 18
  5493                           
  5494                           ;ff.c: 2100: FRESULT res;
  5495                           ;ff.c: 2101: BYTE *dir, ns;
  5496                           ;ff.c: 2105: if (*path == '/' || *path == '\\') {
  5497                           
  5498                           ; BSR set to: 0
  5499                           ;incstack = 0
  5500  006D2E  0100               	movlb	0	; () banked
  5501  006D30  C0AA  FFF6         	movff	follow_path@path,tblptrl
  5502  006D34  0100               	movlb	0	; () banked
  5503  006D36  C0AB  FFF7         	movff	follow_path@path+1,tblptrh
  5504  006D3A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5505  006D3A  6AF8               	clrf	tblptru,c
  5506  006D3C                     	endif
  5507  006D3C                     	if	0	;tblptru may be non-zero
  5508  006D3C                     	endif
  5509  006D3C  0008               	tblrd		*
  5510  006D3E  50F5               	movf	tablat,w,c
  5511  006D40  0A2F               	xorlw	47
  5512  006D42  B4D8               	btfsc	status,2,c
  5513  006D44  D00C               	goto	l8123
  5514                           
  5515                           ; BSR set to: 0
  5516  006D46  0100               	movlb	0	; () banked
  5517  006D48  C0AA  FFF6         	movff	follow_path@path,tblptrl
  5518  006D4C  0100               	movlb	0	; () banked
  5519  006D4E  C0AB  FFF7         	movff	follow_path@path+1,tblptrh
  5520  006D52                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5521  006D52  6AF8               	clrf	tblptru,c
  5522  006D54                     	endif
  5523  006D54                     	if	0	;tblptru may be non-zero
  5524  006D54                     	endif
  5525  006D54  0008               	tblrd		*
  5526  006D56  50F5               	movf	tablat,w,c
  5527  006D58  0A5C               	xorlw	92
  5528  006D5A  A4D8               	btfss	status,2,c
  5529  006D5C  D011               	goto	l8127
  5530  006D5E                     l8123:
  5531                           
  5532                           ; BSR set to: 0
  5533                           ;ff.c: 2106: path++; dp->sclust = 0;
  5534  006D5E  0100               	movlb	0	; () banked
  5535  006D60  4BAA               	infsnz	follow_path@path& (0+255),f,b
  5536  006D62  2BAB               	incf	(follow_path@path+1)& (0+255),f,b
  5537                           
  5538                           ; BSR set to: 0
  5539  006D64  0100               	movlb	0	; () banked
  5540  006D66  EE20 F006          	lfsr	2,6
  5541  006D6A  0100               	movlb	0	; () banked
  5542  006D6C  51A8               	movf	follow_path@dp& (0+255),w,b
  5543  006D6E  26D9               	addwf	fsr2l,f,c
  5544  006D70  0100               	movlb	0	; () banked
  5545  006D72  51A9               	movf	(follow_path@dp+1)& (0+255),w,b
  5546  006D74  22DA               	addwfc	fsr2h,f,c
  5547  006D76  6ADE               	clrf	postinc2,c
  5548  006D78  6ADE               	clrf	postinc2,c
  5549  006D7A  6ADE               	clrf	postinc2,c
  5550  006D7C  6ADD               	clrf	postdec2,c
  5551                           
  5552                           ;ff.c: 2107: } else {
  5553  006D7E  D01D               	goto	l8129
  5554  006D80                     l8127:
  5555                           
  5556                           ; BSR set to: 0
  5557                           ;ff.c: 2108: dp->sclust = dp->fs->cdir;
  5558  006D80  C0A8  FFD9         	movff	follow_path@dp,fsr2l
  5559  006D84  C0A9  FFDA         	movff	follow_path@dp+1,fsr2h
  5560  006D88  EE10 F012          	lfsr	1,18
  5561  006D8C  50DE               	movf	postinc2,w,c
  5562  006D8E  26E1               	addwf	fsr1l,f,c
  5563  006D90  50DD               	movf	postdec2,w,c
  5564  006D92  22E2               	addwfc	fsr1h,f,c
  5565  006D94  0100               	movlb	0	; () banked
  5566  006D96  EE20 F006          	lfsr	2,6
  5567  006D9A  0100               	movlb	0	; () banked
  5568  006D9C  51A8               	movf	follow_path@dp& (0+255),w,b
  5569  006D9E  26D9               	addwf	fsr2l,f,c
  5570  006DA0  0100               	movlb	0	; () banked
  5571  006DA2  51A9               	movf	(follow_path@dp+1)& (0+255),w,b
  5572  006DA4  22DA               	addwfc	fsr2h,f,c
  5573  006DA6  CFE6 FFDE          	movff	postinc1,postinc2
  5574  006DAA  CFE6 FFDE          	movff	postinc1,postinc2
  5575  006DAE  CFE6 FFDE          	movff	postinc1,postinc2
  5576  006DB2  CFE5 FFDD          	movff	postdec1,postdec2
  5577  006DB6  52DD               	movf	postdec2,f,c
  5578  006DB8  52DD               	movf	postdec2,f,c
  5579  006DBA                     l8129:
  5580                           
  5581                           ; BSR set to: 0
  5582                           ;ff.c: 2109: }
  5583                           ;ff.c: 2116: if ((UINT)*path < ' ') {
  5584  006DBA  0E20               	movlw	32
  5585  006DBC  0100               	movlb	0	; () banked
  5586  006DBE  C0AA  FFF6         	movff	follow_path@path,tblptrl
  5587  006DC2  0100               	movlb	0	; () banked
  5588  006DC4  C0AB  FFF7         	movff	follow_path@path+1,tblptrh
  5589  006DC8                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  5590  006DC8  6AF8               	clrf	tblptru,c
  5591  006DCA                     	endif
  5592  006DCA                     	if	0	;tblptru may be non-zero
  5593  006DCA                     	endif
  5594  006DCA  0008               	tblrd		*
  5595  006DCC  CFF5 F0AC          	movff	tablat,??_follow_path
  5596  006DD0  0100               	movlb	0	; () banked
  5597  006DD2  5DAC               	subwf	??_follow_path& (0+255),w,b
  5598  006DD4  B0D8               	btfsc	status,0,c
  5599  006DD6  D01C               	goto	l8135
  5600                           
  5601                           ; BSR set to: 0
  5602                           ;ff.c: 2117: res = dir_sdi(dp, 0);
  5603  006DD8  0100               	movlb	0	; () banked
  5604  006DDA  C0A9  F073         	movff	follow_path@dp+1,dir_sdi@dp+1
  5605  006DDE  0100               	movlb	0	; () banked
  5606  006DE0  C0A8  F072         	movff	follow_path@dp,dir_sdi@dp
  5607  006DE4  0E00               	movlw	0
  5608  006DE6  6E75               	movwf	dir_sdi@idx+1,c
  5609  006DE8  0E00               	movlw	0
  5610  006DEA  6E74               	movwf	dir_sdi@idx,c
  5611  006DEC  ECE3  F03B         	call	_dir_sdi	;wreg free
  5612  006DF0  0100               	movlb	0	; () banked
  5613  006DF2  6FB3               	movwf	follow_path@res& (0+255),b
  5614                           
  5615                           ; BSR set to: 0
  5616                           ;ff.c: 2118: dp->dir = 0;
  5617  006DF4  0100               	movlb	0	; () banked
  5618  006DF6  EE20 F012          	lfsr	2,18
  5619  006DFA  0100               	movlb	0	; () banked
  5620  006DFC  51A8               	movf	follow_path@dp& (0+255),w,b
  5621  006DFE  26D9               	addwf	fsr2l,f,c
  5622  006E00  0100               	movlb	0	; () banked
  5623  006E02  51A9               	movf	(follow_path@dp+1)& (0+255),w,b
  5624  006E04  22DA               	addwfc	fsr2h,f,c
  5625  006E06  0E00               	movlw	0
  5626  006E08  6EDE               	movwf	postinc2,c
  5627  006E0A  0E00               	movlw	0
  5628  006E0C  6EDD               	movwf	postdec2,c
  5629                           
  5630                           ;ff.c: 2119: } else {
  5631  006E0E  D0B1               	goto	l8169
  5632  006E10                     l8135:
  5633                           
  5634                           ; BSR set to: 0
  5635                           ;ff.c: 2121: res = create_name(dp, &path);
  5636  006E10  0100               	movlb	0	; () banked
  5637  006E12  C0A9  F00A         	movff	follow_path@dp+1,create_name@dp+1
  5638  006E16  0100               	movlb	0	; () banked
  5639  006E18  C0A8  F009         	movff	follow_path@dp,create_name@dp
  5640  006E1C  0100               	movlb	0	; () banked
  5641  006E1E  0E00               	movlw	high follow_path@path
  5642  006E20  6E0C               	movwf	create_name@path+1,c
  5643  006E22  0100               	movlb	0	; () banked
  5644  006E24  0EAA               	movlw	low follow_path@path
  5645  006E26  6E0B               	movwf	create_name@path,c
  5646  006E28  EC29  F03F         	call	_create_name	;wreg free
  5647  006E2C  0100               	movlb	0	; () banked
  5648  006E2E  6FB3               	movwf	follow_path@res& (0+255),b
  5649                           
  5650                           ; BSR set to: 0
  5651                           ;ff.c: 2122: if (res != FR_OK) break;
  5652  006E30  0100               	movlb	0	; () banked
  5653  006E32  51B3               	movf	follow_path@res& (0+255),w,b
  5654  006E34  A4D8               	btfss	status,2,c
  5655  006E36  D09D               	goto	l8169
  5656                           
  5657                           ; BSR set to: 0
  5658                           ;ff.c: 2123: res = dir_find(dp);
  5659                           
  5660                           ; BSR set to: 0
  5661                           
  5662                           ; BSR set to: 0
  5663  006E38  0100               	movlb	0	; () banked
  5664  006E3A  C0A9  F07E         	movff	follow_path@dp+1,dir_find@dp+1
  5665  006E3E  0100               	movlb	0	; () banked
  5666  006E40  C0A8  F07D         	movff	follow_path@dp,dir_find@dp
  5667  006E44  ECBF  F02E         	call	_dir_find	;wreg free
  5668  006E48  0100               	movlb	0	; () banked
  5669  006E4A  6FB3               	movwf	follow_path@res& (0+255),b
  5670                           
  5671                           ; BSR set to: 0
  5672                           ;ff.c: 2124: ns = dp->fn[11];
  5673  006E4C  0100               	movlb	0	; () banked
  5674  006E4E  EE20 F014          	lfsr	2,20
  5675  006E52  0100               	movlb	0	; () banked
  5676  006E54  51A8               	movf	follow_path@dp& (0+255),w,b
  5677  006E56  26D9               	addwf	fsr2l,f,c
  5678  006E58  0100               	movlb	0	; () banked
  5679  006E5A  51A9               	movf	(follow_path@dp+1)& (0+255),w,b
  5680  006E5C  22DA               	addwfc	fsr2h,f,c
  5681  006E5E  EE10 F00B          	lfsr	1,11
  5682  006E62  50DE               	movf	postinc2,w,c
  5683  006E64  26E1               	addwf	fsr1l,f,c
  5684  006E66  50DD               	movf	postdec2,w,c
  5685  006E68  22E2               	addwfc	fsr1h,f,c
  5686  006E6A  50E7               	movf	indf1,w,c
  5687  006E6C  0100               	movlb	0	; () banked
  5688  006E6E  6FB2               	movwf	follow_path@ns& (0+255),b
  5689                           
  5690                           ; BSR set to: 0
  5691                           ;ff.c: 2125: if (res != FR_OK) {
  5692  006E70  0100               	movlb	0	; () banked
  5693  006E72  51B3               	movf	follow_path@res& (0+255),w,b
  5694  006E74  B4D8               	btfsc	status,2,c
  5695  006E76  D02E               	goto	l628
  5696                           
  5697                           ; BSR set to: 0
  5698                           ;ff.c: 2127: if (2 && (ns & 0x20)) {
  5699  006E78  0100               	movlb	0	; () banked
  5700  006E7A  51B3               	movf	follow_path@res& (0+255),w,b
  5701  006E7C  0A04               	xorlw	4
  5702  006E7E  A4D8               	btfss	status,2,c
  5703  006E80  D078               	goto	l8169
  5704                           
  5705                           ; BSR set to: 0
  5706  006E82  0100               	movlb	0	; () banked
  5707  006E84  ABB2               	btfss	follow_path@ns& (0+255),5,b
  5708  006E86  D01F               	goto	l630
  5709                           
  5710                           ; BSR set to: 0
  5711                           ;ff.c: 2128: dp->sclust = 0; dp->dir = 0;
  5712  006E88  0100               	movlb	0	; () banked
  5713  006E8A  EE20 F006          	lfsr	2,6
  5714  006E8E  0100               	movlb	0	; () banked
  5715  006E90  51A8               	movf	follow_path@dp& (0+255),w,b
  5716  006E92  26D9               	addwf	fsr2l,f,c
  5717  006E94  0100               	movlb	0	; () banked
  5718  006E96  51A9               	movf	(follow_path@dp+1)& (0+255),w,b
  5719  006E98  22DA               	addwfc	fsr2h,f,c
  5720  006E9A  6ADE               	clrf	postinc2,c
  5721  006E9C  6ADE               	clrf	postinc2,c
  5722  006E9E  6ADE               	clrf	postinc2,c
  5723  006EA0  6ADD               	clrf	postdec2,c
  5724  006EA2  0100               	movlb	0	; () banked
  5725  006EA4  EE20 F012          	lfsr	2,18
  5726  006EA8  0100               	movlb	0	; () banked
  5727  006EAA  51A8               	movf	follow_path@dp& (0+255),w,b
  5728  006EAC  26D9               	addwf	fsr2l,f,c
  5729  006EAE  0100               	movlb	0	; () banked
  5730  006EB0  51A9               	movf	(follow_path@dp+1)& (0+255),w,b
  5731  006EB2  22DA               	addwfc	fsr2h,f,c
  5732  006EB4  0E00               	movlw	0
  5733  006EB6  6EDE               	movwf	postinc2,c
  5734  006EB8  0E00               	movlw	0
  5735  006EBA  6EDD               	movwf	postdec2,c
  5736                           
  5737                           ; BSR set to: 0
  5738                           ;ff.c: 2129: if (!(ns & 0x04)) continue;
  5739  006EBC  0100               	movlb	0	; () banked
  5740  006EBE  A5B2               	btfss	follow_path@ns& (0+255),2,b
  5741  006EC0  D7A7               	goto	l8135
  5742                           
  5743                           ; BSR set to: 0
  5744                           ;ff.c: 2130: res = FR_OK;
  5745                           
  5746                           ; BSR set to: 0
  5747                           
  5748                           ; BSR set to: 0
  5749  006EC2  0E00               	movlw	0
  5750  006EC4  D004               	goto	L7
  5751  006EC6                     l630:
  5752                           
  5753                           ; BSR set to: 0
  5754                           ;ff.c: 2132: if (!(ns & 0x04)) res = FR_NO_PATH;
  5755  006EC6  0100               	movlb	0	; () banked
  5756  006EC8  B5B2               	btfsc	follow_path@ns& (0+255),2,b
  5757  006ECA  D053               	goto	l8169
  5758  006ECC  D024               	goto	u10830
  5759  006ECE                     L7:
  5760  006ECE  0100               	movlb	0	; () banked
  5761  006ED0  6FB3               	movwf	follow_path@res& (0+255),b
  5762  006ED2  D04F               	goto	l8169
  5763  006ED4                     l628:
  5764                           
  5765                           ; BSR set to: 0
  5766                           ;ff.c: 2136: }
  5767                           ;ff.c: 2137: if (ns & 0x04) break;
  5768  006ED4  0100               	movlb	0	; () banked
  5769  006ED6  B5B2               	btfsc	follow_path@ns& (0+255),2,b
  5770  006ED8  D04C               	goto	l8169
  5771                           
  5772                           ; BSR set to: 0
  5773                           ;ff.c: 2138: dir = dp->dir;
  5774                           
  5775                           ; BSR set to: 0
  5776                           
  5777                           ; BSR set to: 0
  5778  006EDA  0100               	movlb	0	; () banked
  5779  006EDC  EE20 F012          	lfsr	2,18
  5780  006EE0  0100               	movlb	0	; () banked
  5781  006EE2  51A8               	movf	follow_path@dp& (0+255),w,b
  5782  006EE4  26D9               	addwf	fsr2l,f,c
  5783  006EE6  0100               	movlb	0	; () banked
  5784  006EE8  51A9               	movf	(follow_path@dp+1)& (0+255),w,b
  5785  006EEA  22DA               	addwfc	fsr2h,f,c
  5786  006EEC  0100               	movlb	0	; () banked
  5787  006EEE  CFDE F0B0          	movff	postinc2,follow_path@dir
  5788  006EF2  0100               	movlb	0	; () banked
  5789  006EF4  CFDD F0B1          	movff	postdec2,follow_path@dir+1
  5790                           
  5791                           ;ff.c: 2139: if (!(dir[11] & 0x10)) {
  5792  006EF8  0100               	movlb	0	; () banked
  5793  006EFA  EE20 F00B          	lfsr	2,11
  5794  006EFE  0100               	movlb	0	; () banked
  5795  006F00  51B0               	movf	follow_path@dir& (0+255),w,b
  5796  006F02  26D9               	addwf	fsr2l,f,c
  5797  006F04  0100               	movlb	0	; () banked
  5798  006F06  51B1               	movf	(follow_path@dir+1)& (0+255),w,b
  5799  006F08  22DA               	addwfc	fsr2h,f,c
  5800  006F0A  50DF               	movf	indf2,w,c
  5801  006F0C  0100               	movlb	0	; () banked
  5802  006F0E  6FAC               	movwf	??_follow_path& (0+255),b
  5803  006F10  0100               	movlb	0	; () banked
  5804  006F12  B9AC               	btfsc	??_follow_path& (0+255),4,b
  5805  006F14  D002               	goto	l8167
  5806  006F16                     u10830:
  5807                           
  5808                           ; BSR set to: 0
  5809                           ;ff.c: 2140: res = FR_NO_PATH; break;
  5810  006F16  0E05               	movlw	5
  5811  006F18  D7DA               	goto	L7
  5812  006F1A                     l8167:
  5813                           
  5814                           ; BSR set to: 0
  5815                           ;ff.c: 2141: }
  5816                           ;ff.c: 2142: dp->sclust = ld_clust(dp->fs, dir);
  5817  006F1A  C0A8  FFD9         	movff	follow_path@dp,fsr2l
  5818  006F1E  C0A9  FFDA         	movff	follow_path@dp+1,fsr2h
  5819  006F22  CFDE F001          	movff	postinc2,ld_clust@fs
  5820  006F26  CFDD F002          	movff	postdec2,ld_clust@fs+1
  5821  006F2A  0100               	movlb	0	; () banked
  5822  006F2C  C0B1  F004         	movff	follow_path@dir+1,ld_clust@dir+1
  5823  006F30  0100               	movlb	0	; () banked
  5824  006F32  C0B0  F003         	movff	follow_path@dir,ld_clust@dir
  5825  006F36  ECE2  F02D         	call	_ld_clust	;wreg free
  5826  006F3A  C001  F0AC         	movff	?_ld_clust,??_follow_path
  5827  006F3E  C002  F0AD         	movff	?_ld_clust+1,??_follow_path+1
  5828  006F42  C003  F0AE         	movff	?_ld_clust+2,??_follow_path+2
  5829  006F46  C004  F0AF         	movff	?_ld_clust+3,??_follow_path+3
  5830  006F4A  0100               	movlb	0	; () banked
  5831  006F4C  EE20 F006          	lfsr	2,6
  5832  006F50  0100               	movlb	0	; () banked
  5833  006F52  51A8               	movf	follow_path@dp& (0+255),w,b
  5834  006F54  26D9               	addwf	fsr2l,f,c
  5835  006F56  0100               	movlb	0	; () banked
  5836  006F58  51A9               	movf	(follow_path@dp+1)& (0+255),w,b
  5837  006F5A  22DA               	addwfc	fsr2h,f,c
  5838  006F5C  C0AC  FFDE         	movff	??_follow_path,postinc2
  5839  006F60  C0AD  FFDE         	movff	??_follow_path+1,postinc2
  5840  006F64  C0AE  FFDE         	movff	??_follow_path+2,postinc2
  5841  006F68  C0AF  FFDD         	movff	??_follow_path+3,postdec2
  5842  006F6C  06D9               	decf	fsr2l,f,c
  5843  006F6E  06D9               	decf	fsr2l,f,c
  5844  006F70  D74F               	goto	l8135
  5845  006F72                     l8169:
  5846                           
  5847                           ; BSR set to: 0
  5848                           ;ff.c: 2144: }
  5849                           ;ff.c: 2146: return res;
  5850  006F72  0100               	movlb	0	; () banked
  5851  006F74  51B3               	movf	follow_path@res& (0+255),w,b
  5852                           
  5853                           ; BSR set to: 0
  5854                           
  5855                           ; BSR set to: 0
  5856  006F76  0012               	return	
  5857  006F78                     __end_of_follow_path:
  5858                           	opt stack 0
  5859                           tblptru	equ	0xFF8
  5860                           tblptrh	equ	0xFF7
  5861                           tblptrl	equ	0xFF6
  5862                           tablat	equ	0xFF5
  5863                           postinc0	equ	0xFEE
  5864                           wreg	equ	0xFE8
  5865                           indf1	equ	0xFE7
  5866                           postinc1	equ	0xFE6
  5867                           postdec1	equ	0xFE5
  5868                           fsr1h	equ	0xFE2
  5869                           fsr1l	equ	0xFE1
  5870                           indf2	equ	0xFDF
  5871                           postinc2	equ	0xFDE
  5872                           postdec2	equ	0xFDD
  5873                           plusw2	equ	0xFDB
  5874                           fsr2h	equ	0xFDA
  5875                           fsr2l	equ	0xFD9
  5876                           status	equ	0xFD8
  5877                           
  5878 ;; *************** function _ld_clust *****************
  5879 ;; Defined at:
  5880 ;;		line 1278 in file "ff.c"
  5881 ;; Parameters:    Size  Location     Type
  5882 ;;  fs              2    0[COMRAM] PTR struct .
  5883 ;;		 -> NULL(0), FatFs(562), 
  5884 ;;  dir             2    2[COMRAM] PTR const unsigned char 
  5885 ;;		 -> FatFs.win(512), NULL(0), FatFs(562), 
  5886 ;; Auto vars:     Size  Location     Type
  5887 ;;  cl              4   16[COMRAM] unsigned long 
  5888 ;; Return value:  Size  Location     Type
  5889 ;;                  4    0[COMRAM] unsigned long 
  5890 ;; Registers used:
  5891 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  5892 ;; Tracked objects:
  5893 ;;		On entry : 0/0
  5894 ;;		On exit  : 0/0
  5895 ;;		Unchanged: 0/0
  5896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  5897 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5898 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5899 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5900 ;;      Totals:        20       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  5901 ;;Total ram usage:       20 bytes
  5902 ;; Hardware stack levels used:    1
  5903 ;; This function calls:
  5904 ;;		Nothing
  5905 ;; This function is called by:
  5906 ;;		_follow_path
  5907 ;;		_f_open
  5908 ;;		_f_chdir
  5909 ;;		_f_getcwd
  5910 ;;		_f_opendir
  5911 ;;		_f_unlink
  5912 ;;		_f_rename
  5913 ;; This function uses a non-reentrant model
  5914 ;;
  5915                           
  5916                           	psect	text7
  5917  005BC4                     __ptext7:
  5918                           	opt stack 0
  5919  005BC4                     _ld_clust:
  5920                           	opt stack 29
  5921                           
  5922                           ;ff.c: 1283: DWORD cl;
  5923                           ;ff.c: 1285: cl = (WORD)(((WORD)*((BYTE*)(dir + 26)+1)<<8)|(WORD)*(BYTE*)(dir + 26));
  5924                           
  5925                           ; BSR set to: 0
  5926                           ;incstack = 0
  5927  005BC4  0E1A               	movlw	26
  5928  005BC6  2403               	addwf	ld_clust@dir,w,c
  5929  005BC8  6E05               	movwf	??_ld_clust& (0+255),c
  5930  005BCA  0E00               	movlw	0
  5931  005BCC  2004               	addwfc	ld_clust@dir+1,w,c
  5932  005BCE  6E06               	movwf	(??_ld_clust+1)& (0+255),c
  5933  005BD0  0E01               	movlw	1
  5934  005BD2  2405               	addwf	??_ld_clust,w,c
  5935  005BD4  6ED9               	movwf	fsr2l,c
  5936  005BD6  0E00               	movlw	0
  5937  005BD8  2006               	addwfc	??_ld_clust+1,w,c
  5938  005BDA  6EDA               	movwf	fsr2h,c
  5939  005BDC  50DF               	movf	indf2,w,c
  5940  005BDE  6E07               	movwf	(??_ld_clust+2)& (0+255),c
  5941  005BE0  5007               	movf	??_ld_clust+2,w,c
  5942  005BE2  6E09               	movwf	(??_ld_clust+4)& (0+255),c
  5943  005BE4  6A08               	clrf	(??_ld_clust+3)& (0+255),c
  5944  005BE6  0E1A               	movlw	26
  5945  005BE8  2403               	addwf	ld_clust@dir,w,c
  5946  005BEA  6E0A               	movwf	(??_ld_clust+5)& (0+255),c
  5947  005BEC  0E00               	movlw	0
  5948  005BEE  2004               	addwfc	ld_clust@dir+1,w,c
  5949  005BF0  6E0B               	movwf	(??_ld_clust+6)& (0+255),c
  5950  005BF2  C00A  FFD9         	movff	??_ld_clust+5,fsr2l
  5951  005BF6  C00B  FFDA         	movff	??_ld_clust+6,fsr2h
  5952  005BFA  50DF               	movf	indf2,w,c
  5953  005BFC  6E0C               	movwf	(??_ld_clust+7)& (0+255),c
  5954  005BFE  500C               	movf	??_ld_clust+7,w,c
  5955  005C00  1208               	iorwf	??_ld_clust+3,f,c
  5956  005C02  0E00               	movlw	0
  5957  005C04  1209               	iorwf	??_ld_clust+4,f,c
  5958  005C06  C008  F011         	movff	??_ld_clust+3,ld_clust@cl
  5959  005C0A  C009  F012         	movff	??_ld_clust+4,ld_clust@cl+1
  5960  005C0E  6A13               	clrf	ld_clust@cl+2,c
  5961  005C10  6A14               	clrf	ld_clust@cl+3,c
  5962                           
  5963                           ;ff.c: 1286: if (fs->fs_type == 3)
  5964  005C12  0E03               	movlw	3
  5965  005C14  C001  FFD9         	movff	ld_clust@fs,fsr2l
  5966  005C18  C002  FFDA         	movff	ld_clust@fs+1,fsr2h
  5967  005C1C  62DF               	cpfseq	indf2,c
  5968  005C1E  D032               	goto	l7619
  5969                           
  5970                           ;ff.c: 1287: cl |= (DWORD)(WORD)(((WORD)*((BYTE*)(dir + 20)+1)<<8)|(WORD)*(BYTE*)(dir + 
      +                          20)) << 16;
  5971  005C20  0E14               	movlw	20
  5972  005C22  2403               	addwf	ld_clust@dir,w,c
  5973  005C24  6E05               	movwf	??_ld_clust& (0+255),c
  5974  005C26  0E00               	movlw	0
  5975  005C28  2004               	addwfc	ld_clust@dir+1,w,c
  5976  005C2A  6E06               	movwf	(??_ld_clust+1)& (0+255),c
  5977  005C2C  0E01               	movlw	1
  5978  005C2E  2405               	addwf	??_ld_clust,w,c
  5979  005C30  6ED9               	movwf	fsr2l,c
  5980  005C32  0E00               	movlw	0
  5981  005C34  2006               	addwfc	??_ld_clust+1,w,c
  5982  005C36  6EDA               	movwf	fsr2h,c
  5983  005C38  50DF               	movf	indf2,w,c
  5984  005C3A  6E07               	movwf	(??_ld_clust+2)& (0+255),c
  5985  005C3C  5007               	movf	??_ld_clust+2,w,c
  5986  005C3E  6E09               	movwf	(??_ld_clust+4)& (0+255),c
  5987  005C40  6A08               	clrf	(??_ld_clust+3)& (0+255),c
  5988  005C42  0E14               	movlw	20
  5989  005C44  2403               	addwf	ld_clust@dir,w,c
  5990  005C46  6E0A               	movwf	(??_ld_clust+5)& (0+255),c
  5991  005C48  0E00               	movlw	0
  5992  005C4A  2004               	addwfc	ld_clust@dir+1,w,c
  5993  005C4C  6E0B               	movwf	(??_ld_clust+6)& (0+255),c
  5994  005C4E  C00A  FFD9         	movff	??_ld_clust+5,fsr2l
  5995  005C52  C00B  FFDA         	movff	??_ld_clust+6,fsr2h
  5996  005C56  50DF               	movf	indf2,w,c
  5997  005C58  6E0C               	movwf	(??_ld_clust+7)& (0+255),c
  5998  005C5A  500C               	movf	??_ld_clust+7,w,c
  5999  005C5C  1008               	iorwf	??_ld_clust+3,w,c
  6000  005C5E  6E0D               	movwf	(??_ld_clust+8)& (0+255),c
  6001  005C60  5009               	movf	??_ld_clust+4,w,c
  6002  005C62  6E0E               	movwf	(??_ld_clust+9)& (0+255),c
  6003  005C64  6A0F               	clrf	(??_ld_clust+10)& (0+255),c
  6004  005C66  6A10               	clrf	(??_ld_clust+11)& (0+255),c
  6005  005C68  C00E  F010         	movff	??_ld_clust+9,??_ld_clust+11
  6006  005C6C  C00D  F00F         	movff	??_ld_clust+8,??_ld_clust+10
  6007  005C70  6A0E               	clrf	??_ld_clust+9,c
  6008  005C72  6A0D               	clrf	??_ld_clust+8,c
  6009  005C74  500D               	movf	??_ld_clust+8,w,c
  6010  005C76  1211               	iorwf	ld_clust@cl,f,c
  6011  005C78  500E               	movf	??_ld_clust+9,w,c
  6012  005C7A  1212               	iorwf	ld_clust@cl+1,f,c
  6013  005C7C  500F               	movf	??_ld_clust+10,w,c
  6014  005C7E  1213               	iorwf	ld_clust@cl+2,f,c
  6015  005C80  5010               	movf	??_ld_clust+11,w,c
  6016  005C82  1214               	iorwf	ld_clust@cl+3,f,c
  6017  005C84                     l7619:
  6018                           
  6019                           ;ff.c: 1289: return cl;
  6020  005C84  C011  F001         	movff	ld_clust@cl,?_ld_clust
  6021  005C88  C012  F002         	movff	ld_clust@cl+1,?_ld_clust+1
  6022  005C8C  C013  F003         	movff	ld_clust@cl+2,?_ld_clust+2
  6023  005C90  C014  F004         	movff	ld_clust@cl+3,?_ld_clust+3
  6024  005C94  0012               	return	
  6025  005C96                     __end_of_ld_clust:
  6026                           	opt stack 0
  6027                           tblptru	equ	0xFF8
  6028                           tblptrh	equ	0xFF7
  6029                           tblptrl	equ	0xFF6
  6030                           tablat	equ	0xFF5
  6031                           postinc0	equ	0xFEE
  6032                           wreg	equ	0xFE8
  6033                           indf1	equ	0xFE7
  6034                           postinc1	equ	0xFE6
  6035                           postdec1	equ	0xFE5
  6036                           fsr1h	equ	0xFE2
  6037                           fsr1l	equ	0xFE1
  6038                           indf2	equ	0xFDF
  6039                           postinc2	equ	0xFDE
  6040                           postdec2	equ	0xFDD
  6041                           plusw2	equ	0xFDB
  6042                           fsr2h	equ	0xFDA
  6043                           fsr2l	equ	0xFD9
  6044                           status	equ	0xFD8
  6045                           
  6046 ;; *************** function _dir_find *****************
  6047 ;; Defined at:
  6048 ;;		line 1501 in file "ff.c"
  6049 ;; Parameters:    Size  Location     Type
  6050 ;;  dp              2  124[COMRAM] PTR struct .
  6051 ;;		 -> f_utime@dj(25), f_rename@djn(25), f_rename@djo(25), f_chmod@dj(25), 
  6052 ;;		 -> f_mkdir@dj(25), f_unlink@dj(25), f_stat@dj(25), f_chdir@dj(25), 
  6053 ;;		 -> f_open@dj(25), 
  6054 ;; Auto vars:     Size  Location     Type
  6055 ;;  dir             2   37[BANK0 ] PTR unsigned char 
  6056 ;;		 -> NULL(0), FatFs(562), 
  6057 ;;  res             1   39[BANK0 ] enum E67
  6058 ;;  c               1   36[BANK0 ] unsigned char 
  6059 ;; Return value:  Size  Location     Type
  6060 ;;                  1    wreg      enum E67
  6061 ;; Registers used:
  6062 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6063 ;; Tracked objects:
  6064 ;;		On entry : 0/0
  6065 ;;		On exit  : 0/0
  6066 ;;		Unchanged: 0/0
  6067 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6068 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6069 ;;      Locals:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6070 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6071 ;;      Totals:         3       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6072 ;;Total ram usage:        7 bytes
  6073 ;; Hardware stack levels used:    1
  6074 ;; Hardware stack levels required when called:   10
  6075 ;; This function calls:
  6076 ;;		_dir_next
  6077 ;;		_dir_sdi
  6078 ;;		_mem_cmp
  6079 ;;		_move_window
  6080 ;; This function is called by:
  6081 ;;		_follow_path
  6082 ;; This function uses a non-reentrant model
  6083 ;;
  6084                           
  6085                           	psect	text8
  6086  005D7E                     __ptext8:
  6087                           	opt stack 0
  6088  005D7E                     _dir_find:
  6089                           	opt stack 18
  6090                           
  6091                           ;ff.c: 1505: FRESULT res;
  6092                           ;ff.c: 1506: BYTE c, *dir;
  6093                           ;ff.c: 1511: res = dir_sdi(dp, 0);
  6094                           
  6095                           ;incstack = 0
  6096  005D7E  C07E  F073         	movff	dir_find@dp+1,dir_sdi@dp+1
  6097  005D82  C07D  F072         	movff	dir_find@dp,dir_sdi@dp
  6098  005D86  0E00               	movlw	0
  6099  005D88  6E75               	movwf	dir_sdi@idx+1,c
  6100  005D8A  0E00               	movlw	0
  6101  005D8C  6E74               	movwf	dir_sdi@idx,c
  6102  005D8E  ECE3  F03B         	call	_dir_sdi	;wreg free
  6103  005D92  0100               	movlb	0	; () banked
  6104  005D94  6FA7               	movwf	dir_find@res& (0+255),b
  6105                           
  6106                           ; BSR set to: 0
  6107                           ;ff.c: 1512: if (res != FR_OK) return res;
  6108  005D96  0100               	movlb	0	; () banked
  6109  005D98  51A7               	movf	dir_find@res& (0+255),w,b
  6110  005D9A  A4D8               	btfss	status,2,c
  6111  005D9C  D073               	goto	l7657
  6112  005D9E                     l7633:
  6113                           
  6114                           ; BSR set to: 0
  6115                           ;ff.c: 1518: res = move_window(dp->fs, dp->sect);
  6116  005D9E  C07D  FFD9         	movff	dir_find@dp,fsr2l
  6117  005DA2  C07E  FFDA         	movff	dir_find@dp+1,fsr2h
  6118  005DA6  CFDE F03B          	movff	postinc2,move_window@fs
  6119  005DAA  CFDD F03C          	movff	postdec2,move_window@fs+1
  6120  005DAE  EE20 F00E          	lfsr	2,14
  6121  005DB2  507D               	movf	dir_find@dp,w,c
  6122  005DB4  26D9               	addwf	fsr2l,f,c
  6123  005DB6  507E               	movf	dir_find@dp+1,w,c
  6124  005DB8  22DA               	addwfc	fsr2h,f,c
  6125  005DBA  CFDE F03D          	movff	postinc2,move_window@sector
  6126  005DBE  CFDE F03E          	movff	postinc2,move_window@sector+1
  6127  005DC2  CFDE F03F          	movff	postinc2,move_window@sector+2
  6128  005DC6  CFDE F040          	movff	postinc2,move_window@sector+3
  6129  005DCA  EC66  F02C         	call	_move_window	;wreg free
  6130  005DCE  0100               	movlb	0	; () banked
  6131  005DD0  6FA7               	movwf	dir_find@res& (0+255),b
  6132                           
  6133                           ; BSR set to: 0
  6134                           ;ff.c: 1519: if (res != FR_OK) break;
  6135  005DD2  0100               	movlb	0	; () banked
  6136  005DD4  51A7               	movf	dir_find@res& (0+255),w,b
  6137  005DD6  A4D8               	btfss	status,2,c
  6138  005DD8  D055               	goto	l7657
  6139                           
  6140                           ; BSR set to: 0
  6141                           ;ff.c: 1520: dir = dp->dir;
  6142                           
  6143                           ; BSR set to: 0
  6144                           
  6145                           ; BSR set to: 0
  6146  005DDA  EE20 F012          	lfsr	2,18
  6147  005DDE  507D               	movf	dir_find@dp,w,c
  6148  005DE0  26D9               	addwf	fsr2l,f,c
  6149  005DE2  507E               	movf	dir_find@dp+1,w,c
  6150  005DE4  22DA               	addwfc	fsr2h,f,c
  6151  005DE6  0100               	movlb	0	; () banked
  6152  005DE8  CFDE F0A5          	movff	postinc2,dir_find@dir
  6153  005DEC  0100               	movlb	0	; () banked
  6154  005DEE  CFDD F0A6          	movff	postdec2,dir_find@dir+1
  6155                           
  6156                           ; BSR set to: 0
  6157                           ;ff.c: 1521: c = dir[0];
  6158  005DF2  C0A5  FFD9         	movff	dir_find@dir,fsr2l
  6159  005DF6  C0A6  FFDA         	movff	dir_find@dir+1,fsr2h
  6160  005DFA  50DF               	movf	indf2,w,c
  6161  005DFC  0100               	movlb	0	; () banked
  6162  005DFE  6FA4               	movwf	dir_find@c& (0+255),b
  6163                           
  6164                           ; BSR set to: 0
  6165                           ;ff.c: 1522: if (c == 0) { res = FR_NO_FILE; break; }
  6166  005E00  0100               	movlb	0	; () banked
  6167  005E02  67A4               	tstfsz	dir_find@c& (0+255),b
  6168  005E04  D004               	goto	l7647
  6169                           
  6170                           ; BSR set to: 0
  6171  005E06  0E04               	movlw	4
  6172  005E08  0100               	movlb	0	; () banked
  6173  005E0A  6FA7               	movwf	dir_find@res& (0+255),b
  6174  005E0C  D03B               	goto	l7657
  6175  005E0E                     l7647:
  6176                           
  6177                           ; BSR set to: 0
  6178                           ;ff.c: 1545: if (!(dir[11] & 0x08) && !mem_cmp(dir, dp->fn, 11))
  6179  005E0E  0100               	movlb	0	; () banked
  6180  005E10  EE20 F00B          	lfsr	2,11
  6181  005E14  0100               	movlb	0	; () banked
  6182  005E16  51A5               	movf	dir_find@dir& (0+255),w,b
  6183  005E18  26D9               	addwf	fsr2l,f,c
  6184  005E1A  0100               	movlb	0	; () banked
  6185  005E1C  51A6               	movf	(dir_find@dir+1)& (0+255),w,b
  6186  005E1E  22DA               	addwfc	fsr2h,f,c
  6187  005E20  50DF               	movf	indf2,w,c
  6188  005E22  6E7F               	movwf	??_dir_find& (0+255),c
  6189  005E24  B67F               	btfsc	??_dir_find,3,c
  6190  005E26  D01A               	goto	l7653
  6191                           
  6192                           ; BSR set to: 0
  6193  005E28  0100               	movlb	0	; () banked
  6194  005E2A  C0A6  F002         	movff	dir_find@dir+1,mem_cmp@dst+1
  6195  005E2E  0100               	movlb	0	; () banked
  6196  005E30  C0A5  F001         	movff	dir_find@dir,mem_cmp@dst
  6197  005E34  EE20 F014          	lfsr	2,20
  6198  005E38  507D               	movf	dir_find@dp,w,c
  6199  005E3A  26D9               	addwf	fsr2l,f,c
  6200  005E3C  507E               	movf	dir_find@dp+1,w,c
  6201  005E3E  22DA               	addwfc	fsr2h,f,c
  6202  005E40  CFDE F003          	movff	postinc2,mem_cmp@src
  6203  005E44  CFDD F004          	movff	postdec2,mem_cmp@src+1
  6204  005E48  0E00               	movlw	0
  6205  005E4A  6E06               	movwf	mem_cmp@cnt+1,c
  6206  005E4C  0E0B               	movlw	11
  6207  005E4E  6E05               	movwf	mem_cmp@cnt,c
  6208  005E50  EC7F  F02A         	call	_mem_cmp	;wreg free
  6209  005E54  5002               	movf	?_mem_cmp+1,w,c
  6210  005E56  1001               	iorwf	?_mem_cmp,w,c
  6211  005E58  B4D8               	btfsc	status,2,c
  6212  005E5A  D014               	goto	l7657
  6213  005E5C                     l7653:
  6214                           
  6215                           ;ff.c: 1548: res = dir_next(dp, 0);
  6216  005E5C  0100               	movlb	0	; () banked
  6217  005E5E  C07E  F092         	movff	dir_find@dp+1,dir_next@dp+1
  6218  005E62  0100               	movlb	0	; () banked
  6219  005E64  C07D  F091         	movff	dir_find@dp,dir_next@dp
  6220  005E68  0E00               	movlw	0
  6221  005E6A  0100               	movlb	0	; () banked
  6222  005E6C  6F94               	movwf	(dir_next@stretch+1)& (0+255),b
  6223  005E6E  0E00               	movlw	0
  6224  005E70  0100               	movlb	0	; () banked
  6225  005E72  6F93               	movwf	dir_next@stretch& (0+255),b
  6226  005E74  EC7A  F047         	call	_dir_next	;wreg free
  6227  005E78  0100               	movlb	0	; () banked
  6228  005E7A  6FA7               	movwf	dir_find@res& (0+255),b
  6229                           
  6230                           ; BSR set to: 0
  6231                           ;ff.c: 1549: } while (res == FR_OK);
  6232  005E7C  0100               	movlb	0	; () banked
  6233  005E7E  51A7               	movf	dir_find@res& (0+255),w,b
  6234  005E80  B4D8               	btfsc	status,2,c
  6235  005E82  D78D               	goto	l7633
  6236  005E84                     l7657:
  6237                           
  6238                           ;ff.c: 1551: return res;
  6239  005E84  0100               	movlb	0	; () banked
  6240  005E86  51A7               	movf	dir_find@res& (0+255),w,b
  6241                           
  6242                           ; BSR set to: 0
  6243                           
  6244                           ; BSR set to: 0
  6245  005E88  0012               	return	
  6246  005E8A                     __end_of_dir_find:
  6247                           	opt stack 0
  6248                           tblptru	equ	0xFF8
  6249                           tblptrh	equ	0xFF7
  6250                           tblptrl	equ	0xFF6
  6251                           tablat	equ	0xFF5
  6252                           postinc0	equ	0xFEE
  6253                           wreg	equ	0xFE8
  6254                           indf1	equ	0xFE7
  6255                           postinc1	equ	0xFE6
  6256                           postdec1	equ	0xFE5
  6257                           fsr1h	equ	0xFE2
  6258                           fsr1l	equ	0xFE1
  6259                           indf2	equ	0xFDF
  6260                           postinc2	equ	0xFDE
  6261                           postdec2	equ	0xFDD
  6262                           plusw2	equ	0xFDB
  6263                           fsr2h	equ	0xFDA
  6264                           fsr2l	equ	0xFD9
  6265                           status	equ	0xFD8
  6266                           
  6267 ;; *************** function _mem_cmp *****************
  6268 ;; Defined at:
  6269 ;;		line 576 in file "ff.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  dst             2    0[COMRAM] PTR const void 
  6272 ;;		 -> NULL(0), FatFs(562), 
  6273 ;;  src             2    2[COMRAM] PTR const void 
  6274 ;;		 -> f_utime@sfn(12), f_rename@sfn(12), f_chmod@sfn(12), f_mkdir@sfn(12), 
  6275 ;;		 -> f_unlink@sfn(12), f_stat@sfn(12), f_readdir@sfn(12), f_opendir@sfn(12), 
  6276 ;;		 -> f_getcwd@sfn(12), f_chdir@sfn(12), f_open@sfn(12), 
  6277 ;;  cnt             2    4[COMRAM] unsigned int 
  6278 ;; Auto vars:     Size  Location     Type
  6279 ;;  r               2   13[COMRAM] int 
  6280 ;;  s               2   11[COMRAM] PTR const unsigned char 
  6281 ;;		 -> f_utime@sfn(12), f_rename@sfn(12), f_chmod@sfn(12), f_mkdir@sfn(12), 
  6282 ;;		 -> f_unlink@sfn(12), f_stat@sfn(12), f_readdir@sfn(12), f_opendir@sfn(12), 
  6283 ;;		 -> f_getcwd@sfn(12), f_chdir@sfn(12), f_open@sfn(12), 
  6284 ;;  d               2    9[COMRAM] PTR const unsigned char 
  6285 ;;		 -> NULL(0), FatFs(562), 
  6286 ;; Return value:  Size  Location     Type
  6287 ;;                  2    0[COMRAM] int 
  6288 ;; Registers used:
  6289 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  6290 ;; Tracked objects:
  6291 ;;		On entry : 0/0
  6292 ;;		On exit  : 0/0
  6293 ;;		Unchanged: 0/0
  6294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6295 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6296 ;;      Locals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6297 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6298 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6299 ;;Total ram usage:       15 bytes
  6300 ;; Hardware stack levels used:    1
  6301 ;; This function calls:
  6302 ;;		Nothing
  6303 ;; This function is called by:
  6304 ;;		_dir_find
  6305 ;; This function uses a non-reentrant model
  6306 ;;
  6307                           
  6308                           	psect	text9
  6309  0054FE                     __ptext9:
  6310                           	opt stack 0
  6311  0054FE                     _mem_cmp:
  6312                           	opt stack 27
  6313                           
  6314                           ;ff.c: 577: const BYTE *d = (const BYTE *)dst, *s = (const BYTE *)src;
  6315                           
  6316                           ; BSR set to: 0
  6317                           ;incstack = 0
  6318  0054FE  C002  F00B         	movff	mem_cmp@dst+1,mem_cmp@d+1
  6319  005502  C001  F00A         	movff	mem_cmp@dst,mem_cmp@d
  6320  005506  C004  F00D         	movff	mem_cmp@src+1,mem_cmp@s+1
  6321  00550A  C003  F00C         	movff	mem_cmp@src,mem_cmp@s
  6322                           
  6323                           ;ff.c: 578: int r = 0;
  6324  00550E  0E00               	movlw	0
  6325  005510  6E0F               	movwf	mem_cmp@r+1,c
  6326  005512  0E00               	movlw	0
  6327  005514  6E0E               	movwf	mem_cmp@r,c
  6328  005516                     l7213:
  6329  005516  0605               	decf	mem_cmp@cnt,f,c
  6330  005518  A0D8               	btfss	status,0,c
  6331  00551A  0606               	decf	mem_cmp@cnt+1,f,c
  6332  00551C  2805               	incf	mem_cmp@cnt& (0+255),w,c
  6333  00551E  B4D8               	btfsc	status,2,c
  6334  005520  2806               	incf	(mem_cmp@cnt+1)& (0+255),w,c
  6335  005522  B4D8               	btfsc	status,2,c
  6336  005524  D01F               	goto	l288
  6337  005526  C00C  FFD9         	movff	mem_cmp@s,fsr2l
  6338  00552A  C00D  FFDA         	movff	mem_cmp@s+1,fsr2h
  6339  00552E  4A0C               	infsnz	mem_cmp@s,f,c
  6340  005530  2A0D               	incf	mem_cmp@s+1,f,c
  6341  005532  50DF               	movf	indf2,w,c
  6342  005534  6E07               	movwf	??_mem_cmp& (0+255),c
  6343  005536  6A08               	clrf	(??_mem_cmp+1)& (0+255),c
  6344  005538  1E07               	comf	??_mem_cmp,f,c
  6345  00553A  1E08               	comf	??_mem_cmp+1,f,c
  6346  00553C  4A07               	infsnz	??_mem_cmp,f,c
  6347  00553E  2A08               	incf	??_mem_cmp+1,f,c
  6348  005540  C00A  FFD9         	movff	mem_cmp@d,fsr2l
  6349  005544  C00B  FFDA         	movff	mem_cmp@d+1,fsr2h
  6350  005548  4A0A               	infsnz	mem_cmp@d,f,c
  6351  00554A  2A0B               	incf	mem_cmp@d+1,f,c
  6352  00554C  50DF               	movf	indf2,w,c
  6353  00554E  6E09               	movwf	(??_mem_cmp+2)& (0+255),c
  6354  005550  5009               	movf	??_mem_cmp+2,w,c
  6355  005552  2407               	addwf	??_mem_cmp,w,c
  6356  005554  6E0E               	movwf	mem_cmp@r,c
  6357  005556  0E00               	movlw	0
  6358  005558  2008               	addwfc	??_mem_cmp+1,w,c
  6359  00555A  6E0F               	movwf	mem_cmp@r+1,c
  6360  00555C  500F               	movf	(mem_cmp@r+1)& (0+255),w,c
  6361  00555E  100E               	iorwf	mem_cmp@r& (0+255),w,c
  6362  005560  B4D8               	btfsc	status,2,c
  6363  005562  D7D9               	goto	l7213
  6364  005564                     l288:
  6365                           
  6366                           ;ff.c: 581: return r;
  6367  005564  C00E  F001         	movff	mem_cmp@r,?_mem_cmp
  6368  005568  C00F  F002         	movff	mem_cmp@r+1,?_mem_cmp+1
  6369  00556C  0012               	return	
  6370  00556E                     __end_of_mem_cmp:
  6371                           	opt stack 0
  6372                           tblptru	equ	0xFF8
  6373                           tblptrh	equ	0xFF7
  6374                           tblptrl	equ	0xFF6
  6375                           tablat	equ	0xFF5
  6376                           postinc0	equ	0xFEE
  6377                           wreg	equ	0xFE8
  6378                           indf1	equ	0xFE7
  6379                           postinc1	equ	0xFE6
  6380                           postdec1	equ	0xFE5
  6381                           fsr1h	equ	0xFE2
  6382                           fsr1l	equ	0xFE1
  6383                           indf2	equ	0xFDF
  6384                           postinc2	equ	0xFDE
  6385                           postdec2	equ	0xFDD
  6386                           plusw2	equ	0xFDB
  6387                           fsr2h	equ	0xFDA
  6388                           fsr2l	equ	0xFD9
  6389                           status	equ	0xFD8
  6390                           
  6391 ;; *************** function _create_name *****************
  6392 ;; Defined at:
  6393 ;;		line 1886 in file "ff.c"
  6394 ;; Parameters:    Size  Location     Type
  6395 ;;  dp              2    8[COMRAM] PTR struct .
  6396 ;;		 -> f_utime@dj(25), f_rename@djn(25), f_rename@djo(25), f_chmod@dj(25), 
  6397 ;;		 -> f_mkdir@dj(25), f_unlink@dj(25), f_stat@dj(25), f_chdir@dj(25), 
  6398 ;;		 -> f_open@dj(25), 
  6399 ;;  path            2   10[COMRAM] PTR PTR const unsigned c
  6400 ;;		 -> follow_path@path(2), 
  6401 ;; Auto vars:     Size  Location     Type
  6402 ;;  sfn             2   30[COMRAM] PTR unsigned char 
  6403 ;;		 -> f_utime@sfn(12), f_rename@sfn(12), f_chmod@sfn(12), f_mkdir@sfn(12), 
  6404 ;;		 -> f_unlink@sfn(12), f_stat@sfn(12), f_readdir@sfn(12), f_opendir@sfn(12), 
  6405 ;;		 -> f_getcwd@sfn(12), f_chdir@sfn(12), f_open@sfn(12), 
  6406 ;;  p               2   28[COMRAM] PTR const unsigned char 
  6407 ;;		 -> STR_5(9), STR_3(1), 
  6408 ;;  i               2   26[COMRAM] unsigned int 
  6409 ;;  si              2   24[COMRAM] unsigned int 
  6410 ;;  ni              2   21[COMRAM] unsigned int 
  6411 ;;  c               1   32[COMRAM] unsigned char 
  6412 ;;  d               1   23[COMRAM] unsigned char 
  6413 ;;  b               1   20[COMRAM] unsigned char 
  6414 ;; Return value:  Size  Location     Type
  6415 ;;                  1    wreg      enum E67
  6416 ;; Registers used:
  6417 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  6418 ;; Tracked objects:
  6419 ;;		On entry : 0/0
  6420 ;;		On exit  : 0/0
  6421 ;;		Unchanged: 0/0
  6422 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  6423 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6424 ;;      Locals:        17       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6425 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6426 ;;      Totals:        25       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  6427 ;;Total ram usage:       25 bytes
  6428 ;; Hardware stack levels used:    1
  6429 ;; Hardware stack levels required when called:    1
  6430 ;; This function calls:
  6431 ;;		_chk_chr
  6432 ;;		_mem_set
  6433 ;; This function is called by:
  6434 ;;		_follow_path
  6435 ;; This function uses a non-reentrant model
  6436 ;;
  6437                           
  6438                           	psect	text10
  6439  007E52                     __ptext10:
  6440                           	opt stack 0
  6441  007E52                     _create_name:
  6442                           	opt stack 27
  6443                           
  6444                           ;ff.c: 2012: BYTE b, c, d, *sfn;
  6445                           ;ff.c: 2013: UINT ni, si, i;
  6446                           ;ff.c: 2014: const char *p;
  6447                           ;ff.c: 2017: for (p = *path; *p == '/' || *p == '\\'; p++) ;
  6448                           
  6449                           ;incstack = 0
  6450  007E52  C00B  FFD9         	movff	create_name@path,fsr2l
  6451  007E56  C00C  FFDA         	movff	create_name@path+1,fsr2h
  6452  007E5A  CFDE F01D          	movff	postinc2,create_name@p
  6453  007E5E  CFDD F01E          	movff	postdec2,create_name@p+1
  6454  007E62  D002               	goto	l7665
  6455  007E64                     l7663:
  6456  007E64  4A1D               	infsnz	create_name@p,f,c
  6457  007E66  2A1E               	incf	create_name@p+1,f,c
  6458  007E68                     l7665:
  6459  007E68  C01D  FFF6         	movff	create_name@p,tblptrl
  6460  007E6C  C01E  FFF7         	movff	create_name@p+1,tblptrh
  6461  007E70                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6462  007E70  6AF8               	clrf	tblptru,c
  6463  007E72                     	endif
  6464  007E72                     	if	0	;tblptru may be non-zero
  6465  007E72                     	endif
  6466  007E72  0008               	tblrd		*
  6467  007E74  50F5               	movf	tablat,w,c
  6468  007E76  0A2F               	xorlw	47
  6469  007E78  B4D8               	btfsc	status,2,c
  6470  007E7A  D7F4               	goto	l7663
  6471  007E7C  C01D  FFF6         	movff	create_name@p,tblptrl
  6472  007E80  C01E  FFF7         	movff	create_name@p+1,tblptrh
  6473  007E84                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6474  007E84  6AF8               	clrf	tblptru,c
  6475  007E86                     	endif
  6476  007E86                     	if	0	;tblptru may be non-zero
  6477  007E86                     	endif
  6478  007E86  0008               	tblrd		*
  6479  007E88  50F5               	movf	tablat,w,c
  6480  007E8A  0A5C               	xorlw	92
  6481  007E8C  B4D8               	btfsc	status,2,c
  6482  007E8E  D7EA               	goto	l7663
  6483                           
  6484                           ;ff.c: 2018: sfn = dp->fn;
  6485  007E90  EE20 F014          	lfsr	2,20
  6486  007E94  5009               	movf	create_name@dp,w,c
  6487  007E96  26D9               	addwf	fsr2l,f,c
  6488  007E98  500A               	movf	create_name@dp+1,w,c
  6489  007E9A  22DA               	addwfc	fsr2h,f,c
  6490  007E9C  CFDE F01F          	movff	postinc2,create_name@sfn
  6491  007EA0  CFDD F020          	movff	postdec2,create_name@sfn+1
  6492                           
  6493                           ;ff.c: 2019: mem_set(sfn, ' ', 11);
  6494  007EA4  C020  F002         	movff	create_name@sfn+1,mem_set@dst+1
  6495  007EA8  C01F  F001         	movff	create_name@sfn,mem_set@dst
  6496  007EAC  0E00               	movlw	0
  6497  007EAE  6E04               	movwf	mem_set@val+1,c
  6498  007EB0  0E20               	movlw	32
  6499  007EB2  6E03               	movwf	mem_set@val,c
  6500  007EB4  0E00               	movlw	0
  6501  007EB6  6E06               	movwf	mem_set@cnt+1,c
  6502  007EB8  0E0B               	movlw	11
  6503  007EBA  6E05               	movwf	mem_set@cnt,c
  6504  007EBC  ECCD  F028         	call	_mem_set	;wreg free
  6505                           
  6506                           ;ff.c: 2020: si = i = b = 0; ni = 8;
  6507  007EC0  0E00               	movlw	0
  6508  007EC2  6E15               	movwf	create_name@b,c
  6509  007EC4  C015  F01B         	movff	create_name@b,create_name@i
  6510  007EC8  6A1C               	clrf	create_name@i+1,c
  6511  007ECA  C01B  F019         	movff	create_name@i,create_name@si
  6512  007ECE  C01C  F01A         	movff	create_name@i+1,create_name@si+1
  6513  007ED2  0E00               	movlw	0
  6514  007ED4  6E17               	movwf	create_name@ni+1,c
  6515  007ED6  0E08               	movlw	8
  6516  007ED8  6E16               	movwf	create_name@ni,c
  6517                           
  6518                           ;ff.c: 2022: if (p[si] == '.') {
  6519  007EDA  C01D  F00D         	movff	create_name@p,??_create_name
  6520  007EDE  C01E  F00E         	movff	create_name@p+1,??_create_name+1
  6521  007EE2  5019               	movf	create_name@si,w,c
  6522  007EE4  260D               	addwf	??_create_name,f,c
  6523  007EE6  501A               	movf	create_name@si+1,w,c
  6524  007EE8  220E               	addwfc	??_create_name+1,f,c
  6525  007EEA  C00D  FFF6         	movff	??_create_name,tblptrl
  6526  007EEE  C00E  FFF7         	movff	??_create_name+1,tblptrh
  6527  007EF2                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6528  007EF2  6AF8               	clrf	tblptru,c
  6529  007EF4                     	endif
  6530  007EF4                     	if	0	;tblptru may be non-zero
  6531  007EF4                     	endif
  6532  007EF4  0008               	tblrd		*
  6533  007EF6  50F5               	movf	tablat,w,c
  6534  007EF8  0A2E               	xorlw	46
  6535  007EFA  A4D8               	btfss	status,2,c
  6536  007EFC  D057               	goto	l7715
  6537  007EFE                     l7679:
  6538                           
  6539                           ;ff.c: 2024: c = (BYTE)p[si++];
  6540  007EFE  C01D  F00D         	movff	create_name@p,??_create_name
  6541  007F02  C01E  F00E         	movff	create_name@p+1,??_create_name+1
  6542  007F06  5019               	movf	create_name@si,w,c
  6543  007F08  260D               	addwf	??_create_name,f,c
  6544  007F0A  501A               	movf	create_name@si+1,w,c
  6545  007F0C  220E               	addwfc	??_create_name+1,f,c
  6546  007F0E  C00D  FFF6         	movff	??_create_name,tblptrl
  6547  007F12  C00E  FFF7         	movff	??_create_name+1,tblptrh
  6548  007F16                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6549  007F16  6AF8               	clrf	tblptru,c
  6550  007F18                     	endif
  6551  007F18                     	if	0	;tblptru may be non-zero
  6552  007F18                     	endif
  6553  007F18  0008               	tblrd		*
  6554  007F1A  CFF5 F021          	movff	tablat,create_name@c
  6555  007F1E  4A19               	infsnz	create_name@si,f,c
  6556  007F20  2A1A               	incf	create_name@si+1,f,c
  6557                           
  6558                           ;ff.c: 2025: if (c != '.' || si >= 3) break;
  6559  007F22  5021               	movf	create_name@c,w,c
  6560  007F24  0A2E               	xorlw	46
  6561  007F26  A4D8               	btfss	status,2,c
  6562  007F28  D011               	goto	l7691
  6563  007F2A  0E03               	movlw	3
  6564  007F2C  5C19               	subwf	create_name@si,w,c
  6565  007F2E  0E00               	movlw	0
  6566  007F30  581A               	subwfb	create_name@si+1,w,c
  6567  007F32  B0D8               	btfsc	status,0,c
  6568  007F34  D00B               	goto	l7691
  6569                           
  6570                           ;ff.c: 2026: sfn[i++] = c;
  6571  007F36  501B               	movf	create_name@i,w,c
  6572  007F38  241F               	addwf	create_name@sfn,w,c
  6573  007F3A  6ED9               	movwf	fsr2l,c
  6574  007F3C  501C               	movf	create_name@i+1,w,c
  6575  007F3E  2020               	addwfc	create_name@sfn+1,w,c
  6576  007F40  6EDA               	movwf	fsr2h,c
  6577  007F42  C021  FFDF         	movff	create_name@c,indf2
  6578  007F46  4A1B               	infsnz	create_name@i,f,c
  6579  007F48  2A1C               	incf	create_name@i+1,f,c
  6580                           
  6581                           ;ff.c: 2027: }
  6582  007F4A  D7D9               	goto	l7679
  6583  007F4C                     l7691:
  6584                           
  6585                           ;ff.c: 2028: if (c != '/' && c != '\\' && c > ' ') return FR_INVALID_NAME;
  6586  007F4C  5021               	movf	create_name@c,w,c
  6587  007F4E  0A2F               	xorlw	47
  6588  007F50  B4D8               	btfsc	status,2,c
  6589  007F52  D008               	goto	l7701
  6590  007F54  5021               	movf	create_name@c,w,c
  6591  007F56  0A5C               	xorlw	92
  6592  007F58  B4D8               	btfsc	status,2,c
  6593  007F5A  D004               	goto	l7701
  6594  007F5C  0E20               	movlw	32
  6595  007F5E  6421               	cpfsgt	create_name@c,c
  6596  007F60  D001               	goto	l7701
  6597  007F62  D103               	goto	u10260
  6598  007F64                     l7701:
  6599                           
  6600                           ;ff.c: 2029: *path = &p[si];
  6601  007F64  C01D  F00D         	movff	create_name@p,??_create_name
  6602  007F68  C01E  F00E         	movff	create_name@p+1,??_create_name+1
  6603  007F6C  5019               	movf	create_name@si,w,c
  6604  007F6E  260D               	addwf	??_create_name,f,c
  6605  007F70  501A               	movf	create_name@si+1,w,c
  6606  007F72  220E               	addwfc	??_create_name+1,f,c
  6607  007F74  C00B  FFD9         	movff	create_name@path,fsr2l
  6608  007F78  C00C  FFDA         	movff	create_name@path+1,fsr2h
  6609  007F7C  C00D  FFDE         	movff	??_create_name,postinc2
  6610  007F80  C00E  FFDD         	movff	??_create_name+1,postdec2
  6611                           
  6612                           ;ff.c: 2030: sfn[11] = (c <= ' ') ? 0x04 | 0x20 : 0x20;
  6613  007F84  0E20               	movlw	32
  6614  007F86  6421               	cpfsgt	create_name@c,c
  6615  007F88  D004               	goto	l7707
  6616  007F8A  0E00               	movlw	0
  6617  007F8C  6E12               	movwf	_create_name$909+1,c
  6618  007F8E  0E20               	movlw	32
  6619  007F90  D003               	goto	L8
  6620  007F92                     l7707:
  6621  007F92  0E00               	movlw	0
  6622  007F94  6E12               	movwf	_create_name$909+1,c
  6623  007F96  0E24               	movlw	36
  6624  007F98                     L8:
  6625  007F98  6E11               	movwf	_create_name$909,c
  6626  007F9A  EE20 F00B          	lfsr	2,11
  6627  007F9E  501F               	movf	create_name@sfn,w,c
  6628  007FA0  26D9               	addwf	fsr2l,f,c
  6629  007FA2  5020               	movf	create_name@sfn+1,w,c
  6630  007FA4  22DA               	addwfc	fsr2h,f,c
  6631  007FA6  C011  FFDF         	movff	_create_name$909,indf2
  6632  007FAA  D10F               	goto	L9
  6633  007FAC                     l7715:
  6634                           
  6635                           ;ff.c: 2035: c = (BYTE)p[si++];
  6636  007FAC  C01D  F00D         	movff	create_name@p,??_create_name
  6637  007FB0  C01E  F00E         	movff	create_name@p+1,??_create_name+1
  6638  007FB4  5019               	movf	create_name@si,w,c
  6639  007FB6  260D               	addwf	??_create_name,f,c
  6640  007FB8  501A               	movf	create_name@si+1,w,c
  6641  007FBA  220E               	addwfc	??_create_name+1,f,c
  6642  007FBC  C00D  FFF6         	movff	??_create_name,tblptrl
  6643  007FC0  C00E  FFF7         	movff	??_create_name+1,tblptrh
  6644  007FC4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6645  007FC4  6AF8               	clrf	tblptru,c
  6646  007FC6                     	endif
  6647  007FC6                     	if	0	;tblptru may be non-zero
  6648  007FC6                     	endif
  6649  007FC6  0008               	tblrd		*
  6650  007FC8  CFF5 F021          	movff	tablat,create_name@c
  6651  007FCC  4A19               	infsnz	create_name@si,f,c
  6652  007FCE  2A1A               	incf	create_name@si+1,f,c
  6653                           
  6654                           ;ff.c: 2036: if (c <= ' ' || c == '/' || c == '\\') break;
  6655  007FD0  0E20               	movlw	32
  6656  007FD2  6421               	cpfsgt	create_name@c,c
  6657  007FD4  D0A9               	goto	l7801
  6658  007FD6  5021               	movf	create_name@c,w,c
  6659  007FD8  0A2F               	xorlw	47
  6660  007FDA  B4D8               	btfsc	status,2,c
  6661  007FDC  D0A5               	goto	l7801
  6662  007FDE  5021               	movf	create_name@c,w,c
  6663  007FE0  0A5C               	xorlw	92
  6664  007FE2  B4D8               	btfsc	status,2,c
  6665  007FE4  D0A1               	goto	l7801
  6666                           
  6667                           ;ff.c: 2037: if (c == '.' || i >= ni) {
  6668  007FE6  5021               	movf	create_name@c,w,c
  6669  007FE8  0A2E               	xorlw	46
  6670  007FEA  B4D8               	btfsc	status,2,c
  6671  007FEC  D006               	goto	l7729
  6672  007FEE  5016               	movf	create_name@ni,w,c
  6673  007FF0  5C1B               	subwf	create_name@i,w,c
  6674  007FF2  5017               	movf	create_name@ni+1,w,c
  6675  007FF4  581C               	subwfb	create_name@i+1,w,c
  6676  007FF6  A0D8               	btfss	status,0,c
  6677  007FF8  D016               	goto	l7741
  6678  007FFA                     l7729:
  6679                           
  6680                           ;ff.c: 2038: if (ni != 8 || c != '.') return FR_INVALID_NAME;
  6681  007FFA  5016               	movf	create_name@ni,w,c
  6682  007FFC  0A08               	xorlw	8
  6683  007FFE  1017               	iorwf	create_name@ni+1,w,c
  6684  008000  A4D8               	btfss	status,2,c
  6685  008002  D0B3               	goto	u10260
  6686  008004  5021               	movf	create_name@c,w,c
  6687  008006  0A2E               	xorlw	46
  6688  008008  A4D8               	btfss	status,2,c
  6689  00800A  D0AF               	goto	u10260
  6690                           
  6691                           ;ff.c: 2039: i = 8; ni = 11;
  6692  00800C  0E00               	movlw	0
  6693  00800E  6E1C               	movwf	create_name@i+1,c
  6694  008010  0E08               	movlw	8
  6695  008012  6E1B               	movwf	create_name@i,c
  6696  008014  0E00               	movlw	0
  6697  008016  6E17               	movwf	create_name@ni+1,c
  6698  008018  0E0B               	movlw	11
  6699  00801A  6E16               	movwf	create_name@ni,c
  6700                           
  6701                           ;ff.c: 2040: b <<= 2; continue;
  6702  00801C  90D8               	bcf	status,0,c
  6703  00801E  3615               	rlcf	create_name@b,f,c
  6704  008020  90D8               	bcf	status,0,c
  6705  008022  3615               	rlcf	create_name@b,f,c
  6706  008024  D7C3               	goto	l7715
  6707  008026                     l7741:
  6708                           
  6709                           ;ff.c: 2041: }
  6710                           ;ff.c: 2042: if (c >= 0x80) {
  6711  008026  0E7F               	movlw	127
  6712  008028  6421               	cpfsgt	create_name@c,c
  6713  00802A  D002               	goto	l7745
  6714                           
  6715                           ;ff.c: 2043: b |= 3;
  6716  00802C  0E03               	movlw	3
  6717  00802E  1215               	iorwf	create_name@b,f,c
  6718  008030                     l7745:
  6719                           
  6720                           ;ff.c: 2051: }
  6721                           ;ff.c: 2052: if ((((BYTE)(c) >= 0x81 && (BYTE)(c) <= 0x9F) || ((BYTE)(c) >= 0xE0 && (BYT
      +                          E)(c) <= 0xFC))) {
  6722  008030  0E80               	movlw	128
  6723  008032  6421               	cpfsgt	create_name@c,c
  6724  008034  D003               	goto	l7749
  6725  008036  0E9F               	movlw	159
  6726  008038  6421               	cpfsgt	create_name@c,c
  6727  00803A  D007               	goto	l7753
  6728  00803C                     l7749:
  6729  00803C  0EDF               	movlw	223
  6730  00803E  6421               	cpfsgt	create_name@c,c
  6731  008040  D048               	goto	l7777
  6732  008042  0EFD               	movlw	253
  6733  008044  5C21               	subwf	create_name@c,w,c
  6734  008046  B0D8               	btfsc	status,0,c
  6735  008048  D044               	goto	l7777
  6736  00804A                     l7753:
  6737                           
  6738                           ;ff.c: 2053: d = (BYTE)p[si++];
  6739  00804A  C01D  F00D         	movff	create_name@p,??_create_name
  6740  00804E  C01E  F00E         	movff	create_name@p+1,??_create_name+1
  6741  008052  5019               	movf	create_name@si,w,c
  6742  008054  260D               	addwf	??_create_name,f,c
  6743  008056  501A               	movf	create_name@si+1,w,c
  6744  008058  220E               	addwfc	??_create_name+1,f,c
  6745  00805A  C00D  FFF6         	movff	??_create_name,tblptrl
  6746  00805E  C00E  FFF7         	movff	??_create_name+1,tblptrh
  6747  008062                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  6748  008062  6AF8               	clrf	tblptru,c
  6749  008064                     	endif
  6750  008064                     	if	0	;tblptru may be non-zero
  6751  008064                     	endif
  6752  008064  0008               	tblrd		*
  6753  008066  CFF5 F018          	movff	tablat,create_name@d
  6754  00806A  4A19               	infsnz	create_name@si,f,c
  6755  00806C  2A1A               	incf	create_name@si+1,f,c
  6756                           
  6757                           ;ff.c: 2054: if (!(((BYTE)(d) >= 0x40 && (BYTE)(d) <= 0x7E) || ((BYTE)(d) >= 0x80 && (BY
      +                          TE)(d) <= 0xFC)) || i >= ni - 1)
  6758  00806E  0E3F               	movlw	63
  6759  008070  6418               	cpfsgt	create_name@d,c
  6760  008072  D003               	goto	l7761
  6761  008074  0E7E               	movlw	126
  6762  008076  6418               	cpfsgt	create_name@d,c
  6763  008078  D007               	goto	l7765
  6764  00807A                     l7761:
  6765  00807A  0E7F               	movlw	127
  6766  00807C  6418               	cpfsgt	create_name@d,c
  6767  00807E  D075               	goto	u10260
  6768  008080  0EFD               	movlw	253
  6769  008082  5C18               	subwf	create_name@d,w,c
  6770  008084  B0D8               	btfsc	status,0,c
  6771  008086  D071               	goto	u10260
  6772  008088                     l7765:
  6773  008088  0EFF               	movlw	255
  6774  00808A  6E0D               	movwf	??_create_name& (0+255),c
  6775  00808C  0EFF               	movlw	255
  6776  00808E  6E0E               	movwf	(??_create_name+1)& (0+255),c
  6777  008090  C016  F00F         	movff	create_name@ni,??_create_name+2
  6778  008094  C017  F010         	movff	create_name@ni+1,??_create_name+3
  6779  008098  500D               	movf	??_create_name,w,c
  6780  00809A  260F               	addwf	??_create_name+2,f,c
  6781  00809C  500E               	movf	??_create_name+1,w,c
  6782  00809E  2210               	addwfc	??_create_name+3,f,c
  6783  0080A0  500F               	movf	??_create_name+2,w,c
  6784  0080A2  5C1B               	subwf	create_name@i,w,c
  6785  0080A4  5010               	movf	??_create_name+3,w,c
  6786  0080A6  581C               	subwfb	create_name@i+1,w,c
  6787  0080A8  B0D8               	btfsc	status,0,c
  6788  0080AA  D05F               	goto	u10260
  6789                           
  6790                           ;ff.c: 2056: sfn[i++] = c;
  6791                           
  6792                           ;ff.c: 2055: return FR_INVALID_NAME;
  6793  0080AC  501B               	movf	create_name@i,w,c
  6794  0080AE  241F               	addwf	create_name@sfn,w,c
  6795  0080B0  6ED9               	movwf	fsr2l,c
  6796  0080B2  501C               	movf	create_name@i+1,w,c
  6797  0080B4  2020               	addwfc	create_name@sfn+1,w,c
  6798  0080B6  6EDA               	movwf	fsr2h,c
  6799  0080B8  C021  FFDF         	movff	create_name@c,indf2
  6800  0080BC  4A1B               	infsnz	create_name@i,f,c
  6801  0080BE  2A1C               	incf	create_name@i+1,f,c
  6802                           
  6803                           ;ff.c: 2057: sfn[i++] = d;
  6804  0080C0  501B               	movf	create_name@i,w,c
  6805  0080C2  241F               	addwf	create_name@sfn,w,c
  6806  0080C4  6ED9               	movwf	fsr2l,c
  6807  0080C6  501C               	movf	create_name@i+1,w,c
  6808  0080C8  2020               	addwfc	create_name@sfn+1,w,c
  6809  0080CA  6EDA               	movwf	fsr2h,c
  6810  0080CC  C018  FFDF         	movff	create_name@d,indf2
  6811  0080D0  D028               	goto	L10
  6812  0080D2                     l7777:
  6813                           
  6814                           ;ff.c: 2059: if (chk_chr("\"*+,:;<=>\?[]|\x7F", c))
  6815  0080D2  0EBF               	movlw	high STR_10
  6816  0080D4  6E02               	movwf	chk_chr@str+1,c
  6817  0080D6  0EA9               	movlw	low STR_10
  6818  0080D8  6E01               	movwf	chk_chr@str,c
  6819  0080DA  C021  F003         	movff	create_name@c,chk_chr@chr
  6820  0080DE  6A04               	clrf	chk_chr@chr+1,c
  6821  0080E0  EC7A  F029         	call	_chk_chr	;wreg free
  6822  0080E4  5002               	movf	?_chk_chr+1,w,c
  6823  0080E6  1001               	iorwf	?_chk_chr,w,c
  6824  0080E8  A4D8               	btfss	status,2,c
  6825  0080EA  D03F               	goto	u10260
  6826                           
  6827                           ;ff.c: 2061: if ((((c)>='A')&&((c)<='Z'))) {
  6828                           
  6829                           ;ff.c: 2060: return FR_INVALID_NAME;
  6830  0080EC  0E40               	movlw	64
  6831  0080EE  6421               	cpfsgt	create_name@c,c
  6832  0080F0  D006               	goto	l7789
  6833  0080F2  0E5B               	movlw	91
  6834  0080F4  5C21               	subwf	create_name@c,w,c
  6835  0080F6  B0D8               	btfsc	status,0,c
  6836  0080F8  D002               	goto	l7789
  6837                           
  6838                           ;ff.c: 2062: b |= 2;
  6839  0080FA  8215               	bsf	create_name@b,1,c
  6840                           
  6841                           ;ff.c: 2063: } else {
  6842  0080FC  D00A               	goto	l7797
  6843  0080FE                     l7789:
  6844                           
  6845                           ;ff.c: 2064: if ((((c)>='a')&&((c)<='z'))) {
  6846  0080FE  0E60               	movlw	96
  6847  008100  6421               	cpfsgt	create_name@c,c
  6848  008102  D007               	goto	l7797
  6849  008104  0E7B               	movlw	123
  6850  008106  5C21               	subwf	create_name@c,w,c
  6851  008108  B0D8               	btfsc	status,0,c
  6852  00810A  D003               	goto	l7797
  6853                           
  6854                           ;ff.c: 2065: b |= 1; c -= 0x20;
  6855  00810C  8015               	bsf	create_name@b,0,c
  6856  00810E  0E20               	movlw	32
  6857  008110  5E21               	subwf	create_name@c,f,c
  6858  008112                     l7797:
  6859                           
  6860                           ;ff.c: 2066: }
  6861                           ;ff.c: 2067: }
  6862                           ;ff.c: 2068: sfn[i++] = c;
  6863  008112  501B               	movf	create_name@i,w,c
  6864  008114  241F               	addwf	create_name@sfn,w,c
  6865  008116  6ED9               	movwf	fsr2l,c
  6866  008118  501C               	movf	create_name@i+1,w,c
  6867  00811A  2020               	addwfc	create_name@sfn+1,w,c
  6868  00811C  6EDA               	movwf	fsr2h,c
  6869  00811E  C021  FFDF         	movff	create_name@c,indf2
  6870  008122                     L10:
  6871  008122  4A1B               	infsnz	create_name@i,f,c
  6872  008124  2A1C               	incf	create_name@i+1,f,c
  6873  008126  D742               	goto	l7715
  6874  008128                     l7801:
  6875                           
  6876                           ;ff.c: 2071: *path = &p[si];
  6877  008128  C01D  F00D         	movff	create_name@p,??_create_name
  6878  00812C  C01E  F00E         	movff	create_name@p+1,??_create_name+1
  6879  008130  5019               	movf	create_name@si,w,c
  6880  008132  260D               	addwf	??_create_name,f,c
  6881  008134  501A               	movf	create_name@si+1,w,c
  6882  008136  220E               	addwfc	??_create_name+1,f,c
  6883  008138  C00B  FFD9         	movff	create_name@path,fsr2l
  6884  00813C  C00C  FFDA         	movff	create_name@path+1,fsr2h
  6885  008140  C00D  FFDE         	movff	??_create_name,postinc2
  6886  008144  C00E  FFDD         	movff	??_create_name+1,postdec2
  6887                           
  6888                           ;ff.c: 2072: c = (c <= ' ') ? 0x04 : 0;
  6889  008148  0E20               	movlw	32
  6890  00814A  6421               	cpfsgt	create_name@c,c
  6891  00814C  D004               	goto	l7807
  6892  00814E  0E00               	movlw	0
  6893  008150  6E14               	movwf	_create_name$912+1,c
  6894  008152  0E00               	movlw	0
  6895  008154  D003               	goto	L11
  6896  008156                     l7807:
  6897  008156  0E00               	movlw	0
  6898  008158  6E14               	movwf	_create_name$912+1,c
  6899  00815A  0E04               	movlw	4
  6900  00815C                     L11:
  6901  00815C  6E13               	movwf	_create_name$912,c
  6902  00815E  C013  F021         	movff	_create_name$912,create_name@c
  6903                           
  6904                           ;ff.c: 2074: if (!i) return FR_INVALID_NAME;
  6905  008162  501C               	movf	create_name@i+1,w,c
  6906  008164  101B               	iorwf	create_name@i,w,c
  6907  008166  A4D8               	btfss	status,2,c
  6908  008168  D002               	goto	l7817
  6909  00816A                     u10260:
  6910  00816A  0E06               	movlw	6
  6911  00816C  D02F               	goto	l573
  6912  00816E                     l7817:
  6913                           
  6914                           ;ff.c: 2075: if (sfn[0] == 0xE5) sfn[0] = 0x05;
  6915  00816E  0EE5               	movlw	229
  6916  008170  C01F  FFD9         	movff	create_name@sfn,fsr2l
  6917  008174  C020  FFDA         	movff	create_name@sfn+1,fsr2h
  6918  008178  62DF               	cpfseq	indf2,c
  6919  00817A  D006               	goto	l7821
  6920  00817C  C01F  FFD9         	movff	create_name@sfn,fsr2l
  6921  008180  C020  FFDA         	movff	create_name@sfn+1,fsr2h
  6922  008184  0E05               	movlw	5
  6923  008186  6EDF               	movwf	indf2,c
  6924  008188                     l7821:
  6925                           
  6926                           ;ff.c: 2077: if (ni == 8) b <<= 2;
  6927  008188  5016               	movf	create_name@ni,w,c
  6928  00818A  0A08               	xorlw	8
  6929  00818C  1017               	iorwf	create_name@ni+1,w,c
  6930  00818E  A4D8               	btfss	status,2,c
  6931  008190  D004               	goto	l614
  6932  008192  90D8               	bcf	status,0,c
  6933  008194  3615               	rlcf	create_name@b,f,c
  6934  008196  90D8               	bcf	status,0,c
  6935  008198  3615               	rlcf	create_name@b,f,c
  6936  00819A                     l614:
  6937                           
  6938                           ;ff.c: 2078: if ((b & 0x03) == 0x01) c |= 0x10;
  6939  00819A  C015  F00D         	movff	create_name@b,??_create_name
  6940  00819E  0E03               	movlw	3
  6941  0081A0  160D               	andwf	??_create_name,f,c
  6942  0081A2  500D               	movf	??_create_name,w,c
  6943  0081A4  0A01               	xorlw	1
  6944  0081A6  B4D8               	btfsc	status,2,c
  6945  0081A8  8821               	bsf	create_name@c,4,c
  6946                           
  6947                           ;ff.c: 2079: if ((b & 0x0C) == 0x04) c |= 0x08;
  6948  0081AA  C015  F00D         	movff	create_name@b,??_create_name
  6949  0081AE  0E0C               	movlw	12
  6950  0081B0  160D               	andwf	??_create_name,f,c
  6951  0081B2  500D               	movf	??_create_name,w,c
  6952  0081B4  0A04               	xorlw	4
  6953  0081B6  B4D8               	btfsc	status,2,c
  6954  0081B8  8621               	bsf	create_name@c,3,c
  6955                           
  6956                           ;ff.c: 2081: sfn[11] = c;
  6957  0081BA  EE20 F00B          	lfsr	2,11
  6958  0081BE  501F               	movf	create_name@sfn,w,c
  6959  0081C0  26D9               	addwf	fsr2l,f,c
  6960  0081C2  5020               	movf	create_name@sfn+1,w,c
  6961  0081C4  22DA               	addwfc	fsr2h,f,c
  6962  0081C6  C021  FFDF         	movff	create_name@c,indf2
  6963  0081CA                     L9:
  6964                           
  6965                           ;ff.c: 2083: return FR_OK;
  6966  0081CA  0E00               	movlw	0
  6967  0081CC                     l573:
  6968  0081CC  0012               	return	
  6969  0081CE                     __end_of_create_name:
  6970                           	opt stack 0
  6971                           tblptru	equ	0xFF8
  6972                           tblptrh	equ	0xFF7
  6973                           tblptrl	equ	0xFF6
  6974                           tablat	equ	0xFF5
  6975                           postinc0	equ	0xFEE
  6976                           wreg	equ	0xFE8
  6977                           indf1	equ	0xFE7
  6978                           postinc1	equ	0xFE6
  6979                           postdec1	equ	0xFE5
  6980                           fsr1h	equ	0xFE2
  6981                           fsr1l	equ	0xFE1
  6982                           indf2	equ	0xFDF
  6983                           postinc2	equ	0xFDE
  6984                           postdec2	equ	0xFDD
  6985                           plusw2	equ	0xFDB
  6986                           fsr2h	equ	0xFDA
  6987                           fsr2l	equ	0xFD9
  6988                           status	equ	0xFD8
  6989                           
  6990 ;; *************** function _chk_chr *****************
  6991 ;; Defined at:
  6992 ;;		line 586 in file "ff.c"
  6993 ;; Parameters:    Size  Location     Type
  6994 ;;  str             2    0[COMRAM] PTR const unsigned char 
  6995 ;;		 -> STR_19(16), STR_10(15), 
  6996 ;;  chr             2    2[COMRAM] int 
  6997 ;; Auto vars:     Size  Location     Type
  6998 ;;		None
  6999 ;; Return value:  Size  Location     Type
  7000 ;;                  2    0[COMRAM] int 
  7001 ;; Registers used:
  7002 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
  7003 ;; Tracked objects:
  7004 ;;		On entry : 0/0
  7005 ;;		On exit  : 0/0
  7006 ;;		Unchanged: 0/0
  7007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7008 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7009 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7010 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7011 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7012 ;;Total ram usage:        6 bytes
  7013 ;; Hardware stack levels used:    1
  7014 ;; This function calls:
  7015 ;;		Nothing
  7016 ;; This function is called by:
  7017 ;;		_create_name
  7018 ;;		_f_setlabel
  7019 ;; This function uses a non-reentrant model
  7020 ;;
  7021                           
  7022                           	psect	text11
  7023  0052F4                     __ptext11:
  7024                           	opt stack 0
  7025  0052F4                     _chk_chr:
  7026                           	opt stack 27
  7027                           
  7028                           ;ff.c: 587: while (*str && *str != chr) str++;
  7029                           
  7030                           ;incstack = 0
  7031  0052F4  D002               	goto	l7221
  7032  0052F6                     l7219:
  7033  0052F6  4A01               	infsnz	chk_chr@str,f,c
  7034  0052F8  2A02               	incf	chk_chr@str+1,f,c
  7035  0052FA                     l7221:
  7036  0052FA  C001  FFF6         	movff	chk_chr@str,tblptrl
  7037  0052FE  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  7038  005302                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7039  005302  6AF8               	clrf	tblptru,c
  7040  005304                     	endif
  7041  005304                     	if	0	;tblptru may be non-zero
  7042  005304                     	endif
  7043  005304  0008               	tblrd		*
  7044  005306  50F5               	movf	tablat,w,c
  7045  005308  0900               	iorlw	0
  7046  00530A  B4D8               	btfsc	status,2,c
  7047  00530C  D010               	goto	l7225
  7048  00530E  C001  FFF6         	movff	chk_chr@str,tblptrl
  7049  005312  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  7050  005316                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7051  005316  6AF8               	clrf	tblptru,c
  7052  005318                     	endif
  7053  005318                     	if	0	;tblptru may be non-zero
  7054  005318                     	endif
  7055  005318  0008               	tblrd		*
  7056  00531A  50F5               	movf	tablat,w,c
  7057  00531C  6E05               	movwf	??_chk_chr& (0+255),c
  7058  00531E  6A06               	clrf	(??_chk_chr+1)& (0+255),c
  7059  005320  5004               	movf	chk_chr@chr+1,w,c
  7060  005322  1806               	xorwf	??_chk_chr+1,w,c
  7061  005324  E102               	bnz	u9215
  7062  005326  5003               	movf	chk_chr@chr,w,c
  7063  005328  1805               	xorwf	??_chk_chr,w,c
  7064  00532A                     u9215:
  7065  00532A  A4D8               	btfss	status,2,c
  7066  00532C  D7E4               	goto	l7219
  7067  00532E                     l7225:
  7068                           
  7069                           ;ff.c: 588: return *str;
  7070  00532E  C001  FFF6         	movff	chk_chr@str,tblptrl
  7071  005332  C002  FFF7         	movff	chk_chr@str+1,tblptrh
  7072  005336                     	if	1	;Program memory is < 0x10000, tblptru is always zero
  7073  005336  6AF8               	clrf	tblptru,c
  7074  005338                     	endif
  7075  005338                     	if	0	;tblptru may be non-zero
  7076  005338                     	endif
  7077  005338  0008               	tblrd		*
  7078  00533A  50F5               	movf	tablat,w,c
  7079  00533C  6E01               	movwf	?_chk_chr,c
  7080  00533E  6A02               	clrf	?_chk_chr+1,c
  7081  005340  0012               	return	
  7082  005342                     __end_of_chk_chr:
  7083                           	opt stack 0
  7084                           tblptru	equ	0xFF8
  7085                           tblptrh	equ	0xFF7
  7086                           tblptrl	equ	0xFF6
  7087                           tablat	equ	0xFF5
  7088                           postinc0	equ	0xFEE
  7089                           wreg	equ	0xFE8
  7090                           indf1	equ	0xFE7
  7091                           postinc1	equ	0xFE6
  7092                           postdec1	equ	0xFE5
  7093                           fsr1h	equ	0xFE2
  7094                           fsr1l	equ	0xFE1
  7095                           indf2	equ	0xFDF
  7096                           postinc2	equ	0xFDE
  7097                           postdec2	equ	0xFDD
  7098                           plusw2	equ	0xFDB
  7099                           fsr2h	equ	0xFDA
  7100                           fsr2l	equ	0xFD9
  7101                           status	equ	0xFD8
  7102                           
  7103 ;; *************** function _dir_register *****************
  7104 ;; Defined at:
  7105 ;;		line 1621 in file "ff.c"
  7106 ;; Parameters:    Size  Location     Type
  7107 ;;  dp              2   43[BANK0 ] PTR struct .
  7108 ;;		 -> f_rename@djn(25), f_mkdir@dj(25), f_open@dj(25), 
  7109 ;; Auto vars:     Size  Location     Type
  7110 ;;  res             1  126[COMRAM] enum E67
  7111 ;; Return value:  Size  Location     Type
  7112 ;;                  1    wreg      enum E67
  7113 ;; Registers used:
  7114 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7115 ;; Tracked objects:
  7116 ;;		On entry : 0/0
  7117 ;;		On exit  : 0/0
  7118 ;;		Unchanged: 0/0
  7119 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7120 ;;      Params:         0       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7121 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7122 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7123 ;;      Totals:         1       2       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7124 ;;Total ram usage:        3 bytes
  7125 ;; Hardware stack levels used:    1
  7126 ;; Hardware stack levels required when called:   11
  7127 ;; This function calls:
  7128 ;;		_dir_alloc
  7129 ;;		_mem_cpy
  7130 ;;		_mem_set
  7131 ;;		_move_window
  7132 ;; This function is called by:
  7133 ;;		_f_open
  7134 ;;		_f_mkdir
  7135 ;;		_f_rename
  7136 ;; This function uses a non-reentrant model
  7137 ;;
  7138                           
  7139                           	psect	text12
  7140  005C96                     __ptext12:
  7141                           	opt stack 0
  7142  005C96                     _dir_register:
  7143                           	opt stack 18
  7144                           
  7145                           ;ff.c: 1625: FRESULT res;
  7146                           ;ff.c: 1672: res = dir_alloc(dp, 1);
  7147                           
  7148                           ;incstack = 0
  7149  005C96  0100               	movlb	0	; () banked
  7150  005C98  C0AC  F0A5         	movff	dir_register@dp+1,dir_alloc@dp+1
  7151  005C9C  0100               	movlb	0	; () banked
  7152  005C9E  C0AB  F0A4         	movff	dir_register@dp,dir_alloc@dp
  7153  005CA2  0E00               	movlw	0
  7154  005CA4  0100               	movlb	0	; () banked
  7155  005CA6  6FA7               	movwf	(dir_alloc@nent+1)& (0+255),b
  7156  005CA8  0E01               	movlw	1
  7157  005CAA  0100               	movlb	0	; () banked
  7158  005CAC  6FA6               	movwf	dir_alloc@nent& (0+255),b
  7159  005CAE  ECF6  F030         	call	_dir_alloc	;wreg free
  7160  005CB2  6E7F               	movwf	dir_register@res,c
  7161                           
  7162                           ;ff.c: 1675: if (res == FR_OK) {
  7163  005CB4  667F               	tstfsz	dir_register@res,c
  7164  005CB6  D061               	goto	l8115
  7165                           
  7166                           ;ff.c: 1676: res = move_window(dp->fs, dp->sect);
  7167  005CB8  C0AB  FFD9         	movff	dir_register@dp,fsr2l
  7168  005CBC  C0AC  FFDA         	movff	dir_register@dp+1,fsr2h
  7169  005CC0  CFDE F03B          	movff	postinc2,move_window@fs
  7170  005CC4  CFDD F03C          	movff	postdec2,move_window@fs+1
  7171  005CC8  0100               	movlb	0	; () banked
  7172  005CCA  EE20 F00E          	lfsr	2,14
  7173  005CCE  0100               	movlb	0	; () banked
  7174  005CD0  51AB               	movf	dir_register@dp& (0+255),w,b
  7175  005CD2  26D9               	addwf	fsr2l,f,c
  7176  005CD4  0100               	movlb	0	; () banked
  7177  005CD6  51AC               	movf	(dir_register@dp+1)& (0+255),w,b
  7178  005CD8  22DA               	addwfc	fsr2h,f,c
  7179  005CDA  CFDE F03D          	movff	postinc2,move_window@sector
  7180  005CDE  CFDE F03E          	movff	postinc2,move_window@sector+1
  7181  005CE2  CFDE F03F          	movff	postinc2,move_window@sector+2
  7182  005CE6  CFDE F040          	movff	postinc2,move_window@sector+3
  7183  005CEA  EC66  F02C         	call	_move_window	;wreg free
  7184  005CEE  6E7F               	movwf	dir_register@res,c
  7185                           
  7186                           ;ff.c: 1677: if (res == FR_OK) {
  7187  005CF0  667F               	tstfsz	dir_register@res,c
  7188  005CF2  D043               	goto	l8115
  7189                           
  7190                           ;ff.c: 1678: mem_set(dp->dir, 0, 32);
  7191  005CF4  0100               	movlb	0	; () banked
  7192  005CF6  EE20 F012          	lfsr	2,18
  7193  005CFA  0100               	movlb	0	; () banked
  7194  005CFC  51AB               	movf	dir_register@dp& (0+255),w,b
  7195  005CFE  26D9               	addwf	fsr2l,f,c
  7196  005D00  0100               	movlb	0	; () banked
  7197  005D02  51AC               	movf	(dir_register@dp+1)& (0+255),w,b
  7198  005D04  22DA               	addwfc	fsr2h,f,c
  7199  005D06  CFDE F001          	movff	postinc2,mem_set@dst
  7200  005D0A  CFDD F002          	movff	postdec2,mem_set@dst+1
  7201  005D0E  0E00               	movlw	0
  7202  005D10  6E04               	movwf	mem_set@val+1,c
  7203  005D12  0E00               	movlw	0
  7204  005D14  6E03               	movwf	mem_set@val,c
  7205  005D16  0E00               	movlw	0
  7206  005D18  6E06               	movwf	mem_set@cnt+1,c
  7207  005D1A  0E20               	movlw	32
  7208  005D1C  6E05               	movwf	mem_set@cnt,c
  7209  005D1E  ECCD  F028         	call	_mem_set	;wreg free
  7210                           
  7211                           ;ff.c: 1679: mem_cpy(dp->dir, dp->fn, 11);
  7212  005D22  0100               	movlb	0	; () banked
  7213  005D24  EE20 F012          	lfsr	2,18
  7214  005D28  0100               	movlb	0	; () banked
  7215  005D2A  51AB               	movf	dir_register@dp& (0+255),w,b
  7216  005D2C  26D9               	addwf	fsr2l,f,c
  7217  005D2E  0100               	movlb	0	; () banked
  7218  005D30  51AC               	movf	(dir_register@dp+1)& (0+255),w,b
  7219  005D32  22DA               	addwfc	fsr2h,f,c
  7220  005D34  CFDE F001          	movff	postinc2,mem_cpy@dst
  7221  005D38  CFDD F002          	movff	postdec2,mem_cpy@dst+1
  7222  005D3C  0100               	movlb	0	; () banked
  7223  005D3E  EE20 F014          	lfsr	2,20
  7224  005D42  0100               	movlb	0	; () banked
  7225  005D44  51AB               	movf	dir_register@dp& (0+255),w,b
  7226  005D46  26D9               	addwf	fsr2l,f,c
  7227  005D48  0100               	movlb	0	; () banked
  7228  005D4A  51AC               	movf	(dir_register@dp+1)& (0+255),w,b
  7229  005D4C  22DA               	addwfc	fsr2h,f,c
  7230  005D4E  CFDE F003          	movff	postinc2,mem_cpy@src
  7231  005D52  CFDD F004          	movff	postdec2,mem_cpy@src+1
  7232  005D56  0E00               	movlw	0
  7233  005D58  6E06               	movwf	mem_cpy@cnt+1,c
  7234  005D5A  0E0B               	movlw	11
  7235  005D5C  6E05               	movwf	mem_cpy@cnt,c
  7236  005D5E  EC22  F02A         	call	_mem_cpy	;wreg free
  7237                           
  7238                           ;ff.c: 1683: dp->fs->wflag = 1;
  7239  005D62  C0AB  FFD9         	movff	dir_register@dp,fsr2l
  7240  005D66  C0AC  FFDA         	movff	dir_register@dp+1,fsr2h
  7241  005D6A  EE10 F004          	lfsr	1,4
  7242  005D6E  50DE               	movf	postinc2,w,c
  7243  005D70  26E1               	addwf	fsr1l,f,c
  7244  005D72  50DD               	movf	postdec2,w,c
  7245  005D74  22E2               	addwfc	fsr1h,f,c
  7246  005D76  0E01               	movlw	1
  7247  005D78  6EE7               	movwf	indf1,c
  7248  005D7A                     l8115:
  7249                           
  7250                           ;ff.c: 1684: }
  7251                           ;ff.c: 1685: }
  7252                           ;ff.c: 1687: return res;
  7253  005D7A  507F               	movf	dir_register@res,w,c
  7254  005D7C  0012               	return	
  7255  005D7E                     __end_of_dir_register:
  7256                           	opt stack 0
  7257                           tblptru	equ	0xFF8
  7258                           tblptrh	equ	0xFF7
  7259                           tblptrl	equ	0xFF6
  7260                           tablat	equ	0xFF5
  7261                           postinc0	equ	0xFEE
  7262                           wreg	equ	0xFE8
  7263                           indf1	equ	0xFE7
  7264                           postinc1	equ	0xFE6
  7265                           postdec1	equ	0xFE5
  7266                           fsr1h	equ	0xFE2
  7267                           fsr1l	equ	0xFE1
  7268                           indf2	equ	0xFDF
  7269                           postinc2	equ	0xFDE
  7270                           postdec2	equ	0xFDD
  7271                           plusw2	equ	0xFDB
  7272                           fsr2h	equ	0xFDA
  7273                           fsr2l	equ	0xFD9
  7274                           status	equ	0xFD8
  7275                           
  7276 ;; *************** function _mem_cpy *****************
  7277 ;; Defined at:
  7278 ;;		line 550 in file "ff.c"
  7279 ;; Parameters:    Size  Location     Type
  7280 ;;  dst             2    0[COMRAM] PTR void 
  7281 ;;		 -> FatFs.win(512), f_gets@s(2), f_rename@buf(21), f_rename@djn(25), 
  7282 ;;		 -> f_unlink@sdj(25), NULL(0), FatFs(562), 
  7283 ;;  src             2    2[COMRAM] PTR const void 
  7284 ;;		 -> FatFs.win(512), pb.buf(64), f_printf@pb(71), pb.buf(64), 
  7285 ;;		 -> f_puts@pb(71), pb.buf(64), f_putc@pb(71), STR_22(20), 
  7286 ;;		 -> STR_21(20), STR_20(12), f_setlabel@vn(11), f_utime@sfn(12), 
  7287 ;;		 -> f_rename@buf(21), f_rename@sfn(12), f_rename@djo(25), f_chmod@sfn(12), 
  7288 ;;		 -> f_mkdir@sfn(12), f_unlink@sfn(12), f_unlink@dj(25), f_stat@sfn(12), 
  7289 ;;		 -> f_readdir@sfn(12), f_opendir@sfn(12), f_getcwd@sfn(12), f_chdir@sfn(12), 
  7290 ;;		 -> f_open@sfn(12), NULL(0), STR_7(14), FatFs(562), 
  7291 ;;  cnt             2    4[COMRAM] unsigned int 
  7292 ;; Auto vars:     Size  Location     Type
  7293 ;;  s               2    8[COMRAM] PTR const unsigned char 
  7294 ;;		 -> FatFs.win(512), pb.buf(64), f_printf@pb(71), pb.buf(64), 
  7295 ;;		 -> f_puts@pb(71), pb.buf(64), f_putc@pb(71), STR_22(20), 
  7296 ;;		 -> STR_21(20), STR_20(12), f_setlabel@vn(11), f_utime@sfn(12), 
  7297 ;;		 -> f_rename@buf(21), f_rename@sfn(12), f_rename@djo(25), f_chmod@sfn(12), 
  7298 ;;		 -> f_mkdir@sfn(12), f_unlink@sfn(12), f_unlink@dj(25), f_stat@sfn(12), 
  7299 ;;		 -> f_readdir@sfn(12), f_opendir@sfn(12), f_getcwd@sfn(12), f_chdir@sfn(12), 
  7300 ;;		 -> f_open@sfn(12), NULL(0), STR_7(14), FatFs(562), 
  7301 ;;  d               2    6[COMRAM] PTR unsigned char 
  7302 ;;		 -> FatFs.win(512), f_gets@s(2), f_rename@buf(21), f_rename@djn(25), 
  7303 ;;		 -> f_unlink@sdj(25), NULL(0), FatFs(562), 
  7304 ;; Return value:  Size  Location     Type
  7305 ;;		None               void
  7306 ;; Registers used:
  7307 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7308 ;; Tracked objects:
  7309 ;;		On entry : 0/0
  7310 ;;		On exit  : 0/0
  7311 ;;		Unchanged: 0/0
  7312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7313 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7314 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7315 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7316 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7317 ;;Total ram usage:       10 bytes
  7318 ;; Hardware stack levels used:    1
  7319 ;; This function calls:
  7320 ;;		Nothing
  7321 ;; This function is called by:
  7322 ;;		_dir_register
  7323 ;;		_f_write
  7324 ;;		_f_read
  7325 ;;		_f_unlink
  7326 ;;		_f_mkdir
  7327 ;;		_f_rename
  7328 ;;		_f_getlabel
  7329 ;;		_f_setlabel
  7330 ;;		_f_mkfs
  7331 ;; This function uses a non-reentrant model
  7332 ;;
  7333                           
  7334                           	psect	text13
  7335  005444                     __ptext13:
  7336                           	opt stack 0
  7337  005444                     _mem_cpy:
  7338                           	opt stack 29
  7339                           
  7340                           ;ff.c: 551: BYTE *d = (BYTE*)dst;
  7341                           
  7342                           ;incstack = 0
  7343  005444  C002  F008         	movff	mem_cpy@dst+1,mem_cpy@d+1
  7344  005448  C001  F007         	movff	mem_cpy@dst,mem_cpy@d
  7345                           
  7346                           ;ff.c: 552: const BYTE *s = (const BYTE*)src;
  7347  00544C  C004  F00A         	movff	mem_cpy@src+1,mem_cpy@s+1
  7348  005450  C003  F009         	movff	mem_cpy@src,mem_cpy@s
  7349                           
  7350                           ;ff.c: 561: while (cnt--)
  7351  005454  D019               	goto	l7521
  7352  005456                     l7515:
  7353                           
  7354                           ;ff.c: 562: *d++ = *s++;
  7355  005456  C009  FFF6         	movff	mem_cpy@s,tblptrl
  7356  00545A  C00A  FFF7         	movff	mem_cpy@s+1,tblptrh
  7357  00545E  6AF8               	clrf	tblptru,c
  7358  005460  C007  FFD9         	movff	mem_cpy@d,fsr2l
  7359  005464  C008  FFDA         	movff	mem_cpy@d+1,fsr2h
  7360  005468  0E0F               	movlw	(high __ramtop+-1)
  7361  00546A  64F7               	cpfsgt	tblptrh,c
  7362  00546C  D003               	bra	u9707
  7363  00546E  0008               	tblrd		*
  7364  005470  50F5               	movf	tablat,w,c
  7365  005472  D005               	bra	u9700
  7366  005474                     u9707:
  7367  005474  CFF6 FFE9          	movff	tblptrl,fsr0l
  7368  005478  CFF7 FFEA          	movff	tblptrh,fsr0h
  7369  00547C  50EF               	movf	indf0,w,c
  7370  00547E                     u9700:
  7371  00547E  6EDF               	movwf	indf2,c
  7372  005480  4A09               	infsnz	mem_cpy@s,f,c
  7373  005482  2A0A               	incf	mem_cpy@s+1,f,c
  7374  005484  4A07               	infsnz	mem_cpy@d,f,c
  7375  005486  2A08               	incf	mem_cpy@d+1,f,c
  7376  005488                     l7521:
  7377  005488  0605               	decf	mem_cpy@cnt,f,c
  7378  00548A  A0D8               	btfss	status,0,c
  7379  00548C  0606               	decf	mem_cpy@cnt+1,f,c
  7380  00548E  2805               	incf	mem_cpy@cnt& (0+255),w,c
  7381  005490  B4D8               	btfsc	status,2,c
  7382  005492  2806               	incf	(mem_cpy@cnt+1)& (0+255),w,c
  7383  005494  B4D8               	btfsc	status,2,c
  7384  005496  0012               	return	
  7385  005498  D7DE               	goto	l7515
  7386  00549A                     __end_of_mem_cpy:
  7387                           	opt stack 0
  7388                           tblptru	equ	0xFF8
  7389                           tblptrh	equ	0xFF7
  7390                           tblptrl	equ	0xFF6
  7391                           tablat	equ	0xFF5
  7392                           indf0	equ	0xFEF
  7393                           postinc0	equ	0xFEE
  7394                           fsr0h	equ	0xFEA
  7395                           fsr0l	equ	0xFE9
  7396                           wreg	equ	0xFE8
  7397                           indf1	equ	0xFE7
  7398                           postinc1	equ	0xFE6
  7399                           postdec1	equ	0xFE5
  7400                           fsr1h	equ	0xFE2
  7401                           fsr1l	equ	0xFE1
  7402                           indf2	equ	0xFDF
  7403                           postinc2	equ	0xFDE
  7404                           postdec2	equ	0xFDD
  7405                           plusw2	equ	0xFDB
  7406                           fsr2h	equ	0xFDA
  7407                           fsr2l	equ	0xFD9
  7408                           status	equ	0xFD8
  7409                           
  7410 ;; *************** function _dir_alloc *****************
  7411 ;; Defined at:
  7412 ;;		line 1242 in file "ff.c"
  7413 ;; Parameters:    Size  Location     Type
  7414 ;;  dp              2   36[BANK0 ] PTR struct .
  7415 ;;		 -> f_setlabel@dj(25), f_rename@djn(25), f_mkdir@dj(25), f_open@dj(25), 
  7416 ;;  nent            2   38[BANK0 ] unsigned int 
  7417 ;; Auto vars:     Size  Location     Type
  7418 ;;  n               2   40[BANK0 ] unsigned int 
  7419 ;;  res             1   42[BANK0 ] enum E67
  7420 ;; Return value:  Size  Location     Type
  7421 ;;                  1    wreg      enum E67
  7422 ;; Registers used:
  7423 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7424 ;; Tracked objects:
  7425 ;;		On entry : 0/0
  7426 ;;		On exit  : 0/0
  7427 ;;		Unchanged: 0/0
  7428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7429 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7430 ;;      Locals:         0       3       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7431 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7432 ;;      Totals:         2       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7433 ;;Total ram usage:        9 bytes
  7434 ;; Hardware stack levels used:    1
  7435 ;; Hardware stack levels required when called:   10
  7436 ;; This function calls:
  7437 ;;		_dir_next
  7438 ;;		_dir_sdi
  7439 ;;		_move_window
  7440 ;; This function is called by:
  7441 ;;		_dir_register
  7442 ;;		_f_setlabel
  7443 ;; This function uses a non-reentrant model
  7444 ;;
  7445                           
  7446                           	psect	text14
  7447  0061EC                     __ptext14:
  7448                           	opt stack 0
  7449  0061EC                     _dir_alloc:
  7450                           	opt stack 18
  7451                           
  7452                           ;ff.c: 1247: FRESULT res;
  7453                           ;ff.c: 1248: UINT n;
  7454                           ;ff.c: 1251: res = dir_sdi(dp, 0);
  7455                           
  7456                           ;incstack = 0
  7457  0061EC  0100               	movlb	0	; () banked
  7458  0061EE  C0A5  F073         	movff	dir_alloc@dp+1,dir_sdi@dp+1
  7459  0061F2  0100               	movlb	0	; () banked
  7460  0061F4  C0A4  F072         	movff	dir_alloc@dp,dir_sdi@dp
  7461  0061F8  0E00               	movlw	0
  7462  0061FA  6E75               	movwf	dir_sdi@idx+1,c
  7463  0061FC  0E00               	movlw	0
  7464  0061FE  6E74               	movwf	dir_sdi@idx,c
  7465  006200  ECE3  F03B         	call	_dir_sdi	;wreg free
  7466  006204  0100               	movlb	0	; () banked
  7467  006206  6FAA               	movwf	dir_alloc@res& (0+255),b
  7468                           
  7469                           ; BSR set to: 0
  7470                           ;ff.c: 1252: if (res == FR_OK) {
  7471  006208  0100               	movlb	0	; () banked
  7472  00620A  67AA               	tstfsz	dir_alloc@res& (0+255),b
  7473  00620C  D07D               	goto	l7607
  7474                           
  7475                           ; BSR set to: 0
  7476                           ;ff.c: 1253: n = 0;
  7477  00620E  0E00               	movlw	0
  7478  006210  0100               	movlb	0	; () banked
  7479  006212  6FA9               	movwf	(dir_alloc@n+1)& (0+255),b
  7480  006214  0E00               	movlw	0
  7481  006216  0100               	movlb	0	; () banked
  7482  006218  6FA8               	movwf	dir_alloc@n& (0+255),b
  7483  00621A                     l7587:
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;ff.c: 1255: res = move_window(dp->fs, dp->sect);
  7487  00621A  C0A4  FFD9         	movff	dir_alloc@dp,fsr2l
  7488  00621E  C0A5  FFDA         	movff	dir_alloc@dp+1,fsr2h
  7489  006222  CFDE F03B          	movff	postinc2,move_window@fs
  7490  006226  CFDD F03C          	movff	postdec2,move_window@fs+1
  7491  00622A  0100               	movlb	0	; () banked
  7492  00622C  EE20 F00E          	lfsr	2,14
  7493  006230  0100               	movlb	0	; () banked
  7494  006232  51A4               	movf	dir_alloc@dp& (0+255),w,b
  7495  006234  26D9               	addwf	fsr2l,f,c
  7496  006236  0100               	movlb	0	; () banked
  7497  006238  51A5               	movf	(dir_alloc@dp+1)& (0+255),w,b
  7498  00623A  22DA               	addwfc	fsr2h,f,c
  7499  00623C  CFDE F03D          	movff	postinc2,move_window@sector
  7500  006240  CFDE F03E          	movff	postinc2,move_window@sector+1
  7501  006244  CFDE F03F          	movff	postinc2,move_window@sector+2
  7502  006248  CFDE F040          	movff	postinc2,move_window@sector+3
  7503  00624C  EC66  F02C         	call	_move_window	;wreg free
  7504  006250  0100               	movlb	0	; () banked
  7505  006252  6FAA               	movwf	dir_alloc@res& (0+255),b
  7506                           
  7507                           ; BSR set to: 0
  7508                           ;ff.c: 1256: if (res != FR_OK) break;
  7509  006254  0100               	movlb	0	; () banked
  7510  006256  51AA               	movf	dir_alloc@res& (0+255),w,b
  7511  006258  A4D8               	btfss	status,2,c
  7512  00625A  D056               	goto	l7607
  7513                           
  7514                           ; BSR set to: 0
  7515                           ;ff.c: 1257: if (dp->dir[0] == 0xE5 || dp->dir[0] == 0) {
  7516                           
  7517                           ; BSR set to: 0
  7518                           
  7519                           ; BSR set to: 0
  7520  00625C  0100               	movlb	0	; () banked
  7521  00625E  EE20 F012          	lfsr	2,18
  7522  006262  0100               	movlb	0	; () banked
  7523  006264  51A4               	movf	dir_alloc@dp& (0+255),w,b
  7524  006266  26D9               	addwf	fsr2l,f,c
  7525  006268  0100               	movlb	0	; () banked
  7526  00626A  51A5               	movf	(dir_alloc@dp+1)& (0+255),w,b
  7527  00626C  22DA               	addwfc	fsr2h,f,c
  7528  00626E  CFDE F07D          	movff	postinc2,??_dir_alloc
  7529  006272  CFDD F07E          	movff	postdec2,??_dir_alloc+1
  7530  006276  C07D  FFD9         	movff	??_dir_alloc,fsr2l
  7531  00627A  C07E  FFDA         	movff	??_dir_alloc+1,fsr2h
  7532  00627E  50DF               	movf	indf2,w,c
  7533  006280  0AE5               	xorlw	229
  7534  006282  B4D8               	btfsc	status,2,c
  7535  006284  D014               	goto	l7597
  7536                           
  7537                           ; BSR set to: 0
  7538  006286  0100               	movlb	0	; () banked
  7539  006288  EE20 F012          	lfsr	2,18
  7540  00628C  0100               	movlb	0	; () banked
  7541  00628E  51A4               	movf	dir_alloc@dp& (0+255),w,b
  7542  006290  26D9               	addwf	fsr2l,f,c
  7543  006292  0100               	movlb	0	; () banked
  7544  006294  51A5               	movf	(dir_alloc@dp+1)& (0+255),w,b
  7545  006296  22DA               	addwfc	fsr2h,f,c
  7546  006298  CFDE F07D          	movff	postinc2,??_dir_alloc
  7547  00629C  CFDD F07E          	movff	postdec2,??_dir_alloc+1
  7548  0062A0  C07D  FFD9         	movff	??_dir_alloc,fsr2l
  7549  0062A4  C07E  FFDA         	movff	??_dir_alloc+1,fsr2h
  7550  0062A8  50DF               	movf	indf2,w,c
  7551  0062AA  A4D8               	btfss	status,2,c
  7552  0062AC  D013               	goto	l7601
  7553  0062AE                     l7597:
  7554                           
  7555                           ; BSR set to: 0
  7556                           ;ff.c: 1258: if (++n == nent) break;
  7557  0062AE  0100               	movlb	0	; () banked
  7558  0062B0  EE20  F0A8         	lfsr	2,dir_alloc@n
  7559  0062B4  2ADE               	incf	postinc2,f,c
  7560  0062B6  0E00               	movlw	0
  7561  0062B8  22DD               	addwfc	postdec2,f,c
  7562  0062BA  0100               	movlb	0	; () banked
  7563  0062BC  52DE               	movf	postinc2,f,c
  7564  0062BE  0100               	movlb	0	; () banked
  7565  0062C0  51A7               	movf	(dir_alloc@nent+1)& (0+255),w,b
  7566  0062C2  18DD               	xorwf	postdec2,w,c
  7567  0062C4  0100               	movlb	0	; () banked
  7568  0062C6  C0A6  FFE8         	movff	dir_alloc@nent,wreg
  7569  0062CA  B4D8               	btfsc	status,2,c
  7570  0062CC  18DF               	xorwf	indf2,w,c
  7571  0062CE  B4D8               	btfsc	status,2,c
  7572  0062D0  D01B               	goto	l7607
  7573  0062D2  D006               	goto	l7603
  7574  0062D4                     l7601:
  7575                           
  7576                           ; BSR set to: 0
  7577                           ;ff.c: 1260: n = 0;
  7578  0062D4  0E00               	movlw	0
  7579  0062D6  0100               	movlb	0	; () banked
  7580  0062D8  6FA9               	movwf	(dir_alloc@n+1)& (0+255),b
  7581  0062DA  0E00               	movlw	0
  7582  0062DC  0100               	movlb	0	; () banked
  7583  0062DE  6FA8               	movwf	dir_alloc@n& (0+255),b
  7584  0062E0                     l7603:
  7585                           
  7586                           ; BSR set to: 0
  7587                           ;ff.c: 1261: }
  7588                           ;ff.c: 1262: res = dir_next(dp, 1);
  7589  0062E0  0100               	movlb	0	; () banked
  7590  0062E2  C0A5  F092         	movff	dir_alloc@dp+1,dir_next@dp+1
  7591  0062E6  0100               	movlb	0	; () banked
  7592  0062E8  C0A4  F091         	movff	dir_alloc@dp,dir_next@dp
  7593  0062EC  0E00               	movlw	0
  7594  0062EE  0100               	movlb	0	; () banked
  7595  0062F0  6F94               	movwf	(dir_next@stretch+1)& (0+255),b
  7596  0062F2  0E01               	movlw	1
  7597  0062F4  0100               	movlb	0	; () banked
  7598  0062F6  6F93               	movwf	dir_next@stretch& (0+255),b
  7599  0062F8  EC7A  F047         	call	_dir_next	;wreg free
  7600  0062FC  0100               	movlb	0	; () banked
  7601  0062FE  6FAA               	movwf	dir_alloc@res& (0+255),b
  7602                           
  7603                           ; BSR set to: 0
  7604                           ;ff.c: 1263: } while (res == FR_OK);
  7605  006300  0100               	movlb	0	; () banked
  7606  006302  51AA               	movf	dir_alloc@res& (0+255),w,b
  7607  006304  B4D8               	btfsc	status,2,c
  7608  006306  D789               	goto	l7587
  7609  006308                     l7607:
  7610                           
  7611                           ; BSR set to: 0
  7612                           ;ff.c: 1264: }
  7613                           ;ff.c: 1265: if (res == FR_NO_FILE) res = FR_DENIED;
  7614  006308  0100               	movlb	0	; () banked
  7615  00630A  51AA               	movf	dir_alloc@res& (0+255),w,b
  7616  00630C  0A04               	xorlw	4
  7617  00630E  A4D8               	btfss	status,2,c
  7618  006310  D003               	goto	l473
  7619                           
  7620                           ; BSR set to: 0
  7621  006312  0E07               	movlw	7
  7622  006314  0100               	movlb	0	; () banked
  7623  006316  6FAA               	movwf	dir_alloc@res& (0+255),b
  7624  006318                     l473:
  7625                           
  7626                           ; BSR set to: 0
  7627                           ;ff.c: 1266: return res;
  7628  006318  0100               	movlb	0	; () banked
  7629  00631A  51AA               	movf	dir_alloc@res& (0+255),w,b
  7630                           
  7631                           ; BSR set to: 0
  7632                           
  7633                           ; BSR set to: 0
  7634  00631C  0012               	return	
  7635  00631E                     __end_of_dir_alloc:
  7636                           	opt stack 0
  7637                           tblptru	equ	0xFF8
  7638                           tblptrh	equ	0xFF7
  7639                           tblptrl	equ	0xFF6
  7640                           tablat	equ	0xFF5
  7641                           indf0	equ	0xFEF
  7642                           postinc0	equ	0xFEE
  7643                           fsr0h	equ	0xFEA
  7644                           fsr0l	equ	0xFE9
  7645                           wreg	equ	0xFE8
  7646                           indf1	equ	0xFE7
  7647                           postinc1	equ	0xFE6
  7648                           postdec1	equ	0xFE5
  7649                           fsr1h	equ	0xFE2
  7650                           fsr1l	equ	0xFE1
  7651                           indf2	equ	0xFDF
  7652                           postinc2	equ	0xFDE
  7653                           postdec2	equ	0xFDD
  7654                           plusw2	equ	0xFDB
  7655                           fsr2h	equ	0xFDA
  7656                           fsr2l	equ	0xFD9
  7657                           status	equ	0xFD8
  7658                           
  7659 ;; *************** function _dir_sdi *****************
  7660 ;; Defined at:
  7661 ;;		line 1123 in file "ff.c"
  7662 ;; Parameters:    Size  Location     Type
  7663 ;;  dp              2  113[COMRAM] PTR struct .
  7664 ;;		 -> f_setlabel@dj(25), f_getlabel@dj(25), f_utime@dj(25), f_rename@djn(25), 
  7665 ;;		 -> f_rename@djo(25), f_chmod@dj(25), f_mkdir@dj(25), f_unlink@sdj(25), 
  7666 ;;		 -> f_unlink@dj(25), f_stat@dj(25), f_getcwd@dj(25), f_chdir@dj(25), 
  7667 ;;		 -> f_open@dj(25), 
  7668 ;;  idx             2  115[COMRAM] unsigned int 
  7669 ;; Auto vars:     Size  Location     Type
  7670 ;;  clst            4    6[BANK0 ] unsigned long 
  7671 ;;  sect            4    2[BANK0 ] unsigned long 
  7672 ;;  ic              2    0[BANK0 ] unsigned int 
  7673 ;; Return value:  Size  Location     Type
  7674 ;;                  1    wreg      enum E67
  7675 ;; Registers used:
  7676 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7677 ;; Tracked objects:
  7678 ;;		On entry : 0/0
  7679 ;;		On exit  : 0/0
  7680 ;;		Unchanged: 0/0
  7681 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  7682 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7683 ;;      Locals:         0      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7684 ;;      Temps:          7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7685 ;;      Totals:        11      10       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  7686 ;;Total ram usage:       21 bytes
  7687 ;; Hardware stack levels used:    1
  7688 ;; Hardware stack levels required when called:    8
  7689 ;; This function calls:
  7690 ;;		_clust2sect
  7691 ;;		_get_fat
  7692 ;; This function is called by:
  7693 ;;		_dir_alloc
  7694 ;;		_dir_find
  7695 ;;		_follow_path
  7696 ;;		_dir_remove
  7697 ;;		_f_getcwd
  7698 ;;		_f_opendir
  7699 ;;		_f_readdir
  7700 ;;		_f_unlink
  7701 ;;		_f_getlabel
  7702 ;;		_f_setlabel
  7703 ;; This function uses a non-reentrant model
  7704 ;;
  7705                           
  7706                           	psect	text15
  7707  0077C6                     __ptext15:
  7708                           	opt stack 0
  7709  0077C6                     _dir_sdi:
  7710                           	opt stack 20
  7711                           
  7712                           ;ff.c: 1128: DWORD clst, sect;
  7713                           ;ff.c: 1129: UINT ic;
  7714                           ;ff.c: 1132: dp->index = (WORD)idx;
  7715                           
  7716                           ; BSR set to: 0
  7717                           ;incstack = 0
  7718  0077C6  EE20 F004          	lfsr	2,4
  7719  0077CA  5072               	movf	dir_sdi@dp,w,c
  7720  0077CC  26D9               	addwf	fsr2l,f,c
  7721  0077CE  5073               	movf	dir_sdi@dp+1,w,c
  7722  0077D0  22DA               	addwfc	fsr2h,f,c
  7723  0077D2  C074  FFDE         	movff	dir_sdi@idx,postinc2
  7724  0077D6  C075  FFDD         	movff	dir_sdi@idx+1,postdec2
  7725                           
  7726                           ;ff.c: 1133: clst = dp->sclust;
  7727  0077DA  EE20 F006          	lfsr	2,6
  7728  0077DE  5072               	movf	dir_sdi@dp,w,c
  7729  0077E0  26D9               	addwf	fsr2l,f,c
  7730  0077E2  5073               	movf	dir_sdi@dp+1,w,c
  7731  0077E4  22DA               	addwfc	fsr2h,f,c
  7732  0077E6  0100               	movlb	0	; () banked
  7733  0077E8  CFDE F086          	movff	postinc2,dir_sdi@clst
  7734  0077EC  0100               	movlb	0	; () banked
  7735  0077EE  CFDE F087          	movff	postinc2,dir_sdi@clst+1
  7736  0077F2  0100               	movlb	0	; () banked
  7737  0077F4  CFDE F088          	movff	postinc2,dir_sdi@clst+2
  7738  0077F8  0100               	movlb	0	; () banked
  7739  0077FA  CFDE F089          	movff	postinc2,dir_sdi@clst+3
  7740                           
  7741                           ; BSR set to: 0
  7742                           ;ff.c: 1134: if (clst == 1 || clst >= dp->fs->n_fatent)
  7743  0077FE  0100               	movlb	0	; () banked
  7744  007800  0586               	decf	dir_sdi@clst& (0+255),w,b
  7745  007802  1187               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  7746  007804  1188               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  7747  007806  1189               	iorwf	(dir_sdi@clst+3)& (0+255),w,b
  7748  007808  B4D8               	btfsc	status,2,c
  7749  00780A  D126               	goto	u9320
  7750                           
  7751                           ; BSR set to: 0
  7752  00780C  C072  FFD9         	movff	dir_sdi@dp,fsr2l
  7753  007810  C073  FFDA         	movff	dir_sdi@dp+1,fsr2h
  7754  007814  EE10 F016          	lfsr	1,22
  7755  007818  50DE               	movf	postinc2,w,c
  7756  00781A  26E1               	addwf	fsr1l,f,c
  7757  00781C  50DD               	movf	postdec2,w,c
  7758  00781E  22E2               	addwfc	fsr1h,f,c
  7759  007820  CFE6 F076          	movff	postinc1,??_dir_sdi
  7760  007824  CFE6 F077          	movff	postinc1,??_dir_sdi+1
  7761  007828  CFE6 F078          	movff	postinc1,??_dir_sdi+2
  7762  00782C  CFE6 F079          	movff	postinc1,??_dir_sdi+3
  7763  007830  5076               	movf	??_dir_sdi,w,c
  7764  007832  0100               	movlb	0	; () banked
  7765  007834  5D86               	subwf	dir_sdi@clst& (0+255),w,b
  7766  007836  5077               	movf	??_dir_sdi+1,w,c
  7767  007838  0100               	movlb	0	; () banked
  7768  00783A  5987               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
  7769  00783C  5078               	movf	??_dir_sdi+2,w,c
  7770  00783E  0100               	movlb	0	; () banked
  7771  007840  5988               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
  7772  007842  5079               	movf	??_dir_sdi+3,w,c
  7773  007844  0100               	movlb	0	; () banked
  7774  007846  5989               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
  7775  007848  B0D8               	btfsc	status,0,c
  7776                           
  7777                           ; BSR set to: 0
  7778  00784A  D106               	goto	u9320
  7779                           
  7780                           ; BSR set to: 0
  7781                           ;ff.c: 1136: if (!clst && dp->fs->fs_type == 3)
  7782                           
  7783                           ; BSR set to: 0
  7784                           
  7785                           ; BSR set to: 0
  7786                           
  7787                           ; BSR set to: 0
  7788                           ;ff.c: 1135: return FR_INT_ERR;
  7789  00784C  0100               	movlb	0	; () banked
  7790  00784E  5189               	movf	(dir_sdi@clst+3)& (0+255),w,b
  7791  007850  1186               	iorwf	dir_sdi@clst& (0+255),w,b
  7792  007852  1187               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  7793  007854  1188               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  7794  007856  A4D8               	btfss	status,2,c
  7795  007858  D025               	goto	l7245
  7796                           
  7797                           ; BSR set to: 0
  7798  00785A  0E03               	movlw	3
  7799  00785C  C072  FFD9         	movff	dir_sdi@dp,fsr2l
  7800  007860  C073  FFDA         	movff	dir_sdi@dp+1,fsr2h
  7801  007864  CFDE F076          	movff	postinc2,??_dir_sdi
  7802  007868  CFDD F077          	movff	postdec2,??_dir_sdi+1
  7803  00786C  C076  FFD9         	movff	??_dir_sdi,fsr2l
  7804  007870  C077  FFDA         	movff	??_dir_sdi+1,fsr2h
  7805  007874  62DF               	cpfseq	indf2,c
  7806  007876  D016               	goto	l7245
  7807                           
  7808                           ; BSR set to: 0
  7809                           ;ff.c: 1137: clst = dp->fs->dirbase;
  7810  007878  C072  FFD9         	movff	dir_sdi@dp,fsr2l
  7811  00787C  C073  FFDA         	movff	dir_sdi@dp+1,fsr2h
  7812  007880  EE10 F026          	lfsr	1,38
  7813  007884  50DE               	movf	postinc2,w,c
  7814  007886  26E1               	addwf	fsr1l,f,c
  7815  007888  50DD               	movf	postdec2,w,c
  7816  00788A  22E2               	addwfc	fsr1h,f,c
  7817  00788C  0100               	movlb	0	; () banked
  7818  00788E  CFE6 F086          	movff	postinc1,dir_sdi@clst
  7819  007892  0100               	movlb	0	; () banked
  7820  007894  CFE6 F087          	movff	postinc1,dir_sdi@clst+1
  7821  007898  0100               	movlb	0	; () banked
  7822  00789A  CFE6 F088          	movff	postinc1,dir_sdi@clst+2
  7823  00789E  0100               	movlb	0	; () banked
  7824  0078A0  CFE6 F089          	movff	postinc1,dir_sdi@clst+3
  7825  0078A4                     l7245:
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;ff.c: 1139: if (clst == 0) {
  7829  0078A4  0100               	movlb	0	; () banked
  7830  0078A6  5189               	movf	(dir_sdi@clst+3)& (0+255),w,b
  7831  0078A8  1186               	iorwf	dir_sdi@clst& (0+255),w,b
  7832  0078AA  1187               	iorwf	(dir_sdi@clst+1)& (0+255),w,b
  7833  0078AC  1188               	iorwf	(dir_sdi@clst+2)& (0+255),w,b
  7834  0078AE  A4D8               	btfss	status,2,c
  7835  0078B0  D02B               	goto	l7255
  7836                           
  7837                           ; BSR set to: 0
  7838                           ;ff.c: 1140: if (idx >= dp->fs->n_rootdir)
  7839  0078B2  C072  FFD9         	movff	dir_sdi@dp,fsr2l
  7840  0078B6  C073  FFDA         	movff	dir_sdi@dp+1,fsr2h
  7841  0078BA  EE10 F008          	lfsr	1,8
  7842  0078BE  50DE               	movf	postinc2,w,c
  7843  0078C0  26E1               	addwf	fsr1l,f,c
  7844  0078C2  50DD               	movf	postdec2,w,c
  7845  0078C4  22E2               	addwfc	fsr1h,f,c
  7846  0078C6  CFE6 F076          	movff	postinc1,??_dir_sdi
  7847  0078CA  CFE5 F077          	movff	postdec1,??_dir_sdi+1
  7848  0078CE  5076               	movf	??_dir_sdi,w,c
  7849  0078D0  5C74               	subwf	dir_sdi@idx,w,c
  7850  0078D2  5077               	movf	??_dir_sdi+1,w,c
  7851  0078D4  5875               	subwfb	dir_sdi@idx+1,w,c
  7852  0078D6  B0D8               	btfsc	status,0,c
  7853  0078D8  D0BF               	goto	u9320
  7854                           
  7855                           ; BSR set to: 0
  7856                           ;ff.c: 1142: sect = dp->fs->dirbase;
  7857                           
  7858                           ; BSR set to: 0
  7859                           
  7860                           ; BSR set to: 0
  7861                           
  7862                           ; BSR set to: 0
  7863                           ;ff.c: 1141: return FR_INT_ERR;
  7864  0078DA  C072  FFD9         	movff	dir_sdi@dp,fsr2l
  7865  0078DE  C073  FFDA         	movff	dir_sdi@dp+1,fsr2h
  7866  0078E2  EE10 F026          	lfsr	1,38
  7867  0078E6  50DE               	movf	postinc2,w,c
  7868  0078E8  26E1               	addwf	fsr1l,f,c
  7869  0078EA  50DD               	movf	postdec2,w,c
  7870  0078EC  22E2               	addwfc	fsr1h,f,c
  7871  0078EE  0100               	movlb	0	; () banked
  7872  0078F0  CFE6 F082          	movff	postinc1,dir_sdi@sect
  7873  0078F4  0100               	movlb	0	; () banked
  7874  0078F6  CFE6 F083          	movff	postinc1,dir_sdi@sect+1
  7875  0078FA  0100               	movlb	0	; () banked
  7876  0078FC  CFE6 F084          	movff	postinc1,dir_sdi@sect+2
  7877  007900  0100               	movlb	0	; () banked
  7878  007902  CFE6 F085          	movff	postinc1,dir_sdi@sect+3
  7879                           
  7880                           ;ff.c: 1143: }
  7881  007906  D08F               	goto	l7277
  7882  007908                     l7255:
  7883                           
  7884                           ; BSR set to: 0
  7885                           ;ff.c: 1144: else {
  7886                           ;ff.c: 1145: ic = ((UINT)512) / 32 * dp->fs->csize;
  7887  007908  C072  FFD9         	movff	dir_sdi@dp,fsr2l
  7888  00790C  C073  FFDA         	movff	dir_sdi@dp+1,fsr2h
  7889  007910  EE10 F002          	lfsr	1,2
  7890  007914  50DE               	movf	postinc2,w,c
  7891  007916  26E1               	addwf	fsr1l,f,c
  7892  007918  50DD               	movf	postdec2,w,c
  7893  00791A  22E2               	addwfc	fsr1h,f,c
  7894  00791C  50E7               	movf	indf1,w,c
  7895  00791E  6E76               	movwf	??_dir_sdi& (0+255),c
  7896  007920  5076               	movf	??_dir_sdi,w,c
  7897  007922  0D10               	mullw	16
  7898  007924  CFF3 F080          	movff	prodl,dir_sdi@ic
  7899  007928  CFF4 F081          	movff	prodh,dir_sdi@ic+1
  7900                           
  7901                           ;ff.c: 1146: while (idx >= ic) {
  7902  00792C  D05A               	goto	l431
  7903  00792E                     l7257:
  7904                           
  7905                           ; BSR set to: 0
  7906                           ;ff.c: 1147: clst = get_fat(dp->fs, clst);
  7907  00792E  C072  FFD9         	movff	dir_sdi@dp,fsr2l
  7908  007932  C073  FFDA         	movff	dir_sdi@dp+1,fsr2h
  7909  007936  CFDE F046          	movff	postinc2,get_fat@fs
  7910  00793A  CFDD F047          	movff	postdec2,get_fat@fs+1
  7911  00793E  C086  F048         	movff	dir_sdi@clst,get_fat@clst
  7912  007942  C087  F049         	movff	dir_sdi@clst+1,get_fat@clst+1
  7913  007946  C088  F04A         	movff	dir_sdi@clst+2,get_fat@clst+2
  7914  00794A  C089  F04B         	movff	dir_sdi@clst+3,get_fat@clst+3
  7915  00794E  ECD8  F042         	call	_get_fat	;wreg free
  7916  007952  C046  F086         	movff	?_get_fat,dir_sdi@clst
  7917  007956  C047  F087         	movff	?_get_fat+1,dir_sdi@clst+1
  7918  00795A  C048  F088         	movff	?_get_fat+2,dir_sdi@clst+2
  7919  00795E  C049  F089         	movff	?_get_fat+3,dir_sdi@clst+3
  7920                           
  7921                           ;ff.c: 1148: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  7922  007962  0100               	movlb	0	; () banked
  7923  007964  2986               	incf	dir_sdi@clst& (0+255),w,b
  7924  007966  B4D8               	btfsc	status,2,c
  7925  007968  2987               	incf	(dir_sdi@clst+1)& (0+255),w,b
  7926  00796A  B4D8               	btfsc	status,2,c
  7927  00796C  2988               	incf	(dir_sdi@clst+2)& (0+255),w,b
  7928  00796E  B4D8               	btfsc	status,2,c
  7929  007970  2989               	incf	(dir_sdi@clst+3)& (0+255),w,b
  7930  007972  A4D8               	btfss	status,2,c
  7931  007974  D002               	goto	l7265
  7932                           
  7933                           ; BSR set to: 0
  7934  007976  0E01               	movlw	1
  7935  007978  D0C3               	goto	l426
  7936  00797A                     l7265:
  7937                           
  7938                           ; BSR set to: 0
  7939                           ;ff.c: 1149: if (clst < 2 || clst >= dp->fs->n_fatent)
  7940  00797A  0E02               	movlw	2
  7941  00797C  0100               	movlb	0	; () banked
  7942  00797E  5D86               	subwf	dir_sdi@clst& (0+255),w,b
  7943  007980  0E00               	movlw	0
  7944  007982  0100               	movlb	0	; () banked
  7945  007984  5987               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
  7946  007986  0E00               	movlw	0
  7947  007988  0100               	movlb	0	; () banked
  7948  00798A  5988               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
  7949  00798C  0E00               	movlw	0
  7950  00798E  0100               	movlb	0	; () banked
  7951  007990  5989               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
  7952  007992  A0D8               	btfss	status,0,c
  7953  007994  D061               	goto	u9320
  7954                           
  7955                           ; BSR set to: 0
  7956  007996  C072  FFD9         	movff	dir_sdi@dp,fsr2l
  7957  00799A  C073  FFDA         	movff	dir_sdi@dp+1,fsr2h
  7958  00799E  EE10 F016          	lfsr	1,22
  7959  0079A2  50DE               	movf	postinc2,w,c
  7960  0079A4  26E1               	addwf	fsr1l,f,c
  7961  0079A6  50DD               	movf	postdec2,w,c
  7962  0079A8  22E2               	addwfc	fsr1h,f,c
  7963  0079AA  CFE6 F076          	movff	postinc1,??_dir_sdi
  7964  0079AE  CFE6 F077          	movff	postinc1,??_dir_sdi+1
  7965  0079B2  CFE6 F078          	movff	postinc1,??_dir_sdi+2
  7966  0079B6  CFE6 F079          	movff	postinc1,??_dir_sdi+3
  7967  0079BA  5076               	movf	??_dir_sdi,w,c
  7968  0079BC  0100               	movlb	0	; () banked
  7969  0079BE  5D86               	subwf	dir_sdi@clst& (0+255),w,b
  7970  0079C0  5077               	movf	??_dir_sdi+1,w,c
  7971  0079C2  0100               	movlb	0	; () banked
  7972  0079C4  5987               	subwfb	(dir_sdi@clst+1)& (0+255),w,b
  7973  0079C6  5078               	movf	??_dir_sdi+2,w,c
  7974  0079C8  0100               	movlb	0	; () banked
  7975  0079CA  5988               	subwfb	(dir_sdi@clst+2)& (0+255),w,b
  7976  0079CC  5079               	movf	??_dir_sdi+3,w,c
  7977  0079CE  0100               	movlb	0	; () banked
  7978  0079D0  5989               	subwfb	(dir_sdi@clst+3)& (0+255),w,b
  7979  0079D2  B0D8               	btfsc	status,0,c
  7980                           
  7981                           ; BSR set to: 0
  7982  0079D4  D041               	goto	u9320
  7983                           
  7984                           ; BSR set to: 0
  7985                           ;ff.c: 1151: idx -= ic;
  7986                           
  7987                           ; BSR set to: 0
  7988                           
  7989                           ; BSR set to: 0
  7990                           
  7991                           ; BSR set to: 0
  7992                           ;ff.c: 1150: return FR_INT_ERR;
  7993  0079D6  0100               	movlb	0	; () banked
  7994  0079D8  5180               	movf	dir_sdi@ic& (0+255),w,b
  7995  0079DA  5E74               	subwf	dir_sdi@idx,f,c
  7996  0079DC  0100               	movlb	0	; () banked
  7997  0079DE  5181               	movf	(dir_sdi@ic+1)& (0+255),w,b
  7998  0079E0  5A75               	subwfb	dir_sdi@idx+1,f,c
  7999  0079E2                     l431:
  8000                           
  8001                           ; BSR set to: 0
  8002  0079E2  0100               	movlb	0	; () banked
  8003  0079E4  5180               	movf	dir_sdi@ic& (0+255),w,b
  8004  0079E6  5C74               	subwf	dir_sdi@idx,w,c
  8005  0079E8  0100               	movlb	0	; () banked
  8006  0079EA  5181               	movf	(dir_sdi@ic+1)& (0+255),w,b
  8007  0079EC  5875               	subwfb	dir_sdi@idx+1,w,c
  8008  0079EE  B0D8               	btfsc	status,0,c
  8009  0079F0  D79E               	goto	l7257
  8010                           
  8011                           ; BSR set to: 0
  8012                           ;ff.c: 1152: }
  8013                           ;ff.c: 1153: sect = clust2sect(dp->fs, clst);
  8014                           
  8015                           ; BSR set to: 0
  8016  0079F2  C072  FFD9         	movff	dir_sdi@dp,fsr2l
  8017  0079F6  C073  FFDA         	movff	dir_sdi@dp+1,fsr2h
  8018  0079FA  CFDE F00D          	movff	postinc2,clust2sect@fs
  8019  0079FE  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  8020  007A02  C086  F00F         	movff	dir_sdi@clst,clust2sect@clst
  8021  007A06  C087  F010         	movff	dir_sdi@clst+1,clust2sect@clst+1
  8022  007A0A  C088  F011         	movff	dir_sdi@clst+2,clust2sect@clst+2
  8023  007A0E  C089  F012         	movff	dir_sdi@clst+3,clust2sect@clst+3
  8024  007A12  EC7E  F02D         	call	_clust2sect	;wreg free
  8025  007A16  C00D  F082         	movff	?_clust2sect,dir_sdi@sect
  8026  007A1A  C00E  F083         	movff	?_clust2sect+1,dir_sdi@sect+1
  8027  007A1E  C00F  F084         	movff	?_clust2sect+2,dir_sdi@sect+2
  8028  007A22  C010  F085         	movff	?_clust2sect+3,dir_sdi@sect+3
  8029  007A26                     l7277:
  8030                           
  8031                           ;ff.c: 1154: }
  8032                           ;ff.c: 1155: dp->clust = clst;
  8033  007A26  EE20 F00A          	lfsr	2,10
  8034  007A2A  5072               	movf	dir_sdi@dp,w,c
  8035  007A2C  26D9               	addwf	fsr2l,f,c
  8036  007A2E  5073               	movf	dir_sdi@dp+1,w,c
  8037  007A30  22DA               	addwfc	fsr2h,f,c
  8038  007A32  0100               	movlb	0	; () banked
  8039  007A34  C086  FFDE         	movff	dir_sdi@clst,postinc2
  8040  007A38  0100               	movlb	0	; () banked
  8041  007A3A  C087  FFDE         	movff	dir_sdi@clst+1,postinc2
  8042  007A3E  0100               	movlb	0	; () banked
  8043  007A40  C088  FFDE         	movff	dir_sdi@clst+2,postinc2
  8044  007A44  0100               	movlb	0	; () banked
  8045  007A46  C089  FFDE         	movff	dir_sdi@clst+3,postinc2
  8046                           
  8047                           ; BSR set to: 0
  8048                           ;ff.c: 1156: if (!sect) return FR_INT_ERR;
  8049  007A4A  0100               	movlb	0	; () banked
  8050  007A4C  5185               	movf	(dir_sdi@sect+3)& (0+255),w,b
  8051  007A4E  1182               	iorwf	dir_sdi@sect& (0+255),w,b
  8052  007A50  1183               	iorwf	(dir_sdi@sect+1)& (0+255),w,b
  8053  007A52  1184               	iorwf	(dir_sdi@sect+2)& (0+255),w,b
  8054  007A54  A4D8               	btfss	status,2,c
  8055  007A56  D002               	goto	l7285
  8056  007A58                     u9320:
  8057                           
  8058                           ; BSR set to: 0
  8059  007A58  0E02               	movlw	2
  8060  007A5A  D052               	goto	l426
  8061  007A5C                     l7285:
  8062                           
  8063                           ; BSR set to: 0
  8064                           ;ff.c: 1157: dp->sect = sect + idx / (((UINT)512) / 32);
  8065  007A5C  C074  F076         	movff	dir_sdi@idx,??_dir_sdi
  8066  007A60  C075  F077         	movff	dir_sdi@idx+1,??_dir_sdi+1
  8067  007A64  0E04               	movlw	4
  8068  007A66  6E78               	movwf	(??_dir_sdi+2)& (0+255),c
  8069  007A68                     u9335:
  8070  007A68  90D8               	bcf	status,0,c
  8071  007A6A  3277               	rrcf	??_dir_sdi+1,f,c
  8072  007A6C  3276               	rrcf	??_dir_sdi,f,c
  8073  007A6E  2E78               	decfsz	(??_dir_sdi+2)& (0+255),f,c
  8074  007A70  D7FB               	goto	u9335
  8075  007A72  5076               	movf	??_dir_sdi,w,c
  8076  007A74  0100               	movlb	0	; () banked
  8077  007A76  2582               	addwf	dir_sdi@sect& (0+255),w,b
  8078  007A78  6E79               	movwf	(??_dir_sdi+3)& (0+255),c
  8079  007A7A  5077               	movf	??_dir_sdi+1,w,c
  8080  007A7C  0100               	movlb	0	; () banked
  8081  007A7E  2183               	addwfc	(dir_sdi@sect+1)& (0+255),w,b
  8082  007A80  6E7A               	movwf	(??_dir_sdi+4)& (0+255),c
  8083  007A82  0E00               	movlw	0
  8084  007A84  0100               	movlb	0	; () banked
  8085  007A86  2184               	addwfc	(dir_sdi@sect+2)& (0+255),w,b
  8086  007A88  6E7B               	movwf	(??_dir_sdi+5)& (0+255),c
  8087  007A8A  0E00               	movlw	0
  8088  007A8C  0100               	movlb	0	; () banked
  8089  007A8E  2185               	addwfc	(dir_sdi@sect+3)& (0+255),w,b
  8090  007A90  6E7C               	movwf	(??_dir_sdi+6)& (0+255),c
  8091  007A92  EE20 F00E          	lfsr	2,14
  8092  007A96  5072               	movf	dir_sdi@dp,w,c
  8093  007A98  26D9               	addwf	fsr2l,f,c
  8094  007A9A  5073               	movf	dir_sdi@dp+1,w,c
  8095  007A9C  22DA               	addwfc	fsr2h,f,c
  8096  007A9E  C079  FFDE         	movff	??_dir_sdi+3,postinc2
  8097  007AA2  C07A  FFDE         	movff	??_dir_sdi+4,postinc2
  8098  007AA6  C07B  FFDE         	movff	??_dir_sdi+5,postinc2
  8099  007AAA  C07C  FFDD         	movff	??_dir_sdi+6,postdec2
  8100  007AAE  06D9               	decf	fsr2l,f,c
  8101  007AB0  06D9               	decf	fsr2l,f,c
  8102                           
  8103                           ;ff.c: 1158: dp->dir = dp->fs->win + (idx % (((UINT)512) / 32)) * 32;
  8104  007AB2  0E0F               	movlw	15
  8105  007AB4  1474               	andwf	dir_sdi@idx,w,c
  8106  007AB6  6E76               	movwf	??_dir_sdi& (0+255),c
  8107  007AB8  0E00               	movlw	0
  8108  007ABA  1475               	andwf	dir_sdi@idx+1,w,c
  8109  007ABC  6E77               	movwf	(??_dir_sdi+1)& (0+255),c
  8110  007ABE  0E05               	movlw	5
  8111  007AC0                     u9345:
  8112  007AC0  90D8               	bcf	status,0,c
  8113  007AC2  3676               	rlcf	??_dir_sdi,f,c
  8114  007AC4  3677               	rlcf	??_dir_sdi+1,f,c
  8115  007AC6  2EE8               	decfsz	wreg,f,c
  8116  007AC8  D7FB               	goto	u9345
  8117  007ACA  0E32               	movlw	50
  8118  007ACC  2676               	addwf	??_dir_sdi,f,c
  8119  007ACE  0E00               	movlw	0
  8120  007AD0  2277               	addwfc	??_dir_sdi+1,f,c
  8121  007AD2  C072  FFD9         	movff	dir_sdi@dp,fsr2l
  8122  007AD6  C073  FFDA         	movff	dir_sdi@dp+1,fsr2h
  8123  007ADA  CFDE F078          	movff	postinc2,??_dir_sdi+2
  8124  007ADE  CFDD F079          	movff	postdec2,??_dir_sdi+3
  8125  007AE2  5076               	movf	??_dir_sdi,w,c
  8126  007AE4  2678               	addwf	??_dir_sdi+2,f,c
  8127  007AE6  5077               	movf	??_dir_sdi+1,w,c
  8128  007AE8  2279               	addwfc	??_dir_sdi+3,f,c
  8129  007AEA  EE20 F012          	lfsr	2,18
  8130  007AEE  5072               	movf	dir_sdi@dp,w,c
  8131  007AF0  26D9               	addwf	fsr2l,f,c
  8132  007AF2  5073               	movf	dir_sdi@dp+1,w,c
  8133  007AF4  22DA               	addwfc	fsr2h,f,c
  8134  007AF6  C078  FFDE         	movff	??_dir_sdi+2,postinc2
  8135  007AFA  C079  FFDD         	movff	??_dir_sdi+3,postdec2
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;ff.c: 1160: return FR_OK;
  8139  007AFE  0E00               	movlw	0
  8140  007B00                     l426:
  8141                           
  8142                           ; BSR set to: 0
  8143  007B00  0012               	return	
  8144  007B02                     __end_of_dir_sdi:
  8145                           	opt stack 0
  8146                           tblptru	equ	0xFF8
  8147                           tblptrh	equ	0xFF7
  8148                           tblptrl	equ	0xFF6
  8149                           tablat	equ	0xFF5
  8150                           prodh	equ	0xFF4
  8151                           prodl	equ	0xFF3
  8152                           indf0	equ	0xFEF
  8153                           postinc0	equ	0xFEE
  8154                           fsr0h	equ	0xFEA
  8155                           fsr0l	equ	0xFE9
  8156                           wreg	equ	0xFE8
  8157                           indf1	equ	0xFE7
  8158                           postinc1	equ	0xFE6
  8159                           postdec1	equ	0xFE5
  8160                           fsr1h	equ	0xFE2
  8161                           fsr1l	equ	0xFE1
  8162                           indf2	equ	0xFDF
  8163                           postinc2	equ	0xFDE
  8164                           postdec2	equ	0xFDD
  8165                           plusw2	equ	0xFDB
  8166                           fsr2h	equ	0xFDA
  8167                           fsr2l	equ	0xFD9
  8168                           status	equ	0xFD8
  8169                           
  8170 ;; *************** function _dir_next *****************
  8171 ;; Defined at:
  8172 ;;		line 1171 in file "ff.c"
  8173 ;; Parameters:    Size  Location     Type
  8174 ;;  dp              2   17[BANK0 ] PTR struct .
  8175 ;;		 -> f_setlabel@dj(25), f_getlabel@dj(25), f_utime@dj(25), f_rename@djn(25), 
  8176 ;;		 -> f_rename@djo(25), f_chmod@dj(25), f_mkdir@dj(25), f_unlink@sdj(25), 
  8177 ;;		 -> f_unlink@dj(25), f_stat@dj(25), f_getcwd@dj(25), f_chdir@dj(25), 
  8178 ;;		 -> f_open@dj(25), 
  8179 ;;  stretch         2   19[BANK0 ] int 
  8180 ;; Auto vars:     Size  Location     Type
  8181 ;;  clst            4   32[BANK0 ] unsigned long 
  8182 ;;  i               2   30[BANK0 ] unsigned int 
  8183 ;;  c               2   28[BANK0 ] unsigned int 
  8184 ;; Return value:  Size  Location     Type
  8185 ;;                  1    wreg      enum E67
  8186 ;; Registers used:
  8187 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8188 ;; Tracked objects:
  8189 ;;		On entry : 0/0
  8190 ;;		On exit  : 0/0
  8191 ;;		Unchanged: 0/0
  8192 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8193 ;;      Params:         0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8194 ;;      Locals:         0       8       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8195 ;;      Temps:          0       7       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8196 ;;      Totals:         0      19       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8197 ;;Total ram usage:       19 bytes
  8198 ;; Hardware stack levels used:    1
  8199 ;; Hardware stack levels required when called:    9
  8200 ;; This function calls:
  8201 ;;		_clust2sect
  8202 ;;		_create_chain
  8203 ;;		_get_fat
  8204 ;;		_mem_set
  8205 ;;		_sync_window
  8206 ;; This function is called by:
  8207 ;;		_dir_alloc
  8208 ;;		_dir_find
  8209 ;;		_dir_read
  8210 ;;		_f_getcwd
  8211 ;;		_f_readdir
  8212 ;; This function uses a non-reentrant model
  8213 ;;
  8214                           
  8215                           	psect	text16
  8216  008EF4                     __ptext16:
  8217                           	opt stack 0
  8218  008EF4                     _dir_next:
  8219                           	opt stack 18
  8220                           
  8221                           ;ff.c: 1176: DWORD clst;
  8222                           ;ff.c: 1177: UINT i;
  8223                           ;ff.c: 1179: UINT c;
  8224                           ;ff.c: 1183: i = dp->index + 1;
  8225                           
  8226                           ; BSR set to: 0
  8227                           ;incstack = 0
  8228  008EF4  0100               	movlb	0	; () banked
  8229  008EF6  EE20 F004          	lfsr	2,4
  8230  008EFA  0100               	movlb	0	; () banked
  8231  008EFC  5191               	movf	dir_next@dp& (0+255),w,b
  8232  008EFE  26D9               	addwf	fsr2l,f,c
  8233  008F00  0100               	movlb	0	; () banked
  8234  008F02  5192               	movf	(dir_next@dp+1)& (0+255),w,b
  8235  008F04  22DA               	addwfc	fsr2h,f,c
  8236  008F06  CFDE F095          	movff	postinc2,??_dir_next
  8237  008F0A  CFDD F096          	movff	postdec2,??_dir_next+1
  8238  008F0E  0E01               	movlw	1
  8239  008F10  0100               	movlb	0	; () banked
  8240  008F12  2595               	addwf	??_dir_next& (0+255),w,b
  8241  008F14  0100               	movlb	0	; () banked
  8242  008F16  6F9E               	movwf	dir_next@i& (0+255),b
  8243  008F18  0E00               	movlw	0
  8244  008F1A  0100               	movlb	0	; () banked
  8245  008F1C  2196               	addwfc	(??_dir_next+1)& (0+255),w,b
  8246  008F1E  0100               	movlb	0	; () banked
  8247  008F20  6F9F               	movwf	(dir_next@i+1)& (0+255),b
  8248                           
  8249                           ; BSR set to: 0
  8250                           ;ff.c: 1184: if (!(i & 0xFFFF) || !dp->sect)
  8251  008F22  0100               	movlb	0	; () banked
  8252  008F24  519F               	movf	(dir_next@i+1)& (0+255),w,b
  8253  008F26  119E               	iorwf	dir_next@i& (0+255),w,b
  8254  008F28  B4D8               	btfsc	status,2,c
  8255  008F2A  D10C               	goto	u9450
  8256                           
  8257                           ; BSR set to: 0
  8258  008F2C  0100               	movlb	0	; () banked
  8259  008F2E  EE20 F00E          	lfsr	2,14
  8260  008F32  0100               	movlb	0	; () banked
  8261  008F34  5191               	movf	dir_next@dp& (0+255),w,b
  8262  008F36  26D9               	addwf	fsr2l,f,c
  8263  008F38  0100               	movlb	0	; () banked
  8264  008F3A  5192               	movf	(dir_next@dp+1)& (0+255),w,b
  8265  008F3C  22DA               	addwfc	fsr2h,f,c
  8266  008F3E  CFDE F095          	movff	postinc2,??_dir_next
  8267  008F42  CFDE F096          	movff	postinc2,??_dir_next+1
  8268  008F46  CFDE F097          	movff	postinc2,??_dir_next+2
  8269  008F4A  CFDE F098          	movff	postinc2,??_dir_next+3
  8270  008F4E  0100               	movlb	0	; () banked
  8271  008F50  5198               	movf	(??_dir_next+3)& (0+255),w,b
  8272  008F52  1195               	iorwf	??_dir_next& (0+255),w,b
  8273  008F54  1196               	iorwf	(??_dir_next+1)& (0+255),w,b
  8274  008F56  1197               	iorwf	(??_dir_next+2)& (0+255),w,b
  8275  008F58  B4D8               	btfsc	status,2,c
  8276                           
  8277                           ; BSR set to: 0
  8278  008F5A  D0F4               	goto	u9450
  8279                           
  8280                           ; BSR set to: 0
  8281                           ;ff.c: 1187: if (!(i % (((UINT)512) / 32))) {
  8282                           
  8283                           ; BSR set to: 0
  8284                           
  8285                           ; BSR set to: 0
  8286                           
  8287                           ; BSR set to: 0
  8288                           ;ff.c: 1185: return FR_NO_FILE;
  8289  008F5C  0E0F               	movlw	15
  8290  008F5E  0100               	movlb	0	; () banked
  8291  008F60  159E               	andwf	dir_next@i& (0+255),w,b
  8292  008F62  0100               	movlb	0	; () banked
  8293  008F64  6F95               	movwf	??_dir_next& (0+255),b
  8294  008F66  0E00               	movlw	0
  8295  008F68  0100               	movlb	0	; () banked
  8296  008F6A  159F               	andwf	(dir_next@i+1)& (0+255),w,b
  8297  008F6C  0100               	movlb	0	; () banked
  8298  008F6E  6F96               	movwf	(??_dir_next+1)& (0+255),b
  8299  008F70  0100               	movlb	0	; () banked
  8300  008F72  5196               	movf	(??_dir_next+1)& (0+255),w,b
  8301  008F74  1195               	iorwf	??_dir_next& (0+255),w,b
  8302  008F76  A4D8               	btfss	status,2,c
  8303  008F78  D21E               	goto	l7387
  8304                           
  8305                           ; BSR set to: 0
  8306                           ;ff.c: 1188: dp->sect++;
  8307  008F7A  0100               	movlb	0	; () banked
  8308  008F7C  EE20 F00E          	lfsr	2,14
  8309  008F80  0100               	movlb	0	; () banked
  8310  008F82  5191               	movf	dir_next@dp& (0+255),w,b
  8311  008F84  26D9               	addwf	fsr2l,f,c
  8312  008F86  0100               	movlb	0	; () banked
  8313  008F88  5192               	movf	(dir_next@dp+1)& (0+255),w,b
  8314  008F8A  22DA               	addwfc	fsr2h,f,c
  8315  008F8C  2ADE               	incf	postinc2,f,c
  8316  008F8E  0E00               	movlw	0
  8317  008F90  22DE               	addwfc	postinc2,f,c
  8318  008F92  22DE               	addwfc	postinc2,f,c
  8319  008F94  22DD               	addwfc	postdec2,f,c
  8320                           
  8321                           ;ff.c: 1190: if (!dp->clust) {
  8322  008F96  0100               	movlb	0	; () banked
  8323  008F98  EE20 F00A          	lfsr	2,10
  8324  008F9C  0100               	movlb	0	; () banked
  8325  008F9E  5191               	movf	dir_next@dp& (0+255),w,b
  8326  008FA0  26D9               	addwf	fsr2l,f,c
  8327  008FA2  0100               	movlb	0	; () banked
  8328  008FA4  5192               	movf	(dir_next@dp+1)& (0+255),w,b
  8329  008FA6  22DA               	addwfc	fsr2h,f,c
  8330  008FA8  CFDE F095          	movff	postinc2,??_dir_next
  8331  008FAC  CFDE F096          	movff	postinc2,??_dir_next+1
  8332  008FB0  CFDE F097          	movff	postinc2,??_dir_next+2
  8333  008FB4  CFDE F098          	movff	postinc2,??_dir_next+3
  8334  008FB8  0100               	movlb	0	; () banked
  8335  008FBA  5198               	movf	(??_dir_next+3)& (0+255),w,b
  8336  008FBC  1195               	iorwf	??_dir_next& (0+255),w,b
  8337  008FBE  1196               	iorwf	(??_dir_next+1)& (0+255),w,b
  8338  008FC0  1197               	iorwf	(??_dir_next+2)& (0+255),w,b
  8339  008FC2  A4D8               	btfss	status,2,c
  8340  008FC4  D019               	goto	l7311
  8341                           
  8342                           ; BSR set to: 0
  8343                           ;ff.c: 1191: if (i >= dp->fs->n_rootdir)
  8344  008FC6  C091  FFD9         	movff	dir_next@dp,fsr2l
  8345  008FCA  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8346  008FCE  EE10 F008          	lfsr	1,8
  8347  008FD2  50DE               	movf	postinc2,w,c
  8348  008FD4  26E1               	addwf	fsr1l,f,c
  8349  008FD6  50DD               	movf	postdec2,w,c
  8350  008FD8  22E2               	addwfc	fsr1h,f,c
  8351  008FDA  CFE6 F095          	movff	postinc1,??_dir_next
  8352  008FDE  CFE5 F096          	movff	postdec1,??_dir_next+1
  8353  008FE2  0100               	movlb	0	; () banked
  8354  008FE4  5195               	movf	??_dir_next& (0+255),w,b
  8355  008FE6  0100               	movlb	0	; () banked
  8356  008FE8  5D9E               	subwf	dir_next@i& (0+255),w,b
  8357  008FEA  0100               	movlb	0	; () banked
  8358  008FEC  5196               	movf	(??_dir_next+1)& (0+255),w,b
  8359  008FEE  0100               	movlb	0	; () banked
  8360  008FF0  599F               	subwfb	(dir_next@i+1)& (0+255),w,b
  8361  008FF2  A0D8               	btfss	status,0,c
  8362  008FF4  D1E0               	goto	l7387
  8363  008FF6  D0A6               	goto	u9450
  8364  008FF8                     l7311:
  8365                           
  8366                           ; BSR set to: 0
  8367                           ;ff.c: 1194: else {
  8368                           ;ff.c: 1195: if (((i / (((UINT)512) / 32)) & (dp->fs->csize - 1)) == 0) {
  8369  008FF8  0100               	movlb	0	; () banked
  8370  008FFA  C09E  F095         	movff	dir_next@i,??_dir_next
  8371  008FFE  0100               	movlb	0	; () banked
  8372  009000  C09F  F096         	movff	dir_next@i+1,??_dir_next+1
  8373  009004  0E04               	movlw	4
  8374  009006  0100               	movlb	0	; () banked
  8375  009008  6F97               	movwf	(??_dir_next+2)& (0+255),b
  8376  00900A                     u9405:
  8377  00900A  0100               	movlb	0	; () banked
  8378  00900C  90D8               	bcf	status,0,c
  8379  00900E  3396               	rrcf	(??_dir_next+1)& (0+255),f,b
  8380  009010  3395               	rrcf	??_dir_next& (0+255),f,b
  8381  009012  0100               	movlb	0	; () banked
  8382  009014  2F97               	decfsz	(??_dir_next+2)& (0+255),f,b
  8383  009016  D7F9               	goto	u9405
  8384  009018  0EFF               	movlw	255
  8385  00901A  0100               	movlb	0	; () banked
  8386  00901C  6F98               	movwf	(??_dir_next+3)& (0+255),b
  8387  00901E  0EFF               	movlw	255
  8388  009020  6F99               	movwf	(??_dir_next+4)& (0+255),b
  8389  009022  C091  FFD9         	movff	dir_next@dp,fsr2l
  8390  009026  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8391  00902A  EE10 F002          	lfsr	1,2
  8392  00902E  50DE               	movf	postinc2,w,c
  8393  009030  26E1               	addwf	fsr1l,f,c
  8394  009032  50DD               	movf	postdec2,w,c
  8395  009034  22E2               	addwfc	fsr1h,f,c
  8396  009036  50E7               	movf	indf1,w,c
  8397  009038  0100               	movlb	0	; () banked
  8398  00903A  6F9A               	movwf	(??_dir_next+5)& (0+255),b
  8399  00903C  6B9B               	clrf	(??_dir_next+6)& (0+255),b
  8400  00903E  0100               	movlb	0	; () banked
  8401  009040  5198               	movf	(??_dir_next+3)& (0+255),w,b
  8402  009042  0100               	movlb	0	; () banked
  8403  009044  279A               	addwf	(??_dir_next+5)& (0+255),f,b
  8404  009046  0100               	movlb	0	; () banked
  8405  009048  5199               	movf	(??_dir_next+4)& (0+255),w,b
  8406  00904A  0100               	movlb	0	; () banked
  8407  00904C  239B               	addwfc	(??_dir_next+6)& (0+255),f,b
  8408  00904E  0100               	movlb	0	; () banked
  8409  009050  5195               	movf	??_dir_next& (0+255),w,b
  8410  009052  0100               	movlb	0	; () banked
  8411  009054  179A               	andwf	(??_dir_next+5)& (0+255),f,b
  8412  009056  0100               	movlb	0	; () banked
  8413  009058  5196               	movf	(??_dir_next+1)& (0+255),w,b
  8414  00905A  0100               	movlb	0	; () banked
  8415  00905C  179B               	andwf	(??_dir_next+6)& (0+255),f,b
  8416  00905E  0100               	movlb	0	; () banked
  8417  009060  519B               	movf	(??_dir_next+6)& (0+255),w,b
  8418  009062  119A               	iorwf	(??_dir_next+5)& (0+255),w,b
  8419  009064  A4D8               	btfss	status,2,c
  8420  009066  D1A7               	goto	l7387
  8421                           
  8422                           ; BSR set to: 0
  8423                           ;ff.c: 1196: clst = get_fat(dp->fs, dp->clust);
  8424  009068  C091  FFD9         	movff	dir_next@dp,fsr2l
  8425  00906C  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8426  009070  CFDE F046          	movff	postinc2,get_fat@fs
  8427  009074  CFDD F047          	movff	postdec2,get_fat@fs+1
  8428  009078  0100               	movlb	0	; () banked
  8429  00907A  EE20 F00A          	lfsr	2,10
  8430  00907E  0100               	movlb	0	; () banked
  8431  009080  5191               	movf	dir_next@dp& (0+255),w,b
  8432  009082  26D9               	addwf	fsr2l,f,c
  8433  009084  0100               	movlb	0	; () banked
  8434  009086  5192               	movf	(dir_next@dp+1)& (0+255),w,b
  8435  009088  22DA               	addwfc	fsr2h,f,c
  8436  00908A  CFDE F048          	movff	postinc2,get_fat@clst
  8437  00908E  CFDE F049          	movff	postinc2,get_fat@clst+1
  8438  009092  CFDE F04A          	movff	postinc2,get_fat@clst+2
  8439  009096  CFDE F04B          	movff	postinc2,get_fat@clst+3
  8440  00909A  ECD8  F042         	call	_get_fat	;wreg free
  8441  00909E  C046  F0A0         	movff	?_get_fat,dir_next@clst
  8442  0090A2  C047  F0A1         	movff	?_get_fat+1,dir_next@clst+1
  8443  0090A6  C048  F0A2         	movff	?_get_fat+2,dir_next@clst+2
  8444  0090AA  C049  F0A3         	movff	?_get_fat+3,dir_next@clst+3
  8445                           
  8446                           ;ff.c: 1197: if (clst <= 1) return FR_INT_ERR;
  8447  0090AE  0E02               	movlw	2
  8448  0090B0  0100               	movlb	0	; () banked
  8449  0090B2  6F95               	movwf	??_dir_next& (0+255),b
  8450  0090B4  6B96               	clrf	(??_dir_next+1)& (0+255),b
  8451  0090B6  6B97               	clrf	(??_dir_next+2)& (0+255),b
  8452  0090B8  6B98               	clrf	(??_dir_next+3)& (0+255),b
  8453  0090BA  0100               	movlb	0	; () banked
  8454  0090BC  5195               	movf	??_dir_next& (0+255),w,b
  8455  0090BE  0100               	movlb	0	; () banked
  8456  0090C0  5DA0               	subwf	dir_next@clst& (0+255),w,b
  8457  0090C2  0100               	movlb	0	; () banked
  8458  0090C4  5196               	movf	(??_dir_next+1)& (0+255),w,b
  8459  0090C6  0100               	movlb	0	; () banked
  8460  0090C8  59A1               	subwfb	(dir_next@clst+1)& (0+255),w,b
  8461  0090CA  0100               	movlb	0	; () banked
  8462  0090CC  5197               	movf	(??_dir_next+2)& (0+255),w,b
  8463  0090CE  0100               	movlb	0	; () banked
  8464  0090D0  59A2               	subwfb	(dir_next@clst+2)& (0+255),w,b
  8465  0090D2  0100               	movlb	0	; () banked
  8466  0090D4  5198               	movf	(??_dir_next+3)& (0+255),w,b
  8467  0090D6  0100               	movlb	0	; () banked
  8468  0090D8  59A3               	subwfb	(dir_next@clst+3)& (0+255),w,b
  8469  0090DA  A0D8               	btfss	status,0,c
  8470  0090DC  D068               	goto	u9470
  8471                           
  8472                           ; BSR set to: 0
  8473                           ;ff.c: 1198: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  8474                           
  8475                           ; BSR set to: 0
  8476                           
  8477                           ; BSR set to: 0
  8478                           
  8479                           ; BSR set to: 0
  8480  0090DE  0100               	movlb	0	; () banked
  8481  0090E0  29A0               	incf	dir_next@clst& (0+255),w,b
  8482  0090E2  B4D8               	btfsc	status,2,c
  8483  0090E4  29A1               	incf	(dir_next@clst+1)& (0+255),w,b
  8484  0090E6  B4D8               	btfsc	status,2,c
  8485  0090E8  29A2               	incf	(dir_next@clst+2)& (0+255),w,b
  8486  0090EA  B4D8               	btfsc	status,2,c
  8487  0090EC  29A3               	incf	(dir_next@clst+3)& (0+255),w,b
  8488  0090EE  B4D8               	btfsc	status,2,c
  8489  0090F0  D0DF               	goto	u9500
  8490                           
  8491                           ; BSR set to: 0
  8492                           ;ff.c: 1199: if (clst >= dp->fs->n_fatent) {
  8493                           
  8494                           ; BSR set to: 0
  8495                           
  8496                           ; BSR set to: 0
  8497                           
  8498                           ; BSR set to: 0
  8499  0090F2  C091  FFD9         	movff	dir_next@dp,fsr2l
  8500  0090F6  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8501  0090FA  EE10 F016          	lfsr	1,22
  8502  0090FE  50DE               	movf	postinc2,w,c
  8503  009100  26E1               	addwf	fsr1l,f,c
  8504  009102  50DD               	movf	postdec2,w,c
  8505  009104  22E2               	addwfc	fsr1h,f,c
  8506  009106  CFE6 F095          	movff	postinc1,??_dir_next
  8507  00910A  CFE6 F096          	movff	postinc1,??_dir_next+1
  8508  00910E  CFE6 F097          	movff	postinc1,??_dir_next+2
  8509  009112  CFE6 F098          	movff	postinc1,??_dir_next+3
  8510  009116  0100               	movlb	0	; () banked
  8511  009118  5195               	movf	??_dir_next& (0+255),w,b
  8512  00911A  0100               	movlb	0	; () banked
  8513  00911C  5DA0               	subwf	dir_next@clst& (0+255),w,b
  8514  00911E  0100               	movlb	0	; () banked
  8515  009120  5196               	movf	(??_dir_next+1)& (0+255),w,b
  8516  009122  0100               	movlb	0	; () banked
  8517  009124  59A1               	subwfb	(dir_next@clst+1)& (0+255),w,b
  8518  009126  0100               	movlb	0	; () banked
  8519  009128  5197               	movf	(??_dir_next+2)& (0+255),w,b
  8520  00912A  0100               	movlb	0	; () banked
  8521  00912C  59A2               	subwfb	(dir_next@clst+2)& (0+255),w,b
  8522  00912E  0100               	movlb	0	; () banked
  8523  009130  5198               	movf	(??_dir_next+3)& (0+255),w,b
  8524  009132  0100               	movlb	0	; () banked
  8525  009134  59A3               	subwfb	(dir_next@clst+3)& (0+255),w,b
  8526  009136  A0D8               	btfss	status,0,c
  8527  009138  D0FC               	goto	l7383
  8528                           
  8529                           ; BSR set to: 0
  8530                           ;ff.c: 1201: if (!stretch) return FR_NO_FILE;
  8531  00913A  0100               	movlb	0	; () banked
  8532  00913C  5194               	movf	(dir_next@stretch+1)& (0+255),w,b
  8533  00913E  1193               	iorwf	dir_next@stretch& (0+255),w,b
  8534  009140  A4D8               	btfss	status,2,c
  8535  009142  D002               	goto	l7335
  8536  009144                     u9450:
  8537                           
  8538                           ; BSR set to: 0
  8539  009144  0E04               	movlw	4
  8540  009146  D17A               	goto	l444
  8541  009148                     l7335:
  8542                           
  8543                           ; BSR set to: 0
  8544                           ;ff.c: 1202: clst = create_chain(dp->fs, dp->clust);
  8545  009148  C091  FFD9         	movff	dir_next@dp,fsr2l
  8546  00914C  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8547  009150  CFDE F077          	movff	postinc2,create_chain@fs
  8548  009154  CFDD F078          	movff	postdec2,create_chain@fs+1
  8549  009158  0100               	movlb	0	; () banked
  8550  00915A  EE20 F00A          	lfsr	2,10
  8551  00915E  0100               	movlb	0	; () banked
  8552  009160  5191               	movf	dir_next@dp& (0+255),w,b
  8553  009162  26D9               	addwf	fsr2l,f,c
  8554  009164  0100               	movlb	0	; () banked
  8555  009166  5192               	movf	(dir_next@dp+1)& (0+255),w,b
  8556  009168  22DA               	addwfc	fsr2h,f,c
  8557  00916A  CFDE F079          	movff	postinc2,create_chain@clst
  8558  00916E  CFDE F07A          	movff	postinc2,create_chain@clst+1
  8559  009172  CFDE F07B          	movff	postinc2,create_chain@clst+2
  8560  009176  CFDE F07C          	movff	postinc2,create_chain@clst+3
  8561  00917A  ECE7  F040         	call	_create_chain	;wreg free
  8562  00917E  C077  F0A0         	movff	?_create_chain,dir_next@clst
  8563  009182  C078  F0A1         	movff	?_create_chain+1,dir_next@clst+1
  8564  009186  C079  F0A2         	movff	?_create_chain+2,dir_next@clst+2
  8565  00918A  C07A  F0A3         	movff	?_create_chain+3,dir_next@clst+3
  8566                           
  8567                           ;ff.c: 1203: if (clst == 0) return FR_DENIED;
  8568  00918E  0100               	movlb	0	; () banked
  8569  009190  51A3               	movf	(dir_next@clst+3)& (0+255),w,b
  8570  009192  11A0               	iorwf	dir_next@clst& (0+255),w,b
  8571  009194  11A1               	iorwf	(dir_next@clst+1)& (0+255),w,b
  8572  009196  11A2               	iorwf	(dir_next@clst+2)& (0+255),w,b
  8573  009198  A4D8               	btfss	status,2,c
  8574  00919A  D002               	goto	l7343
  8575                           
  8576                           ; BSR set to: 0
  8577  00919C  0E07               	movlw	7
  8578  00919E  D14E               	goto	l444
  8579  0091A0                     l7343:
  8580                           
  8581                           ; BSR set to: 0
  8582                           ;ff.c: 1204: if (clst == 1) return FR_INT_ERR;
  8583  0091A0  0100               	movlb	0	; () banked
  8584  0091A2  05A0               	decf	dir_next@clst& (0+255),w,b
  8585  0091A4  11A1               	iorwf	(dir_next@clst+1)& (0+255),w,b
  8586  0091A6  11A2               	iorwf	(dir_next@clst+2)& (0+255),w,b
  8587  0091A8  11A3               	iorwf	(dir_next@clst+3)& (0+255),w,b
  8588  0091AA  A4D8               	btfss	status,2,c
  8589  0091AC  D002               	goto	l7349
  8590  0091AE                     u9470:
  8591                           
  8592                           ; BSR set to: 0
  8593  0091AE  0E02               	movlw	2
  8594  0091B0  D145               	goto	l444
  8595  0091B2                     l7349:
  8596                           
  8597                           ; BSR set to: 0
  8598                           ;ff.c: 1205: if (clst == 0xFFFFFFFF) return FR_DISK_ERR;
  8599  0091B2  0100               	movlb	0	; () banked
  8600  0091B4  29A0               	incf	dir_next@clst& (0+255),w,b
  8601  0091B6  B4D8               	btfsc	status,2,c
  8602  0091B8  29A1               	incf	(dir_next@clst+1)& (0+255),w,b
  8603  0091BA  B4D8               	btfsc	status,2,c
  8604  0091BC  29A2               	incf	(dir_next@clst+2)& (0+255),w,b
  8605  0091BE  B4D8               	btfsc	status,2,c
  8606  0091C0  29A3               	incf	(dir_next@clst+3)& (0+255),w,b
  8607  0091C2  B4D8               	btfsc	status,2,c
  8608  0091C4  D075               	goto	u9500
  8609                           
  8610                           ; BSR set to: 0
  8611                           ;ff.c: 1207: if (sync_window(dp->fs)) return FR_DISK_ERR;
  8612                           
  8613                           ; BSR set to: 0
  8614                           
  8615                           ; BSR set to: 0
  8616                           
  8617                           ; BSR set to: 0
  8618  0091C6  C091  FFD9         	movff	dir_next@dp,fsr2l
  8619  0091CA  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8620  0091CE  CFDE F026          	movff	postinc2,sync_window@fs
  8621  0091D2  CFDD F027          	movff	postdec2,sync_window@fs+1
  8622  0091D6  EC8F  F031         	call	_sync_window	;wreg free
  8623  0091DA  0900               	iorlw	0
  8624  0091DC  A4D8               	btfss	status,2,c
  8625  0091DE  D068               	goto	u9500
  8626                           
  8627                           ;ff.c: 1208: mem_set(dp->fs->win, 0, ((UINT)512));
  8628  0091E0  C091  FFD9         	movff	dir_next@dp,fsr2l
  8629  0091E4  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8630  0091E8  CFDE F095          	movff	postinc2,??_dir_next
  8631  0091EC  CFDD F096          	movff	postdec2,??_dir_next+1
  8632  0091F0  0E32               	movlw	50
  8633  0091F2  0100               	movlb	0	; () banked
  8634  0091F4  2595               	addwf	??_dir_next& (0+255),w,b
  8635  0091F6  6E01               	movwf	mem_set@dst,c
  8636  0091F8  0E00               	movlw	0
  8637  0091FA  0100               	movlb	0	; () banked
  8638  0091FC  2196               	addwfc	(??_dir_next+1)& (0+255),w,b
  8639  0091FE  6E02               	movwf	mem_set@dst+1,c
  8640  009200  0E00               	movlw	0
  8641  009202  6E04               	movwf	mem_set@val+1,c
  8642  009204  0E00               	movlw	0
  8643  009206  6E03               	movwf	mem_set@val,c
  8644  009208  0E02               	movlw	2
  8645  00920A  6E06               	movwf	mem_set@cnt+1,c
  8646  00920C  0E00               	movlw	0
  8647  00920E  6E05               	movwf	mem_set@cnt,c
  8648  009210  ECCD  F028         	call	_mem_set	;wreg free
  8649                           
  8650                           ;ff.c: 1209: dp->fs->winsect = clust2sect(dp->fs, clst);
  8651  009214  C091  FFD9         	movff	dir_next@dp,fsr2l
  8652  009218  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8653  00921C  CFDE F00D          	movff	postinc2,clust2sect@fs
  8654  009220  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  8655  009224  C0A0  F00F         	movff	dir_next@clst,clust2sect@clst
  8656  009228  C0A1  F010         	movff	dir_next@clst+1,clust2sect@clst+1
  8657  00922C  C0A2  F011         	movff	dir_next@clst+2,clust2sect@clst+2
  8658  009230  C0A3  F012         	movff	dir_next@clst+3,clust2sect@clst+3
  8659  009234  EC7E  F02D         	call	_clust2sect	;wreg free
  8660  009238  C00D  F095         	movff	?_clust2sect,??_dir_next
  8661  00923C  C00E  F096         	movff	?_clust2sect+1,??_dir_next+1
  8662  009240  C00F  F097         	movff	?_clust2sect+2,??_dir_next+2
  8663  009244  C010  F098         	movff	?_clust2sect+3,??_dir_next+3
  8664  009248  C091  FFD9         	movff	dir_next@dp,fsr2l
  8665  00924C  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8666  009250  EE10 F02E          	lfsr	1,46
  8667  009254  50DE               	movf	postinc2,w,c
  8668  009256  26E1               	addwf	fsr1l,f,c
  8669  009258  50DD               	movf	postdec2,w,c
  8670  00925A  22E2               	addwfc	fsr1h,f,c
  8671  00925C  C095  FFE6         	movff	??_dir_next,postinc1
  8672  009260  C096  FFE6         	movff	??_dir_next+1,postinc1
  8673  009264  C097  FFE6         	movff	??_dir_next+2,postinc1
  8674  009268  C098  FFE5         	movff	??_dir_next+3,postdec1
  8675  00926C  06E1               	decf	fsr1l,f,c
  8676  00926E  06E1               	decf	fsr1l,f,c
  8677                           
  8678                           ;ff.c: 1210: for (c = 0; c < dp->fs->csize; c++) {
  8679  009270  0E00               	movlw	0
  8680  009272  0100               	movlb	0	; () banked
  8681  009274  6F9D               	movwf	(dir_next@c+1)& (0+255),b
  8682  009276  0E00               	movlw	0
  8683  009278  0100               	movlb	0	; () banked
  8684  00927A  6F9C               	movwf	dir_next@c& (0+255),b
  8685  00927C  D02D               	goto	l7379
  8686  00927E                     l7367:
  8687                           
  8688                           ; BSR set to: 0
  8689                           ;ff.c: 1211: dp->fs->wflag = 1;
  8690  00927E  C091  FFD9         	movff	dir_next@dp,fsr2l
  8691  009282  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8692  009286  EE10 F004          	lfsr	1,4
  8693  00928A  50DE               	movf	postinc2,w,c
  8694  00928C  26E1               	addwf	fsr1l,f,c
  8695  00928E  50DD               	movf	postdec2,w,c
  8696  009290  22E2               	addwfc	fsr1h,f,c
  8697  009292  0E01               	movlw	1
  8698  009294  6EE7               	movwf	indf1,c
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;ff.c: 1212: if (sync_window(dp->fs)) return FR_DISK_ERR;
  8702  009296  C091  FFD9         	movff	dir_next@dp,fsr2l
  8703  00929A  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8704  00929E  CFDE F026          	movff	postinc2,sync_window@fs
  8705  0092A2  CFDD F027          	movff	postdec2,sync_window@fs+1
  8706  0092A6  EC8F  F031         	call	_sync_window	;wreg free
  8707  0092AA  0900               	iorlw	0
  8708  0092AC  B4D8               	btfsc	status,2,c
  8709  0092AE  D002               	goto	l7375
  8710  0092B0                     u9500:
  8711  0092B0  0E01               	movlw	1
  8712  0092B2  D0C4               	goto	l444
  8713  0092B4                     l7375:
  8714                           
  8715                           ;ff.c: 1213: dp->fs->winsect++;
  8716  0092B4  C091  FFD9         	movff	dir_next@dp,fsr2l
  8717  0092B8  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8718  0092BC  EE10 F02E          	lfsr	1,46
  8719  0092C0  50DE               	movf	postinc2,w,c
  8720  0092C2  26E1               	addwf	fsr1l,f,c
  8721  0092C4  50DD               	movf	postdec2,w,c
  8722  0092C6  22E2               	addwfc	fsr1h,f,c
  8723  0092C8  2AE6               	incf	postinc1,f,c
  8724  0092CA  0E00               	movlw	0
  8725  0092CC  22E6               	addwfc	postinc1,f,c
  8726  0092CE  22E6               	addwfc	postinc1,f,c
  8727  0092D0  22E5               	addwfc	postdec1,f,c
  8728  0092D2  0100               	movlb	0	; () banked
  8729  0092D4  4B9C               	infsnz	dir_next@c& (0+255),f,b
  8730  0092D6  2B9D               	incf	(dir_next@c+1)& (0+255),f,b
  8731  0092D8                     l7379:
  8732                           
  8733                           ; BSR set to: 0
  8734  0092D8  C091  FFD9         	movff	dir_next@dp,fsr2l
  8735  0092DC  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8736  0092E0  EE10 F002          	lfsr	1,2
  8737  0092E4  50DE               	movf	postinc2,w,c
  8738  0092E6  26E1               	addwf	fsr1l,f,c
  8739  0092E8  50DD               	movf	postdec2,w,c
  8740  0092EA  22E2               	addwfc	fsr1h,f,c
  8741  0092EC  50E7               	movf	indf1,w,c
  8742  0092EE  0100               	movlb	0	; () banked
  8743  0092F0  6F95               	movwf	??_dir_next& (0+255),b
  8744  0092F2  6B96               	clrf	(??_dir_next+1)& (0+255),b
  8745  0092F4  0100               	movlb	0	; () banked
  8746  0092F6  5195               	movf	??_dir_next& (0+255),w,b
  8747  0092F8  0100               	movlb	0	; () banked
  8748  0092FA  5D9C               	subwf	dir_next@c& (0+255),w,b
  8749  0092FC  0100               	movlb	0	; () banked
  8750  0092FE  5196               	movf	(??_dir_next+1)& (0+255),w,b
  8751  009300  0100               	movlb	0	; () banked
  8752  009302  599D               	subwfb	(dir_next@c+1)& (0+255),w,b
  8753  009304  A0D8               	btfss	status,0,c
  8754  009306  D7BB               	goto	l7367
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;ff.c: 1214: }
  8758                           ;ff.c: 1215: dp->fs->winsect -= c;
  8759                           
  8760                           ; BSR set to: 0
  8761  009308  C091  FFD9         	movff	dir_next@dp,fsr2l
  8762  00930C  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8763  009310  EE10 F02E          	lfsr	1,46
  8764  009314  50DE               	movf	postinc2,w,c
  8765  009316  26E1               	addwf	fsr1l,f,c
  8766  009318  50DD               	movf	postdec2,w,c
  8767  00931A  22E2               	addwfc	fsr1h,f,c
  8768  00931C  0100               	movlb	0	; () banked
  8769  00931E  519C               	movf	dir_next@c& (0+255),w,b
  8770  009320  5EE6               	subwf	postinc1,f,c
  8771  009322  0100               	movlb	0	; () banked
  8772  009324  519D               	movf	(dir_next@c+1)& (0+255),w,b
  8773  009326  5AE6               	subwfb	postinc1,f,c
  8774  009328  0E00               	movlw	0
  8775  00932A  5AE6               	subwfb	postinc1,f,c
  8776  00932C  5AE5               	subwfb	postdec1,f,c
  8777  00932E  52E5               	movf	postdec1,f,c
  8778  009330  52E5               	movf	postdec1,f,c
  8779  009332                     l7383:
  8780                           
  8781                           ; BSR set to: 0
  8782                           ;ff.c: 1220: }
  8783                           ;ff.c: 1221: dp->clust = clst;
  8784  009332  0100               	movlb	0	; () banked
  8785  009334  EE20 F00A          	lfsr	2,10
  8786  009338  0100               	movlb	0	; () banked
  8787  00933A  5191               	movf	dir_next@dp& (0+255),w,b
  8788  00933C  26D9               	addwf	fsr2l,f,c
  8789  00933E  0100               	movlb	0	; () banked
  8790  009340  5192               	movf	(dir_next@dp+1)& (0+255),w,b
  8791  009342  22DA               	addwfc	fsr2h,f,c
  8792  009344  0100               	movlb	0	; () banked
  8793  009346  C0A0  FFDE         	movff	dir_next@clst,postinc2
  8794  00934A  0100               	movlb	0	; () banked
  8795  00934C  C0A1  FFDE         	movff	dir_next@clst+1,postinc2
  8796  009350  0100               	movlb	0	; () banked
  8797  009352  C0A2  FFDE         	movff	dir_next@clst+2,postinc2
  8798  009356  0100               	movlb	0	; () banked
  8799  009358  C0A3  FFDE         	movff	dir_next@clst+3,postinc2
  8800                           
  8801                           ; BSR set to: 0
  8802                           ;ff.c: 1222: dp->sect = clust2sect(dp->fs, clst);
  8803  00935C  C091  FFD9         	movff	dir_next@dp,fsr2l
  8804  009360  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8805  009364  CFDE F00D          	movff	postinc2,clust2sect@fs
  8806  009368  CFDD F00E          	movff	postdec2,clust2sect@fs+1
  8807  00936C  C0A0  F00F         	movff	dir_next@clst,clust2sect@clst
  8808  009370  C0A1  F010         	movff	dir_next@clst+1,clust2sect@clst+1
  8809  009374  C0A2  F011         	movff	dir_next@clst+2,clust2sect@clst+2
  8810  009378  C0A3  F012         	movff	dir_next@clst+3,clust2sect@clst+3
  8811  00937C  EC7E  F02D         	call	_clust2sect	;wreg free
  8812  009380  C00D  F095         	movff	?_clust2sect,??_dir_next
  8813  009384  C00E  F096         	movff	?_clust2sect+1,??_dir_next+1
  8814  009388  C00F  F097         	movff	?_clust2sect+2,??_dir_next+2
  8815  00938C  C010  F098         	movff	?_clust2sect+3,??_dir_next+3
  8816  009390  0100               	movlb	0	; () banked
  8817  009392  EE20 F00E          	lfsr	2,14
  8818  009396  0100               	movlb	0	; () banked
  8819  009398  5191               	movf	dir_next@dp& (0+255),w,b
  8820  00939A  26D9               	addwf	fsr2l,f,c
  8821  00939C  0100               	movlb	0	; () banked
  8822  00939E  5192               	movf	(dir_next@dp+1)& (0+255),w,b
  8823  0093A0  22DA               	addwfc	fsr2h,f,c
  8824  0093A2  C095  FFDE         	movff	??_dir_next,postinc2
  8825  0093A6  C096  FFDE         	movff	??_dir_next+1,postinc2
  8826  0093AA  C097  FFDE         	movff	??_dir_next+2,postinc2
  8827  0093AE  C098  FFDD         	movff	??_dir_next+3,postdec2
  8828  0093B2  06D9               	decf	fsr2l,f,c
  8829  0093B4  06D9               	decf	fsr2l,f,c
  8830  0093B6                     l7387:
  8831                           
  8832                           ; BSR set to: 0
  8833                           ;ff.c: 1223: }
  8834                           ;ff.c: 1224: }
  8835                           ;ff.c: 1225: }
  8836                           ;ff.c: 1227: dp->index = (WORD)i;
  8837  0093B6  0100               	movlb	0	; () banked
  8838  0093B8  EE20 F004          	lfsr	2,4
  8839  0093BC  0100               	movlb	0	; () banked
  8840  0093BE  5191               	movf	dir_next@dp& (0+255),w,b
  8841  0093C0  26D9               	addwf	fsr2l,f,c
  8842  0093C2  0100               	movlb	0	; () banked
  8843  0093C4  5192               	movf	(dir_next@dp+1)& (0+255),w,b
  8844  0093C6  22DA               	addwfc	fsr2h,f,c
  8845  0093C8  0100               	movlb	0	; () banked
  8846  0093CA  C09E  FFDE         	movff	dir_next@i,postinc2
  8847  0093CE  0100               	movlb	0	; () banked
  8848  0093D0  C09F  FFDD         	movff	dir_next@i+1,postdec2
  8849                           
  8850                           ; BSR set to: 0
  8851                           ;ff.c: 1228: dp->dir = dp->fs->win + (i % (((UINT)512) / 32)) * 32;
  8852  0093D4  0E0F               	movlw	15
  8853  0093D6  0100               	movlb	0	; () banked
  8854  0093D8  159E               	andwf	dir_next@i& (0+255),w,b
  8855  0093DA  0100               	movlb	0	; () banked
  8856  0093DC  6F95               	movwf	??_dir_next& (0+255),b
  8857  0093DE  0E00               	movlw	0
  8858  0093E0  0100               	movlb	0	; () banked
  8859  0093E2  159F               	andwf	(dir_next@i+1)& (0+255),w,b
  8860  0093E4  0100               	movlb	0	; () banked
  8861  0093E6  6F96               	movwf	(??_dir_next+1)& (0+255),b
  8862  0093E8  0E05               	movlw	5
  8863  0093EA                     u9525:
  8864  0093EA  90D8               	bcf	status,0,c
  8865  0093EC  0100               	movlb	0	; () banked
  8866  0093EE  3795               	rlcf	??_dir_next& (0+255),f,b
  8867  0093F0  3796               	rlcf	(??_dir_next+1)& (0+255),f,b
  8868  0093F2  2EE8               	decfsz	wreg,f,c
  8869  0093F4  D7FA               	goto	u9525
  8870  0093F6  0E32               	movlw	50
  8871  0093F8  0100               	movlb	0	; () banked
  8872  0093FA  2795               	addwf	??_dir_next& (0+255),f,b
  8873  0093FC  0E00               	movlw	0
  8874  0093FE  2396               	addwfc	(??_dir_next+1)& (0+255),f,b
  8875  009400  C091  FFD9         	movff	dir_next@dp,fsr2l
  8876  009404  C092  FFDA         	movff	dir_next@dp+1,fsr2h
  8877  009408  CFDE F097          	movff	postinc2,??_dir_next+2
  8878  00940C  CFDD F098          	movff	postdec2,??_dir_next+3
  8879  009410  0100               	movlb	0	; () banked
  8880  009412  5195               	movf	??_dir_next& (0+255),w,b
  8881  009414  0100               	movlb	0	; () banked
  8882  009416  2797               	addwf	(??_dir_next+2)& (0+255),f,b
  8883  009418  0100               	movlb	0	; () banked
  8884  00941A  5196               	movf	(??_dir_next+1)& (0+255),w,b
  8885  00941C  0100               	movlb	0	; () banked
  8886  00941E  2398               	addwfc	(??_dir_next+3)& (0+255),f,b
  8887  009420  0100               	movlb	0	; () banked
  8888  009422  EE20 F012          	lfsr	2,18
  8889  009426  0100               	movlb	0	; () banked
  8890  009428  5191               	movf	dir_next@dp& (0+255),w,b
  8891  00942A  26D9               	addwf	fsr2l,f,c
  8892  00942C  0100               	movlb	0	; () banked
  8893  00942E  5192               	movf	(dir_next@dp+1)& (0+255),w,b
  8894  009430  22DA               	addwfc	fsr2h,f,c
  8895  009432  C097  FFDE         	movff	??_dir_next+2,postinc2
  8896  009436  C098  FFDD         	movff	??_dir_next+3,postdec2
  8897                           
  8898                           ; BSR set to: 0
  8899                           ;ff.c: 1230: return FR_OK;
  8900  00943A  0E00               	movlw	0
  8901  00943C                     l444:
  8902  00943C  0012               	return	
  8903  00943E                     __end_of_dir_next:
  8904                           	opt stack 0
  8905                           tblptru	equ	0xFF8
  8906                           tblptrh	equ	0xFF7
  8907                           tblptrl	equ	0xFF6
  8908                           tablat	equ	0xFF5
  8909                           prodh	equ	0xFF4
  8910                           prodl	equ	0xFF3
  8911                           indf0	equ	0xFEF
  8912                           postinc0	equ	0xFEE
  8913                           fsr0h	equ	0xFEA
  8914                           fsr0l	equ	0xFE9
  8915                           wreg	equ	0xFE8
  8916                           indf1	equ	0xFE7
  8917                           postinc1	equ	0xFE6
  8918                           postdec1	equ	0xFE5
  8919                           fsr1h	equ	0xFE2
  8920                           fsr1l	equ	0xFE1
  8921                           indf2	equ	0xFDF
  8922                           postinc2	equ	0xFDE
  8923                           postdec2	equ	0xFDD
  8924                           plusw2	equ	0xFDB
  8925                           fsr2h	equ	0xFDA
  8926                           fsr2l	equ	0xFD9
  8927                           status	equ	0xFD8
  8928                           
  8929 ;; *************** function _create_chain *****************
  8930 ;; Defined at:
  8931 ;;		line 1033 in file "ff.c"
  8932 ;; Parameters:    Size  Location     Type
  8933 ;;  fs              2  118[COMRAM] PTR struct .
  8934 ;;		 -> NULL(0), FatFs(562), 
  8935 ;;  clst            4  120[COMRAM] unsigned long 
  8936 ;; Auto vars:     Size  Location     Type
  8937 ;;  cs              4   13[BANK0 ] unsigned long 
  8938 ;;  ncl             4    9[BANK0 ] unsigned long 
  8939 ;;  scl             4    5[BANK0 ] unsigned long 
  8940 ;;  res             1    4[BANK0 ] enum E67
  8941 ;; Return value:  Size  Location     Type
  8942 ;;                  4  118[COMRAM] unsigned long 
  8943 ;; Registers used:
  8944 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  8945 ;; Tracked objects:
  8946 ;;		On entry : 0/0
  8947 ;;		On exit  : 0/0
  8948 ;;		Unchanged: 0/0
  8949 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  8950 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8951 ;;      Locals:         0      13       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8952 ;;      Temps:          0       4       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8953 ;;      Totals:         6      17       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  8954 ;;Total ram usage:       23 bytes
  8955 ;; Hardware stack levels used:    1
  8956 ;; Hardware stack levels required when called:    8
  8957 ;; This function calls:
  8958 ;;		_get_fat
  8959 ;;		_put_fat
  8960 ;; This function is called by:
  8961 ;;		_dir_next
  8962 ;;		_f_write
  8963 ;;		_f_lseek
  8964 ;;		_f_mkdir
  8965 ;; This function uses a non-reentrant model
  8966 ;;
  8967                           
  8968                           	psect	text17
  8969  0081CE                     __ptext17:
  8970                           	opt stack 0
  8971  0081CE                     _create_chain:
  8972                           	opt stack 21
  8973                           
  8974                           ;ff.c: 1038: DWORD cs, ncl, scl;
  8975                           ;ff.c: 1039: FRESULT res;
  8976                           ;ff.c: 1042: if (clst == 0) {
  8977                           
  8978                           ;incstack = 0
  8979  0081CE  507C               	movf	create_chain@clst+3,w,c
  8980  0081D0  1079               	iorwf	create_chain@clst,w,c
  8981  0081D2  107A               	iorwf	create_chain@clst+1,w,c
  8982  0081D4  107B               	iorwf	create_chain@clst+2,w,c
  8983  0081D6  A4D8               	btfss	status,2,c
  8984  0081D8  D046               	goto	l7101
  8985                           
  8986                           ;ff.c: 1043: scl = fs->last_clust;
  8987  0081DA  EE20 F00A          	lfsr	2,10
  8988  0081DE  5077               	movf	create_chain@fs,w,c
  8989  0081E0  26D9               	addwf	fsr2l,f,c
  8990  0081E2  5078               	movf	create_chain@fs+1,w,c
  8991  0081E4  22DA               	addwfc	fsr2h,f,c
  8992  0081E6  0100               	movlb	0	; () banked
  8993  0081E8  CFDE F085          	movff	postinc2,create_chain@scl
  8994  0081EC  0100               	movlb	0	; () banked
  8995  0081EE  CFDE F086          	movff	postinc2,create_chain@scl+1
  8996  0081F2  0100               	movlb	0	; () banked
  8997  0081F4  CFDE F087          	movff	postinc2,create_chain@scl+2
  8998  0081F8  0100               	movlb	0	; () banked
  8999  0081FA  CFDE F088          	movff	postinc2,create_chain@scl+3
  9000                           
  9001                           ; BSR set to: 0
  9002                           ;ff.c: 1044: if (!scl || scl >= fs->n_fatent) scl = 1;
  9003  0081FE  0100               	movlb	0	; () banked
  9004  008200  5188               	movf	(create_chain@scl+3)& (0+255),w,b
  9005  008202  1185               	iorwf	create_chain@scl& (0+255),w,b
  9006  008204  1186               	iorwf	(create_chain@scl+1)& (0+255),w,b
  9007  008206  1187               	iorwf	(create_chain@scl+2)& (0+255),w,b
  9008  008208  B4D8               	btfsc	status,2,c
  9009  00820A  D020               	goto	l7099
  9010                           
  9011                           ; BSR set to: 0
  9012  00820C  EE20 F016          	lfsr	2,22
  9013  008210  5077               	movf	create_chain@fs,w,c
  9014  008212  26D9               	addwf	fsr2l,f,c
  9015  008214  5078               	movf	create_chain@fs+1,w,c
  9016  008216  22DA               	addwfc	fsr2h,f,c
  9017  008218  CFDE F080          	movff	postinc2,??_create_chain
  9018  00821C  CFDE F081          	movff	postinc2,??_create_chain+1
  9019  008220  CFDE F082          	movff	postinc2,??_create_chain+2
  9020  008224  CFDE F083          	movff	postinc2,??_create_chain+3
  9021  008228  0100               	movlb	0	; () banked
  9022  00822A  5180               	movf	??_create_chain& (0+255),w,b
  9023  00822C  0100               	movlb	0	; () banked
  9024  00822E  5D85               	subwf	create_chain@scl& (0+255),w,b
  9025  008230  0100               	movlb	0	; () banked
  9026  008232  5181               	movf	(??_create_chain+1)& (0+255),w,b
  9027  008234  0100               	movlb	0	; () banked
  9028  008236  5986               	subwfb	(create_chain@scl+1)& (0+255),w,b
  9029  008238  0100               	movlb	0	; () banked
  9030  00823A  5182               	movf	(??_create_chain+2)& (0+255),w,b
  9031  00823C  0100               	movlb	0	; () banked
  9032  00823E  5987               	subwfb	(create_chain@scl+2)& (0+255),w,b
  9033  008240  0100               	movlb	0	; () banked
  9034  008242  5183               	movf	(??_create_chain+3)& (0+255),w,b
  9035  008244  0100               	movlb	0	; () banked
  9036  008246  5988               	subwfb	(create_chain@scl+3)& (0+255),w,b
  9037  008248  A0D8               	btfss	status,0,c
  9038  00824A  D06F               	goto	l392
  9039  00824C                     l7099:
  9040                           
  9041                           ; BSR set to: 0
  9042  00824C  0E01               	movlw	1
  9043  00824E  0100               	movlb	0	; () banked
  9044  008250  6F85               	movwf	create_chain@scl& (0+255),b
  9045  008252  0E00               	movlw	0
  9046  008254  0100               	movlb	0	; () banked
  9047  008256  6F86               	movwf	(create_chain@scl+1)& (0+255),b
  9048  008258  0E00               	movlw	0
  9049  00825A  0100               	movlb	0	; () banked
  9050  00825C  6F87               	movwf	(create_chain@scl+2)& (0+255),b
  9051  00825E  0E00               	movlw	0
  9052  008260  0100               	movlb	0	; () banked
  9053  008262  6F88               	movwf	(create_chain@scl+3)& (0+255),b
  9054  008264  D062               	goto	l392
  9055  008266                     l7101:
  9056                           
  9057                           ;ff.c: 1046: else {
  9058                           ;ff.c: 1047: cs = get_fat(fs, clst);
  9059  008266  C078  F047         	movff	create_chain@fs+1,get_fat@fs+1
  9060  00826A  C077  F046         	movff	create_chain@fs,get_fat@fs
  9061  00826E  C079  F048         	movff	create_chain@clst,get_fat@clst
  9062  008272  C07A  F049         	movff	create_chain@clst+1,get_fat@clst+1
  9063  008276  C07B  F04A         	movff	create_chain@clst+2,get_fat@clst+2
  9064  00827A  C07C  F04B         	movff	create_chain@clst+3,get_fat@clst+3
  9065  00827E  ECD8  F042         	call	_get_fat	;wreg free
  9066  008282  C046  F08D         	movff	?_get_fat,create_chain@cs
  9067  008286  C047  F08E         	movff	?_get_fat+1,create_chain@cs+1
  9068  00828A  C048  F08F         	movff	?_get_fat+2,create_chain@cs+2
  9069  00828E  C049  F090         	movff	?_get_fat+3,create_chain@cs+3
  9070                           
  9071                           ;ff.c: 1048: if (cs < 2) return 1;
  9072  008292  0E02               	movlw	2
  9073  008294  0100               	movlb	0	; () banked
  9074  008296  6F80               	movwf	??_create_chain& (0+255),b
  9075  008298  6B81               	clrf	(??_create_chain+1)& (0+255),b
  9076  00829A  6B82               	clrf	(??_create_chain+2)& (0+255),b
  9077  00829C  6B83               	clrf	(??_create_chain+3)& (0+255),b
  9078  00829E  0100               	movlb	0	; () banked
  9079  0082A0  5180               	movf	??_create_chain& (0+255),w,b
  9080  0082A2  0100               	movlb	0	; () banked
  9081  0082A4  5D8D               	subwf	create_chain@cs& (0+255),w,b
  9082  0082A6  0100               	movlb	0	; () banked
  9083  0082A8  5181               	movf	(??_create_chain+1)& (0+255),w,b
  9084  0082AA  0100               	movlb	0	; () banked
  9085  0082AC  598E               	subwfb	(create_chain@cs+1)& (0+255),w,b
  9086  0082AE  0100               	movlb	0	; () banked
  9087  0082B0  5182               	movf	(??_create_chain+2)& (0+255),w,b
  9088  0082B2  0100               	movlb	0	; () banked
  9089  0082B4  598F               	subwfb	(create_chain@cs+2)& (0+255),w,b
  9090  0082B6  0100               	movlb	0	; () banked
  9091  0082B8  5183               	movf	(??_create_chain+3)& (0+255),w,b
  9092  0082BA  0100               	movlb	0	; () banked
  9093  0082BC  5990               	subwfb	(create_chain@cs+3)& (0+255),w,b
  9094  0082BE  B0D8               	btfsc	status,0,c
  9095  0082C0  D002               	goto	l7109
  9096                           
  9097                           ; BSR set to: 0
  9098  0082C2  0E01               	movlw	1
  9099  0082C4  D083               	goto	L12
  9100  0082C6                     l7109:
  9101                           
  9102                           ; BSR set to: 0
  9103                           ;ff.c: 1049: if (cs == 0xFFFFFFFF) return cs;
  9104  0082C6  0100               	movlb	0	; () banked
  9105  0082C8  298D               	incf	create_chain@cs& (0+255),w,b
  9106  0082CA  B4D8               	btfsc	status,2,c
  9107  0082CC  298E               	incf	(create_chain@cs+1)& (0+255),w,b
  9108  0082CE  B4D8               	btfsc	status,2,c
  9109  0082D0  298F               	incf	(create_chain@cs+2)& (0+255),w,b
  9110  0082D2  B4D8               	btfsc	status,2,c
  9111  0082D4  2990               	incf	(create_chain@cs+3)& (0+255),w,b
  9112  0082D6  B4D8               	btfsc	status,2,c
  9113  0082D8  D0AF               	goto	l404
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;ff.c: 1050: if (cs < fs->n_fatent) return cs;
  9117                           
  9118                           ; BSR set to: 0
  9119                           
  9120                           ; BSR set to: 0
  9121  0082DA  EE20 F016          	lfsr	2,22
  9122  0082DE  5077               	movf	create_chain@fs,w,c
  9123  0082E0  26D9               	addwf	fsr2l,f,c
  9124  0082E2  5078               	movf	create_chain@fs+1,w,c
  9125  0082E4  22DA               	addwfc	fsr2h,f,c
  9126  0082E6  CFDE F080          	movff	postinc2,??_create_chain
  9127  0082EA  CFDE F081          	movff	postinc2,??_create_chain+1
  9128  0082EE  CFDE F082          	movff	postinc2,??_create_chain+2
  9129  0082F2  CFDE F083          	movff	postinc2,??_create_chain+3
  9130  0082F6  0100               	movlb	0	; () banked
  9131  0082F8  5180               	movf	??_create_chain& (0+255),w,b
  9132  0082FA  0100               	movlb	0	; () banked
  9133  0082FC  5D8D               	subwf	create_chain@cs& (0+255),w,b
  9134  0082FE  0100               	movlb	0	; () banked
  9135  008300  5181               	movf	(??_create_chain+1)& (0+255),w,b
  9136  008302  0100               	movlb	0	; () banked
  9137  008304  598E               	subwfb	(create_chain@cs+1)& (0+255),w,b
  9138  008306  0100               	movlb	0	; () banked
  9139  008308  5182               	movf	(??_create_chain+2)& (0+255),w,b
  9140  00830A  0100               	movlb	0	; () banked
  9141  00830C  598F               	subwfb	(create_chain@cs+2)& (0+255),w,b
  9142  00830E  0100               	movlb	0	; () banked
  9143  008310  5183               	movf	(??_create_chain+3)& (0+255),w,b
  9144  008312  0100               	movlb	0	; () banked
  9145  008314  5990               	subwfb	(create_chain@cs+3)& (0+255),w,b
  9146  008316  A0D8               	btfss	status,0,c
  9147  008318  D08F               	goto	l404
  9148                           
  9149                           ; BSR set to: 0
  9150                           ;ff.c: 1051: scl = clst;
  9151                           
  9152                           ; BSR set to: 0
  9153  00831A  C079  F085         	movff	create_chain@clst,create_chain@scl
  9154  00831E  C07A  F086         	movff	create_chain@clst+1,create_chain@scl+1
  9155  008322  C07B  F087         	movff	create_chain@clst+2,create_chain@scl+2
  9156  008326  C07C  F088         	movff	create_chain@clst+3,create_chain@scl+3
  9157  00832A                     l392:
  9158                           
  9159                           ; BSR set to: 0
  9160                           ;ff.c: 1052: }
  9161                           ;ff.c: 1054: ncl = scl;
  9162  00832A  C085  F089         	movff	create_chain@scl,create_chain@ncl
  9163  00832E  C086  F08A         	movff	create_chain@scl+1,create_chain@ncl+1
  9164  008332  C087  F08B         	movff	create_chain@scl+2,create_chain@ncl+2
  9165  008336  C088  F08C         	movff	create_chain@scl+3,create_chain@ncl+3
  9166  00833A                     l7117:
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;ff.c: 1056: ncl++;
  9170  00833A  0E01               	movlw	1
  9171  00833C  0100               	movlb	0	; () banked
  9172  00833E  2789               	addwf	create_chain@ncl& (0+255),f,b
  9173  008340  0E00               	movlw	0
  9174  008342  0100               	movlb	0	; () banked
  9175  008344  238A               	addwfc	(create_chain@ncl+1)& (0+255),f,b
  9176  008346  0100               	movlb	0	; () banked
  9177  008348  238B               	addwfc	(create_chain@ncl+2)& (0+255),f,b
  9178  00834A  0100               	movlb	0	; () banked
  9179  00834C  238C               	addwfc	(create_chain@ncl+3)& (0+255),f,b
  9180                           
  9181                           ; BSR set to: 0
  9182                           ;ff.c: 1057: if (ncl >= fs->n_fatent) {
  9183  00834E  EE20 F016          	lfsr	2,22
  9184  008352  5077               	movf	create_chain@fs,w,c
  9185  008354  26D9               	addwf	fsr2l,f,c
  9186  008356  5078               	movf	create_chain@fs+1,w,c
  9187  008358  22DA               	addwfc	fsr2h,f,c
  9188  00835A  CFDE F080          	movff	postinc2,??_create_chain
  9189  00835E  CFDE F081          	movff	postinc2,??_create_chain+1
  9190  008362  CFDE F082          	movff	postinc2,??_create_chain+2
  9191  008366  CFDE F083          	movff	postinc2,??_create_chain+3
  9192  00836A  0100               	movlb	0	; () banked
  9193  00836C  5180               	movf	??_create_chain& (0+255),w,b
  9194  00836E  0100               	movlb	0	; () banked
  9195  008370  5D89               	subwf	create_chain@ncl& (0+255),w,b
  9196  008372  0100               	movlb	0	; () banked
  9197  008374  5181               	movf	(??_create_chain+1)& (0+255),w,b
  9198  008376  0100               	movlb	0	; () banked
  9199  008378  598A               	subwfb	(create_chain@ncl+1)& (0+255),w,b
  9200  00837A  0100               	movlb	0	; () banked
  9201  00837C  5182               	movf	(??_create_chain+2)& (0+255),w,b
  9202  00837E  0100               	movlb	0	; () banked
  9203  008380  598B               	subwfb	(create_chain@ncl+2)& (0+255),w,b
  9204  008382  0100               	movlb	0	; () banked
  9205  008384  5183               	movf	(??_create_chain+3)& (0+255),w,b
  9206  008386  0100               	movlb	0	; () banked
  9207  008388  598C               	subwfb	(create_chain@ncl+3)& (0+255),w,b
  9208  00838A  A0D8               	btfss	status,0,c
  9209  00838C  D027               	goto	l7129
  9210                           
  9211                           ; BSR set to: 0
  9212                           ;ff.c: 1058: ncl = 2;
  9213  00838E  0E02               	movlw	2
  9214  008390  0100               	movlb	0	; () banked
  9215  008392  6F89               	movwf	create_chain@ncl& (0+255),b
  9216  008394  0E00               	movlw	0
  9217  008396  0100               	movlb	0	; () banked
  9218  008398  6F8A               	movwf	(create_chain@ncl+1)& (0+255),b
  9219  00839A  0E00               	movlw	0
  9220  00839C  0100               	movlb	0	; () banked
  9221  00839E  6F8B               	movwf	(create_chain@ncl+2)& (0+255),b
  9222  0083A0  0E00               	movlw	0
  9223  0083A2  0100               	movlb	0	; () banked
  9224  0083A4  6F8C               	movwf	(create_chain@ncl+3)& (0+255),b
  9225                           
  9226                           ; BSR set to: 0
  9227                           ;ff.c: 1059: if (ncl > scl) return 0;
  9228  0083A6  0100               	movlb	0	; () banked
  9229  0083A8  5189               	movf	create_chain@ncl& (0+255),w,b
  9230  0083AA  0100               	movlb	0	; () banked
  9231  0083AC  5D85               	subwf	create_chain@scl& (0+255),w,b
  9232  0083AE  0100               	movlb	0	; () banked
  9233  0083B0  518A               	movf	(create_chain@ncl+1)& (0+255),w,b
  9234  0083B2  0100               	movlb	0	; () banked
  9235  0083B4  5986               	subwfb	(create_chain@scl+1)& (0+255),w,b
  9236  0083B6  0100               	movlb	0	; () banked
  9237  0083B8  518B               	movf	(create_chain@ncl+2)& (0+255),w,b
  9238  0083BA  0100               	movlb	0	; () banked
  9239  0083BC  5987               	subwfb	(create_chain@scl+2)& (0+255),w,b
  9240  0083BE  0100               	movlb	0	; () banked
  9241  0083C0  518C               	movf	(create_chain@ncl+3)& (0+255),w,b
  9242  0083C2  0100               	movlb	0	; () banked
  9243  0083C4  5988               	subwfb	(create_chain@scl+3)& (0+255),w,b
  9244  0083C6  B0D8               	btfsc	status,0,c
  9245  0083C8  D009               	goto	l7129
  9246  0083CA  D054               	goto	u9010
  9247  0083CC                     L12:
  9248  0083CC  6E77               	movwf	?_create_chain,c
  9249  0083CE  0E00               	movlw	0
  9250  0083D0  6E78               	movwf	?_create_chain+1,c
  9251  0083D2  0E00               	movlw	0
  9252  0083D4  6E79               	movwf	?_create_chain+2,c
  9253  0083D6  0E00               	movlw	0
  9254  0083D8  6E7A               	movwf	?_create_chain+3,c
  9255  0083DA  D0E9               	goto	l394
  9256  0083DC                     l7129:
  9257                           
  9258                           ; BSR set to: 0
  9259                           ;ff.c: 1060: }
  9260                           ;ff.c: 1061: cs = get_fat(fs, ncl);
  9261  0083DC  C078  F047         	movff	create_chain@fs+1,get_fat@fs+1
  9262  0083E0  C077  F046         	movff	create_chain@fs,get_fat@fs
  9263  0083E4  C089  F048         	movff	create_chain@ncl,get_fat@clst
  9264  0083E8  C08A  F049         	movff	create_chain@ncl+1,get_fat@clst+1
  9265  0083EC  C08B  F04A         	movff	create_chain@ncl+2,get_fat@clst+2
  9266  0083F0  C08C  F04B         	movff	create_chain@ncl+3,get_fat@clst+3
  9267  0083F4  ECD8  F042         	call	_get_fat	;wreg free
  9268  0083F8  C046  F08D         	movff	?_get_fat,create_chain@cs
  9269  0083FC  C047  F08E         	movff	?_get_fat+1,create_chain@cs+1
  9270  008400  C048  F08F         	movff	?_get_fat+2,create_chain@cs+2
  9271  008404  C049  F090         	movff	?_get_fat+3,create_chain@cs+3
  9272                           
  9273                           ;ff.c: 1062: if (cs == 0) break;
  9274  008408  0100               	movlb	0	; () banked
  9275  00840A  5190               	movf	(create_chain@cs+3)& (0+255),w,b
  9276  00840C  118D               	iorwf	create_chain@cs& (0+255),w,b
  9277  00840E  118E               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9278  008410  118F               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9279  008412  B4D8               	btfsc	status,2,c
  9280  008414  D031               	goto	l7145
  9281                           
  9282                           ; BSR set to: 0
  9283                           ;ff.c: 1063: if (cs == 0xFFFFFFFF || cs == 1)
  9284                           
  9285                           ; BSR set to: 0
  9286                           
  9287                           ; BSR set to: 0
  9288  008416  0100               	movlb	0	; () banked
  9289  008418  298D               	incf	create_chain@cs& (0+255),w,b
  9290  00841A  B4D8               	btfsc	status,2,c
  9291  00841C  298E               	incf	(create_chain@cs+1)& (0+255),w,b
  9292  00841E  B4D8               	btfsc	status,2,c
  9293  008420  298F               	incf	(create_chain@cs+2)& (0+255),w,b
  9294  008422  B4D8               	btfsc	status,2,c
  9295  008424  2990               	incf	(create_chain@cs+3)& (0+255),w,b
  9296  008426  B4D8               	btfsc	status,2,c
  9297  008428  D007               	goto	l404
  9298                           
  9299                           ; BSR set to: 0
  9300  00842A  0100               	movlb	0	; () banked
  9301  00842C  058D               	decf	create_chain@cs& (0+255),w,b
  9302  00842E  118E               	iorwf	(create_chain@cs+1)& (0+255),w,b
  9303  008430  118F               	iorwf	(create_chain@cs+2)& (0+255),w,b
  9304  008432  1190               	iorwf	(create_chain@cs+3)& (0+255),w,b
  9305  008434  A4D8               	btfss	status,2,c
  9306  008436  D009               	goto	l7139
  9307  008438                     l404:
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;ff.c: 1064: return cs;
  9311  008438  C08D  F077         	movff	create_chain@cs,?_create_chain
  9312  00843C  C08E  F078         	movff	create_chain@cs+1,?_create_chain+1
  9313  008440  C08F  F079         	movff	create_chain@cs+2,?_create_chain+2
  9314  008444  C090  F07A         	movff	create_chain@cs+3,?_create_chain+3
  9315  008448  D0B2               	goto	l394
  9316  00844A                     l7139:
  9317                           
  9318                           ; BSR set to: 0
  9319                           ;ff.c: 1065: if (ncl == scl) return 0;
  9320  00844A  0100               	movlb	0	; () banked
  9321  00844C  5188               	movf	(create_chain@scl+3)& (0+255),w,b
  9322  00844E  0100               	movlb	0	; () banked
  9323  008450  198C               	xorwf	(create_chain@ncl+3)& (0+255),w,b
  9324  008452  E10E               	bnz	u9015
  9325  008454  0100               	movlb	0	; () banked
  9326  008456  5187               	movf	(create_chain@scl+2)& (0+255),w,b
  9327  008458  0100               	movlb	0	; () banked
  9328  00845A  198B               	xorwf	(create_chain@ncl+2)& (0+255),w,b
  9329  00845C  E109               	bnz	u9015
  9330  00845E  0100               	movlb	0	; () banked
  9331  008460  5186               	movf	(create_chain@scl+1)& (0+255),w,b
  9332  008462  0100               	movlb	0	; () banked
  9333  008464  198A               	xorwf	(create_chain@ncl+1)& (0+255),w,b
  9334  008466  E104               	bnz	u9015
  9335  008468  0100               	movlb	0	; () banked
  9336  00846A  5185               	movf	create_chain@scl& (0+255),w,b
  9337  00846C  0100               	movlb	0	; () banked
  9338  00846E  1989               	xorwf	create_chain@ncl& (0+255),w,b
  9339  008470                     u9015:
  9340  008470  A4D8               	btfss	status,2,c
  9341  008472  D763               	goto	l7117
  9342  008474                     u9010:
  9343                           
  9344                           ; BSR set to: 0
  9345  008474  0E00               	movlw	0
  9346  008476  D7AA               	goto	L12
  9347  008478                     l7145:
  9348                           
  9349                           ; BSR set to: 0
  9350                           ;ff.c: 1068: res = put_fat(fs, ncl, 0x0FFFFFFF);
  9351  008478  C078  F047         	movff	create_chain@fs+1,put_fat@fs+1
  9352  00847C  C077  F046         	movff	create_chain@fs,put_fat@fs
  9353  008480  C089  F048         	movff	create_chain@ncl,put_fat@clst
  9354  008484  C08A  F049         	movff	create_chain@ncl+1,put_fat@clst+1
  9355  008488  C08B  F04A         	movff	create_chain@ncl+2,put_fat@clst+2
  9356  00848C  C08C  F04B         	movff	create_chain@ncl+3,put_fat@clst+3
  9357  008490  0EFF               	movlw	255
  9358  008492  6E4C               	movwf	put_fat@val,c
  9359  008494  0EFF               	movlw	255
  9360  008496  6E4D               	movwf	put_fat@val+1,c
  9361  008498  0EFF               	movlw	255
  9362  00849A  6E4E               	movwf	put_fat@val+2,c
  9363  00849C  0E0F               	movlw	15
  9364  00849E  6E4F               	movwf	put_fat@val+3,c
  9365  0084A0  ECFC  F044         	call	_put_fat	;wreg free
  9366  0084A4  0100               	movlb	0	; () banked
  9367  0084A6  6F84               	movwf	create_chain@res& (0+255),b
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;ff.c: 1069: if (res == FR_OK && clst != 0) {
  9371  0084A8  0100               	movlb	0	; () banked
  9372  0084AA  6784               	tstfsz	create_chain@res& (0+255),b
  9373  0084AC  D01E               	goto	l7153
  9374                           
  9375                           ; BSR set to: 0
  9376  0084AE  507C               	movf	create_chain@clst+3,w,c
  9377  0084B0  1079               	iorwf	create_chain@clst,w,c
  9378  0084B2  107A               	iorwf	create_chain@clst+1,w,c
  9379  0084B4  107B               	iorwf	create_chain@clst+2,w,c
  9380  0084B6  B4D8               	btfsc	status,2,c
  9381  0084B8  D018               	goto	l7153
  9382                           
  9383                           ; BSR set to: 0
  9384                           ;ff.c: 1070: res = put_fat(fs, clst, ncl);
  9385  0084BA  C078  F047         	movff	create_chain@fs+1,put_fat@fs+1
  9386  0084BE  C077  F046         	movff	create_chain@fs,put_fat@fs
  9387  0084C2  C079  F048         	movff	create_chain@clst,put_fat@clst
  9388  0084C6  C07A  F049         	movff	create_chain@clst+1,put_fat@clst+1
  9389  0084CA  C07B  F04A         	movff	create_chain@clst+2,put_fat@clst+2
  9390  0084CE  C07C  F04B         	movff	create_chain@clst+3,put_fat@clst+3
  9391  0084D2  C089  F04C         	movff	create_chain@ncl,put_fat@val
  9392  0084D6  C08A  F04D         	movff	create_chain@ncl+1,put_fat@val+1
  9393  0084DA  C08B  F04E         	movff	create_chain@ncl+2,put_fat@val+2
  9394  0084DE  C08C  F04F         	movff	create_chain@ncl+3,put_fat@val+3
  9395  0084E2  ECFC  F044         	call	_put_fat	;wreg free
  9396  0084E6  0100               	movlb	0	; () banked
  9397  0084E8  6F84               	movwf	create_chain@res& (0+255),b
  9398  0084EA                     l7153:
  9399                           
  9400                           ; BSR set to: 0
  9401                           ;ff.c: 1071: }
  9402                           ;ff.c: 1072: if (res == FR_OK) {
  9403  0084EA  0100               	movlb	0	; () banked
  9404  0084EC  6784               	tstfsz	create_chain@res& (0+255),b
  9405  0084EE  D03E               	goto	l7159
  9406                           
  9407                           ; BSR set to: 0
  9408                           ;ff.c: 1073: fs->last_clust = ncl;
  9409  0084F0  EE20 F00A          	lfsr	2,10
  9410  0084F4  5077               	movf	create_chain@fs,w,c
  9411  0084F6  26D9               	addwf	fsr2l,f,c
  9412  0084F8  5078               	movf	create_chain@fs+1,w,c
  9413  0084FA  22DA               	addwfc	fsr2h,f,c
  9414  0084FC  0100               	movlb	0	; () banked
  9415  0084FE  C089  FFDE         	movff	create_chain@ncl,postinc2
  9416  008502  0100               	movlb	0	; () banked
  9417  008504  C08A  FFDE         	movff	create_chain@ncl+1,postinc2
  9418  008508  0100               	movlb	0	; () banked
  9419  00850A  C08B  FFDE         	movff	create_chain@ncl+2,postinc2
  9420  00850E  0100               	movlb	0	; () banked
  9421  008510  C08C  FFDE         	movff	create_chain@ncl+3,postinc2
  9422                           
  9423                           ;ff.c: 1074: if (fs->free_clust != 0xFFFFFFFF) {
  9424  008514  EE20 F00E          	lfsr	2,14
  9425  008518  5077               	movf	create_chain@fs,w,c
  9426  00851A  26D9               	addwf	fsr2l,f,c
  9427  00851C  5078               	movf	create_chain@fs+1,w,c
  9428  00851E  22DA               	addwfc	fsr2h,f,c
  9429  008520  CFDE F080          	movff	postinc2,??_create_chain
  9430  008524  CFDE F081          	movff	postinc2,??_create_chain+1
  9431  008528  CFDE F082          	movff	postinc2,??_create_chain+2
  9432  00852C  CFDE F083          	movff	postinc2,??_create_chain+3
  9433  008530  0100               	movlb	0	; () banked
  9434  008532  2980               	incf	??_create_chain& (0+255),w,b
  9435  008534  B4D8               	btfsc	status,2,c
  9436  008536  2981               	incf	(??_create_chain+1)& (0+255),w,b
  9437  008538  B4D8               	btfsc	status,2,c
  9438  00853A  2982               	incf	(??_create_chain+2)& (0+255),w,b
  9439  00853C  B4D8               	btfsc	status,2,c
  9440  00853E  2983               	incf	(??_create_chain+3)& (0+255),w,b
  9441  008540  B4D8               	btfsc	status,2,c
  9442  008542  D02D               	goto	l409
  9443                           
  9444                           ; BSR set to: 0
  9445                           ;ff.c: 1075: fs->free_clust--;
  9446  008544  EE20 F00E          	lfsr	2,14
  9447  008548  5077               	movf	create_chain@fs,w,c
  9448  00854A  26D9               	addwf	fsr2l,f,c
  9449  00854C  5078               	movf	create_chain@fs+1,w,c
  9450  00854E  22DA               	addwfc	fsr2h,f,c
  9451  008550  06DE               	decf	postinc2,f,c
  9452  008552  0E00               	movlw	0
  9453  008554  5ADE               	subwfb	postinc2,f,c
  9454  008556  5ADE               	subwfb	postinc2,f,c
  9455  008558  5ADD               	subwfb	postdec2,f,c
  9456                           
  9457                           ;ff.c: 1076: fs->fsi_flag |= 1;
  9458  00855A  EE20 F005          	lfsr	2,5
  9459  00855E  5077               	movf	create_chain@fs,w,c
  9460  008560  26D9               	addwf	fsr2l,f,c
  9461  008562  5078               	movf	create_chain@fs+1,w,c
  9462  008564  22DA               	addwfc	fsr2h,f,c
  9463  008566  0E00               	movlw	0
  9464  008568  80DB               	bsf	plusw2,0,c
  9465  00856A  D019               	goto	l409
  9466  00856C                     l7159:
  9467                           
  9468                           ; BSR set to: 0
  9469                           ;ff.c: 1079: ncl = (res == FR_DISK_ERR) ? 0xFFFFFFFF : 1;
  9470  00856C  0100               	movlb	0	; () banked
  9471  00856E  0584               	decf	create_chain@res& (0+255),w,b
  9472  008570  B4D8               	btfsc	status,2,c
  9473  008572  D00D               	goto	l411
  9474                           
  9475                           ; BSR set to: 0
  9476  008574  0E01               	movlw	1
  9477  008576  0100               	movlb	0	; () banked
  9478  008578  6F89               	movwf	create_chain@ncl& (0+255),b
  9479  00857A  0E00               	movlw	0
  9480  00857C  0100               	movlb	0	; () banked
  9481  00857E  6F8A               	movwf	(create_chain@ncl+1)& (0+255),b
  9482  008580  0E00               	movlw	0
  9483  008582  0100               	movlb	0	; () banked
  9484  008584  6F8B               	movwf	(create_chain@ncl+2)& (0+255),b
  9485  008586  0E00               	movlw	0
  9486  008588  0100               	movlb	0	; () banked
  9487  00858A  6F8C               	movwf	(create_chain@ncl+3)& (0+255),b
  9488  00858C  D008               	goto	l409
  9489  00858E                     l411:
  9490                           
  9491                           ; BSR set to: 0
  9492  00858E  0100               	movlb	0	; () banked
  9493  008590  6989               	setf	create_chain@ncl& (0+255),b
  9494  008592  0100               	movlb	0	; () banked
  9495  008594  698A               	setf	(create_chain@ncl+1)& (0+255),b
  9496  008596  0100               	movlb	0	; () banked
  9497  008598  698B               	setf	(create_chain@ncl+2)& (0+255),b
  9498  00859A  0100               	movlb	0	; () banked
  9499  00859C  698C               	setf	(create_chain@ncl+3)& (0+255),b
  9500  00859E                     l409:
  9501                           
  9502                           ; BSR set to: 0
  9503                           ;ff.c: 1080: }
  9504                           ;ff.c: 1082: return ncl;
  9505  00859E  C089  F077         	movff	create_chain@ncl,?_create_chain
  9506  0085A2  C08A  F078         	movff	create_chain@ncl+1,?_create_chain+1
  9507  0085A6  C08B  F079         	movff	create_chain@ncl+2,?_create_chain+2
  9508  0085AA  C08C  F07A         	movff	create_chain@ncl+3,?_create_chain+3
  9509  0085AE                     l394:
  9510                           
  9511                           ; BSR set to: 0
  9512  0085AE  0012               	return	
  9513  0085B0                     __end_of_create_chain:
  9514                           	opt stack 0
  9515                           tblptru	equ	0xFF8
  9516                           tblptrh	equ	0xFF7
  9517                           tblptrl	equ	0xFF6
  9518                           tablat	equ	0xFF5
  9519                           prodh	equ	0xFF4
  9520                           prodl	equ	0xFF3
  9521                           indf0	equ	0xFEF
  9522                           postinc0	equ	0xFEE
  9523                           fsr0h	equ	0xFEA
  9524                           fsr0l	equ	0xFE9
  9525                           wreg	equ	0xFE8
  9526                           indf1	equ	0xFE7
  9527                           postinc1	equ	0xFE6
  9528                           postdec1	equ	0xFE5
  9529                           fsr1h	equ	0xFE2
  9530                           fsr1l	equ	0xFE1
  9531                           indf2	equ	0xFDF
  9532                           postinc2	equ	0xFDE
  9533                           postdec2	equ	0xFDD
  9534                           plusw2	equ	0xFDB
  9535                           fsr2h	equ	0xFDA
  9536                           fsr2l	equ	0xFD9
  9537                           status	equ	0xFD8
  9538                           
  9539 ;; *************** function _put_fat *****************
  9540 ;; Defined at:
  9541 ;;		line 916 in file "ff.c"
  9542 ;; Parameters:    Size  Location     Type
  9543 ;;  fs              2   69[COMRAM] PTR struct .
  9544 ;;		 -> NULL(0), FatFs(562), 
  9545 ;;  clst            4   71[COMRAM] unsigned long 
  9546 ;;  val             4   75[COMRAM] unsigned long 
  9547 ;; Auto vars:     Size  Location     Type
  9548 ;;  p               2  116[COMRAM] PTR unsigned char 
  9549 ;;		 -> FatFs.win(512), NULL(0), FatFs(562), 
  9550 ;;  bc              2  113[COMRAM] unsigned int 
  9551 ;;  res             1  115[COMRAM] enum E67
  9552 ;; Return value:  Size  Location     Type
  9553 ;;                  1    wreg      enum E67
  9554 ;; Registers used:
  9555 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  9556 ;; Tracked objects:
  9557 ;;		On entry : 0/0
  9558 ;;		On exit  : 0/0
  9559 ;;		Unchanged: 0/0
  9560 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
  9561 ;;      Params:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9562 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9563 ;;      Temps:         30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9564 ;;      Totals:        49       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
  9565 ;;Total ram usage:       49 bytes
  9566 ;; Hardware stack levels used:    1
  9567 ;; Hardware stack levels required when called:    7
  9568 ;; This function calls:
  9569 ;;		_move_window
  9570 ;; This function is called by:
  9571 ;;		_remove_chain
  9572 ;;		_create_chain
  9573 ;;		_f_truncate
  9574 ;; This function uses a non-reentrant model
  9575 ;;
  9576                           
  9577                           	psect	text18
  9578  0089F8                     __ptext18:
  9579                           	opt stack 0
  9580  0089F8                     _put_fat:
  9581                           	opt stack 21
  9582                           
  9583                           ;ff.c: 922: UINT bc;
  9584                           ;ff.c: 923: BYTE *p;
  9585                           ;ff.c: 924: FRESULT res;
  9586                           ;ff.c: 927: if (clst < 2 || clst >= fs->n_fatent) {
  9587                           
  9588                           ; BSR set to: 0
  9589                           ;incstack = 0
  9590  0089F8  0E02               	movlw	2
  9591  0089FA  5C48               	subwf	put_fat@clst,w,c
  9592  0089FC  0E00               	movlw	0
  9593  0089FE  5849               	subwfb	put_fat@clst+1,w,c
  9594  008A00  0E00               	movlw	0
  9595  008A02  584A               	subwfb	put_fat@clst+2,w,c
  9596  008A04  0E00               	movlw	0
  9597  008A06  584B               	subwfb	put_fat@clst+3,w,c
  9598  008A08  A0D8               	btfss	status,0,c
  9599  008A0A  D260               	goto	l7053
  9600  008A0C  EE20 F016          	lfsr	2,22
  9601  008A10  5046               	movf	put_fat@fs,w,c
  9602  008A12  26D9               	addwf	fsr2l,f,c
  9603  008A14  5047               	movf	put_fat@fs+1,w,c
  9604  008A16  22DA               	addwfc	fsr2h,f,c
  9605  008A18  CFDE F050          	movff	postinc2,??_put_fat
  9606  008A1C  CFDE F051          	movff	postinc2,??_put_fat+1
  9607  008A20  CFDE F052          	movff	postinc2,??_put_fat+2
  9608  008A24  CFDE F053          	movff	postinc2,??_put_fat+3
  9609  008A28  5050               	movf	??_put_fat,w,c
  9610  008A2A  5C48               	subwf	put_fat@clst,w,c
  9611  008A2C  5051               	movf	??_put_fat+1,w,c
  9612  008A2E  5849               	subwfb	put_fat@clst+1,w,c
  9613  008A30  5052               	movf	??_put_fat+2,w,c
  9614  008A32  584A               	subwfb	put_fat@clst+2,w,c
  9615  008A34  5053               	movf	??_put_fat+3,w,c
  9616  008A36  584B               	subwfb	put_fat@clst+3,w,c
  9617  008A38  A0D8               	btfss	status,0,c
  9618  008A3A  D24B               	goto	l7055
  9619  008A3C  D247               	goto	l7053
  9620  008A3E                     l351:
  9621                           
  9622                           ;ff.c: 933: bc = (UINT)clst; bc += bc / 2;
  9623  008A3E  C048  F072         	movff	put_fat@clst,put_fat@bc
  9624  008A42  C049  F073         	movff	put_fat@clst+1,put_fat@bc+1
  9625  008A46  90D8               	bcf	status,0,c
  9626  008A48  3073               	rrcf	put_fat@bc+1,w,c
  9627  008A4A  6E51               	movwf	(??_put_fat+1)& (0+255),c
  9628  008A4C  3072               	rrcf	put_fat@bc,w,c
  9629  008A4E  6E50               	movwf	??_put_fat& (0+255),c
  9630  008A50  5050               	movf	??_put_fat,w,c
  9631  008A52  2672               	addwf	put_fat@bc,f,c
  9632  008A54  5051               	movf	??_put_fat+1,w,c
  9633  008A56  2273               	addwfc	put_fat@bc+1,f,c
  9634                           
  9635                           ;ff.c: 934: res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
  9636  008A58  C047  F03C         	movff	put_fat@fs+1,move_window@fs+1
  9637  008A5C  C046  F03B         	movff	put_fat@fs,move_window@fs
  9638  008A60  EE20 F022          	lfsr	2,34
  9639  008A64  5046               	movf	put_fat@fs,w,c
  9640  008A66  26D9               	addwf	fsr2l,f,c
  9641  008A68  5047               	movf	put_fat@fs+1,w,c
  9642  008A6A  22DA               	addwfc	fsr2h,f,c
  9643  008A6C  CFDE F050          	movff	postinc2,??_put_fat
  9644  008A70  CFDE F051          	movff	postinc2,??_put_fat+1
  9645  008A74  CFDE F052          	movff	postinc2,??_put_fat+2
  9646  008A78  CFDE F053          	movff	postinc2,??_put_fat+3
  9647  008A7C  C072  F054         	movff	put_fat@bc,??_put_fat+4
  9648  008A80  C073  F055         	movff	put_fat@bc+1,??_put_fat+5
  9649  008A84  0E09               	movlw	9
  9650  008A86  6E56               	movwf	(??_put_fat+6)& (0+255),c
  9651  008A88                     u8765:
  9652  008A88  90D8               	bcf	status,0,c
  9653  008A8A  3255               	rrcf	??_put_fat+5,f,c
  9654  008A8C  3254               	rrcf	??_put_fat+4,f,c
  9655  008A8E  2E56               	decfsz	(??_put_fat+6)& (0+255),f,c
  9656  008A90  D7FB               	goto	u8765
  9657  008A92  5054               	movf	??_put_fat+4,w,c
  9658  008A94  2450               	addwf	??_put_fat,w,c
  9659  008A96  6E3D               	movwf	move_window@sector,c
  9660  008A98  5055               	movf	??_put_fat+5,w,c
  9661  008A9A  2051               	addwfc	??_put_fat+1,w,c
  9662  008A9C  6E3E               	movwf	move_window@sector+1,c
  9663  008A9E  0E00               	movlw	0
  9664  008AA0  2052               	addwfc	??_put_fat+2,w,c
  9665  008AA2  6E3F               	movwf	move_window@sector+2,c
  9666  008AA4  0E00               	movlw	0
  9667  008AA6  2053               	addwfc	??_put_fat+3,w,c
  9668  008AA8  6E40               	movwf	move_window@sector+3,c
  9669  008AAA  EC66  F02C         	call	_move_window	;wreg free
  9670  008AAE  6E74               	movwf	put_fat@res,c
  9671                           
  9672                           ;ff.c: 935: if (res != FR_OK) break;
  9673  008AB0  5074               	movf	put_fat@res,w,c
  9674  008AB2  A4D8               	btfss	status,2,c
  9675  008AB4  D21D               	goto	l7057
  9676                           
  9677                           ;ff.c: 936: p = &fs->win[bc++ % ((UINT)512)];
  9678  008AB6  0EFF               	movlw	255
  9679  008AB8  6E50               	movwf	??_put_fat& (0+255),c
  9680  008ABA  0E01               	movlw	1
  9681  008ABC  6E51               	movwf	(??_put_fat+1)& (0+255),c
  9682  008ABE  C072  F052         	movff	put_fat@bc,??_put_fat+2
  9683  008AC2  C073  F053         	movff	put_fat@bc+1,??_put_fat+3
  9684  008AC6  5050               	movf	??_put_fat,w,c
  9685  008AC8  1652               	andwf	??_put_fat+2,f,c
  9686  008ACA  5051               	movf	??_put_fat+1,w,c
  9687  008ACC  1653               	andwf	??_put_fat+3,f,c
  9688  008ACE  0E32               	movlw	50
  9689  008AD0  2652               	addwf	??_put_fat+2,f,c
  9690  008AD2  0E00               	movlw	0
  9691  008AD4  2253               	addwfc	??_put_fat+3,f,c
  9692  008AD6  5052               	movf	??_put_fat+2,w,c
  9693  008AD8  2446               	addwf	put_fat@fs,w,c
  9694  008ADA  6E75               	movwf	put_fat@p,c
  9695  008ADC  5053               	movf	??_put_fat+3,w,c
  9696  008ADE  2047               	addwfc	put_fat@fs+1,w,c
  9697  008AE0  6E76               	movwf	put_fat@p+1,c
  9698  008AE2  4A72               	infsnz	put_fat@bc,f,c
  9699  008AE4  2A73               	incf	put_fat@bc+1,f,c
  9700                           
  9701                           ;ff.c: 937: *p = (clst & 1) ? ((*p & 0x0F) | ((BYTE)val << 4)) : (BYTE)val;
  9702  008AE6  B048               	btfsc	put_fat@clst,0,c
  9703  008AE8  D004               	goto	l7003
  9704  008AEA  C04C  F06E         	movff	put_fat@val,_put_fat$551
  9705  008AEE  6A6F               	clrf	_put_fat$551+1,c
  9706  008AF0  D01A               	goto	l7005
  9707  008AF2                     l7003:
  9708  008AF2  504C               	movf	put_fat@val,w,c
  9709  008AF4  6E50               	movwf	??_put_fat& (0+255),c
  9710  008AF6  6A51               	clrf	(??_put_fat+1)& (0+255),c
  9711  008AF8  3A50               	swapf	??_put_fat,f,c
  9712  008AFA  3A51               	swapf	??_put_fat+1,f,c
  9713  008AFC  0EF0               	movlw	240
  9714  008AFE  1651               	andwf	??_put_fat+1,f,c
  9715  008B00  5050               	movf	??_put_fat,w,c
  9716  008B02  0B0F               	andlw	15
  9717  008B04  1251               	iorwf	??_put_fat+1,f,c
  9718  008B06  0EF0               	movlw	240
  9719  008B08  1650               	andwf	??_put_fat,f,c
  9720  008B0A  C075  FFD9         	movff	put_fat@p,fsr2l
  9721  008B0E  C076  FFDA         	movff	put_fat@p+1,fsr2h
  9722  008B12  50DF               	movf	indf2,w,c
  9723  008B14  0B0F               	andlw	15
  9724  008B16  6E52               	movwf	(??_put_fat+2)& (0+255),c
  9725  008B18  6A53               	clrf	(??_put_fat+3)& (0+255),c
  9726  008B1A  5050               	movf	??_put_fat,w,c
  9727  008B1C  1052               	iorwf	??_put_fat+2,w,c
  9728  008B1E  6E6E               	movwf	_put_fat$551,c
  9729  008B20  5051               	movf	??_put_fat+1,w,c
  9730  008B22  1053               	iorwf	??_put_fat+3,w,c
  9731  008B24  6E6F               	movwf	_put_fat$551+1,c
  9732  008B26                     l7005:
  9733  008B26  C075  FFD9         	movff	put_fat@p,fsr2l
  9734  008B2A  C076  FFDA         	movff	put_fat@p+1,fsr2h
  9735  008B2E  C06E  FFDF         	movff	_put_fat$551,indf2
  9736                           
  9737                           ;ff.c: 938: fs->wflag = 1;
  9738  008B32  EE20 F004          	lfsr	2,4
  9739  008B36  5046               	movf	put_fat@fs,w,c
  9740  008B38  26D9               	addwf	fsr2l,f,c
  9741  008B3A  5047               	movf	put_fat@fs+1,w,c
  9742  008B3C  22DA               	addwfc	fsr2h,f,c
  9743  008B3E  0E01               	movlw	1
  9744  008B40  6EDF               	movwf	indf2,c
  9745                           
  9746                           ;ff.c: 939: res = move_window(fs, fs->fatbase + (bc / ((UINT)512)));
  9747  008B42  C047  F03C         	movff	put_fat@fs+1,move_window@fs+1
  9748  008B46  C046  F03B         	movff	put_fat@fs,move_window@fs
  9749  008B4A  EE20 F022          	lfsr	2,34
  9750  008B4E  5046               	movf	put_fat@fs,w,c
  9751  008B50  26D9               	addwf	fsr2l,f,c
  9752  008B52  5047               	movf	put_fat@fs+1,w,c
  9753  008B54  22DA               	addwfc	fsr2h,f,c
  9754  008B56  CFDE F050          	movff	postinc2,??_put_fat
  9755  008B5A  CFDE F051          	movff	postinc2,??_put_fat+1
  9756  008B5E  CFDE F052          	movff	postinc2,??_put_fat+2
  9757  008B62  CFDE F053          	movff	postinc2,??_put_fat+3
  9758  008B66  C072  F054         	movff	put_fat@bc,??_put_fat+4
  9759  008B6A  C073  F055         	movff	put_fat@bc+1,??_put_fat+5
  9760  008B6E  0E09               	movlw	9
  9761  008B70  6E56               	movwf	(??_put_fat+6)& (0+255),c
  9762  008B72                     u8795:
  9763  008B72  90D8               	bcf	status,0,c
  9764  008B74  3255               	rrcf	??_put_fat+5,f,c
  9765  008B76  3254               	rrcf	??_put_fat+4,f,c
  9766  008B78  2E56               	decfsz	(??_put_fat+6)& (0+255),f,c
  9767  008B7A  D7FB               	goto	u8795
  9768  008B7C  5054               	movf	??_put_fat+4,w,c
  9769  008B7E  2450               	addwf	??_put_fat,w,c
  9770  008B80  6E3D               	movwf	move_window@sector,c
  9771  008B82  5055               	movf	??_put_fat+5,w,c
  9772  008B84  2051               	addwfc	??_put_fat+1,w,c
  9773  008B86  6E3E               	movwf	move_window@sector+1,c
  9774  008B88  0E00               	movlw	0
  9775  008B8A  2052               	addwfc	??_put_fat+2,w,c
  9776  008B8C  6E3F               	movwf	move_window@sector+2,c
  9777  008B8E  0E00               	movlw	0
  9778  008B90  2053               	addwfc	??_put_fat+3,w,c
  9779  008B92  6E40               	movwf	move_window@sector+3,c
  9780  008B94  EC66  F02C         	call	_move_window	;wreg free
  9781  008B98  6E74               	movwf	put_fat@res,c
  9782                           
  9783                           ;ff.c: 940: if (res != FR_OK) break;
  9784  008B9A  5074               	movf	put_fat@res,w,c
  9785  008B9C  A4D8               	btfss	status,2,c
  9786  008B9E  D1A8               	goto	l7057
  9787                           
  9788                           ;ff.c: 941: p = &fs->win[bc % ((UINT)512)];
  9789  008BA0  0EFF               	movlw	255
  9790  008BA2  6E50               	movwf	??_put_fat& (0+255),c
  9791  008BA4  0E01               	movlw	1
  9792  008BA6  6E51               	movwf	(??_put_fat+1)& (0+255),c
  9793  008BA8  C072  F052         	movff	put_fat@bc,??_put_fat+2
  9794  008BAC  C073  F053         	movff	put_fat@bc+1,??_put_fat+3
  9795  008BB0  5050               	movf	??_put_fat,w,c
  9796  008BB2  1652               	andwf	??_put_fat+2,f,c
  9797  008BB4  5051               	movf	??_put_fat+1,w,c
  9798  008BB6  1653               	andwf	??_put_fat+3,f,c
  9799  008BB8  0E32               	movlw	50
  9800  008BBA  2652               	addwf	??_put_fat+2,f,c
  9801  008BBC  0E00               	movlw	0
  9802  008BBE  2253               	addwfc	??_put_fat+3,f,c
  9803  008BC0  5052               	movf	??_put_fat+2,w,c
  9804  008BC2  2446               	addwf	put_fat@fs,w,c
  9805  008BC4  6E75               	movwf	put_fat@p,c
  9806  008BC6  5053               	movf	??_put_fat+3,w,c
  9807  008BC8  2047               	addwfc	put_fat@fs+1,w,c
  9808  008BCA  6E76               	movwf	put_fat@p+1,c
  9809                           
  9810                           ;ff.c: 942: *p = (clst & 1) ? (BYTE)(val >> 4) : ((*p & 0xF0) | ((BYTE)(val >> 8) & 0x0F
      +                          ));
  9811  008BCC  B048               	btfsc	put_fat@clst,0,c
  9812  008BCE  D01B               	goto	l7021
  9813  008BD0  C04C  F050         	movff	put_fat@val,??_put_fat
  9814  008BD4  C04D  F051         	movff	put_fat@val+1,??_put_fat+1
  9815  008BD8  C04E  F052         	movff	put_fat@val+2,??_put_fat+2
  9816  008BDC  C04F  F053         	movff	put_fat@val+3,??_put_fat+3
  9817  008BE0  C051  F050         	movff	??_put_fat+1,??_put_fat
  9818  008BE4  C052  F051         	movff	??_put_fat+2,??_put_fat+1
  9819  008BE8  C053  F052         	movff	??_put_fat+3,??_put_fat+2
  9820  008BEC  6A53               	clrf	??_put_fat+3,c
  9821  008BEE  0E0F               	movlw	15
  9822  008BF0  1650               	andwf	??_put_fat,f,c
  9823  008BF2  C075  FFD9         	movff	put_fat@p,fsr2l
  9824  008BF6  C076  FFDA         	movff	put_fat@p+1,fsr2h
  9825  008BFA  50DF               	movf	indf2,w,c
  9826  008BFC  0BF0               	andlw	240
  9827  008BFE  1050               	iorwf	??_put_fat,w,c
  9828  008C00  6E54               	movwf	(??_put_fat+4)& (0+255),c
  9829  008C02  5054               	movf	??_put_fat+4,w,c
  9830  008C04  D012               	goto	L13
  9831  008C06                     l7021:
  9832  008C06  C04C  F050         	movff	put_fat@val,??_put_fat
  9833  008C0A  C04D  F051         	movff	put_fat@val+1,??_put_fat+1
  9834  008C0E  C04E  F052         	movff	put_fat@val+2,??_put_fat+2
  9835  008C12  C04F  F053         	movff	put_fat@val+3,??_put_fat+3
  9836  008C16  0E05               	movlw	5
  9837  008C18  D005               	goto	u8820
  9838  008C1A                     u8825:
  9839  008C1A  90D8               	bcf	status,0,c
  9840  008C1C  3253               	rrcf	??_put_fat+3,f,c
  9841  008C1E  3252               	rrcf	??_put_fat+2,f,c
  9842  008C20  3251               	rrcf	??_put_fat+1,f,c
  9843  008C22  3250               	rrcf	??_put_fat,f,c
  9844  008C24                     u8820:
  9845  008C24  2EE8               	decfsz	wreg,f,c
  9846  008C26  D7F9               	goto	u8825
  9847  008C28  5050               	movf	??_put_fat,w,c
  9848  008C2A                     L13:
  9849  008C2A  6E70               	movwf	_put_fat$552,c
  9850  008C2C  6A71               	clrf	_put_fat$552+1,c
  9851  008C2E  C075  FFD9         	movff	put_fat@p,fsr2l
  9852  008C32  C076  FFDA         	movff	put_fat@p+1,fsr2h
  9853  008C36  C070  FFDF         	movff	_put_fat$552,indf2
  9854  008C3A  D13F               	goto	L15
  9855  008C3C                     l7025:
  9856                           
  9857                           ;ff.c: 947: res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2)));
  9858  008C3C  C047  F03C         	movff	put_fat@fs+1,move_window@fs+1
  9859  008C40  C046  F03B         	movff	put_fat@fs,move_window@fs
  9860  008C44  EE20 F022          	lfsr	2,34
  9861  008C48  5046               	movf	put_fat@fs,w,c
  9862  008C4A  26D9               	addwf	fsr2l,f,c
  9863  008C4C  5047               	movf	put_fat@fs+1,w,c
  9864  008C4E  22DA               	addwfc	fsr2h,f,c
  9865  008C50  CFDE F050          	movff	postinc2,??_put_fat
  9866  008C54  CFDE F051          	movff	postinc2,??_put_fat+1
  9867  008C58  CFDE F052          	movff	postinc2,??_put_fat+2
  9868  008C5C  CFDE F053          	movff	postinc2,??_put_fat+3
  9869  008C60  C048  F054         	movff	put_fat@clst,??_put_fat+4
  9870  008C64  C049  F055         	movff	put_fat@clst+1,??_put_fat+5
  9871  008C68  C04A  F056         	movff	put_fat@clst+2,??_put_fat+6
  9872  008C6C  C04B  F057         	movff	put_fat@clst+3,??_put_fat+7
  9873  008C70  C055  F054         	movff	??_put_fat+5,??_put_fat+4
  9874  008C74  C056  F055         	movff	??_put_fat+6,??_put_fat+5
  9875  008C78  C057  F056         	movff	??_put_fat+7,??_put_fat+6
  9876  008C7C  6A57               	clrf	??_put_fat+7,c
  9877  008C7E  5050               	movf	??_put_fat,w,c
  9878  008C80  2454               	addwf	??_put_fat+4,w,c
  9879  008C82  6E3D               	movwf	move_window@sector,c
  9880  008C84  5051               	movf	??_put_fat+1,w,c
  9881  008C86  2055               	addwfc	??_put_fat+5,w,c
  9882  008C88  6E3E               	movwf	move_window@sector+1,c
  9883  008C8A  5052               	movf	??_put_fat+2,w,c
  9884  008C8C  2056               	addwfc	??_put_fat+6,w,c
  9885  008C8E  6E3F               	movwf	move_window@sector+2,c
  9886  008C90  5053               	movf	??_put_fat+3,w,c
  9887  008C92  2057               	addwfc	??_put_fat+7,w,c
  9888  008C94  6E40               	movwf	move_window@sector+3,c
  9889  008C96  EC66  F02C         	call	_move_window	;wreg free
  9890  008C9A  6E74               	movwf	put_fat@res,c
  9891                           
  9892                           ;ff.c: 948: if (res != FR_OK) break;
  9893  008C9C  5074               	movf	put_fat@res,w,c
  9894  008C9E  A4D8               	btfss	status,2,c
  9895  008CA0  D127               	goto	l7057
  9896                           
  9897                           ;ff.c: 949: p = &fs->win[clst * 2 % ((UINT)512)];
  9898  008CA2  0EFF               	movlw	255
  9899  008CA4  6E50               	movwf	??_put_fat& (0+255),c
  9900  008CA6  0E01               	movlw	1
  9901  008CA8  6E51               	movwf	(??_put_fat+1)& (0+255),c
  9902  008CAA  C048  F052         	movff	put_fat@clst,??_put_fat+2
  9903  008CAE  C049  F053         	movff	put_fat@clst+1,??_put_fat+3
  9904  008CB2  90D8               	bcf	status,0,c
  9905  008CB4  3652               	rlcf	??_put_fat+2,f,c
  9906  008CB6  3653               	rlcf	??_put_fat+3,f,c
  9907  008CB8  5050               	movf	??_put_fat,w,c
  9908  008CBA  1652               	andwf	??_put_fat+2,f,c
  9909  008CBC  5051               	movf	??_put_fat+1,w,c
  9910  008CBE  1653               	andwf	??_put_fat+3,f,c
  9911  008CC0  0E32               	movlw	50
  9912  008CC2  2652               	addwf	??_put_fat+2,f,c
  9913  008CC4  0E00               	movlw	0
  9914  008CC6  2253               	addwfc	??_put_fat+3,f,c
  9915  008CC8  5052               	movf	??_put_fat+2,w,c
  9916  008CCA  2446               	addwf	put_fat@fs,w,c
  9917  008CCC  6E75               	movwf	put_fat@p,c
  9918  008CCE  5053               	movf	??_put_fat+3,w,c
  9919  008CD0  2047               	addwfc	put_fat@fs+1,w,c
  9920  008CD2  6E76               	movwf	put_fat@p+1,c
  9921                           
  9922                           ;ff.c: 950: *(BYTE*)(p)=(BYTE)((WORD)val); *((BYTE*)(p)+1)=(BYTE)((WORD)((WORD)val)>>8);
  9923  008CD4  C075  FFD9         	movff	put_fat@p,fsr2l
  9924  008CD8  C076  FFDA         	movff	put_fat@p+1,fsr2h
  9925  008CDC  C04C  FFDF         	movff	put_fat@val,indf2
  9926  008CE0  EE20 F001          	lfsr	2,1
  9927  008CE4  5075               	movf	put_fat@p,w,c
  9928  008CE6  26D9               	addwf	fsr2l,f,c
  9929  008CE8  5076               	movf	put_fat@p+1,w,c
  9930  008CEA  22DA               	addwfc	fsr2h,f,c
  9931  008CEC  C04D  F050         	movff	put_fat@val+1,??_put_fat
  9932  008CF0  C050  F051         	movff	??_put_fat,??_put_fat+1
  9933  008CF4  6A52               	clrf	(??_put_fat+2)& (0+255),c
  9934  008CF6  5051               	movf	??_put_fat+1,w,c
  9935  008CF8  6EDF               	movwf	indf2,c
  9936  008CFA  D0DF               	goto	L15
  9937  008CFC                     l7035:
  9938                           
  9939                           ;ff.c: 955: res = move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4)));
  9940  008CFC  C047  F03C         	movff	put_fat@fs+1,move_window@fs+1
  9941  008D00  C046  F03B         	movff	put_fat@fs,move_window@fs
  9942  008D04  EE20 F022          	lfsr	2,34
  9943  008D08  5046               	movf	put_fat@fs,w,c
  9944  008D0A  26D9               	addwf	fsr2l,f,c
  9945  008D0C  5047               	movf	put_fat@fs+1,w,c
  9946  008D0E  22DA               	addwfc	fsr2h,f,c
  9947  008D10  CFDE F050          	movff	postinc2,??_put_fat
  9948  008D14  CFDE F051          	movff	postinc2,??_put_fat+1
  9949  008D18  CFDE F052          	movff	postinc2,??_put_fat+2
  9950  008D1C  CFDE F053          	movff	postinc2,??_put_fat+3
  9951  008D20  C048  F054         	movff	put_fat@clst,??_put_fat+4
  9952  008D24  C049  F055         	movff	put_fat@clst+1,??_put_fat+5
  9953  008D28  C04A  F056         	movff	put_fat@clst+2,??_put_fat+6
  9954  008D2C  C04B  F057         	movff	put_fat@clst+3,??_put_fat+7
  9955  008D30  0E08               	movlw	8
  9956  008D32  D005               	goto	u8840
  9957  008D34                     u8845:
  9958  008D34  90D8               	bcf	status,0,c
  9959  008D36  3257               	rrcf	??_put_fat+7,f,c
  9960  008D38  3256               	rrcf	??_put_fat+6,f,c
  9961  008D3A  3255               	rrcf	??_put_fat+5,f,c
  9962  008D3C  3254               	rrcf	??_put_fat+4,f,c
  9963  008D3E                     u8840:
  9964  008D3E  2EE8               	decfsz	wreg,f,c
  9965  008D40  D7F9               	goto	u8845
  9966  008D42  5050               	movf	??_put_fat,w,c
  9967  008D44  2454               	addwf	??_put_fat+4,w,c
  9968  008D46  6E3D               	movwf	move_window@sector,c
  9969  008D48  5051               	movf	??_put_fat+1,w,c
  9970  008D4A  2055               	addwfc	??_put_fat+5,w,c
  9971  008D4C  6E3E               	movwf	move_window@sector+1,c
  9972  008D4E  5052               	movf	??_put_fat+2,w,c
  9973  008D50  2056               	addwfc	??_put_fat+6,w,c
  9974  008D52  6E3F               	movwf	move_window@sector+2,c
  9975  008D54  5053               	movf	??_put_fat+3,w,c
  9976  008D56  2057               	addwfc	??_put_fat+7,w,c
  9977  008D58  6E40               	movwf	move_window@sector+3,c
  9978  008D5A  EC66  F02C         	call	_move_window	;wreg free
  9979  008D5E  6E74               	movwf	put_fat@res,c
  9980                           
  9981                           ;ff.c: 956: if (res != FR_OK) break;
  9982  008D60  5074               	movf	put_fat@res,w,c
  9983  008D62  A4D8               	btfss	status,2,c
  9984  008D64  D0C5               	goto	l7057
  9985                           
  9986                           ;ff.c: 957: p = &fs->win[clst * 4 % ((UINT)512)];
  9987  008D66  0EFF               	movlw	255
  9988  008D68  6E50               	movwf	??_put_fat& (0+255),c
  9989  008D6A  0E01               	movlw	1
  9990  008D6C  6E51               	movwf	(??_put_fat+1)& (0+255),c
  9991  008D6E  C048  F052         	movff	put_fat@clst,??_put_fat+2
  9992  008D72  C049  F053         	movff	put_fat@clst+1,??_put_fat+3
  9993  008D76  90D8               	bcf	status,0,c
  9994  008D78  3652               	rlcf	??_put_fat+2,f,c
  9995  008D7A  3653               	rlcf	??_put_fat+3,f,c
  9996  008D7C  90D8               	bcf	status,0,c
  9997  008D7E  3652               	rlcf	??_put_fat+2,f,c
  9998  008D80  3653               	rlcf	??_put_fat+3,f,c
  9999  008D82  5050               	movf	??_put_fat,w,c
 10000  008D84  1652               	andwf	??_put_fat+2,f,c
 10001  008D86  5051               	movf	??_put_fat+1,w,c
 10002  008D88  1653               	andwf	??_put_fat+3,f,c
 10003  008D8A  0E32               	movlw	50
 10004  008D8C  2652               	addwf	??_put_fat+2,f,c
 10005  008D8E  0E00               	movlw	0
 10006  008D90  2253               	addwfc	??_put_fat+3,f,c
 10007  008D92  5052               	movf	??_put_fat+2,w,c
 10008  008D94  2446               	addwf	put_fat@fs,w,c
 10009  008D96  6E75               	movwf	put_fat@p,c
 10010  008D98  5053               	movf	??_put_fat+3,w,c
 10011  008D9A  2047               	addwfc	put_fat@fs+1,w,c
 10012  008D9C  6E76               	movwf	put_fat@p+1,c
 10013                           
 10014                           ;ff.c: 958: val |= (DWORD)(((DWORD)*((BYTE*)(p)+3)<<24)|((DWORD)*((BYTE*)(p)+2)<<16)|((W
      +                          ORD)*((BYTE*)(p)+1)<<8)|*(BYTE*)(p)) & 0xF0000000;
 10015  008D9E  EE20 F001          	lfsr	2,1
 10016  008DA2  5075               	movf	put_fat@p,w,c
 10017  008DA4  26D9               	addwf	fsr2l,f,c
 10018  008DA6  5076               	movf	put_fat@p+1,w,c
 10019  008DA8  22DA               	addwfc	fsr2h,f,c
 10020  008DAA  50DF               	movf	indf2,w,c
 10021  008DAC  6E50               	movwf	??_put_fat& (0+255),c
 10022  008DAE  5050               	movf	??_put_fat,w,c
 10023  008DB0  6E52               	movwf	(??_put_fat+2)& (0+255),c
 10024  008DB2  6A51               	clrf	(??_put_fat+1)& (0+255),c
 10025  008DB4  EE20 F002          	lfsr	2,2
 10026  008DB8  5075               	movf	put_fat@p,w,c
 10027  008DBA  26D9               	addwf	fsr2l,f,c
 10028  008DBC  5076               	movf	put_fat@p+1,w,c
 10029  008DBE  22DA               	addwfc	fsr2h,f,c
 10030  008DC0  50DF               	movf	indf2,w,c
 10031  008DC2  6E53               	movwf	(??_put_fat+3)& (0+255),c
 10032  008DC4  C053  F054         	movff	??_put_fat+3,??_put_fat+4
 10033  008DC8  6A55               	clrf	(??_put_fat+5)& (0+255),c
 10034  008DCA  6A56               	clrf	(??_put_fat+6)& (0+255),c
 10035  008DCC  6A57               	clrf	(??_put_fat+7)& (0+255),c
 10036  008DCE  C055  F057         	movff	??_put_fat+5,??_put_fat+7
 10037  008DD2  C054  F056         	movff	??_put_fat+4,??_put_fat+6
 10038  008DD6  6A55               	clrf	??_put_fat+5,c
 10039  008DD8  6A54               	clrf	??_put_fat+4,c
 10040  008DDA  EE20 F003          	lfsr	2,3
 10041  008DDE  5075               	movf	put_fat@p,w,c
 10042  008DE0  26D9               	addwf	fsr2l,f,c
 10043  008DE2  5076               	movf	put_fat@p+1,w,c
 10044  008DE4  22DA               	addwfc	fsr2h,f,c
 10045  008DE6  50DF               	movf	indf2,w,c
 10046  008DE8  6E58               	movwf	(??_put_fat+8)& (0+255),c
 10047  008DEA  C058  F059         	movff	??_put_fat+8,??_put_fat+9
 10048  008DEE  6A5A               	clrf	(??_put_fat+10)& (0+255),c
 10049  008DF0  6A5B               	clrf	(??_put_fat+11)& (0+255),c
 10050  008DF2  6A5C               	clrf	(??_put_fat+12)& (0+255),c
 10051  008DF4  C059  F05C         	movff	??_put_fat+9,??_put_fat+12
 10052  008DF8  6A5B               	clrf	??_put_fat+11,c
 10053  008DFA  6A5A               	clrf	??_put_fat+10,c
 10054  008DFC  6A59               	clrf	??_put_fat+9,c
 10055  008DFE  5054               	movf	??_put_fat+4,w,c
 10056  008E00  1059               	iorwf	??_put_fat+9,w,c
 10057  008E02  6E5D               	movwf	(??_put_fat+13)& (0+255),c
 10058  008E04  5055               	movf	??_put_fat+5,w,c
 10059  008E06  105A               	iorwf	??_put_fat+10,w,c
 10060  008E08  6E5E               	movwf	(??_put_fat+14)& (0+255),c
 10061  008E0A  5056               	movf	??_put_fat+6,w,c
 10062  008E0C  105B               	iorwf	??_put_fat+11,w,c
 10063  008E0E  6E5F               	movwf	(??_put_fat+15)& (0+255),c
 10064  008E10  5057               	movf	??_put_fat+7,w,c
 10065  008E12  105C               	iorwf	??_put_fat+12,w,c
 10066  008E14  6E60               	movwf	(??_put_fat+16)& (0+255),c
 10067  008E16  5051               	movf	??_put_fat+1,w,c
 10068  008E18  105D               	iorwf	??_put_fat+13,w,c
 10069  008E1A  6E61               	movwf	(??_put_fat+17)& (0+255),c
 10070  008E1C  5052               	movf	??_put_fat+2,w,c
 10071  008E1E  105E               	iorwf	??_put_fat+14,w,c
 10072  008E20  6E62               	movwf	(??_put_fat+18)& (0+255),c
 10073  008E22  0E00               	movlw	0
 10074  008E24  105F               	iorwf	??_put_fat+15,w,c
 10075  008E26  6E63               	movwf	(??_put_fat+19)& (0+255),c
 10076  008E28  0E00               	movlw	0
 10077  008E2A  1060               	iorwf	??_put_fat+16,w,c
 10078  008E2C  6E64               	movwf	(??_put_fat+20)& (0+255),c
 10079  008E2E  C075  FFD9         	movff	put_fat@p,fsr2l
 10080  008E32  C076  FFDA         	movff	put_fat@p+1,fsr2h
 10081  008E36  50DF               	movf	indf2,w,c
 10082  008E38  6E65               	movwf	(??_put_fat+21)& (0+255),c
 10083  008E3A  5065               	movf	??_put_fat+21,w,c
 10084  008E3C  1061               	iorwf	??_put_fat+17,w,c
 10085  008E3E  6E66               	movwf	(??_put_fat+22)& (0+255),c
 10086  008E40  5062               	movf	??_put_fat+18,w,c
 10087  008E42  6E67               	movwf	(??_put_fat+23)& (0+255),c
 10088  008E44  5063               	movf	??_put_fat+19,w,c
 10089  008E46  6E68               	movwf	(??_put_fat+24)& (0+255),c
 10090  008E48  5064               	movf	??_put_fat+20,w,c
 10091  008E4A  6E69               	movwf	(??_put_fat+25)& (0+255),c
 10092  008E4C  0E00               	movlw	0
 10093  008E4E  1466               	andwf	??_put_fat+22,w,c
 10094  008E50  6E6A               	movwf	(??_put_fat+26)& (0+255),c
 10095  008E52  0E00               	movlw	0
 10096  008E54  1467               	andwf	??_put_fat+23,w,c
 10097  008E56  6E6B               	movwf	(??_put_fat+27)& (0+255),c
 10098  008E58  0E00               	movlw	0
 10099  008E5A  1468               	andwf	??_put_fat+24,w,c
 10100  008E5C  6E6C               	movwf	(??_put_fat+28)& (0+255),c
 10101  008E5E  0EF0               	movlw	240
 10102  008E60  1469               	andwf	??_put_fat+25,w,c
 10103  008E62  6E6D               	movwf	(??_put_fat+29)& (0+255),c
 10104  008E64  506A               	movf	??_put_fat+26,w,c
 10105  008E66  124C               	iorwf	put_fat@val,f,c
 10106  008E68  506B               	movf	??_put_fat+27,w,c
 10107  008E6A  124D               	iorwf	put_fat@val+1,f,c
 10108  008E6C  506C               	movf	??_put_fat+28,w,c
 10109  008E6E  124E               	iorwf	put_fat@val+2,f,c
 10110  008E70  506D               	movf	??_put_fat+29,w,c
 10111  008E72  124F               	iorwf	put_fat@val+3,f,c
 10112                           
 10113                           ;ff.c: 959: *(BYTE*)(p)=(BYTE)(val); *((BYTE*)(p)+1)=(BYTE)((WORD)(val)>>8); *((BYTE*)(p
      +                          )+2)=(BYTE)((DWORD)(val)>>16); *((BYTE*)(p)+3)=(BYTE)((DWORD)(val)>>24);
 10114  008E74  C075  FFD9         	movff	put_fat@p,fsr2l
 10115  008E78  C076  FFDA         	movff	put_fat@p+1,fsr2h
 10116  008E7C  C04C  FFDF         	movff	put_fat@val,indf2
 10117  008E80  EE20 F001          	lfsr	2,1
 10118  008E84  5075               	movf	put_fat@p,w,c
 10119  008E86  26D9               	addwf	fsr2l,f,c
 10120  008E88  5076               	movf	put_fat@p+1,w,c
 10121  008E8A  22DA               	addwfc	fsr2h,f,c
 10122  008E8C  C04D  F050         	movff	put_fat@val+1,??_put_fat
 10123  008E90  C050  F051         	movff	??_put_fat,??_put_fat+1
 10124  008E94  6A52               	clrf	(??_put_fat+2)& (0+255),c
 10125  008E96  5051               	movf	??_put_fat+1,w,c
 10126  008E98  6EDF               	movwf	indf2,c
 10127  008E9A  EE20 F002          	lfsr	2,2
 10128  008E9E  5075               	movf	put_fat@p,w,c
 10129  008EA0  26D9               	addwf	fsr2l,f,c
 10130  008EA2  5076               	movf	put_fat@p+1,w,c
 10131  008EA4  22DA               	addwfc	fsr2h,f,c
 10132  008EA6  C04E  FFDF         	movff	put_fat@val+2,indf2
 10133  008EAA  EE20 F003          	lfsr	2,3
 10134  008EAE  5075               	movf	put_fat@p,w,c
 10135  008EB0  26D9               	addwf	fsr2l,f,c
 10136  008EB2  5076               	movf	put_fat@p+1,w,c
 10137  008EB4  22DA               	addwfc	fsr2h,f,c
 10138  008EB6  C04F  FFDF         	movff	put_fat@val+3,indf2
 10139  008EBA                     L15:
 10140                           
 10141                           ;ff.c: 960: fs->wflag = 1;
 10142  008EBA  EE20 F004          	lfsr	2,4
 10143  008EBE  5046               	movf	put_fat@fs,w,c
 10144  008EC0  26D9               	addwf	fsr2l,f,c
 10145  008EC2  5047               	movf	put_fat@fs+1,w,c
 10146  008EC4  22DA               	addwfc	fsr2h,f,c
 10147  008EC6  0E01               	movlw	1
 10148  008EC8  6EDF               	movwf	indf2,c
 10149                           
 10150                           ;ff.c: 961: break;
 10151  008ECA  D012               	goto	l7057
 10152  008ECC                     l7053:
 10153                           
 10154                           ;ff.c: 964: res = FR_INT_ERR;
 10155  008ECC  0E02               	movlw	2
 10156  008ECE  6E74               	movwf	put_fat@res,c
 10157                           
 10158                           ;ff.c: 965: }
 10159  008ED0  D00F               	goto	l7057
 10160  008ED2                     l7055:
 10161  008ED2  C046  FFD9         	movff	put_fat@fs,fsr2l
 10162  008ED6  C047  FFDA         	movff	put_fat@fs+1,fsr2h
 10163  008EDA  50DF               	movf	indf2,w,c
 10164                           
 10165                           ; Switch size 1, requested type "space"
 10166                           ; Number of cases is 3, Range of values is 1 to 3
 10167                           ; switch strategies available:
 10168                           ; Name         Instructions Cycles
 10169                           ; simple_byte           10     6 (average)
 10170                           ;	Chosen strategy is simple_byte
 10171  008EDC  0A01               	xorlw	1	; case 1
 10172  008EDE  B4D8               	btfsc	status,2,c
 10173  008EE0  D5AE               	goto	l351
 10174  008EE2  0A03               	xorlw	3	; case 2
 10175  008EE4  B4D8               	btfsc	status,2,c
 10176  008EE6  D6AA               	goto	l7025
 10177  008EE8  0A01               	xorlw	1	; case 3
 10178  008EEA  B4D8               	btfsc	status,2,c
 10179  008EEC  D707               	goto	l7035
 10180  008EEE  D7EE               	goto	l7053
 10181  008EF0                     l7057:
 10182                           
 10183                           ;ff.c: 966: }
 10184                           ;ff.c: 968: return res;
 10185  008EF0  5074               	movf	put_fat@res,w,c
 10186  008EF2  0012               	return	
 10187  008EF4                     __end_of_put_fat:
 10188                           	opt stack 0
 10189                           tblptru	equ	0xFF8
 10190                           tblptrh	equ	0xFF7
 10191                           tblptrl	equ	0xFF6
 10192                           tablat	equ	0xFF5
 10193                           prodh	equ	0xFF4
 10194                           prodl	equ	0xFF3
 10195                           indf0	equ	0xFEF
 10196                           postinc0	equ	0xFEE
 10197                           fsr0h	equ	0xFEA
 10198                           fsr0l	equ	0xFE9
 10199                           wreg	equ	0xFE8
 10200                           indf1	equ	0xFE7
 10201                           postinc1	equ	0xFE6
 10202                           postdec1	equ	0xFE5
 10203                           fsr1h	equ	0xFE2
 10204                           fsr1l	equ	0xFE1
 10205                           indf2	equ	0xFDF
 10206                           postinc2	equ	0xFDE
 10207                           postdec2	equ	0xFDD
 10208                           plusw2	equ	0xFDB
 10209                           fsr2h	equ	0xFDA
 10210                           fsr2l	equ	0xFD9
 10211                           status	equ	0xFD8
 10212                           
 10213 ;; *************** function _get_fat *****************
 10214 ;; Defined at:
 10215 ;;		line 861 in file "ff.c"
 10216 ;; Parameters:    Size  Location     Type
 10217 ;;  fs              2   69[COMRAM] PTR struct .
 10218 ;;		 -> NULL(0), FatFs(562), 
 10219 ;;  clst            4   71[COMRAM] unsigned long 
 10220 ;; Auto vars:     Size  Location     Type
 10221 ;;  val             4  103[COMRAM] unsigned long 
 10222 ;;  p               2  111[COMRAM] PTR unsigned char 
 10223 ;;		 -> FatFs.win(512), NULL(0), FatFs(562), 
 10224 ;;  bc              2  109[COMRAM] unsigned int 
 10225 ;;  wc              2  107[COMRAM] unsigned int 
 10226 ;; Return value:  Size  Location     Type
 10227 ;;                  4   69[COMRAM] unsigned long 
 10228 ;; Registers used:
 10229 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 10230 ;; Tracked objects:
 10231 ;;		On entry : 0/0
 10232 ;;		On exit  : 0/0
 10233 ;;		Unchanged: 0/0
 10234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10235 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10236 ;;      Locals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10237 ;;      Temps:         26       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10238 ;;      Totals:        44       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10239 ;;Total ram usage:       44 bytes
 10240 ;; Hardware stack levels used:    1
 10241 ;; Hardware stack levels required when called:    7
 10242 ;; This function calls:
 10243 ;;		_move_window
 10244 ;; This function is called by:
 10245 ;;		_remove_chain
 10246 ;;		_create_chain
 10247 ;;		_dir_sdi
 10248 ;;		_dir_next
 10249 ;;		_f_read
 10250 ;;		_f_lseek
 10251 ;;		_f_getfree
 10252 ;;		_f_truncate
 10253 ;;		_f_forward
 10254 ;; This function uses a non-reentrant model
 10255 ;;
 10256                           
 10257                           	psect	text19
 10258  0085B0                     __ptext19:
 10259                           	opt stack 0
 10260  0085B0                     _get_fat:
 10261                           	opt stack 21
 10262                           
 10263                           ;ff.c: 866: UINT wc, bc;
 10264                           ;ff.c: 867: BYTE *p;
 10265                           ;ff.c: 868: DWORD val;
 10266                           ;ff.c: 871: if (clst < 2 || clst >= fs->n_fatent) {
 10267                           
 10268                           ;incstack = 0
 10269  0085B0  0E02               	movlw	2
 10270  0085B2  5C48               	subwf	get_fat@clst,w,c
 10271  0085B4  0E00               	movlw	0
 10272  0085B6  5849               	subwfb	get_fat@clst+1,w,c
 10273  0085B8  0E00               	movlw	0
 10274  0085BA  584A               	subwfb	get_fat@clst+2,w,c
 10275  0085BC  0E00               	movlw	0
 10276  0085BE  584B               	subwfb	get_fat@clst+3,w,c
 10277  0085C0  A0D8               	btfss	status,0,c
 10278  0085C2  D1F9               	goto	l6977
 10279  0085C4  EE20 F016          	lfsr	2,22
 10280  0085C8  5046               	movf	get_fat@fs,w,c
 10281  0085CA  26D9               	addwf	fsr2l,f,c
 10282  0085CC  5047               	movf	get_fat@fs+1,w,c
 10283  0085CE  22DA               	addwfc	fsr2h,f,c
 10284  0085D0  CFDE F04C          	movff	postinc2,??_get_fat
 10285  0085D4  CFDE F04D          	movff	postinc2,??_get_fat+1
 10286  0085D8  CFDE F04E          	movff	postinc2,??_get_fat+2
 10287  0085DC  CFDE F04F          	movff	postinc2,??_get_fat+3
 10288  0085E0  504C               	movf	??_get_fat,w,c
 10289  0085E2  5C48               	subwf	get_fat@clst,w,c
 10290  0085E4  504D               	movf	??_get_fat+1,w,c
 10291  0085E6  5849               	subwfb	get_fat@clst+1,w,c
 10292  0085E8  504E               	movf	??_get_fat+2,w,c
 10293  0085EA  584A               	subwfb	get_fat@clst+2,w,c
 10294  0085EC  504F               	movf	??_get_fat+3,w,c
 10295  0085EE  584B               	subwfb	get_fat@clst+3,w,c
 10296  0085F0  B0D8               	btfsc	status,0,c
 10297  0085F2  D1E1               	goto	l6977
 10298                           
 10299                           ;ff.c: 875: val = 0xFFFFFFFF;
 10300                           
 10301                           ;ff.c: 874: } else {
 10302                           
 10303                           ;ff.c: 872: val = 1;
 10304  0085F4  6868               	setf	get_fat@val,c
 10305  0085F6  6869               	setf	get_fat@val+1,c
 10306  0085F8  686A               	setf	get_fat@val+2,c
 10307  0085FA  686B               	setf	get_fat@val+3,c
 10308                           
 10309                           ;ff.c: 877: switch (fs->fs_type) {
 10310  0085FC  D1E5               	goto	l6979
 10311  0085FE                     l330:
 10312                           
 10313                           ;ff.c: 879: bc = (UINT)clst; bc += bc / 2;
 10314  0085FE  C048  F06E         	movff	get_fat@clst,get_fat@bc
 10315  008602  C049  F06F         	movff	get_fat@clst+1,get_fat@bc+1
 10316  008606  90D8               	bcf	status,0,c
 10317  008608  306F               	rrcf	get_fat@bc+1,w,c
 10318  00860A  6E4D               	movwf	(??_get_fat+1)& (0+255),c
 10319  00860C  306E               	rrcf	get_fat@bc,w,c
 10320  00860E  6E4C               	movwf	??_get_fat& (0+255),c
 10321  008610  504C               	movf	??_get_fat,w,c
 10322  008612  266E               	addwf	get_fat@bc,f,c
 10323  008614  504D               	movf	??_get_fat+1,w,c
 10324  008616  226F               	addwfc	get_fat@bc+1,f,c
 10325                           
 10326                           ;ff.c: 880: if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
 10327  008618  C047  F03C         	movff	get_fat@fs+1,move_window@fs+1
 10328  00861C  C046  F03B         	movff	get_fat@fs,move_window@fs
 10329  008620  EE20 F022          	lfsr	2,34
 10330  008624  5046               	movf	get_fat@fs,w,c
 10331  008626  26D9               	addwf	fsr2l,f,c
 10332  008628  5047               	movf	get_fat@fs+1,w,c
 10333  00862A  22DA               	addwfc	fsr2h,f,c
 10334  00862C  CFDE F04C          	movff	postinc2,??_get_fat
 10335  008630  CFDE F04D          	movff	postinc2,??_get_fat+1
 10336  008634  CFDE F04E          	movff	postinc2,??_get_fat+2
 10337  008638  CFDE F04F          	movff	postinc2,??_get_fat+3
 10338  00863C  C06E  F050         	movff	get_fat@bc,??_get_fat+4
 10339  008640  C06F  F051         	movff	get_fat@bc+1,??_get_fat+5
 10340  008644  0E09               	movlw	9
 10341  008646  6E52               	movwf	(??_get_fat+6)& (0+255),c
 10342  008648                     u8655:
 10343  008648  90D8               	bcf	status,0,c
 10344  00864A  3251               	rrcf	??_get_fat+5,f,c
 10345  00864C  3250               	rrcf	??_get_fat+4,f,c
 10346  00864E  2E52               	decfsz	(??_get_fat+6)& (0+255),f,c
 10347  008650  D7FB               	goto	u8655
 10348  008652  5050               	movf	??_get_fat+4,w,c
 10349  008654  244C               	addwf	??_get_fat,w,c
 10350  008656  6E3D               	movwf	move_window@sector,c
 10351  008658  5051               	movf	??_get_fat+5,w,c
 10352  00865A  204D               	addwfc	??_get_fat+1,w,c
 10353  00865C  6E3E               	movwf	move_window@sector+1,c
 10354  00865E  0E00               	movlw	0
 10355  008660  204E               	addwfc	??_get_fat+2,w,c
 10356  008662  6E3F               	movwf	move_window@sector+2,c
 10357  008664  0E00               	movlw	0
 10358  008666  204F               	addwfc	??_get_fat+3,w,c
 10359  008668  6E40               	movwf	move_window@sector+3,c
 10360  00866A  EC66  F02C         	call	_move_window	;wreg free
 10361  00866E  0900               	iorlw	0
 10362  008670  A4D8               	btfss	status,2,c
 10363  008672  D1B9               	goto	l328
 10364                           
 10365                           ;ff.c: 881: wc = fs->win[bc++ % ((UINT)512)];
 10366  008674  0EFF               	movlw	255
 10367  008676  6E4C               	movwf	??_get_fat& (0+255),c
 10368  008678  0E01               	movlw	1
 10369  00867A  6E4D               	movwf	(??_get_fat+1)& (0+255),c
 10370  00867C  C06E  F04E         	movff	get_fat@bc,??_get_fat+2
 10371  008680  C06F  F04F         	movff	get_fat@bc+1,??_get_fat+3
 10372  008684  504C               	movf	??_get_fat,w,c
 10373  008686  164E               	andwf	??_get_fat+2,f,c
 10374  008688  504D               	movf	??_get_fat+1,w,c
 10375  00868A  164F               	andwf	??_get_fat+3,f,c
 10376  00868C  0E32               	movlw	50
 10377  00868E  264E               	addwf	??_get_fat+2,f,c
 10378  008690  0E00               	movlw	0
 10379  008692  224F               	addwfc	??_get_fat+3,f,c
 10380  008694  504E               	movf	??_get_fat+2,w,c
 10381  008696  2446               	addwf	get_fat@fs,w,c
 10382  008698  6ED9               	movwf	fsr2l,c
 10383  00869A  504F               	movf	??_get_fat+3,w,c
 10384  00869C  2047               	addwfc	get_fat@fs+1,w,c
 10385  00869E  6EDA               	movwf	fsr2h,c
 10386  0086A0  50DF               	movf	indf2,w,c
 10387  0086A2  6E50               	movwf	(??_get_fat+4)& (0+255),c
 10388  0086A4  5050               	movf	??_get_fat+4,w,c
 10389  0086A6  6E6C               	movwf	get_fat@wc,c
 10390  0086A8  6A6D               	clrf	get_fat@wc+1,c
 10391  0086AA  4A6E               	infsnz	get_fat@bc,f,c
 10392  0086AC  2A6F               	incf	get_fat@bc+1,f,c
 10393                           
 10394                           ;ff.c: 882: if (move_window(fs, fs->fatbase + (bc / ((UINT)512))) != FR_OK) break;
 10395  0086AE  C047  F03C         	movff	get_fat@fs+1,move_window@fs+1
 10396  0086B2  C046  F03B         	movff	get_fat@fs,move_window@fs
 10397  0086B6  EE20 F022          	lfsr	2,34
 10398  0086BA  5046               	movf	get_fat@fs,w,c
 10399  0086BC  26D9               	addwf	fsr2l,f,c
 10400  0086BE  5047               	movf	get_fat@fs+1,w,c
 10401  0086C0  22DA               	addwfc	fsr2h,f,c
 10402  0086C2  CFDE F04C          	movff	postinc2,??_get_fat
 10403  0086C6  CFDE F04D          	movff	postinc2,??_get_fat+1
 10404  0086CA  CFDE F04E          	movff	postinc2,??_get_fat+2
 10405  0086CE  CFDE F04F          	movff	postinc2,??_get_fat+3
 10406  0086D2  C06E  F050         	movff	get_fat@bc,??_get_fat+4
 10407  0086D6  C06F  F051         	movff	get_fat@bc+1,??_get_fat+5
 10408  0086DA  0E09               	movlw	9
 10409  0086DC  6E52               	movwf	(??_get_fat+6)& (0+255),c
 10410  0086DE                     u8675:
 10411  0086DE  90D8               	bcf	status,0,c
 10412  0086E0  3251               	rrcf	??_get_fat+5,f,c
 10413  0086E2  3250               	rrcf	??_get_fat+4,f,c
 10414  0086E4  2E52               	decfsz	(??_get_fat+6)& (0+255),f,c
 10415  0086E6  D7FB               	goto	u8675
 10416  0086E8  5050               	movf	??_get_fat+4,w,c
 10417  0086EA  244C               	addwf	??_get_fat,w,c
 10418  0086EC  6E3D               	movwf	move_window@sector,c
 10419  0086EE  5051               	movf	??_get_fat+5,w,c
 10420  0086F0  204D               	addwfc	??_get_fat+1,w,c
 10421  0086F2  6E3E               	movwf	move_window@sector+1,c
 10422  0086F4  0E00               	movlw	0
 10423  0086F6  204E               	addwfc	??_get_fat+2,w,c
 10424  0086F8  6E3F               	movwf	move_window@sector+2,c
 10425  0086FA  0E00               	movlw	0
 10426  0086FC  204F               	addwfc	??_get_fat+3,w,c
 10427  0086FE  6E40               	movwf	move_window@sector+3,c
 10428  008700  EC66  F02C         	call	_move_window	;wreg free
 10429  008704  0900               	iorlw	0
 10430  008706  A4D8               	btfss	status,2,c
 10431  008708  D16E               	goto	l328
 10432                           
 10433                           ;ff.c: 883: wc |= fs->win[bc % ((UINT)512)] << 8;
 10434  00870A  0EFF               	movlw	255
 10435  00870C  6E4C               	movwf	??_get_fat& (0+255),c
 10436  00870E  0E01               	movlw	1
 10437  008710  6E4D               	movwf	(??_get_fat+1)& (0+255),c
 10438  008712  C06E  F04E         	movff	get_fat@bc,??_get_fat+2
 10439  008716  C06F  F04F         	movff	get_fat@bc+1,??_get_fat+3
 10440  00871A  504C               	movf	??_get_fat,w,c
 10441  00871C  164E               	andwf	??_get_fat+2,f,c
 10442  00871E  504D               	movf	??_get_fat+1,w,c
 10443  008720  164F               	andwf	??_get_fat+3,f,c
 10444  008722  0E32               	movlw	50
 10445  008724  264E               	addwf	??_get_fat+2,f,c
 10446  008726  0E00               	movlw	0
 10447  008728  224F               	addwfc	??_get_fat+3,f,c
 10448  00872A  504E               	movf	??_get_fat+2,w,c
 10449  00872C  2446               	addwf	get_fat@fs,w,c
 10450  00872E  6ED9               	movwf	fsr2l,c
 10451  008730  504F               	movf	??_get_fat+3,w,c
 10452  008732  2047               	addwfc	get_fat@fs+1,w,c
 10453  008734  6EDA               	movwf	fsr2h,c
 10454  008736  50DF               	movf	indf2,w,c
 10455  008738  6E50               	movwf	(??_get_fat+4)& (0+255),c
 10456  00873A  5050               	movf	??_get_fat+4,w,c
 10457  00873C  6E52               	movwf	(??_get_fat+6)& (0+255),c
 10458  00873E  6A51               	clrf	(??_get_fat+5)& (0+255),c
 10459  008740  5051               	movf	??_get_fat+5,w,c
 10460  008742  126C               	iorwf	get_fat@wc,f,c
 10461  008744  5052               	movf	??_get_fat+6,w,c
 10462  008746  126D               	iorwf	get_fat@wc+1,f,c
 10463                           
 10464                           ;ff.c: 884: val = clst & 1 ? wc >> 4 : (wc & 0xFFF);
 10465  008748  B048               	btfsc	get_fat@clst,0,c
 10466  00874A  D007               	goto	l6957
 10467  00874C  0EFF               	movlw	255
 10468  00874E  146C               	andwf	get_fat@wc,w,c
 10469  008750  6E66               	movwf	_get_fat$524,c
 10470  008752  0E0F               	movlw	15
 10471  008754  146D               	andwf	get_fat@wc+1,w,c
 10472  008756  6E67               	movwf	_get_fat$524+1,c
 10473  008758  D00F               	goto	l6959
 10474  00875A                     l6957:
 10475  00875A  C06C  F04C         	movff	get_fat@wc,??_get_fat
 10476  00875E  C06D  F04D         	movff	get_fat@wc+1,??_get_fat+1
 10477  008762  0E04               	movlw	4
 10478  008764  6E4E               	movwf	(??_get_fat+2)& (0+255),c
 10479  008766                     u8705:
 10480  008766  90D8               	bcf	status,0,c
 10481  008768  324D               	rrcf	??_get_fat+1,f,c
 10482  00876A  324C               	rrcf	??_get_fat,f,c
 10483  00876C  2E4E               	decfsz	(??_get_fat+2)& (0+255),f,c
 10484  00876E  D7FB               	goto	u8705
 10485  008770  C04C  F066         	movff	??_get_fat,_get_fat$524
 10486  008774  C04D  F067         	movff	??_get_fat+1,_get_fat$524+1
 10487  008778                     l6959:
 10488  008778  C066  F068         	movff	_get_fat$524,get_fat@val
 10489  00877C  C067  F069         	movff	_get_fat$524+1,get_fat@val+1
 10490  008780  D064               	goto	L17
 10491  008782                     l6961:
 10492                           
 10493                           ;ff.c: 888: if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 2))) != FR_OK) brea
      +                          k;
 10494  008782  C047  F03C         	movff	get_fat@fs+1,move_window@fs+1
 10495  008786  C046  F03B         	movff	get_fat@fs,move_window@fs
 10496  00878A  EE20 F022          	lfsr	2,34
 10497  00878E  5046               	movf	get_fat@fs,w,c
 10498  008790  26D9               	addwf	fsr2l,f,c
 10499  008792  5047               	movf	get_fat@fs+1,w,c
 10500  008794  22DA               	addwfc	fsr2h,f,c
 10501  008796  CFDE F04C          	movff	postinc2,??_get_fat
 10502  00879A  CFDE F04D          	movff	postinc2,??_get_fat+1
 10503  00879E  CFDE F04E          	movff	postinc2,??_get_fat+2
 10504  0087A2  CFDE F04F          	movff	postinc2,??_get_fat+3
 10505  0087A6  C048  F050         	movff	get_fat@clst,??_get_fat+4
 10506  0087AA  C049  F051         	movff	get_fat@clst+1,??_get_fat+5
 10507  0087AE  C04A  F052         	movff	get_fat@clst+2,??_get_fat+6
 10508  0087B2  C04B  F053         	movff	get_fat@clst+3,??_get_fat+7
 10509  0087B6  C051  F050         	movff	??_get_fat+5,??_get_fat+4
 10510  0087BA  C052  F051         	movff	??_get_fat+6,??_get_fat+5
 10511  0087BE  C053  F052         	movff	??_get_fat+7,??_get_fat+6
 10512  0087C2  6A53               	clrf	??_get_fat+7,c
 10513  0087C4  504C               	movf	??_get_fat,w,c
 10514  0087C6  2450               	addwf	??_get_fat+4,w,c
 10515  0087C8  6E3D               	movwf	move_window@sector,c
 10516  0087CA  504D               	movf	??_get_fat+1,w,c
 10517  0087CC  2051               	addwfc	??_get_fat+5,w,c
 10518  0087CE  6E3E               	movwf	move_window@sector+1,c
 10519  0087D0  504E               	movf	??_get_fat+2,w,c
 10520  0087D2  2052               	addwfc	??_get_fat+6,w,c
 10521  0087D4  6E3F               	movwf	move_window@sector+2,c
 10522  0087D6  504F               	movf	??_get_fat+3,w,c
 10523  0087D8  2053               	addwfc	??_get_fat+7,w,c
 10524  0087DA  6E40               	movwf	move_window@sector+3,c
 10525  0087DC  EC66  F02C         	call	_move_window	;wreg free
 10526  0087E0  0900               	iorlw	0
 10527  0087E2  A4D8               	btfss	status,2,c
 10528  0087E4  D100               	goto	l328
 10529                           
 10530                           ;ff.c: 889: p = &fs->win[clst * 2 % ((UINT)512)];
 10531  0087E6  0EFF               	movlw	255
 10532  0087E8  6E4C               	movwf	??_get_fat& (0+255),c
 10533  0087EA  0E01               	movlw	1
 10534  0087EC  6E4D               	movwf	(??_get_fat+1)& (0+255),c
 10535  0087EE  C048  F04E         	movff	get_fat@clst,??_get_fat+2
 10536  0087F2  C049  F04F         	movff	get_fat@clst+1,??_get_fat+3
 10537  0087F6  90D8               	bcf	status,0,c
 10538  0087F8  364E               	rlcf	??_get_fat+2,f,c
 10539  0087FA  364F               	rlcf	??_get_fat+3,f,c
 10540  0087FC  504C               	movf	??_get_fat,w,c
 10541  0087FE  164E               	andwf	??_get_fat+2,f,c
 10542  008800  504D               	movf	??_get_fat+1,w,c
 10543  008802  164F               	andwf	??_get_fat+3,f,c
 10544  008804  0E32               	movlw	50
 10545  008806  264E               	addwf	??_get_fat+2,f,c
 10546  008808  0E00               	movlw	0
 10547  00880A  224F               	addwfc	??_get_fat+3,f,c
 10548  00880C  504E               	movf	??_get_fat+2,w,c
 10549  00880E  2446               	addwf	get_fat@fs,w,c
 10550  008810  6E70               	movwf	get_fat@p,c
 10551  008812  504F               	movf	??_get_fat+3,w,c
 10552  008814  2047               	addwfc	get_fat@fs+1,w,c
 10553  008816  6E71               	movwf	get_fat@p+1,c
 10554                           
 10555                           ;ff.c: 890: val = (WORD)(((WORD)*((BYTE*)(p)+1)<<8)|(WORD)*(BYTE*)(p));
 10556  008818  EE20 F001          	lfsr	2,1
 10557  00881C  5070               	movf	get_fat@p,w,c
 10558  00881E  26D9               	addwf	fsr2l,f,c
 10559  008820  5071               	movf	get_fat@p+1,w,c
 10560  008822  22DA               	addwfc	fsr2h,f,c
 10561  008824  50DF               	movf	indf2,w,c
 10562  008826  6E4C               	movwf	??_get_fat& (0+255),c
 10563  008828  504C               	movf	??_get_fat,w,c
 10564  00882A  6E4E               	movwf	(??_get_fat+2)& (0+255),c
 10565  00882C  6A4D               	clrf	(??_get_fat+1)& (0+255),c
 10566  00882E  C070  FFD9         	movff	get_fat@p,fsr2l
 10567  008832  C071  FFDA         	movff	get_fat@p+1,fsr2h
 10568  008836  50DF               	movf	indf2,w,c
 10569  008838  6E4F               	movwf	(??_get_fat+3)& (0+255),c
 10570  00883A  504F               	movf	??_get_fat+3,w,c
 10571  00883C  124D               	iorwf	??_get_fat+1,f,c
 10572  00883E  0E00               	movlw	0
 10573  008840  124E               	iorwf	??_get_fat+2,f,c
 10574  008842  C04D  F068         	movff	??_get_fat+1,get_fat@val
 10575  008846  C04E  F069         	movff	??_get_fat+2,get_fat@val+1
 10576  00884A                     L17:
 10577  00884A  6A6A               	clrf	get_fat@val+2,c
 10578  00884C  6A6B               	clrf	get_fat@val+3,c
 10579                           
 10580                           ;ff.c: 891: break;
 10581  00884E  D0CB               	goto	l328
 10582  008850                     l6969:
 10583                           
 10584                           ;ff.c: 894: if (move_window(fs, fs->fatbase + (clst / (((UINT)512) / 4))) != FR_OK) brea
      +                          k;
 10585  008850  C047  F03C         	movff	get_fat@fs+1,move_window@fs+1
 10586  008854  C046  F03B         	movff	get_fat@fs,move_window@fs
 10587  008858  EE20 F022          	lfsr	2,34
 10588  00885C  5046               	movf	get_fat@fs,w,c
 10589  00885E  26D9               	addwf	fsr2l,f,c
 10590  008860  5047               	movf	get_fat@fs+1,w,c
 10591  008862  22DA               	addwfc	fsr2h,f,c
 10592  008864  CFDE F04C          	movff	postinc2,??_get_fat
 10593  008868  CFDE F04D          	movff	postinc2,??_get_fat+1
 10594  00886C  CFDE F04E          	movff	postinc2,??_get_fat+2
 10595  008870  CFDE F04F          	movff	postinc2,??_get_fat+3
 10596  008874  C048  F050         	movff	get_fat@clst,??_get_fat+4
 10597  008878  C049  F051         	movff	get_fat@clst+1,??_get_fat+5
 10598  00887C  C04A  F052         	movff	get_fat@clst+2,??_get_fat+6
 10599  008880  C04B  F053         	movff	get_fat@clst+3,??_get_fat+7
 10600  008884  0E08               	movlw	8
 10601  008886  D005               	goto	u8720
 10602  008888                     u8725:
 10603  008888  90D8               	bcf	status,0,c
 10604  00888A  3253               	rrcf	??_get_fat+7,f,c
 10605  00888C  3252               	rrcf	??_get_fat+6,f,c
 10606  00888E  3251               	rrcf	??_get_fat+5,f,c
 10607  008890  3250               	rrcf	??_get_fat+4,f,c
 10608  008892                     u8720:
 10609  008892  2EE8               	decfsz	wreg,f,c
 10610  008894  D7F9               	goto	u8725
 10611  008896  504C               	movf	??_get_fat,w,c
 10612  008898  2450               	addwf	??_get_fat+4,w,c
 10613  00889A  6E3D               	movwf	move_window@sector,c
 10614  00889C  504D               	movf	??_get_fat+1,w,c
 10615  00889E  2051               	addwfc	??_get_fat+5,w,c
 10616  0088A0  6E3E               	movwf	move_window@sector+1,c
 10617  0088A2  504E               	movf	??_get_fat+2,w,c
 10618  0088A4  2052               	addwfc	??_get_fat+6,w,c
 10619  0088A6  6E3F               	movwf	move_window@sector+2,c
 10620  0088A8  504F               	movf	??_get_fat+3,w,c
 10621  0088AA  2053               	addwfc	??_get_fat+7,w,c
 10622  0088AC  6E40               	movwf	move_window@sector+3,c
 10623  0088AE  EC66  F02C         	call	_move_window	;wreg free
 10624  0088B2  0900               	iorlw	0
 10625  0088B4  A4D8               	btfss	status,2,c
 10626  0088B6  D097               	goto	l328
 10627                           
 10628                           ;ff.c: 895: p = &fs->win[clst * 4 % ((UINT)512)];
 10629  0088B8  0EFF               	movlw	255
 10630  0088BA  6E4C               	movwf	??_get_fat& (0+255),c
 10631  0088BC  0E01               	movlw	1
 10632  0088BE  6E4D               	movwf	(??_get_fat+1)& (0+255),c
 10633  0088C0  C048  F04E         	movff	get_fat@clst,??_get_fat+2
 10634  0088C4  C049  F04F         	movff	get_fat@clst+1,??_get_fat+3
 10635  0088C8  90D8               	bcf	status,0,c
 10636  0088CA  364E               	rlcf	??_get_fat+2,f,c
 10637  0088CC  364F               	rlcf	??_get_fat+3,f,c
 10638  0088CE  90D8               	bcf	status,0,c
 10639  0088D0  364E               	rlcf	??_get_fat+2,f,c
 10640  0088D2  364F               	rlcf	??_get_fat+3,f,c
 10641  0088D4  504C               	movf	??_get_fat,w,c
 10642  0088D6  164E               	andwf	??_get_fat+2,f,c
 10643  0088D8  504D               	movf	??_get_fat+1,w,c
 10644  0088DA  164F               	andwf	??_get_fat+3,f,c
 10645  0088DC  0E32               	movlw	50
 10646  0088DE  264E               	addwf	??_get_fat+2,f,c
 10647  0088E0  0E00               	movlw	0
 10648  0088E2  224F               	addwfc	??_get_fat+3,f,c
 10649  0088E4  504E               	movf	??_get_fat+2,w,c
 10650  0088E6  2446               	addwf	get_fat@fs,w,c
 10651  0088E8  6E70               	movwf	get_fat@p,c
 10652  0088EA  504F               	movf	??_get_fat+3,w,c
 10653  0088EC  2047               	addwfc	get_fat@fs+1,w,c
 10654  0088EE  6E71               	movwf	get_fat@p+1,c
 10655                           
 10656                           ;ff.c: 896: val = (DWORD)(((DWORD)*((BYTE*)(p)+3)<<24)|((DWORD)*((BYTE*)(p)+2)<<16)|((WO
      +                          RD)*((BYTE*)(p)+1)<<8)|*(BYTE*)(p)) & 0x0FFFFFFF;
 10657  0088F0  EE20 F001          	lfsr	2,1
 10658  0088F4  5070               	movf	get_fat@p,w,c
 10659  0088F6  26D9               	addwf	fsr2l,f,c
 10660  0088F8  5071               	movf	get_fat@p+1,w,c
 10661  0088FA  22DA               	addwfc	fsr2h,f,c
 10662  0088FC  50DF               	movf	indf2,w,c
 10663  0088FE  6E4C               	movwf	??_get_fat& (0+255),c
 10664  008900  504C               	movf	??_get_fat,w,c
 10665  008902  6E4E               	movwf	(??_get_fat+2)& (0+255),c
 10666  008904  6A4D               	clrf	(??_get_fat+1)& (0+255),c
 10667  008906  EE20 F002          	lfsr	2,2
 10668  00890A  5070               	movf	get_fat@p,w,c
 10669  00890C  26D9               	addwf	fsr2l,f,c
 10670  00890E  5071               	movf	get_fat@p+1,w,c
 10671  008910  22DA               	addwfc	fsr2h,f,c
 10672  008912  50DF               	movf	indf2,w,c
 10673  008914  6E4F               	movwf	(??_get_fat+3)& (0+255),c
 10674  008916  C04F  F050         	movff	??_get_fat+3,??_get_fat+4
 10675  00891A  6A51               	clrf	(??_get_fat+5)& (0+255),c
 10676  00891C  6A52               	clrf	(??_get_fat+6)& (0+255),c
 10677  00891E  6A53               	clrf	(??_get_fat+7)& (0+255),c
 10678  008920  C051  F053         	movff	??_get_fat+5,??_get_fat+7
 10679  008924  C050  F052         	movff	??_get_fat+4,??_get_fat+6
 10680  008928  6A51               	clrf	??_get_fat+5,c
 10681  00892A  6A50               	clrf	??_get_fat+4,c
 10682  00892C  EE20 F003          	lfsr	2,3
 10683  008930  5070               	movf	get_fat@p,w,c
 10684  008932  26D9               	addwf	fsr2l,f,c
 10685  008934  5071               	movf	get_fat@p+1,w,c
 10686  008936  22DA               	addwfc	fsr2h,f,c
 10687  008938  50DF               	movf	indf2,w,c
 10688  00893A  6E54               	movwf	(??_get_fat+8)& (0+255),c
 10689  00893C  C054  F055         	movff	??_get_fat+8,??_get_fat+9
 10690  008940  6A56               	clrf	(??_get_fat+10)& (0+255),c
 10691  008942  6A57               	clrf	(??_get_fat+11)& (0+255),c
 10692  008944  6A58               	clrf	(??_get_fat+12)& (0+255),c
 10693  008946  C055  F058         	movff	??_get_fat+9,??_get_fat+12
 10694  00894A  6A57               	clrf	??_get_fat+11,c
 10695  00894C  6A56               	clrf	??_get_fat+10,c
 10696  00894E  6A55               	clrf	??_get_fat+9,c
 10697  008950  5050               	movf	??_get_fat+4,w,c
 10698  008952  1055               	iorwf	??_get_fat+9,w,c
 10699  008954  6E59               	movwf	(??_get_fat+13)& (0+255),c
 10700  008956  5051               	movf	??_get_fat+5,w,c
 10701  008958  1056               	iorwf	??_get_fat+10,w,c
 10702  00895A  6E5A               	movwf	(??_get_fat+14)& (0+255),c
 10703  00895C  5052               	movf	??_get_fat+6,w,c
 10704  00895E  1057               	iorwf	??_get_fat+11,w,c
 10705  008960  6E5B               	movwf	(??_get_fat+15)& (0+255),c
 10706  008962  5053               	movf	??_get_fat+7,w,c
 10707  008964  1058               	iorwf	??_get_fat+12,w,c
 10708  008966  6E5C               	movwf	(??_get_fat+16)& (0+255),c
 10709  008968  504D               	movf	??_get_fat+1,w,c
 10710  00896A  1059               	iorwf	??_get_fat+13,w,c
 10711  00896C  6E5D               	movwf	(??_get_fat+17)& (0+255),c
 10712  00896E  504E               	movf	??_get_fat+2,w,c
 10713  008970  105A               	iorwf	??_get_fat+14,w,c
 10714  008972  6E5E               	movwf	(??_get_fat+18)& (0+255),c
 10715  008974  0E00               	movlw	0
 10716  008976  105B               	iorwf	??_get_fat+15,w,c
 10717  008978  6E5F               	movwf	(??_get_fat+19)& (0+255),c
 10718  00897A  0E00               	movlw	0
 10719  00897C  105C               	iorwf	??_get_fat+16,w,c
 10720  00897E  6E60               	movwf	(??_get_fat+20)& (0+255),c
 10721  008980  C070  FFD9         	movff	get_fat@p,fsr2l
 10722  008984  C071  FFDA         	movff	get_fat@p+1,fsr2h
 10723  008988  50DF               	movf	indf2,w,c
 10724  00898A  6E61               	movwf	(??_get_fat+21)& (0+255),c
 10725  00898C  5061               	movf	??_get_fat+21,w,c
 10726  00898E  105D               	iorwf	??_get_fat+17,w,c
 10727  008990  6E62               	movwf	(??_get_fat+22)& (0+255),c
 10728  008992  505E               	movf	??_get_fat+18,w,c
 10729  008994  6E63               	movwf	(??_get_fat+23)& (0+255),c
 10730  008996  505F               	movf	??_get_fat+19,w,c
 10731  008998  6E64               	movwf	(??_get_fat+24)& (0+255),c
 10732  00899A  5060               	movf	??_get_fat+20,w,c
 10733  00899C  6E65               	movwf	(??_get_fat+25)& (0+255),c
 10734  00899E  0EFF               	movlw	255
 10735  0089A0  1462               	andwf	??_get_fat+22,w,c
 10736  0089A2  6E68               	movwf	get_fat@val,c
 10737  0089A4  0EFF               	movlw	255
 10738  0089A6  1463               	andwf	??_get_fat+23,w,c
 10739  0089A8  6E69               	movwf	get_fat@val+1,c
 10740  0089AA  0EFF               	movlw	255
 10741  0089AC  1464               	andwf	??_get_fat+24,w,c
 10742  0089AE  6E6A               	movwf	get_fat@val+2,c
 10743  0089B0  0E0F               	movlw	15
 10744  0089B2  1465               	andwf	??_get_fat+25,w,c
 10745  0089B4  D007               	goto	L18
 10746  0089B6                     l6977:
 10747                           
 10748                           ;ff.c: 900: val = 1;
 10749  0089B6  0E01               	movlw	1
 10750  0089B8  6E68               	movwf	get_fat@val,c
 10751  0089BA  0E00               	movlw	0
 10752  0089BC  6E69               	movwf	get_fat@val+1,c
 10753  0089BE  0E00               	movlw	0
 10754  0089C0  6E6A               	movwf	get_fat@val+2,c
 10755  0089C2  0E00               	movlw	0
 10756  0089C4                     L18:
 10757  0089C4  6E6B               	movwf	get_fat@val+3,c
 10758                           
 10759                           ;ff.c: 901: }
 10760  0089C6  D00F               	goto	l328
 10761  0089C8                     l6979:
 10762  0089C8  C046  FFD9         	movff	get_fat@fs,fsr2l
 10763  0089CC  C047  FFDA         	movff	get_fat@fs+1,fsr2h
 10764  0089D0  50DF               	movf	indf2,w,c
 10765                           
 10766                           ; Switch size 1, requested type "space"
 10767                           ; Number of cases is 3, Range of values is 1 to 3
 10768                           ; switch strategies available:
 10769                           ; Name         Instructions Cycles
 10770                           ; simple_byte           10     6 (average)
 10771                           ;	Chosen strategy is simple_byte
 10772  0089D2  0A01               	xorlw	1	; case 1
 10773  0089D4  B4D8               	btfsc	status,2,c
 10774  0089D6  D613               	goto	l330
 10775  0089D8  0A03               	xorlw	3	; case 2
 10776  0089DA  B4D8               	btfsc	status,2,c
 10777  0089DC  D6D2               	goto	l6961
 10778  0089DE  0A01               	xorlw	1	; case 3
 10779  0089E0  B4D8               	btfsc	status,2,c
 10780  0089E2  D736               	goto	l6969
 10781  0089E4  D7E8               	goto	l6977
 10782  0089E6                     l328:
 10783                           
 10784                           ;ff.c: 902: }
 10785                           ;ff.c: 904: return val;
 10786  0089E6  C068  F046         	movff	get_fat@val,?_get_fat
 10787  0089EA  C069  F047         	movff	get_fat@val+1,?_get_fat+1
 10788  0089EE  C06A  F048         	movff	get_fat@val+2,?_get_fat+2
 10789  0089F2  C06B  F049         	movff	get_fat@val+3,?_get_fat+3
 10790  0089F6  0012               	return	
 10791  0089F8                     __end_of_get_fat:
 10792                           	opt stack 0
 10793                           tblptru	equ	0xFF8
 10794                           tblptrh	equ	0xFF7
 10795                           tblptrl	equ	0xFF6
 10796                           tablat	equ	0xFF5
 10797                           prodh	equ	0xFF4
 10798                           prodl	equ	0xFF3
 10799                           indf0	equ	0xFEF
 10800                           postinc0	equ	0xFEE
 10801                           fsr0h	equ	0xFEA
 10802                           fsr0l	equ	0xFE9
 10803                           wreg	equ	0xFE8
 10804                           indf1	equ	0xFE7
 10805                           postinc1	equ	0xFE6
 10806                           postdec1	equ	0xFE5
 10807                           fsr1h	equ	0xFE2
 10808                           fsr1l	equ	0xFE1
 10809                           indf2	equ	0xFDF
 10810                           postinc2	equ	0xFDE
 10811                           postdec2	equ	0xFDD
 10812                           plusw2	equ	0xFDB
 10813                           fsr2h	equ	0xFDA
 10814                           fsr2l	equ	0xFD9
 10815                           status	equ	0xFD8
 10816                           
 10817 ;; *************** function _clust2sect *****************
 10818 ;; Defined at:
 10819 ;;		line 843 in file "ff.c"
 10820 ;; Parameters:    Size  Location     Type
 10821 ;;  fs              2   12[COMRAM] PTR struct .
 10822 ;;		 -> NULL(0), FatFs(562), 
 10823 ;;  clst            4   14[COMRAM] unsigned long 
 10824 ;; Auto vars:     Size  Location     Type
 10825 ;;		None
 10826 ;; Return value:  Size  Location     Type
 10827 ;;                  4   12[COMRAM] unsigned long 
 10828 ;; Registers used:
 10829 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 10830 ;; Tracked objects:
 10831 ;;		On entry : 0/0
 10832 ;;		On exit  : 0/0
 10833 ;;		Unchanged: 0/0
 10834 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 10835 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10836 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10837 ;;      Temps:          9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10838 ;;      Totals:        15       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 10839 ;;Total ram usage:       15 bytes
 10840 ;; Hardware stack levels used:    1
 10841 ;; Hardware stack levels required when called:    1
 10842 ;; This function calls:
 10843 ;;		___lmul
 10844 ;; This function is called by:
 10845 ;;		_remove_chain
 10846 ;;		_dir_sdi
 10847 ;;		_dir_next
 10848 ;;		_f_write
 10849 ;;		_f_read
 10850 ;;		_f_lseek
 10851 ;;		_f_mkdir
 10852 ;;		_f_rename
 10853 ;;		_f_forward
 10854 ;; This function uses a non-reentrant model
 10855 ;;
 10856                           
 10857                           	psect	text20
 10858  005AFC                     __ptext20:
 10859                           	opt stack 0
 10860  005AFC                     _clust2sect:
 10861                           	opt stack 28
 10862                           
 10863                           ;ff.c: 848: clst -= 2;
 10864                           
 10865                           ;incstack = 0
 10866  005AFC  0E02               	movlw	2
 10867  005AFE  5E0F               	subwf	clust2sect@clst,f,c
 10868  005B00  0E00               	movlw	0
 10869  005B02  5A10               	subwfb	clust2sect@clst+1,f,c
 10870  005B04  5A11               	subwfb	clust2sect@clst+2,f,c
 10871  005B06  5A12               	subwfb	clust2sect@clst+3,f,c
 10872                           
 10873                           ;ff.c: 849: if (clst >= fs->n_fatent - 2) return 0;
 10874  005B08  EE20 F016          	lfsr	2,22
 10875  005B0C  500D               	movf	clust2sect@fs,w,c
 10876  005B0E  26D9               	addwf	fsr2l,f,c
 10877  005B10  500E               	movf	clust2sect@fs+1,w,c
 10878  005B12  22DA               	addwfc	fsr2h,f,c
 10879  005B14  0EFE               	movlw	254
 10880  005B16  24DE               	addwf	postinc2,w,c
 10881  005B18  6E13               	movwf	??_clust2sect& (0+255),c
 10882  005B1A  0EFF               	movlw	255
 10883  005B1C  20DE               	addwfc	postinc2,w,c
 10884  005B1E  6E14               	movwf	(??_clust2sect+1)& (0+255),c
 10885  005B20  0EFF               	movlw	255
 10886  005B22  20DE               	addwfc	postinc2,w,c
 10887  005B24  6E15               	movwf	(??_clust2sect+2)& (0+255),c
 10888  005B26  0EFF               	movlw	255
 10889  005B28  20DE               	addwfc	postinc2,w,c
 10890  005B2A  6E16               	movwf	(??_clust2sect+3)& (0+255),c
 10891  005B2C  5013               	movf	??_clust2sect,w,c
 10892  005B2E  5C0F               	subwf	clust2sect@clst,w,c
 10893  005B30  5014               	movf	??_clust2sect+1,w,c
 10894  005B32  5810               	subwfb	clust2sect@clst+1,w,c
 10895  005B34  5015               	movf	??_clust2sect+2,w,c
 10896  005B36  5811               	subwfb	clust2sect@clst+2,w,c
 10897  005B38  5016               	movf	??_clust2sect+3,w,c
 10898  005B3A  5812               	subwfb	clust2sect@clst+3,w,c
 10899  005B3C  A0D8               	btfss	status,0,c
 10900  005B3E  D008               	goto	l7087
 10901  005B40  0E00               	movlw	0
 10902  005B42  6E0D               	movwf	?_clust2sect,c
 10903  005B44  0E00               	movlw	0
 10904  005B46  6E0E               	movwf	?_clust2sect+1,c
 10905  005B48  0E00               	movlw	0
 10906  005B4A  6E0F               	movwf	?_clust2sect+2,c
 10907  005B4C  0E00               	movlw	0
 10908  005B4E  D038               	goto	L19
 10909  005B50                     l7087:
 10910                           
 10911                           ;ff.c: 850: return clst * fs->csize + fs->database;
 10912  005B50  EE20 F02A          	lfsr	2,42
 10913  005B54  500D               	movf	clust2sect@fs,w,c
 10914  005B56  26D9               	addwf	fsr2l,f,c
 10915  005B58  500E               	movf	clust2sect@fs+1,w,c
 10916  005B5A  22DA               	addwfc	fsr2h,f,c
 10917  005B5C  CFDE F013          	movff	postinc2,??_clust2sect
 10918  005B60  CFDE F014          	movff	postinc2,??_clust2sect+1
 10919  005B64  CFDE F015          	movff	postinc2,??_clust2sect+2
 10920  005B68  CFDE F016          	movff	postinc2,??_clust2sect+3
 10921  005B6C  EE20 F002          	lfsr	2,2
 10922  005B70  500D               	movf	clust2sect@fs,w,c
 10923  005B72  26D9               	addwf	fsr2l,f,c
 10924  005B74  500E               	movf	clust2sect@fs+1,w,c
 10925  005B76  22DA               	addwfc	fsr2h,f,c
 10926  005B78  50DF               	movf	indf2,w,c
 10927  005B7A  6E17               	movwf	(??_clust2sect+4)& (0+255),c
 10928  005B7C  5017               	movf	??_clust2sect+4,w,c
 10929  005B7E  6E01               	movwf	___lmul@multiplier,c
 10930  005B80  6A02               	clrf	___lmul@multiplier+1,c
 10931  005B82  6A03               	clrf	___lmul@multiplier+2,c
 10932  005B84  6A04               	clrf	___lmul@multiplier+3,c
 10933  005B86  C00F  F005         	movff	clust2sect@clst,___lmul@multiplicand
 10934  005B8A  C010  F006         	movff	clust2sect@clst+1,___lmul@multiplicand+1
 10935  005B8E  C011  F007         	movff	clust2sect@clst+2,___lmul@multiplicand+2
 10936  005B92  C012  F008         	movff	clust2sect@clst+3,___lmul@multiplicand+3
 10937  005B96  ECF7  F029         	call	___lmul	;wreg free
 10938  005B9A  C001  F018         	movff	?___lmul,??_clust2sect+5
 10939  005B9E  C002  F019         	movff	?___lmul+1,??_clust2sect+6
 10940  005BA2  C003  F01A         	movff	?___lmul+2,??_clust2sect+7
 10941  005BA6  C004  F01B         	movff	?___lmul+3,??_clust2sect+8
 10942  005BAA  5013               	movf	??_clust2sect,w,c
 10943  005BAC  2418               	addwf	??_clust2sect+5,w,c
 10944  005BAE  6E0D               	movwf	?_clust2sect,c
 10945  005BB0  5014               	movf	??_clust2sect+1,w,c
 10946  005BB2  2019               	addwfc	??_clust2sect+6,w,c
 10947  005BB4  6E0E               	movwf	?_clust2sect+1,c
 10948  005BB6  5015               	movf	??_clust2sect+2,w,c
 10949  005BB8  201A               	addwfc	??_clust2sect+7,w,c
 10950  005BBA  6E0F               	movwf	?_clust2sect+2,c
 10951  005BBC  5016               	movf	??_clust2sect+3,w,c
 10952  005BBE  201B               	addwfc	??_clust2sect+8,w,c
 10953  005BC0                     L19:
 10954  005BC0  6E10               	movwf	?_clust2sect+3,c
 10955  005BC2  0012               	return	
 10956  005BC4                     __end_of_clust2sect:
 10957                           	opt stack 0
 10958                           tblptru	equ	0xFF8
 10959                           tblptrh	equ	0xFF7
 10960                           tblptrl	equ	0xFF6
 10961                           tablat	equ	0xFF5
 10962                           prodh	equ	0xFF4
 10963                           prodl	equ	0xFF3
 10964                           indf0	equ	0xFEF
 10965                           postinc0	equ	0xFEE
 10966                           fsr0h	equ	0xFEA
 10967                           fsr0l	equ	0xFE9
 10968                           wreg	equ	0xFE8
 10969                           indf1	equ	0xFE7
 10970                           postinc1	equ	0xFE6
 10971                           postdec1	equ	0xFE5
 10972                           fsr1h	equ	0xFE2
 10973                           fsr1l	equ	0xFE1
 10974                           indf2	equ	0xFDF
 10975                           postinc2	equ	0xFDE
 10976                           postdec2	equ	0xFDD
 10977                           plusw2	equ	0xFDB
 10978                           fsr2h	equ	0xFDA
 10979                           fsr2l	equ	0xFD9
 10980                           status	equ	0xFD8
 10981                           
 10982 ;; *************** function _f_mount *****************
 10983 ;; Defined at:
 10984 ;;		line 2475 in file "ff.c"
 10985 ;; Parameters:    Size  Location     Type
 10986 ;;  fs              2  110[COMRAM] PTR struct .
 10987 ;;		 -> NULL(0), FatFs(562), 
 10988 ;;  path            2  112[COMRAM] PTR const unsigned char 
 10989 ;;		 -> STR_5(9), STR_3(1), 
 10990 ;;  opt             1  114[COMRAM] unsigned char 
 10991 ;; Auto vars:     Size  Location     Type
 10992 ;;  rp              2  122[COMRAM] PTR const unsigned char 
 10993 ;;		 -> STR_5(9), STR_3(1), 
 10994 ;;  vol             2  120[COMRAM] int 
 10995 ;;  cfs             2  118[COMRAM] PTR struct .
 10996 ;;		 -> NULL(0), FatFs(562), 
 10997 ;;  res             1  117[COMRAM] enum E67
 10998 ;; Return value:  Size  Location     Type
 10999 ;;                  1    wreg      enum E3569
 11000 ;; Registers used:
 11001 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 11002 ;; Tracked objects:
 11003 ;;		On entry : 0/0
 11004 ;;		On exit  : 0/0
 11005 ;;		Unchanged: 0/0
 11006 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11007 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11008 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11009 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11010 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11011 ;;Total ram usage:       14 bytes
 11012 ;; Hardware stack levels used:    1
 11013 ;; Hardware stack levels required when called:    9
 11014 ;; This function calls:
 11015 ;;		_find_volume
 11016 ;;		_get_ldnumber
 11017 ;; This function is called by:
 11018 ;;		_main
 11019 ;; This function uses a non-reentrant model
 11020 ;;
 11021                           
 11022                           	psect	text21
 11023  0060C6                     __ptext21:
 11024                           	opt stack 0
 11025  0060C6                     _f_mount:
 11026                           	opt stack 21
 11027                           
 11028                           ;ff.c: 2481: FATFS *cfs;
 11029                           ;ff.c: 2482: int vol;
 11030                           ;ff.c: 2483: FRESULT res;
 11031                           ;ff.c: 2484: const TCHAR *rp = path;
 11032                           
 11033                           ;incstack = 0
 11034  0060C6  C072  F07C         	movff	f_mount@path+1,f_mount@rp+1
 11035  0060CA  C071  F07B         	movff	f_mount@path,f_mount@rp
 11036                           
 11037                           ;ff.c: 2486: Tfs = cfs;
 11038  0060CE  0101               	movlb	1	; () banked
 11039  0060D0  C078  F15A         	movff	f_mount@cfs+1,_Tfs+1
 11040  0060D4  0101               	movlb	1	; () banked
 11041  0060D6  C077  F159         	movff	f_mount@cfs,_Tfs
 11042                           
 11043                           ;ff.c: 2487: Tvol = &vol;
 11044  0060DA  0E00               	movlw	high f_mount@vol
 11045  0060DC  0101               	movlb	1	; () banked
 11046  0060DE  6F60               	movwf	(_Tvol+1)& (0+255),b
 11047  0060E0  0E79               	movlw	low f_mount@vol
 11048  0060E2  0101               	movlb	1	; () banked
 11049  0060E4  6F5F               	movwf	_Tvol& (0+255),b
 11050                           
 11051                           ;ff.c: 2488: Tres = &res;
 11052  0060E6  0E00               	movlw	high f_mount@res
 11053  0060E8  0101               	movlb	1	; () banked
 11054  0060EA  6F5C               	movwf	(_Tres+1)& (0+255),b
 11055  0060EC  0E76               	movlw	low f_mount@res
 11056  0060EE  0101               	movlb	1	; () banked
 11057  0060F0  6F5B               	movwf	_Tres& (0+255),b
 11058                           
 11059                           ;ff.c: 2489: Trp = (TCHAR *)rp;
 11060  0060F2  0101               	movlb	1	; () banked
 11061  0060F4  C07C  F15E         	movff	f_mount@rp+1,_Trp+1
 11062  0060F8  0101               	movlb	1	; () banked
 11063  0060FA  C07B  F15D         	movff	f_mount@rp,_Trp
 11064                           
 11065                           ; BSR set to: 1
 11066                           ;ff.c: 2491: AB1 = 1;
 11067  0060FE  0E01               	movlw	1
 11068  006100  0101               	movlb	1	; () banked
 11069  006102  6F69               	movwf	_AB1& (0+255),b
 11070                           
 11071                           ; BSR set to: 1
 11072                           ;ff.c: 2492: AB2 = vol = get_ldnumber(&rp);
 11073  006104  0E00               	movlw	high f_mount@rp
 11074  006106  6E02               	movwf	get_ldnumber@path+1,c
 11075  006108  0E7B               	movlw	low f_mount@rp
 11076  00610A  6E01               	movwf	get_ldnumber@path,c
 11077  00610C  EC54  F032         	call	_get_ldnumber	;wreg free
 11078  006110  C001  F079         	movff	?_get_ldnumber,f_mount@vol
 11079  006114  C002  F07A         	movff	?_get_ldnumber+1,f_mount@vol+1
 11080  006118  C079  F16A         	movff	f_mount@vol,_AB2
 11081                           
 11082                           ;ff.c: 2493: if (vol < 0) return FR_INVALID_DRIVE;
 11083  00611C  507A               	movf	f_mount@vol+1,w,c
 11084  00611E  0A80               	xorlw	128
 11085  006120  6EF3               	movwf	prodl,c
 11086  006122  0E80               	movlw	128
 11087  006124  5CF3               	subwf	prodl,w,c
 11088  006126  0E00               	movlw	0
 11089  006128  B4D8               	btfsc	status,2,c
 11090  00612A  5C79               	subwf	f_mount@vol,w,c
 11091  00612C  B0D8               	btfsc	status,0,c
 11092  00612E  D002               	goto	l8605
 11093  006130  0E0B               	movlw	11
 11094  006132  D05B               	goto	l767
 11095  006134                     l8605:
 11096                           
 11097                           ;ff.c: 2494: cfs = FatFs[vol];
 11098  006134  0E48               	movlw	low ff@FatFs
 11099  006136  6E74               	movwf	??_f_mount& (0+255),c
 11100  006138  0E01               	movlw	high ff@FatFs
 11101  00613A  6E75               	movwf	(??_f_mount+1)& (0+255),c
 11102  00613C  90D8               	bcf	status,0,c
 11103  00613E  3479               	rlcf	f_mount@vol,w,c
 11104  006140  6ED9               	movwf	fsr2l,c
 11105  006142  347A               	rlcf	f_mount@vol+1,w,c
 11106  006144  6EDA               	movwf	fsr2h,c
 11107  006146  5074               	movf	??_f_mount,w,c
 11108  006148  26D9               	addwf	fsr2l,f,c
 11109  00614A  5075               	movf	??_f_mount+1,w,c
 11110  00614C  22DA               	addwfc	fsr2h,f,c
 11111  00614E  CFDE F077          	movff	postinc2,f_mount@cfs
 11112  006152  CFDD F078          	movff	postdec2,f_mount@cfs+1
 11113                           
 11114                           ;ff.c: 2496: if (cfs) {
 11115  006156  5078               	movf	f_mount@cfs+1,w,c
 11116  006158  1077               	iorwf	f_mount@cfs,w,c
 11117  00615A  B4D8               	btfsc	status,2,c
 11118  00615C  D009               	goto	l8613
 11119                           
 11120                           ;ff.c: 2497: AB3 = 1;
 11121  00615E  0E01               	movlw	1
 11122  006160  0101               	movlb	1	; () banked
 11123  006162  6F6B               	movwf	_AB3& (0+255),b
 11124                           
 11125                           ; BSR set to: 1
 11126                           ;ff.c: 2504: cfs->fs_type = 0;
 11127  006164  C077  FFD9         	movff	f_mount@cfs,fsr2l
 11128  006168  C078  FFDA         	movff	f_mount@cfs+1,fsr2h
 11129  00616C  0E00               	movlw	0
 11130  00616E  6EDF               	movwf	indf2,c
 11131  006170                     l8613:
 11132                           
 11133                           ;ff.c: 2505: }
 11134                           ;ff.c: 2507: if (fs) {
 11135  006170  5070               	movf	f_mount@fs+1,w,c
 11136  006172  106F               	iorwf	f_mount@fs,w,c
 11137  006174  B4D8               	btfsc	status,2,c
 11138  006176  D009               	goto	l8619
 11139                           
 11140                           ;ff.c: 2508: AB3 =2;
 11141  006178  0E02               	movlw	2
 11142  00617A  0101               	movlb	1	; () banked
 11143  00617C  6F6B               	movwf	_AB3& (0+255),b
 11144                           
 11145                           ; BSR set to: 1
 11146                           ;ff.c: 2509: fs->fs_type = 0;
 11147  00617E  C06F  FFD9         	movff	f_mount@fs,fsr2l
 11148  006182  C070  FFDA         	movff	f_mount@fs+1,fsr2h
 11149  006186  0E00               	movlw	0
 11150  006188  6EDF               	movwf	indf2,c
 11151  00618A                     l8619:
 11152                           
 11153                           ;ff.c: 2513: }
 11154                           ;ff.c: 2514: FatFs[vol] = fs;
 11155  00618A  0E48               	movlw	low ff@FatFs
 11156  00618C  6E74               	movwf	??_f_mount& (0+255),c
 11157  00618E  0E01               	movlw	high ff@FatFs
 11158  006190  6E75               	movwf	(??_f_mount+1)& (0+255),c
 11159  006192  90D8               	bcf	status,0,c
 11160  006194  3479               	rlcf	f_mount@vol,w,c
 11161  006196  6ED9               	movwf	fsr2l,c
 11162  006198  347A               	rlcf	f_mount@vol+1,w,c
 11163  00619A  6EDA               	movwf	fsr2h,c
 11164  00619C  5074               	movf	??_f_mount,w,c
 11165  00619E  26D9               	addwf	fsr2l,f,c
 11166  0061A0  5075               	movf	??_f_mount+1,w,c
 11167  0061A2  22DA               	addwfc	fsr2h,f,c
 11168  0061A4  C06F  FFDE         	movff	f_mount@fs,postinc2
 11169  0061A8  C070  FFDD         	movff	f_mount@fs+1,postdec2
 11170                           
 11171                           ;ff.c: 2516: if (!fs || opt != 1) return FR_OK;
 11172  0061AC  5070               	movf	f_mount@fs+1,w,c
 11173  0061AE  106F               	iorwf	f_mount@fs,w,c
 11174  0061B0  B4D8               	btfsc	status,2,c
 11175  0061B2  D003               	goto	l8625
 11176  0061B4  0473               	decf	f_mount@opt,w,c
 11177  0061B6  B4D8               	btfsc	status,2,c
 11178  0061B8  D002               	goto	l8629
 11179  0061BA                     l8625:
 11180  0061BA  0E00               	movlw	0
 11181  0061BC  D016               	goto	l767
 11182  0061BE                     l8629:
 11183                           
 11184                           ;ff.c: 2517: AB3 =5;
 11185  0061BE  0E05               	movlw	5
 11186  0061C0  0101               	movlb	1	; () banked
 11187  0061C2  6F6B               	movwf	_AB3& (0+255),b
 11188                           
 11189                           ; BSR set to: 1
 11190                           ;ff.c: 2518: AB1 = res = find_volume(&fs, &path, 0);
 11191  0061C4  0E00               	movlw	high f_mount@fs
 11192  0061C6  6E6B               	movwf	find_volume@rfs+1,c
 11193  0061C8  0E6F               	movlw	low f_mount@fs
 11194  0061CA  6E6A               	movwf	find_volume@rfs,c
 11195  0061CC  0E00               	movlw	high f_mount@path
 11196  0061CE  6E6D               	movwf	find_volume@path+1,c
 11197  0061D0  0E71               	movlw	low f_mount@path
 11198  0061D2  6E6C               	movwf	find_volume@path,c
 11199  0061D4  0E00               	movlw	0
 11200  0061D6  6E6E               	movwf	find_volume@wmode,c
 11201  0061D8  EC32  F053         	call	_find_volume	;wreg free
 11202  0061DC  6E76               	movwf	f_mount@res,c
 11203  0061DE  C076  F169         	movff	f_mount@res,_AB1
 11204                           
 11205                           ;ff.c: 2519: AB3 =6;
 11206  0061E2  0E06               	movlw	6
 11207  0061E4  0101               	movlb	1	; () banked
 11208  0061E6  6F6B               	movwf	_AB3& (0+255),b
 11209                           
 11210                           ; BSR set to: 1
 11211                           ;ff.c: 2520: return res;
 11212  0061E8  5076               	movf	f_mount@res,w,c
 11213  0061EA                     l767:
 11214  0061EA  0012               	return	
 11215  0061EC                     __end_of_f_mount:
 11216                           	opt stack 0
 11217                           tblptru	equ	0xFF8
 11218                           tblptrh	equ	0xFF7
 11219                           tblptrl	equ	0xFF6
 11220                           tablat	equ	0xFF5
 11221                           prodh	equ	0xFF4
 11222                           prodl	equ	0xFF3
 11223                           indf0	equ	0xFEF
 11224                           postinc0	equ	0xFEE
 11225                           fsr0h	equ	0xFEA
 11226                           fsr0l	equ	0xFE9
 11227                           wreg	equ	0xFE8
 11228                           indf1	equ	0xFE7
 11229                           postinc1	equ	0xFE6
 11230                           postdec1	equ	0xFE5
 11231                           fsr1h	equ	0xFE2
 11232                           fsr1l	equ	0xFE1
 11233                           indf2	equ	0xFDF
 11234                           postinc2	equ	0xFDE
 11235                           postdec2	equ	0xFDD
 11236                           plusw2	equ	0xFDB
 11237                           fsr2h	equ	0xFDA
 11238                           fsr2l	equ	0xFD9
 11239                           status	equ	0xFD8
 11240                           
 11241 ;; *************** function _find_volume *****************
 11242 ;; Defined at:
 11243 ;;		line 2264 in file "ff.c"
 11244 ;; Parameters:    Size  Location     Type
 11245 ;;  rfs             2  105[COMRAM] PTR PTR struct .
 11246 ;;		 -> f_setlabel@dj(25), f_getlabel@dj(25), f_utime@dj(25), f_rename@djo(25), 
 11247 ;;		 -> f_chmod@dj(25), f_mkdir@dj(25), f_unlink@dj(25), f_stat@dj(25), 
 11248 ;;		 -> f_opendir@fs(2), f_getcwd@dj(25), f_chdir@dj(25), f_open@dj(25), 
 11249 ;;		 -> f_mount@fs(2), 
 11250 ;;  path            2  107[COMRAM] PTR PTR const unsigned c
 11251 ;;		 -> f_setlabel@label(2), f_getlabel@path(2), f_utime@path(2), f_rename@path_old(2), 
 11252 ;;		 -> f_chmod@path(2), f_mkdir@path(2), f_unlink@path(2), f_getfree@path(2), 
 11253 ;;		 -> f_stat@path(2), f_opendir@path(2), f_getcwd@buff(2), f_chdir@path(2), 
 11254 ;;		 -> f_open@path(2), f_mount@path(2), 
 11255 ;;  wmode           1  109[COMRAM] unsigned char 
 11256 ;; Auto vars:     Size  Location     Type
 11257 ;;  br             16   26[BANK0 ] unsigned long [4]
 11258 ;;  bsect           4   75[BANK0 ] unsigned long 
 11259 ;;  fasize          4   71[BANK0 ] unsigned long 
 11260 ;;  nclst           4   64[BANK0 ] unsigned long 
 11261 ;;  tsect           4   60[BANK0 ] unsigned long 
 11262 ;;  sysect          4   52[BANK0 ] unsigned long 
 11263 ;;  szbfat          4   48[BANK0 ] unsigned long 
 11264 ;;  fs              2   82[BANK0 ] PTR struct .
 11265 ;;		 -> NULL(0), FatFs(562), 
 11266 ;;  i               2   79[BANK0 ] unsigned int 
 11267 ;;  pt              2   69[BANK0 ] PTR unsigned char 
 11268 ;;		 -> FatFs.win(512), NULL(0), FatFs(562), 
 11269 ;;  nrsv            2   58[BANK0 ] unsigned short 
 11270 ;;  vol             2   56[BANK0 ] int 
 11271 ;;  fmt             1   81[BANK0 ] unsigned char 
 11272 ;;  stat            1   68[BANK0 ] unsigned char 
 11273 ;; Return value:  Size  Location     Type
 11274 ;;                  1    wreg      enum E67
 11275 ;; Registers used:
 11276 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, cstack
 11277 ;; Tracked objects:
 11278 ;;		On entry : 0/0
 11279 ;;		On exit  : 0/0
 11280 ;;		Unchanged: 0/0
 11281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 11282 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11283 ;;      Locals:         0      58       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11284 ;;      Temps:          0      26       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11285 ;;      Totals:         5      84       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 11286 ;;Total ram usage:       89 bytes
 11287 ;; Hardware stack levels used:    1
 11288 ;; Hardware stack levels required when called:    8
 11289 ;; This function calls:
 11290 ;;		___lldiv
 11291 ;;		___lmul
 11292 ;;		_check_fs
 11293 ;;		_disk_initialize
 11294 ;;		_disk_status
 11295 ;;		_get_ldnumber
 11296 ;;		_move_window
 11297 ;; This function is called by:
 11298 ;;		_f_mount
 11299 ;;		_f_open
 11300 ;;		_f_chdir
 11301 ;;		_f_getcwd
 11302 ;;		_f_opendir
 11303 ;;		_f_stat
 11304 ;;		_f_getfree
 11305 ;;		_f_unlink
 11306 ;;		_f_mkdir
 11307 ;;		_f_chmod
 11308 ;;		_f_rename
 11309 ;;		_f_utime
 11310 ;;		_f_getlabel
 11311 ;;		_f_setlabel
 11312 ;; This function uses a non-reentrant model
 11313 ;;
 11314                           
 11315                           	psect	text22
 11316  00A664                     __ptext22:
 11317                           	opt stack 0
 11318  00A664                     _find_volume:
 11319                           	opt stack 21
 11320                           
 11321                           ;ff.c: 2270: BYTE fmt, *pt;
 11322                           ;ff.c: 2271: int vol;
 11323                           ;ff.c: 2272: DSTATUS stat;
 11324                           ;ff.c: 2273: DWORD bsect, fasize, tsect, sysect, nclst, szbfat, br[4];
 11325                           ;ff.c: 2274: WORD nrsv;
 11326                           ;ff.c: 2275: FATFS *fs;
 11327                           ;ff.c: 2276: UINT i;
 11328                           ;ff.c: 2278: ch = 23;
 11329                           
 11330                           ;incstack = 0
 11331  00A664  0E00               	movlw	0
 11332  00A666  0101               	movlb	1	; () banked
 11333  00A668  6F64               	movwf	(_ch+1)& (0+255),b
 11334  00A66A  0E17               	movlw	23
 11335  00A66C  0101               	movlb	1	; () banked
 11336  00A66E  6F63               	movwf	_ch& (0+255),b
 11337                           
 11338                           ; BSR set to: 1
 11339                           ;ff.c: 2280: *rfs = 0;
 11340  00A670  C06A  FFD9         	movff	find_volume@rfs,fsr2l
 11341  00A674  C06B  FFDA         	movff	find_volume@rfs+1,fsr2h
 11342  00A678  0E00               	movlw	0
 11343  00A67A  6EDE               	movwf	postinc2,c
 11344  00A67C  0E00               	movlw	0
 11345  00A67E  6EDD               	movwf	postdec2,c
 11346                           
 11347                           ; BSR set to: 1
 11348                           ;ff.c: 2281: vol = get_ldnumber(path);
 11349  00A680  C06D  F002         	movff	find_volume@path+1,get_ldnumber@path+1
 11350  00A684  C06C  F001         	movff	find_volume@path,get_ldnumber@path
 11351  00A688  EC54  F032         	call	_get_ldnumber	;wreg free
 11352  00A68C  C001  F0B8         	movff	?_get_ldnumber,find_volume@vol
 11353  00A690  C002  F0B9         	movff	?_get_ldnumber+1,find_volume@vol+1
 11354                           
 11355                           ;ff.c: 2282: if (vol < 0){ch = 25; return FR_INVALID_DRIVE;}
 11356  00A694  0100               	movlb	0	; () banked
 11357  00A696  51B9               	movf	(find_volume@vol+1)& (0+255),w,b
 11358  00A698  0A80               	xorlw	128
 11359  00A69A  6EF3               	movwf	prodl,c
 11360  00A69C  0E80               	movlw	128
 11361  00A69E  5CF3               	subwf	prodl,w,c
 11362  00A6A0  0E00               	movlw	0
 11363  00A6A2  B4D8               	btfsc	status,2,c
 11364  00A6A4  5DB8               	subwf	find_volume@vol& (0+255),w,b
 11365  00A6A6  B0D8               	btfsc	status,0,c
 11366  00A6A8  D009               	goto	l8187
 11367                           
 11368                           ; BSR set to: 0
 11369  00A6AA  0E00               	movlw	0
 11370  00A6AC  0101               	movlb	1	; () banked
 11371  00A6AE  6F64               	movwf	(_ch+1)& (0+255),b
 11372  00A6B0  0E19               	movlw	25
 11373  00A6B2  0101               	movlb	1	; () banked
 11374  00A6B4  6F63               	movwf	_ch& (0+255),b
 11375                           
 11376                           ; BSR set to: 1
 11377  00A6B6  0E0B               	movlw	11
 11378  00A6B8  EF68  F05F         	goto	l693
 11379  00A6BC                     l8187:
 11380                           
 11381                           ;ff.c: 2283: ch = 24;
 11382  00A6BC  0E00               	movlw	0
 11383  00A6BE  0101               	movlb	1	; () banked
 11384  00A6C0  6F64               	movwf	(_ch+1)& (0+255),b
 11385  00A6C2  0E18               	movlw	24
 11386  00A6C4  0101               	movlb	1	; () banked
 11387  00A6C6  6F63               	movwf	_ch& (0+255),b
 11388                           
 11389                           ; BSR set to: 1
 11390                           ;ff.c: 2285: fs = FatFs[vol];
 11391  00A6C8  0E48               	movlw	low ff@FatFs
 11392  00A6CA  0100               	movlb	0	; () banked
 11393  00A6CC  6F80               	movwf	??_find_volume& (0+255),b
 11394  00A6CE  0E01               	movlw	high ff@FatFs
 11395  00A6D0  6F81               	movwf	(??_find_volume+1)& (0+255),b
 11396  00A6D2  90D8               	bcf	status,0,c
 11397  00A6D4  0100               	movlb	0	; () banked
 11398  00A6D6  35B8               	rlcf	find_volume@vol& (0+255),w,b
 11399  00A6D8  6ED9               	movwf	fsr2l,c
 11400  00A6DA  0100               	movlb	0	; () banked
 11401  00A6DC  35B9               	rlcf	(find_volume@vol+1)& (0+255),w,b
 11402  00A6DE  6EDA               	movwf	fsr2h,c
 11403  00A6E0  0100               	movlb	0	; () banked
 11404  00A6E2  5180               	movf	??_find_volume& (0+255),w,b
 11405  00A6E4  26D9               	addwf	fsr2l,f,c
 11406  00A6E6  0100               	movlb	0	; () banked
 11407  00A6E8  5181               	movf	(??_find_volume+1)& (0+255),w,b
 11408  00A6EA  22DA               	addwfc	fsr2h,f,c
 11409  00A6EC  0100               	movlb	0	; () banked
 11410  00A6EE  CFDE F0D2          	movff	postinc2,find_volume@fs
 11411  00A6F2  0100               	movlb	0	; () banked
 11412  00A6F4  CFDD F0D3          	movff	postdec2,find_volume@fs+1
 11413                           
 11414                           ; BSR set to: 0
 11415                           ;ff.c: 2286: if (!fs) return FR_NOT_ENABLED;
 11416  00A6F8  0100               	movlb	0	; () banked
 11417  00A6FA  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 11418  00A6FC  11D2               	iorwf	find_volume@fs& (0+255),w,b
 11419  00A6FE  A4D8               	btfss	status,2,c
 11420  00A700  D003               	goto	l8197
 11421                           
 11422                           ; BSR set to: 0
 11423  00A702  0E0C               	movlw	12
 11424  00A704  EF68  F05F         	goto	l693
 11425  00A708                     l8197:
 11426                           
 11427                           ; BSR set to: 0
 11428                           ;ff.c: 2287: ch = 26;
 11429  00A708  0E00               	movlw	0
 11430  00A70A  0101               	movlb	1	; () banked
 11431  00A70C  6F64               	movwf	(_ch+1)& (0+255),b
 11432  00A70E  0E1A               	movlw	26
 11433  00A710  0101               	movlb	1	; () banked
 11434  00A712  6F63               	movwf	_ch& (0+255),b
 11435                           
 11436                           ; BSR set to: 1
 11437                           ;ff.c: 2288: ;
 11438                           ;ff.c: 2289: *rfs = fs;
 11439  00A714  C06A  FFD9         	movff	find_volume@rfs,fsr2l
 11440  00A718  C06B  FFDA         	movff	find_volume@rfs+1,fsr2h
 11441  00A71C  0100               	movlb	0	; () banked
 11442  00A71E  C0D2  FFDE         	movff	find_volume@fs,postinc2
 11443  00A722  0100               	movlb	0	; () banked
 11444  00A724  C0D3  FFDD         	movff	find_volume@fs+1,postdec2
 11445                           
 11446                           ; BSR set to: 0
 11447                           ;ff.c: 2290: ch = 27;
 11448  00A728  0E00               	movlw	0
 11449  00A72A  0101               	movlb	1	; () banked
 11450  00A72C  6F64               	movwf	(_ch+1)& (0+255),b
 11451  00A72E  0E1B               	movlw	27
 11452  00A730  0101               	movlb	1	; () banked
 11453  00A732  6F63               	movwf	_ch& (0+255),b
 11454                           
 11455                           ; BSR set to: 1
 11456                           ;ff.c: 2291: if (fs->fs_type) {
 11457  00A734  C0D2  FFD9         	movff	find_volume@fs,fsr2l
 11458  00A738  C0D3  FFDA         	movff	find_volume@fs+1,fsr2h
 11459  00A73C  50DF               	movf	indf2,w,c
 11460  00A73E  B4D8               	btfsc	status,2,c
 11461  00A740  D01A               	goto	l8221
 11462                           
 11463                           ; BSR set to: 1
 11464                           ;ff.c: 2292: stat = disk_status(fs->drv);
 11465  00A742  0100               	movlb	0	; () banked
 11466  00A744  EE20 F001          	lfsr	2,1
 11467  00A748  0100               	movlb	0	; () banked
 11468  00A74A  51D2               	movf	find_volume@fs& (0+255),w,b
 11469  00A74C  26D9               	addwf	fsr2l,f,c
 11470  00A74E  0100               	movlb	0	; () banked
 11471  00A750  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 11472  00A752  22DA               	addwfc	fsr2h,f,c
 11473  00A754  50DF               	movf	indf2,w,c
 11474  00A756  EC81  F028         	call	_disk_status
 11475  00A75A  0100               	movlb	0	; () banked
 11476  00A75C  6FC4               	movwf	find_volume@stat& (0+255),b
 11477                           
 11478                           ; BSR set to: 0
 11479                           ;ff.c: 2294: if (!0 && wmode && (stat & 0x04))
 11480  00A75E  0100               	movlb	0	; () banked
 11481  00A760  B1C4               	btfsc	find_volume@stat& (0+255),0,b
 11482  00A762  D009               	goto	l8221
 11483                           
 11484                           ; BSR set to: 0
 11485  00A764  506E               	movf	find_volume@wmode,w,c
 11486  00A766  B4D8               	btfsc	status,2,c
 11487  00A768  EF67  F05F         	goto	L20
 11488                           
 11489                           ; BSR set to: 0
 11490  00A76C  0100               	movlb	0	; () banked
 11491  00A76E  A5C4               	btfss	find_volume@stat& (0+255),2,b
 11492  00A770  EF67  F05F         	goto	L20
 11493  00A774  D032               	goto	u10920
 11494  00A776                     l8221:
 11495                           
 11496                           ;ff.c: 2297: }
 11497                           ;ff.c: 2298: }
 11498                           ;ff.c: 2299: ch = 28;
 11499  00A776  0E00               	movlw	0
 11500  00A778  0101               	movlb	1	; () banked
 11501  00A77A  6F64               	movwf	(_ch+1)& (0+255),b
 11502  00A77C  0E1C               	movlw	28
 11503  00A77E  0101               	movlb	1	; () banked
 11504  00A780  6F63               	movwf	_ch& (0+255),b
 11505                           
 11506                           ; BSR set to: 1
 11507                           ;ff.c: 2303: fs->fs_type = 0;
 11508  00A782  C0D2  FFD9         	movff	find_volume@fs,fsr2l
 11509  00A786  C0D3  FFDA         	movff	find_volume@fs+1,fsr2h
 11510  00A78A  0E00               	movlw	0
 11511  00A78C  6EDF               	movwf	indf2,c
 11512                           
 11513                           ; BSR set to: 1
 11514                           ;ff.c: 2304: fs->drv = (BYTE)(vol);
 11515  00A78E  0100               	movlb	0	; () banked
 11516  00A790  EE20 F001          	lfsr	2,1
 11517  00A794  0100               	movlb	0	; () banked
 11518  00A796  51D2               	movf	find_volume@fs& (0+255),w,b
 11519  00A798  26D9               	addwf	fsr2l,f,c
 11520  00A79A  0100               	movlb	0	; () banked
 11521  00A79C  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 11522  00A79E  22DA               	addwfc	fsr2h,f,c
 11523  00A7A0  0100               	movlb	0	; () banked
 11524  00A7A2  C0B8  FFDF         	movff	find_volume@vol,indf2
 11525                           
 11526                           ; BSR set to: 0
 11527                           ;ff.c: 2305: stat = disk_initialize(fs->drv);
 11528  00A7A6  0100               	movlb	0	; () banked
 11529  00A7A8  EE20 F001          	lfsr	2,1
 11530  00A7AC  0100               	movlb	0	; () banked
 11531  00A7AE  51D2               	movf	find_volume@fs& (0+255),w,b
 11532  00A7B0  26D9               	addwf	fsr2l,f,c
 11533  00A7B2  0100               	movlb	0	; () banked
 11534  00A7B4  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 11535  00A7B6  22DA               	addwfc	fsr2h,f,c
 11536  00A7B8  50DF               	movf	indf2,w,c
 11537  00A7BA  EC78  F035         	call	_disk_initialize
 11538  00A7BE  0100               	movlb	0	; () banked
 11539  00A7C0  6FC4               	movwf	find_volume@stat& (0+255),b
 11540                           
 11541                           ; BSR set to: 0
 11542                           ;ff.c: 2306: if (stat & 0x01)
 11543  00A7C2  0100               	movlb	0	; () banked
 11544  00A7C4  A1C4               	btfss	find_volume@stat& (0+255),0,b
 11545  00A7C6  D003               	goto	l8235
 11546                           
 11547                           ; BSR set to: 0
 11548                           ;ff.c: 2307: return FR_NOT_READY;
 11549  00A7C8  0E03               	movlw	3
 11550  00A7CA  EF68  F05F         	goto	l693
 11551  00A7CE                     l8235:
 11552                           
 11553                           ; BSR set to: 0
 11554  00A7CE  506E               	movf	find_volume@wmode,w,c
 11555  00A7D0  B4D8               	btfsc	status,2,c
 11556  00A7D2  D006               	goto	l8243
 11557                           
 11558                           ; BSR set to: 0
 11559  00A7D4  0100               	movlb	0	; () banked
 11560  00A7D6  A5C4               	btfss	find_volume@stat& (0+255),2,b
 11561  00A7D8  D003               	goto	l8243
 11562  00A7DA                     u10920:
 11563                           
 11564                           ; BSR set to: 0
 11565                           ;ff.c: 2309: return FR_WRITE_PROTECTED;
 11566  00A7DA  0E0A               	movlw	10
 11567  00A7DC  EF68  F05F         	goto	l693
 11568  00A7E0                     l8243:
 11569                           
 11570                           ; BSR set to: 0
 11571                           ;ff.c: 2310: ch = 29;
 11572  00A7E0  0E00               	movlw	0
 11573  00A7E2  0101               	movlb	1	; () banked
 11574  00A7E4  6F64               	movwf	(_ch+1)& (0+255),b
 11575  00A7E6  0E1D               	movlw	29
 11576  00A7E8  0101               	movlb	1	; () banked
 11577  00A7EA  6F63               	movwf	_ch& (0+255),b
 11578                           
 11579                           ;ff.c: 2315: ch = 30;
 11580  00A7EC  0E00               	movlw	0
 11581  00A7EE  0101               	movlb	1	; () banked
 11582  00A7F0  6F64               	movwf	(_ch+1)& (0+255),b
 11583  00A7F2  0E1E               	movlw	30
 11584  00A7F4  0101               	movlb	1	; () banked
 11585  00A7F6  6F63               	movwf	_ch& (0+255),b
 11586                           
 11587                           ;ff.c: 2317: bsect = 0;
 11588  00A7F8  0E00               	movlw	0
 11589  00A7FA  0100               	movlb	0	; () banked
 11590  00A7FC  6FCB               	movwf	find_volume@bsect& (0+255),b
 11591  00A7FE  0E00               	movlw	0
 11592  00A800  0100               	movlb	0	; () banked
 11593  00A802  6FCC               	movwf	(find_volume@bsect+1)& (0+255),b
 11594  00A804  0E00               	movlw	0
 11595  00A806  0100               	movlb	0	; () banked
 11596  00A808  6FCD               	movwf	(find_volume@bsect+2)& (0+255),b
 11597  00A80A  0E00               	movlw	0
 11598  00A80C  0100               	movlb	0	; () banked
 11599  00A80E  6FCE               	movwf	(find_volume@bsect+3)& (0+255),b
 11600                           
 11601                           ; BSR set to: 0
 11602                           ;ff.c: 2318: ch = fmt = check_fs(fs, bsect);
 11603  00A810  0100               	movlb	0	; () banked
 11604  00A812  C0D3  F047         	movff	find_volume@fs+1,check_fs@fs+1
 11605  00A816  0100               	movlb	0	; () banked
 11606  00A818  C0D2  F046         	movff	find_volume@fs,check_fs@fs
 11607  00A81C  C0CB  F048         	movff	find_volume@bsect,check_fs@sect
 11608  00A820  C0CC  F049         	movff	find_volume@bsect+1,check_fs@sect+1
 11609  00A824  C0CD  F04A         	movff	find_volume@bsect+2,check_fs@sect+2
 11610  00A828  C0CE  F04B         	movff	find_volume@bsect+3,check_fs@sect+3
 11611  00A82C  EC02  F039         	call	_check_fs	;wreg free
 11612  00A830  0100               	movlb	0	; () banked
 11613  00A832  6FD1               	movwf	find_volume@fmt& (0+255),b
 11614  00A834  0100               	movlb	0	; () banked
 11615  00A836  0101               	movlb	1	; () banked
 11616  00A838  C0D1  F163         	movff	find_volume@fmt,_ch
 11617  00A83C  0101               	movlb	1	; () banked
 11618  00A83E  6B64               	clrf	(_ch+1)& (0+255),b
 11619                           
 11620                           ; BSR set to: 1
 11621                           ;ff.c: 2319: ch = 61;
 11622  00A840  0E00               	movlw	0
 11623  00A842  0101               	movlb	1	; () banked
 11624  00A844  6F64               	movwf	(_ch+1)& (0+255),b
 11625  00A846  0E3D               	movlw	61
 11626  00A848  0101               	movlb	1	; () banked
 11627  00A84A  6F63               	movwf	_ch& (0+255),b
 11628                           
 11629                           ; BSR set to: 1
 11630                           ;ff.c: 2320: if (fmt == 1 || (!fmt && (0))) {
 11631  00A84C  0100               	movlb	0	; () banked
 11632  00A84E  05D1               	decf	find_volume@fmt& (0+255),w,b
 11633  00A850  A4D8               	btfss	status,2,c
 11634  00A852  D17A               	goto	l8297
 11635                           
 11636                           ; BSR set to: 0
 11637                           ;ff.c: 2321: ch = 62;
 11638                           
 11639                           ; BSR set to: 0
 11640                           
 11641                           ; BSR set to: 0
 11642                           
 11643                           ; BSR set to: 0
 11644  00A854  0E00               	movlw	0
 11645  00A856  0101               	movlb	1	; () banked
 11646  00A858  6F64               	movwf	(_ch+1)& (0+255),b
 11647  00A85A  0E3E               	movlw	62
 11648  00A85C  0101               	movlb	1	; () banked
 11649  00A85E  6F63               	movwf	_ch& (0+255),b
 11650                           
 11651                           ;ff.c: 2322: for (i = 0; i < 4; i++) { ch = 36;
 11652  00A860  0E00               	movlw	0
 11653  00A862  0100               	movlb	0	; () banked
 11654  00A864  6FD0               	movwf	(find_volume@i+1)& (0+255),b
 11655  00A866  0E00               	movlw	0
 11656  00A868  0100               	movlb	0	; () banked
 11657  00A86A  6FCF               	movwf	find_volume@i& (0+255),b
 11658  00A86C                     
 11659                           ; BSR set to: 0
 11660  00A86C  0E04               	movlw	4
 11661  00A86E  0100               	movlb	0	; () banked
 11662  00A870  5DCF               	subwf	find_volume@i& (0+255),w,b
 11663  00A872  0E00               	movlw	0
 11664  00A874  0100               	movlb	0	; () banked
 11665  00A876  59D0               	subwfb	(find_volume@i+1)& (0+255),w,b
 11666  00A878  B0D8               	btfsc	status,0,c
 11667  00A87A  D0F9               	goto	l8275
 11668                           
 11669                           ; BSR set to: 0
 11670                           
 11671                           ; BSR set to: 0
 11672                           
 11673                           ; BSR set to: 0
 11674  00A87C  0E00               	movlw	0
 11675  00A87E  0101               	movlb	1	; () banked
 11676  00A880  6F64               	movwf	(_ch+1)& (0+255),b
 11677  00A882  0E24               	movlw	36
 11678  00A884  0101               	movlb	1	; () banked
 11679  00A886  6F63               	movwf	_ch& (0+255),b
 11680                           
 11681                           ; BSR set to: 1
 11682                           ;ff.c: 2323: pt = fs->win + 446 + i * 16;
 11683  00A888  0EF0               	movlw	240
 11684  00A88A  0100               	movlb	0	; () banked
 11685  00A88C  6F80               	movwf	??_find_volume& (0+255),b
 11686  00A88E  0E01               	movlw	1
 11687  00A890  6F81               	movwf	(??_find_volume+1)& (0+255),b
 11688  00A892  0100               	movlb	0	; () banked
 11689  00A894  C0CF  F082         	movff	find_volume@i,??_find_volume+2
 11690  00A898  0100               	movlb	0	; () banked
 11691  00A89A  C0D0  F083         	movff	find_volume@i+1,??_find_volume+3
 11692  00A89E  0100               	movlb	0	; () banked
 11693  00A8A0  3B82               	swapf	(??_find_volume+2)& (0+255),f,b
 11694  00A8A2  3B83               	swapf	(??_find_volume+3)& (0+255),f,b
 11695  00A8A4  0EF0               	movlw	240
 11696  00A8A6  1783               	andwf	(??_find_volume+3)& (0+255),f,b
 11697  00A8A8  5182               	movf	(??_find_volume+2)& (0+255),w,b
 11698  00A8AA  0B0F               	andlw	15
 11699  00A8AC  1383               	iorwf	(??_find_volume+3)& (0+255),f,b
 11700  00A8AE  0EF0               	movlw	240
 11701  00A8B0  1782               	andwf	(??_find_volume+2)& (0+255),f,b
 11702  00A8B2  0100               	movlb	0	; () banked
 11703  00A8B4  5180               	movf	??_find_volume& (0+255),w,b
 11704  00A8B6  0100               	movlb	0	; () banked
 11705  00A8B8  2782               	addwf	(??_find_volume+2)& (0+255),f,b
 11706  00A8BA  0100               	movlb	0	; () banked
 11707  00A8BC  5181               	movf	(??_find_volume+1)& (0+255),w,b
 11708  00A8BE  0100               	movlb	0	; () banked
 11709  00A8C0  2383               	addwfc	(??_find_volume+3)& (0+255),f,b
 11710  00A8C2  0100               	movlb	0	; () banked
 11711  00A8C4  5182               	movf	(??_find_volume+2)& (0+255),w,b
 11712  00A8C6  0100               	movlb	0	; () banked
 11713  00A8C8  25D2               	addwf	find_volume@fs& (0+255),w,b
 11714  00A8CA  0100               	movlb	0	; () banked
 11715  00A8CC  6FC5               	movwf	find_volume@pt& (0+255),b
 11716  00A8CE  0100               	movlb	0	; () banked
 11717  00A8D0  5183               	movf	(??_find_volume+3)& (0+255),w,b
 11718  00A8D2  0100               	movlb	0	; () banked
 11719  00A8D4  21D3               	addwfc	(find_volume@fs+1)& (0+255),w,b
 11720  00A8D6  0100               	movlb	0	; () banked
 11721  00A8D8  6FC6               	movwf	(find_volume@pt+1)& (0+255),b
 11722                           
 11723                           ; BSR set to: 0
 11724                           ;ff.c: 2324: br[i] = pt[4] ? (DWORD)(((DWORD)*((BYTE*)(&pt[8])+3)<<24)|((DWORD)*((BYTE*)
      +                          (&pt[8])+2)<<16)|((WORD)*((BYTE*)(&pt[8])+1)<<8)|*(BYTE*)(&pt[8])) : 0;
 11725  00A8DA  0100               	movlb	0	; () banked
 11726  00A8DC  EE20 F004          	lfsr	2,4
 11727  00A8E0  0100               	movlb	0	; () banked
 11728  00A8E2  51C5               	movf	find_volume@pt& (0+255),w,b
 11729  00A8E4  26D9               	addwf	fsr2l,f,c
 11730  00A8E6  0100               	movlb	0	; () banked
 11731  00A8E8  51C6               	movf	(find_volume@pt+1)& (0+255),w,b
 11732  00A8EA  22DA               	addwfc	fsr2h,f,c
 11733  00A8EC  50DF               	movf	indf2,w,c
 11734  00A8EE  A4D8               	btfss	status,2,c
 11735  00A8F0  D00B               	goto	l8269
 11736                           
 11737                           ; BSR set to: 0
 11738  00A8F2  0E00               	movlw	0
 11739  00A8F4  0100               	movlb	0	; () banked
 11740  00A8F6  6FAA               	movwf	_find_volume$1058& (0+255),b
 11741  00A8F8  0E00               	movlw	0
 11742  00A8FA  0100               	movlb	0	; () banked
 11743  00A8FC  6FAB               	movwf	(_find_volume$1058+1)& (0+255),b
 11744  00A8FE  0E00               	movlw	0
 11745  00A900  0100               	movlb	0	; () banked
 11746  00A902  6FAC               	movwf	(_find_volume$1058+2)& (0+255),b
 11747  00A904  0E00               	movlw	0
 11748  00A906  D08C               	goto	L21
 11749  00A908                     l8269:
 11750                           
 11751                           ; BSR set to: 0
 11752  00A908  0100               	movlb	0	; () banked
 11753  00A90A  EE20 F009          	lfsr	2,9
 11754  00A90E  0100               	movlb	0	; () banked
 11755  00A910  51C5               	movf	find_volume@pt& (0+255),w,b
 11756  00A912  26D9               	addwf	fsr2l,f,c
 11757  00A914  0100               	movlb	0	; () banked
 11758  00A916  51C6               	movf	(find_volume@pt+1)& (0+255),w,b
 11759  00A918  22DA               	addwfc	fsr2h,f,c
 11760  00A91A  50DF               	movf	indf2,w,c
 11761  00A91C  0100               	movlb	0	; () banked
 11762  00A91E  6F80               	movwf	??_find_volume& (0+255),b
 11763  00A920  0100               	movlb	0	; () banked
 11764  00A922  5180               	movf	??_find_volume& (0+255),w,b
 11765  00A924  0100               	movlb	0	; () banked
 11766  00A926  6F82               	movwf	(??_find_volume+2)& (0+255),b
 11767  00A928  6B81               	clrf	(??_find_volume+1)& (0+255),b
 11768  00A92A  0100               	movlb	0	; () banked
 11769  00A92C  EE20 F00A          	lfsr	2,10
 11770  00A930  0100               	movlb	0	; () banked
 11771  00A932  51C5               	movf	find_volume@pt& (0+255),w,b
 11772  00A934  26D9               	addwf	fsr2l,f,c
 11773  00A936  0100               	movlb	0	; () banked
 11774  00A938  51C6               	movf	(find_volume@pt+1)& (0+255),w,b
 11775  00A93A  22DA               	addwfc	fsr2h,f,c
 11776  00A93C  50DF               	movf	indf2,w,c
 11777  00A93E  0100               	movlb	0	; () banked
 11778  00A940  6F83               	movwf	(??_find_volume+3)& (0+255),b
 11779  00A942  C083  F084         	movff	??_find_volume+3,??_find_volume+4
 11780  00A946  0100               	movlb	0	; () banked
 11781  00A948  6B85               	clrf	(??_find_volume+5)& (0+255),b
 11782  00A94A  6B86               	clrf	(??_find_volume+6)& (0+255),b
 11783  00A94C  6B87               	clrf	(??_find_volume+7)& (0+255),b
 11784  00A94E  C085  F087         	movff	??_find_volume+5,??_find_volume+7
 11785  00A952  C084  F086         	movff	??_find_volume+4,??_find_volume+6
 11786  00A956  0100               	movlb	0	; () banked
 11787  00A958  6B85               	clrf	(??_find_volume+5)& (0+255),b
 11788  00A95A  6B84               	clrf	(??_find_volume+4)& (0+255),b
 11789  00A95C  0100               	movlb	0	; () banked
 11790  00A95E  EE20 F00B          	lfsr	2,11
 11791  00A962  0100               	movlb	0	; () banked
 11792  00A964  51C5               	movf	find_volume@pt& (0+255),w,b
 11793  00A966  26D9               	addwf	fsr2l,f,c
 11794  00A968  0100               	movlb	0	; () banked
 11795  00A96A  51C6               	movf	(find_volume@pt+1)& (0+255),w,b
 11796  00A96C  22DA               	addwfc	fsr2h,f,c
 11797  00A96E  50DF               	movf	indf2,w,c
 11798  00A970  0100               	movlb	0	; () banked
 11799  00A972  6F88               	movwf	(??_find_volume+8)& (0+255),b
 11800  00A974  C088  F089         	movff	??_find_volume+8,??_find_volume+9
 11801  00A978  0100               	movlb	0	; () banked
 11802  00A97A  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 11803  00A97C  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 11804  00A97E  6B8C               	clrf	(??_find_volume+12)& (0+255),b
 11805  00A980  C089  F08C         	movff	??_find_volume+9,??_find_volume+12
 11806  00A984  0100               	movlb	0	; () banked
 11807  00A986  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 11808  00A988  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 11809  00A98A  6B89               	clrf	(??_find_volume+9)& (0+255),b
 11810  00A98C  0100               	movlb	0	; () banked
 11811  00A98E  5184               	movf	(??_find_volume+4)& (0+255),w,b
 11812  00A990  0100               	movlb	0	; () banked
 11813  00A992  1189               	iorwf	(??_find_volume+9)& (0+255),w,b
 11814  00A994  0100               	movlb	0	; () banked
 11815  00A996  6F8D               	movwf	(??_find_volume+13)& (0+255),b
 11816  00A998  0100               	movlb	0	; () banked
 11817  00A99A  5185               	movf	(??_find_volume+5)& (0+255),w,b
 11818  00A99C  0100               	movlb	0	; () banked
 11819  00A99E  118A               	iorwf	(??_find_volume+10)& (0+255),w,b
 11820  00A9A0  0100               	movlb	0	; () banked
 11821  00A9A2  6F8E               	movwf	(??_find_volume+14)& (0+255),b
 11822  00A9A4  0100               	movlb	0	; () banked
 11823  00A9A6  5186               	movf	(??_find_volume+6)& (0+255),w,b
 11824  00A9A8  0100               	movlb	0	; () banked
 11825  00A9AA  118B               	iorwf	(??_find_volume+11)& (0+255),w,b
 11826  00A9AC  0100               	movlb	0	; () banked
 11827  00A9AE  6F8F               	movwf	(??_find_volume+15)& (0+255),b
 11828  00A9B0  0100               	movlb	0	; () banked
 11829  00A9B2  5187               	movf	(??_find_volume+7)& (0+255),w,b
 11830  00A9B4  0100               	movlb	0	; () banked
 11831  00A9B6  118C               	iorwf	(??_find_volume+12)& (0+255),w,b
 11832  00A9B8  0100               	movlb	0	; () banked
 11833  00A9BA  6F90               	movwf	(??_find_volume+16)& (0+255),b
 11834  00A9BC  0100               	movlb	0	; () banked
 11835  00A9BE  5181               	movf	(??_find_volume+1)& (0+255),w,b
 11836  00A9C0  0100               	movlb	0	; () banked
 11837  00A9C2  118D               	iorwf	(??_find_volume+13)& (0+255),w,b
 11838  00A9C4  0100               	movlb	0	; () banked
 11839  00A9C6  6F91               	movwf	(??_find_volume+17)& (0+255),b
 11840  00A9C8  0100               	movlb	0	; () banked
 11841  00A9CA  5182               	movf	(??_find_volume+2)& (0+255),w,b
 11842  00A9CC  0100               	movlb	0	; () banked
 11843  00A9CE  118E               	iorwf	(??_find_volume+14)& (0+255),w,b
 11844  00A9D0  0100               	movlb	0	; () banked
 11845  00A9D2  6F92               	movwf	(??_find_volume+18)& (0+255),b
 11846  00A9D4  0E00               	movlw	0
 11847  00A9D6  0100               	movlb	0	; () banked
 11848  00A9D8  118F               	iorwf	(??_find_volume+15)& (0+255),w,b
 11849  00A9DA  0100               	movlb	0	; () banked
 11850  00A9DC  6F93               	movwf	(??_find_volume+19)& (0+255),b
 11851  00A9DE  0E00               	movlw	0
 11852  00A9E0  0100               	movlb	0	; () banked
 11853  00A9E2  1190               	iorwf	(??_find_volume+16)& (0+255),w,b
 11854  00A9E4  0100               	movlb	0	; () banked
 11855  00A9E6  6F94               	movwf	(??_find_volume+20)& (0+255),b
 11856  00A9E8  0100               	movlb	0	; () banked
 11857  00A9EA  EE20 F008          	lfsr	2,8
 11858  00A9EE  0100               	movlb	0	; () banked
 11859  00A9F0  51C5               	movf	find_volume@pt& (0+255),w,b
 11860  00A9F2  26D9               	addwf	fsr2l,f,c
 11861  00A9F4  0100               	movlb	0	; () banked
 11862  00A9F6  51C6               	movf	(find_volume@pt+1)& (0+255),w,b
 11863  00A9F8  22DA               	addwfc	fsr2h,f,c
 11864  00A9FA  50DF               	movf	indf2,w,c
 11865  00A9FC  0100               	movlb	0	; () banked
 11866  00A9FE  6F95               	movwf	(??_find_volume+21)& (0+255),b
 11867  00AA00  0100               	movlb	0	; () banked
 11868  00AA02  5195               	movf	(??_find_volume+21)& (0+255),w,b
 11869  00AA04  0100               	movlb	0	; () banked
 11870  00AA06  1191               	iorwf	(??_find_volume+17)& (0+255),w,b
 11871  00AA08  0100               	movlb	0	; () banked
 11872  00AA0A  6FAA               	movwf	_find_volume$1058& (0+255),b
 11873  00AA0C  0100               	movlb	0	; () banked
 11874  00AA0E  5192               	movf	(??_find_volume+18)& (0+255),w,b
 11875  00AA10  0100               	movlb	0	; () banked
 11876  00AA12  6FAB               	movwf	(_find_volume$1058+1)& (0+255),b
 11877  00AA14  0100               	movlb	0	; () banked
 11878  00AA16  5193               	movf	(??_find_volume+19)& (0+255),w,b
 11879  00AA18  0100               	movlb	0	; () banked
 11880  00AA1A  6FAC               	movwf	(_find_volume$1058+2)& (0+255),b
 11881  00AA1C  0100               	movlb	0	; () banked
 11882  00AA1E  5194               	movf	(??_find_volume+20)& (0+255),w,b
 11883  00AA20                     L21:
 11884  00AA20  0100               	movlb	0	; () banked
 11885  00AA22  6FAD               	movwf	(_find_volume$1058+3)& (0+255),b
 11886                           
 11887                           ; BSR set to: 0
 11888  00AA24  0E9A               	movlw	low find_volume@br
 11889  00AA26  0100               	movlb	0	; () banked
 11890  00AA28  6F80               	movwf	??_find_volume& (0+255),b
 11891  00AA2A  0E00               	movlw	high find_volume@br
 11892  00AA2C  6F81               	movwf	(??_find_volume+1)& (0+255),b
 11893  00AA2E  90D8               	bcf	status,0,c
 11894  00AA30  0100               	movlb	0	; () banked
 11895  00AA32  35CF               	rlcf	find_volume@i& (0+255),w,b
 11896  00AA34  6ED9               	movwf	fsr2l,c
 11897  00AA36  0100               	movlb	0	; () banked
 11898  00AA38  35D0               	rlcf	(find_volume@i+1)& (0+255),w,b
 11899  00AA3A  6EDA               	movwf	fsr2h,c
 11900  00AA3C  90D8               	bcf	status,0,c
 11901  00AA3E  36D9               	rlcf	fsr2l,f,c
 11902  00AA40  36DA               	rlcf	fsr2h,f,c
 11903  00AA42  0100               	movlb	0	; () banked
 11904  00AA44  5180               	movf	??_find_volume& (0+255),w,b
 11905  00AA46  26D9               	addwf	fsr2l,f,c
 11906  00AA48  0100               	movlb	0	; () banked
 11907  00AA4A  5181               	movf	(??_find_volume+1)& (0+255),w,b
 11908  00AA4C  22DA               	addwfc	fsr2h,f,c
 11909  00AA4E  0100               	movlb	0	; () banked
 11910  00AA50  C0AA  FFDE         	movff	_find_volume$1058,postinc2
 11911  00AA54  0100               	movlb	0	; () banked
 11912  00AA56  C0AB  FFDE         	movff	_find_volume$1058+1,postinc2
 11913  00AA5A  0100               	movlb	0	; () banked
 11914  00AA5C  C0AC  FFDE         	movff	_find_volume$1058+2,postinc2
 11915  00AA60  0100               	movlb	0	; () banked
 11916  00AA62  C0AD  FFDE         	movff	_find_volume$1058+3,postinc2
 11917                           
 11918                           ; BSR set to: 0
 11919  00AA66  0100               	movlb	0	; () banked
 11920  00AA68  4BCF               	infsnz	find_volume@i& (0+255),f,b
 11921  00AA6A  2BD0               	incf	(find_volume@i+1)& (0+255),f,b
 11922  00AA6C  D6FF               	goto	L22
 11923  00AA6E                     l8275:
 11924                           
 11925                           ; BSR set to: 0
 11926                           ;ff.c: 2325: }
 11927                           ;ff.c: 2326: i = 0;
 11928  00AA6E  0E00               	movlw	0
 11929  00AA70  0100               	movlb	0	; () banked
 11930  00AA72  6FD0               	movwf	(find_volume@i+1)& (0+255),b
 11931  00AA74  0E00               	movlw	0
 11932  00AA76  0100               	movlb	0	; () banked
 11933  00AA78  6FCF               	movwf	find_volume@i& (0+255),b
 11934                           
 11935                           ; BSR set to: 0
 11936                           ;ff.c: 2327: if (i) i--;
 11937  00AA7A  0100               	movlb	0	; () banked
 11938  00AA7C  51D0               	movf	(find_volume@i+1)& (0+255),w,b
 11939  00AA7E  11CF               	iorwf	find_volume@i& (0+255),w,b
 11940  00AA80  B4D8               	btfsc	status,2,c
 11941  00AA82  D004               	goto	l8281
 11942                           
 11943                           ; BSR set to: 0
 11944  00AA84  0100               	movlb	0	; () banked
 11945  00AA86  07CF               	decf	find_volume@i& (0+255),f,b
 11946  00AA88  A0D8               	btfss	status,0,c
 11947  00AA8A  07D0               	decf	(find_volume@i+1)& (0+255),f,b
 11948  00AA8C                     l8281:
 11949                           
 11950                           ; BSR set to: 0
 11951  00AA8C  0E00               	movlw	0
 11952  00AA8E  0101               	movlb	1	; () banked
 11953  00AA90  6F64               	movwf	(_ch+1)& (0+255),b
 11954  00AA92  0E22               	movlw	34
 11955  00AA94  0101               	movlb	1	; () banked
 11956  00AA96  6F63               	movwf	_ch& (0+255),b
 11957                           
 11958                           ; BSR set to: 1
 11959                           ;ff.c: 2330: bsect = br[i];
 11960  00AA98  0E9A               	movlw	low find_volume@br
 11961  00AA9A  0100               	movlb	0	; () banked
 11962  00AA9C  6F80               	movwf	??_find_volume& (0+255),b
 11963  00AA9E  0E00               	movlw	high find_volume@br
 11964  00AAA0  6F81               	movwf	(??_find_volume+1)& (0+255),b
 11965  00AAA2  90D8               	bcf	status,0,c
 11966  00AAA4  0100               	movlb	0	; () banked
 11967  00AAA6  35CF               	rlcf	find_volume@i& (0+255),w,b
 11968  00AAA8  6ED9               	movwf	fsr2l,c
 11969  00AAAA  0100               	movlb	0	; () banked
 11970  00AAAC  35D0               	rlcf	(find_volume@i+1)& (0+255),w,b
 11971  00AAAE  6EDA               	movwf	fsr2h,c
 11972  00AAB0  90D8               	bcf	status,0,c
 11973  00AAB2  36D9               	rlcf	fsr2l,f,c
 11974  00AAB4  36DA               	rlcf	fsr2h,f,c
 11975  00AAB6  0100               	movlb	0	; () banked
 11976  00AAB8  5180               	movf	??_find_volume& (0+255),w,b
 11977  00AABA  26D9               	addwf	fsr2l,f,c
 11978  00AABC  0100               	movlb	0	; () banked
 11979  00AABE  5181               	movf	(??_find_volume+1)& (0+255),w,b
 11980  00AAC0  22DA               	addwfc	fsr2h,f,c
 11981  00AAC2  0100               	movlb	0	; () banked
 11982  00AAC4  CFDE F0CB          	movff	postinc2,find_volume@bsect
 11983  00AAC8  0100               	movlb	0	; () banked
 11984  00AACA  CFDE F0CC          	movff	postinc2,find_volume@bsect+1
 11985  00AACE  0100               	movlb	0	; () banked
 11986  00AAD0  CFDE F0CD          	movff	postinc2,find_volume@bsect+2
 11987  00AAD4  0100               	movlb	0	; () banked
 11988  00AAD6  CFDE F0CE          	movff	postinc2,find_volume@bsect+3
 11989                           
 11990                           ; BSR set to: 0
 11991                           ;ff.c: 2331: fmt = bsect ? check_fs(fs, bsect) : 2;
 11992  00AADA  0100               	movlb	0	; () banked
 11993  00AADC  51CE               	movf	(find_volume@bsect+3)& (0+255),w,b
 11994  00AADE  11CB               	iorwf	find_volume@bsect& (0+255),w,b
 11995  00AAE0  11CC               	iorwf	(find_volume@bsect+1)& (0+255),w,b
 11996  00AAE2  11CD               	iorwf	(find_volume@bsect+2)& (0+255),w,b
 11997  00AAE4  A4D8               	btfss	status,2,c
 11998  00AAE6  D007               	goto	l8289
 11999                           
 12000                           ; BSR set to: 0
 12001  00AAE8  0E00               	movlw	0
 12002  00AAEA  0100               	movlb	0	; () banked
 12003  00AAEC  6FAF               	movwf	(_find_volume$1059+1)& (0+255),b
 12004  00AAEE  0E02               	movlw	2
 12005  00AAF0  0100               	movlb	0	; () banked
 12006  00AAF2  6FAE               	movwf	_find_volume$1059& (0+255),b
 12007  00AAF4  D018               	goto	l8291
 12008  00AAF6                     l8289:
 12009                           
 12010                           ; BSR set to: 0
 12011  00AAF6  0100               	movlb	0	; () banked
 12012  00AAF8  C0D3  F047         	movff	find_volume@fs+1,check_fs@fs+1
 12013  00AAFC  0100               	movlb	0	; () banked
 12014  00AAFE  C0D2  F046         	movff	find_volume@fs,check_fs@fs
 12015  00AB02  C0CB  F048         	movff	find_volume@bsect,check_fs@sect
 12016  00AB06  C0CC  F049         	movff	find_volume@bsect+1,check_fs@sect+1
 12017  00AB0A  C0CD  F04A         	movff	find_volume@bsect+2,check_fs@sect+2
 12018  00AB0E  C0CE  F04B         	movff	find_volume@bsect+3,check_fs@sect+3
 12019  00AB12  EC02  F039         	call	_check_fs	;wreg free
 12020  00AB16  0100               	movlb	0	; () banked
 12021  00AB18  6F80               	movwf	??_find_volume& (0+255),b
 12022  00AB1A  0100               	movlb	0	; () banked
 12023  00AB1C  5180               	movf	??_find_volume& (0+255),w,b
 12024  00AB1E  0100               	movlb	0	; () banked
 12025  00AB20  6FAE               	movwf	_find_volume$1059& (0+255),b
 12026  00AB22  0100               	movlb	0	; () banked
 12027  00AB24  6BAF               	clrf	(_find_volume$1059+1)& (0+255),b
 12028  00AB26                     l8291:
 12029                           
 12030                           ; BSR set to: 0
 12031                           ;ff.c: 2332: } while (!0 && fmt && ++i < 4);
 12032  00AB26  C0AE  F0D1         	movff	_find_volume$1059,find_volume@fmt
 12033                           
 12034                           ; BSR set to: 0
 12035  00AB2A  0100               	movlb	0	; () banked
 12036  00AB2C  51D1               	movf	find_volume@fmt& (0+255),w,b
 12037  00AB2E  B4D8               	btfsc	status,2,c
 12038  00AB30  D00B               	goto	l8297
 12039                           
 12040                           ; BSR set to: 0
 12041  00AB32  0100               	movlb	0	; () banked
 12042  00AB34  4BCF               	infsnz	find_volume@i& (0+255),f,b
 12043  00AB36  2BD0               	incf	(find_volume@i+1)& (0+255),f,b
 12044  00AB38  0E04               	movlw	4
 12045  00AB3A  0100               	movlb	0	; () banked
 12046  00AB3C  5DCF               	subwf	find_volume@i& (0+255),w,b
 12047  00AB3E  0E00               	movlw	0
 12048  00AB40  0100               	movlb	0	; () banked
 12049  00AB42  59D0               	subwfb	(find_volume@i+1)& (0+255),w,b
 12050  00AB44  A0D8               	btfss	status,0,c
 12051  00AB46  D7A2               	goto	l8281
 12052  00AB48                     l8297:
 12053                           
 12054                           ; BSR set to: 0
 12055                           ;ff.c: 2333: }
 12056                           ;ff.c: 2334: ch = 32;
 12057  00AB48  0E00               	movlw	0
 12058  00AB4A  0101               	movlb	1	; () banked
 12059  00AB4C  6F64               	movwf	(_ch+1)& (0+255),b
 12060  00AB4E  0E20               	movlw	32
 12061  00AB50  0101               	movlb	1	; () banked
 12062  00AB52  6F63               	movwf	_ch& (0+255),b
 12063                           
 12064                           ; BSR set to: 1
 12065                           ;ff.c: 2335: if (fmt == 3) return FR_DISK_ERR;
 12066  00AB54  0100               	movlb	0	; () banked
 12067  00AB56  51D1               	movf	find_volume@fmt& (0+255),w,b
 12068  00AB58  0A03               	xorlw	3
 12069  00AB5A  A4D8               	btfss	status,2,c
 12070  00AB5C  D003               	goto	l8305
 12071                           
 12072                           ; BSR set to: 0
 12073  00AB5E  0E01               	movlw	1
 12074  00AB60  EF68  F05F         	goto	l693
 12075  00AB64                     l8305:
 12076                           
 12077                           ; BSR set to: 0
 12078                           ;ff.c: 2336: if (fmt) return FR_NO_FILESYSTEM;
 12079  00AB64  0100               	movlb	0	; () banked
 12080  00AB66  51D1               	movf	find_volume@fmt& (0+255),w,b
 12081  00AB68  A4D8               	btfss	status,2,c
 12082  00AB6A  EF00  F05C         	goto	u11230
 12083                           
 12084                           ; BSR set to: 0
 12085                           ;ff.c: 2337: ch = 31;
 12086                           
 12087                           ; BSR set to: 0
 12088                           
 12089                           ; BSR set to: 0
 12090                           
 12091                           ; BSR set to: 0
 12092  00AB6E  0E00               	movlw	0
 12093  00AB70  0101               	movlb	1	; () banked
 12094  00AB72  6F64               	movwf	(_ch+1)& (0+255),b
 12095  00AB74  0E1F               	movlw	31
 12096  00AB76  0101               	movlb	1	; () banked
 12097  00AB78  6F63               	movwf	_ch& (0+255),b
 12098                           
 12099                           ; BSR set to: 1
 12100                           ;ff.c: 2340: if ((WORD)(((WORD)*((BYTE*)(fs->win + 11)+1)<<8)|(WORD)*(BYTE*)(fs->win + 1
      +                          1)) != ((UINT)512))
 12101  00AB7A  0100               	movlb	0	; () banked
 12102  00AB7C  EE20 F03E          	lfsr	2,62
 12103  00AB80  0100               	movlb	0	; () banked
 12104  00AB82  51D2               	movf	find_volume@fs& (0+255),w,b
 12105  00AB84  26D9               	addwf	fsr2l,f,c
 12106  00AB86  0100               	movlb	0	; () banked
 12107  00AB88  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12108  00AB8A  22DA               	addwfc	fsr2h,f,c
 12109  00AB8C  50DF               	movf	indf2,w,c
 12110  00AB8E  0100               	movlb	0	; () banked
 12111  00AB90  6F80               	movwf	??_find_volume& (0+255),b
 12112  00AB92  0100               	movlb	0	; () banked
 12113  00AB94  5180               	movf	??_find_volume& (0+255),w,b
 12114  00AB96  0100               	movlb	0	; () banked
 12115  00AB98  6F82               	movwf	(??_find_volume+2)& (0+255),b
 12116  00AB9A  6B81               	clrf	(??_find_volume+1)& (0+255),b
 12117  00AB9C  0100               	movlb	0	; () banked
 12118  00AB9E  EE20 F03D          	lfsr	2,61
 12119  00ABA2  0100               	movlb	0	; () banked
 12120  00ABA4  51D2               	movf	find_volume@fs& (0+255),w,b
 12121  00ABA6  26D9               	addwf	fsr2l,f,c
 12122  00ABA8  0100               	movlb	0	; () banked
 12123  00ABAA  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12124  00ABAC  22DA               	addwfc	fsr2h,f,c
 12125  00ABAE  50DF               	movf	indf2,w,c
 12126  00ABB0  0100               	movlb	0	; () banked
 12127  00ABB2  6F83               	movwf	(??_find_volume+3)& (0+255),b
 12128  00ABB4  0100               	movlb	0	; () banked
 12129  00ABB6  5183               	movf	(??_find_volume+3)& (0+255),w,b
 12130  00ABB8  0100               	movlb	0	; () banked
 12131  00ABBA  1381               	iorwf	(??_find_volume+1)& (0+255),f,b
 12132  00ABBC  0E00               	movlw	0
 12133  00ABBE  1382               	iorwf	(??_find_volume+2)& (0+255),f,b
 12134  00ABC0  0100               	movlb	0	; () banked
 12135  00ABC2  5182               	movf	(??_find_volume+2)& (0+255),w,b
 12136  00ABC4  0A02               	xorlw	2
 12137  00ABC6  1181               	iorwf	(??_find_volume+1)& (0+255),w,b
 12138  00ABC8  A4D8               	btfss	status,2,c
 12139  00ABCA  EF00  F05C         	goto	u11230
 12140                           
 12141                           ; BSR set to: 0
 12142                           ;ff.c: 2342: ch = 88;
 12143                           
 12144                           ; BSR set to: 0
 12145                           
 12146                           ; BSR set to: 0
 12147                           
 12148                           ; BSR set to: 0
 12149                           ;ff.c: 2341: return FR_NO_FILESYSTEM;
 12150  00ABCE  0E00               	movlw	0
 12151  00ABD0  0101               	movlb	1	; () banked
 12152  00ABD2  6F64               	movwf	(_ch+1)& (0+255),b
 12153  00ABD4  0E58               	movlw	88
 12154  00ABD6  0101               	movlb	1	; () banked
 12155  00ABD8  6F63               	movwf	_ch& (0+255),b
 12156                           
 12157                           ; BSR set to: 1
 12158                           ;ff.c: 2343: fasize = (WORD)(((WORD)*((BYTE*)(fs->win + 22)+1)<<8)|(WORD)*(BYTE*)(fs->wi
      +                          n + 22));
 12159  00ABDA  0100               	movlb	0	; () banked
 12160  00ABDC  EE20 F049          	lfsr	2,73
 12161  00ABE0  0100               	movlb	0	; () banked
 12162  00ABE2  51D2               	movf	find_volume@fs& (0+255),w,b
 12163  00ABE4  26D9               	addwf	fsr2l,f,c
 12164  00ABE6  0100               	movlb	0	; () banked
 12165  00ABE8  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12166  00ABEA  22DA               	addwfc	fsr2h,f,c
 12167  00ABEC  50DF               	movf	indf2,w,c
 12168  00ABEE  0100               	movlb	0	; () banked
 12169  00ABF0  6F80               	movwf	??_find_volume& (0+255),b
 12170  00ABF2  0100               	movlb	0	; () banked
 12171  00ABF4  5180               	movf	??_find_volume& (0+255),w,b
 12172  00ABF6  0100               	movlb	0	; () banked
 12173  00ABF8  6F82               	movwf	(??_find_volume+2)& (0+255),b
 12174  00ABFA  6B81               	clrf	(??_find_volume+1)& (0+255),b
 12175  00ABFC  0100               	movlb	0	; () banked
 12176  00ABFE  EE20 F048          	lfsr	2,72
 12177  00AC02  0100               	movlb	0	; () banked
 12178  00AC04  51D2               	movf	find_volume@fs& (0+255),w,b
 12179  00AC06  26D9               	addwf	fsr2l,f,c
 12180  00AC08  0100               	movlb	0	; () banked
 12181  00AC0A  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12182  00AC0C  22DA               	addwfc	fsr2h,f,c
 12183  00AC0E  50DF               	movf	indf2,w,c
 12184  00AC10  0100               	movlb	0	; () banked
 12185  00AC12  6F83               	movwf	(??_find_volume+3)& (0+255),b
 12186  00AC14  0100               	movlb	0	; () banked
 12187  00AC16  5183               	movf	(??_find_volume+3)& (0+255),w,b
 12188  00AC18  0100               	movlb	0	; () banked
 12189  00AC1A  1381               	iorwf	(??_find_volume+1)& (0+255),f,b
 12190  00AC1C  0E00               	movlw	0
 12191  00AC1E  1382               	iorwf	(??_find_volume+2)& (0+255),f,b
 12192  00AC20  0100               	movlb	0	; () banked
 12193  00AC22  C081  F0C7         	movff	??_find_volume+1,find_volume@fasize
 12194  00AC26  0100               	movlb	0	; () banked
 12195  00AC28  C082  F0C8         	movff	??_find_volume+2,find_volume@fasize+1
 12196  00AC2C  0100               	movlb	0	; () banked
 12197  00AC2E  6BC9               	clrf	(find_volume@fasize+2)& (0+255),b
 12198  00AC30  0100               	movlb	0	; () banked
 12199  00AC32  6BCA               	clrf	(find_volume@fasize+3)& (0+255),b
 12200                           
 12201                           ; BSR set to: 0
 12202                           ;ff.c: 2344: if (!fasize) fasize = (DWORD)(((DWORD)*((BYTE*)(fs->win + 36)+3)<<24)|((DWO
      +                          RD)*((BYTE*)(fs->win + 36)+2)<<16)|((WORD)*((BYTE*)(fs->win + 36)+1)<<8)|*(BYTE*)(fs->wi
      +                          n + 36));
 12203  00AC34  0100               	movlb	0	; () banked
 12204  00AC36  51CA               	movf	(find_volume@fasize+3)& (0+255),w,b
 12205  00AC38  11C7               	iorwf	find_volume@fasize& (0+255),w,b
 12206  00AC3A  11C8               	iorwf	(find_volume@fasize+1)& (0+255),w,b
 12207  00AC3C  11C9               	iorwf	(find_volume@fasize+2)& (0+255),w,b
 12208  00AC3E  A4D8               	btfss	status,2,c
 12209  00AC40  D08E               	goto	l721
 12210                           
 12211                           ; BSR set to: 0
 12212  00AC42  0100               	movlb	0	; () banked
 12213  00AC44  EE20 F057          	lfsr	2,87
 12214  00AC48  0100               	movlb	0	; () banked
 12215  00AC4A  51D2               	movf	find_volume@fs& (0+255),w,b
 12216  00AC4C  26D9               	addwf	fsr2l,f,c
 12217  00AC4E  0100               	movlb	0	; () banked
 12218  00AC50  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12219  00AC52  22DA               	addwfc	fsr2h,f,c
 12220  00AC54  50DF               	movf	indf2,w,c
 12221  00AC56  0100               	movlb	0	; () banked
 12222  00AC58  6F80               	movwf	??_find_volume& (0+255),b
 12223  00AC5A  0100               	movlb	0	; () banked
 12224  00AC5C  5180               	movf	??_find_volume& (0+255),w,b
 12225  00AC5E  0100               	movlb	0	; () banked
 12226  00AC60  6F82               	movwf	(??_find_volume+2)& (0+255),b
 12227  00AC62  6B81               	clrf	(??_find_volume+1)& (0+255),b
 12228  00AC64  0100               	movlb	0	; () banked
 12229  00AC66  EE20 F058          	lfsr	2,88
 12230  00AC6A  0100               	movlb	0	; () banked
 12231  00AC6C  51D2               	movf	find_volume@fs& (0+255),w,b
 12232  00AC6E  26D9               	addwf	fsr2l,f,c
 12233  00AC70  0100               	movlb	0	; () banked
 12234  00AC72  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12235  00AC74  22DA               	addwfc	fsr2h,f,c
 12236  00AC76  50DF               	movf	indf2,w,c
 12237  00AC78  0100               	movlb	0	; () banked
 12238  00AC7A  6F83               	movwf	(??_find_volume+3)& (0+255),b
 12239  00AC7C  C083  F084         	movff	??_find_volume+3,??_find_volume+4
 12240  00AC80  0100               	movlb	0	; () banked
 12241  00AC82  6B85               	clrf	(??_find_volume+5)& (0+255),b
 12242  00AC84  6B86               	clrf	(??_find_volume+6)& (0+255),b
 12243  00AC86  6B87               	clrf	(??_find_volume+7)& (0+255),b
 12244  00AC88  C085  F087         	movff	??_find_volume+5,??_find_volume+7
 12245  00AC8C  C084  F086         	movff	??_find_volume+4,??_find_volume+6
 12246  00AC90  0100               	movlb	0	; () banked
 12247  00AC92  6B85               	clrf	(??_find_volume+5)& (0+255),b
 12248  00AC94  6B84               	clrf	(??_find_volume+4)& (0+255),b
 12249  00AC96  0100               	movlb	0	; () banked
 12250  00AC98  EE20 F059          	lfsr	2,89
 12251  00AC9C  0100               	movlb	0	; () banked
 12252  00AC9E  51D2               	movf	find_volume@fs& (0+255),w,b
 12253  00ACA0  26D9               	addwf	fsr2l,f,c
 12254  00ACA2  0100               	movlb	0	; () banked
 12255  00ACA4  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12256  00ACA6  22DA               	addwfc	fsr2h,f,c
 12257  00ACA8  50DF               	movf	indf2,w,c
 12258  00ACAA  0100               	movlb	0	; () banked
 12259  00ACAC  6F88               	movwf	(??_find_volume+8)& (0+255),b
 12260  00ACAE  C088  F089         	movff	??_find_volume+8,??_find_volume+9
 12261  00ACB2  0100               	movlb	0	; () banked
 12262  00ACB4  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 12263  00ACB6  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 12264  00ACB8  6B8C               	clrf	(??_find_volume+12)& (0+255),b
 12265  00ACBA  C089  F08C         	movff	??_find_volume+9,??_find_volume+12
 12266  00ACBE  0100               	movlb	0	; () banked
 12267  00ACC0  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 12268  00ACC2  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 12269  00ACC4  6B89               	clrf	(??_find_volume+9)& (0+255),b
 12270  00ACC6  0100               	movlb	0	; () banked
 12271  00ACC8  5184               	movf	(??_find_volume+4)& (0+255),w,b
 12272  00ACCA  0100               	movlb	0	; () banked
 12273  00ACCC  1189               	iorwf	(??_find_volume+9)& (0+255),w,b
 12274  00ACCE  0100               	movlb	0	; () banked
 12275  00ACD0  6F8D               	movwf	(??_find_volume+13)& (0+255),b
 12276  00ACD2  0100               	movlb	0	; () banked
 12277  00ACD4  5185               	movf	(??_find_volume+5)& (0+255),w,b
 12278  00ACD6  0100               	movlb	0	; () banked
 12279  00ACD8  118A               	iorwf	(??_find_volume+10)& (0+255),w,b
 12280  00ACDA  0100               	movlb	0	; () banked
 12281  00ACDC  6F8E               	movwf	(??_find_volume+14)& (0+255),b
 12282  00ACDE  0100               	movlb	0	; () banked
 12283  00ACE0  5186               	movf	(??_find_volume+6)& (0+255),w,b
 12284  00ACE2  0100               	movlb	0	; () banked
 12285  00ACE4  118B               	iorwf	(??_find_volume+11)& (0+255),w,b
 12286  00ACE6  0100               	movlb	0	; () banked
 12287  00ACE8  6F8F               	movwf	(??_find_volume+15)& (0+255),b
 12288  00ACEA  0100               	movlb	0	; () banked
 12289  00ACEC  5187               	movf	(??_find_volume+7)& (0+255),w,b
 12290  00ACEE  0100               	movlb	0	; () banked
 12291  00ACF0  118C               	iorwf	(??_find_volume+12)& (0+255),w,b
 12292  00ACF2  0100               	movlb	0	; () banked
 12293  00ACF4  6F90               	movwf	(??_find_volume+16)& (0+255),b
 12294  00ACF6  0100               	movlb	0	; () banked
 12295  00ACF8  5181               	movf	(??_find_volume+1)& (0+255),w,b
 12296  00ACFA  0100               	movlb	0	; () banked
 12297  00ACFC  118D               	iorwf	(??_find_volume+13)& (0+255),w,b
 12298  00ACFE  0100               	movlb	0	; () banked
 12299  00AD00  6F91               	movwf	(??_find_volume+17)& (0+255),b
 12300  00AD02  0100               	movlb	0	; () banked
 12301  00AD04  5182               	movf	(??_find_volume+2)& (0+255),w,b
 12302  00AD06  0100               	movlb	0	; () banked
 12303  00AD08  118E               	iorwf	(??_find_volume+14)& (0+255),w,b
 12304  00AD0A  0100               	movlb	0	; () banked
 12305  00AD0C  6F92               	movwf	(??_find_volume+18)& (0+255),b
 12306  00AD0E  0E00               	movlw	0
 12307  00AD10  0100               	movlb	0	; () banked
 12308  00AD12  118F               	iorwf	(??_find_volume+15)& (0+255),w,b
 12309  00AD14  0100               	movlb	0	; () banked
 12310  00AD16  6F93               	movwf	(??_find_volume+19)& (0+255),b
 12311  00AD18  0E00               	movlw	0
 12312  00AD1A  0100               	movlb	0	; () banked
 12313  00AD1C  1190               	iorwf	(??_find_volume+16)& (0+255),w,b
 12314  00AD1E  0100               	movlb	0	; () banked
 12315  00AD20  6F94               	movwf	(??_find_volume+20)& (0+255),b
 12316  00AD22  0100               	movlb	0	; () banked
 12317  00AD24  EE20 F056          	lfsr	2,86
 12318  00AD28  0100               	movlb	0	; () banked
 12319  00AD2A  51D2               	movf	find_volume@fs& (0+255),w,b
 12320  00AD2C  26D9               	addwf	fsr2l,f,c
 12321  00AD2E  0100               	movlb	0	; () banked
 12322  00AD30  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12323  00AD32  22DA               	addwfc	fsr2h,f,c
 12324  00AD34  50DF               	movf	indf2,w,c
 12325  00AD36  0100               	movlb	0	; () banked
 12326  00AD38  6F95               	movwf	(??_find_volume+21)& (0+255),b
 12327  00AD3A  0100               	movlb	0	; () banked
 12328  00AD3C  5195               	movf	(??_find_volume+21)& (0+255),w,b
 12329  00AD3E  0100               	movlb	0	; () banked
 12330  00AD40  1191               	iorwf	(??_find_volume+17)& (0+255),w,b
 12331  00AD42  0100               	movlb	0	; () banked
 12332  00AD44  6FC7               	movwf	find_volume@fasize& (0+255),b
 12333  00AD46  0100               	movlb	0	; () banked
 12334  00AD48  5192               	movf	(??_find_volume+18)& (0+255),w,b
 12335  00AD4A  0100               	movlb	0	; () banked
 12336  00AD4C  6FC8               	movwf	(find_volume@fasize+1)& (0+255),b
 12337  00AD4E  0100               	movlb	0	; () banked
 12338  00AD50  5193               	movf	(??_find_volume+19)& (0+255),w,b
 12339  00AD52  0100               	movlb	0	; () banked
 12340  00AD54  6FC9               	movwf	(find_volume@fasize+2)& (0+255),b
 12341  00AD56  0100               	movlb	0	; () banked
 12342  00AD58  5194               	movf	(??_find_volume+20)& (0+255),w,b
 12343  00AD5A  0100               	movlb	0	; () banked
 12344  00AD5C  6FCA               	movwf	(find_volume@fasize+3)& (0+255),b
 12345  00AD5E                     l721:
 12346                           
 12347                           ; BSR set to: 0
 12348                           ;ff.c: 2345: fs->fsize = fasize;
 12349  00AD5E  0100               	movlb	0	; () banked
 12350  00AD60  EE20 F01A          	lfsr	2,26
 12351  00AD64  0100               	movlb	0	; () banked
 12352  00AD66  51D2               	movf	find_volume@fs& (0+255),w,b
 12353  00AD68  26D9               	addwf	fsr2l,f,c
 12354  00AD6A  0100               	movlb	0	; () banked
 12355  00AD6C  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12356  00AD6E  22DA               	addwfc	fsr2h,f,c
 12357  00AD70  0100               	movlb	0	; () banked
 12358  00AD72  C0C7  FFDE         	movff	find_volume@fasize,postinc2
 12359  00AD76  0100               	movlb	0	; () banked
 12360  00AD78  C0C8  FFDE         	movff	find_volume@fasize+1,postinc2
 12361  00AD7C  0100               	movlb	0	; () banked
 12362  00AD7E  C0C9  FFDE         	movff	find_volume@fasize+2,postinc2
 12363  00AD82  0100               	movlb	0	; () banked
 12364  00AD84  C0CA  FFDE         	movff	find_volume@fasize+3,postinc2
 12365                           
 12366                           ; BSR set to: 0
 12367                           ;ff.c: 2346: ch = 89;
 12368  00AD88  0E00               	movlw	0
 12369  00AD8A  0101               	movlb	1	; () banked
 12370  00AD8C  6F64               	movwf	(_ch+1)& (0+255),b
 12371  00AD8E  0E59               	movlw	89
 12372  00AD90  0101               	movlb	1	; () banked
 12373  00AD92  6F63               	movwf	_ch& (0+255),b
 12374                           
 12375                           ; BSR set to: 1
 12376                           ;ff.c: 2347: fs->n_fats = fs->win[16];
 12377  00AD94  0100               	movlb	0	; () banked
 12378  00AD96  EE20 F042          	lfsr	2,66
 12379  00AD9A  0100               	movlb	0	; () banked
 12380  00AD9C  51D2               	movf	find_volume@fs& (0+255),w,b
 12381  00AD9E  26D9               	addwf	fsr2l,f,c
 12382  00ADA0  0100               	movlb	0	; () banked
 12383  00ADA2  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12384  00ADA4  22DA               	addwfc	fsr2h,f,c
 12385  00ADA6  0100               	movlb	0	; () banked
 12386  00ADA8  EE10 F003          	lfsr	1,3
 12387  00ADAC  0100               	movlb	0	; () banked
 12388  00ADAE  51D2               	movf	find_volume@fs& (0+255),w,b
 12389  00ADB0  26E1               	addwf	fsr1l,f,c
 12390  00ADB2  0100               	movlb	0	; () banked
 12391  00ADB4  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12392  00ADB6  22E2               	addwfc	fsr1h,f,c
 12393  00ADB8  CFDF FFE7          	movff	indf2,indf1
 12394                           
 12395                           ; BSR set to: 0
 12396                           ;ff.c: 2348: if (fs->n_fats != 1 && fs->n_fats != 2)
 12397  00ADBC  0100               	movlb	0	; () banked
 12398  00ADBE  EE20 F003          	lfsr	2,3
 12399  00ADC2  0100               	movlb	0	; () banked
 12400  00ADC4  51D2               	movf	find_volume@fs& (0+255),w,b
 12401  00ADC6  26D9               	addwf	fsr2l,f,c
 12402  00ADC8  0100               	movlb	0	; () banked
 12403  00ADCA  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12404  00ADCC  22DA               	addwfc	fsr2h,f,c
 12405  00ADCE  50DF               	movf	indf2,w,c
 12406  00ADD0  0A01               	xorlw	1
 12407  00ADD2  B4D8               	btfsc	status,2,c
 12408  00ADD4  D00E               	goto	l8339
 12409                           
 12410                           ; BSR set to: 0
 12411  00ADD6  0100               	movlb	0	; () banked
 12412  00ADD8  EE20 F003          	lfsr	2,3
 12413  00ADDC  0100               	movlb	0	; () banked
 12414  00ADDE  51D2               	movf	find_volume@fs& (0+255),w,b
 12415  00ADE0  26D9               	addwf	fsr2l,f,c
 12416  00ADE2  0100               	movlb	0	; () banked
 12417  00ADE4  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12418  00ADE6  22DA               	addwfc	fsr2h,f,c
 12419  00ADE8  50DF               	movf	indf2,w,c
 12420  00ADEA  0A02               	xorlw	2
 12421  00ADEC  A4D8               	btfss	status,2,c
 12422  00ADEE  EF00  F05C         	goto	u11230
 12423  00ADF2                     l8339:
 12424                           
 12425                           ; BSR set to: 0
 12426                           ;ff.c: 2350: fasize *= fs->n_fats;
 12427  00ADF2  C0C7  F001         	movff	find_volume@fasize,___lmul@multiplier
 12428  00ADF6  C0C8  F002         	movff	find_volume@fasize+1,___lmul@multiplier+1
 12429  00ADFA  C0C9  F003         	movff	find_volume@fasize+2,___lmul@multiplier+2
 12430  00ADFE  C0CA  F004         	movff	find_volume@fasize+3,___lmul@multiplier+3
 12431  00AE02  0100               	movlb	0	; () banked
 12432  00AE04  EE20 F003          	lfsr	2,3
 12433  00AE08  0100               	movlb	0	; () banked
 12434  00AE0A  51D2               	movf	find_volume@fs& (0+255),w,b
 12435  00AE0C  26D9               	addwf	fsr2l,f,c
 12436  00AE0E  0100               	movlb	0	; () banked
 12437  00AE10  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12438  00AE12  22DA               	addwfc	fsr2h,f,c
 12439  00AE14  50DF               	movf	indf2,w,c
 12440  00AE16  0100               	movlb	0	; () banked
 12441  00AE18  6F80               	movwf	??_find_volume& (0+255),b
 12442  00AE1A  0100               	movlb	0	; () banked
 12443  00AE1C  5180               	movf	??_find_volume& (0+255),w,b
 12444  00AE1E  6E05               	movwf	___lmul@multiplicand,c
 12445  00AE20  6A06               	clrf	___lmul@multiplicand+1,c
 12446  00AE22  6A07               	clrf	___lmul@multiplicand+2,c
 12447  00AE24  6A08               	clrf	___lmul@multiplicand+3,c
 12448  00AE26  ECF7  F029         	call	___lmul	;wreg free
 12449  00AE2A  C001  F0C7         	movff	?___lmul,find_volume@fasize
 12450  00AE2E  C002  F0C8         	movff	?___lmul+1,find_volume@fasize+1
 12451  00AE32  C003  F0C9         	movff	?___lmul+2,find_volume@fasize+2
 12452  00AE36  C004  F0CA         	movff	?___lmul+3,find_volume@fasize+3
 12453                           
 12454                           ;ff.c: 2351: ch = 90;
 12455  00AE3A  0E00               	movlw	0
 12456  00AE3C  0101               	movlb	1	; () banked
 12457  00AE3E  6F64               	movwf	(_ch+1)& (0+255),b
 12458  00AE40  0E5A               	movlw	90
 12459  00AE42  0101               	movlb	1	; () banked
 12460  00AE44  6F63               	movwf	_ch& (0+255),b
 12461                           
 12462                           ; BSR set to: 1
 12463                           ;ff.c: 2352: fs->csize = fs->win[13];
 12464  00AE46  0100               	movlb	0	; () banked
 12465  00AE48  EE20 F03F          	lfsr	2,63
 12466  00AE4C  0100               	movlb	0	; () banked
 12467  00AE4E  51D2               	movf	find_volume@fs& (0+255),w,b
 12468  00AE50  26D9               	addwf	fsr2l,f,c
 12469  00AE52  0100               	movlb	0	; () banked
 12470  00AE54  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12471  00AE56  22DA               	addwfc	fsr2h,f,c
 12472  00AE58  0100               	movlb	0	; () banked
 12473  00AE5A  EE10 F002          	lfsr	1,2
 12474  00AE5E  0100               	movlb	0	; () banked
 12475  00AE60  51D2               	movf	find_volume@fs& (0+255),w,b
 12476  00AE62  26E1               	addwf	fsr1l,f,c
 12477  00AE64  0100               	movlb	0	; () banked
 12478  00AE66  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12479  00AE68  22E2               	addwfc	fsr1h,f,c
 12480  00AE6A  CFDF FFE7          	movff	indf2,indf1
 12481                           
 12482                           ; BSR set to: 0
 12483                           ;ff.c: 2353: if (!fs->csize || (fs->csize & (fs->csize - 1)))
 12484  00AE6E  0100               	movlb	0	; () banked
 12485  00AE70  EE20 F002          	lfsr	2,2
 12486  00AE74  0100               	movlb	0	; () banked
 12487  00AE76  51D2               	movf	find_volume@fs& (0+255),w,b
 12488  00AE78  26D9               	addwf	fsr2l,f,c
 12489  00AE7A  0100               	movlb	0	; () banked
 12490  00AE7C  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12491  00AE7E  22DA               	addwfc	fsr2h,f,c
 12492  00AE80  50DF               	movf	indf2,w,c
 12493  00AE82  B4D8               	btfsc	status,2,c
 12494  00AE84  EF00  F05C         	goto	u11230
 12495                           
 12496                           ; BSR set to: 0
 12497  00AE88  0EFF               	movlw	255
 12498  00AE8A  0100               	movlb	0	; () banked
 12499  00AE8C  6F80               	movwf	??_find_volume& (0+255),b
 12500  00AE8E  0EFF               	movlw	255
 12501  00AE90  6F81               	movwf	(??_find_volume+1)& (0+255),b
 12502  00AE92  0100               	movlb	0	; () banked
 12503  00AE94  EE20 F002          	lfsr	2,2
 12504  00AE98  0100               	movlb	0	; () banked
 12505  00AE9A  51D2               	movf	find_volume@fs& (0+255),w,b
 12506  00AE9C  26D9               	addwf	fsr2l,f,c
 12507  00AE9E  0100               	movlb	0	; () banked
 12508  00AEA0  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12509  00AEA2  22DA               	addwfc	fsr2h,f,c
 12510  00AEA4  50DF               	movf	indf2,w,c
 12511  00AEA6  0100               	movlb	0	; () banked
 12512  00AEA8  6F82               	movwf	(??_find_volume+2)& (0+255),b
 12513  00AEAA  6B83               	clrf	(??_find_volume+3)& (0+255),b
 12514  00AEAC  0100               	movlb	0	; () banked
 12515  00AEAE  5180               	movf	??_find_volume& (0+255),w,b
 12516  00AEB0  0100               	movlb	0	; () banked
 12517  00AEB2  2782               	addwf	(??_find_volume+2)& (0+255),f,b
 12518  00AEB4  0100               	movlb	0	; () banked
 12519  00AEB6  5181               	movf	(??_find_volume+1)& (0+255),w,b
 12520  00AEB8  0100               	movlb	0	; () banked
 12521  00AEBA  2383               	addwfc	(??_find_volume+3)& (0+255),f,b
 12522  00AEBC  0100               	movlb	0	; () banked
 12523  00AEBE  EE20 F002          	lfsr	2,2
 12524  00AEC2  0100               	movlb	0	; () banked
 12525  00AEC4  51D2               	movf	find_volume@fs& (0+255),w,b
 12526  00AEC6  26D9               	addwf	fsr2l,f,c
 12527  00AEC8  0100               	movlb	0	; () banked
 12528  00AECA  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12529  00AECC  22DA               	addwfc	fsr2h,f,c
 12530  00AECE  50DF               	movf	indf2,w,c
 12531  00AED0  0100               	movlb	0	; () banked
 12532  00AED2  6F84               	movwf	(??_find_volume+4)& (0+255),b
 12533  00AED4  0100               	movlb	0	; () banked
 12534  00AED6  5184               	movf	(??_find_volume+4)& (0+255),w,b
 12535  00AED8  0100               	movlb	0	; () banked
 12536  00AEDA  1782               	andwf	(??_find_volume+2)& (0+255),f,b
 12537  00AEDC  0E00               	movlw	0
 12538  00AEDE  1783               	andwf	(??_find_volume+3)& (0+255),f,b
 12539  00AEE0  0100               	movlb	0	; () banked
 12540  00AEE2  5183               	movf	(??_find_volume+3)& (0+255),w,b
 12541  00AEE4  1182               	iorwf	(??_find_volume+2)& (0+255),w,b
 12542  00AEE6  A4D8               	btfss	status,2,c
 12543                           
 12544                           ; BSR set to: 0
 12545  00AEE8  EF00  F05C         	goto	u11230
 12546                           
 12547                           ; BSR set to: 0
 12548                           ;ff.c: 2355: ch = 91;
 12549                           
 12550                           ; BSR set to: 0
 12551                           
 12552                           ; BSR set to: 0
 12553                           
 12554                           ; BSR set to: 0
 12555                           ;ff.c: 2354: return FR_NO_FILESYSTEM;
 12556  00AEEC  0E00               	movlw	0
 12557  00AEEE  0101               	movlb	1	; () banked
 12558  00AEF0  6F64               	movwf	(_ch+1)& (0+255),b
 12559  00AEF2  0E5B               	movlw	91
 12560  00AEF4  0101               	movlb	1	; () banked
 12561  00AEF6  6F63               	movwf	_ch& (0+255),b
 12562                           
 12563                           ; BSR set to: 1
 12564                           ;ff.c: 2356: fs->n_rootdir = (WORD)(((WORD)*((BYTE*)(fs->win + 17)+1)<<8)|(WORD)*(BYTE*)
      +                          (fs->win + 17));
 12565  00AEF8  0100               	movlb	0	; () banked
 12566  00AEFA  EE20 F044          	lfsr	2,68
 12567  00AEFE  0100               	movlb	0	; () banked
 12568  00AF00  51D2               	movf	find_volume@fs& (0+255),w,b
 12569  00AF02  26D9               	addwf	fsr2l,f,c
 12570  00AF04  0100               	movlb	0	; () banked
 12571  00AF06  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12572  00AF08  22DA               	addwfc	fsr2h,f,c
 12573  00AF0A  50DF               	movf	indf2,w,c
 12574  00AF0C  0100               	movlb	0	; () banked
 12575  00AF0E  6F80               	movwf	??_find_volume& (0+255),b
 12576  00AF10  0100               	movlb	0	; () banked
 12577  00AF12  5180               	movf	??_find_volume& (0+255),w,b
 12578  00AF14  0100               	movlb	0	; () banked
 12579  00AF16  6F82               	movwf	(??_find_volume+2)& (0+255),b
 12580  00AF18  6B81               	clrf	(??_find_volume+1)& (0+255),b
 12581  00AF1A  0100               	movlb	0	; () banked
 12582  00AF1C  EE20 F043          	lfsr	2,67
 12583  00AF20  0100               	movlb	0	; () banked
 12584  00AF22  51D2               	movf	find_volume@fs& (0+255),w,b
 12585  00AF24  26D9               	addwf	fsr2l,f,c
 12586  00AF26  0100               	movlb	0	; () banked
 12587  00AF28  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12588  00AF2A  22DA               	addwfc	fsr2h,f,c
 12589  00AF2C  50DF               	movf	indf2,w,c
 12590  00AF2E  0100               	movlb	0	; () banked
 12591  00AF30  6F83               	movwf	(??_find_volume+3)& (0+255),b
 12592  00AF32  0100               	movlb	0	; () banked
 12593  00AF34  5183               	movf	(??_find_volume+3)& (0+255),w,b
 12594  00AF36  0100               	movlb	0	; () banked
 12595  00AF38  1381               	iorwf	(??_find_volume+1)& (0+255),f,b
 12596  00AF3A  0E00               	movlw	0
 12597  00AF3C  1382               	iorwf	(??_find_volume+2)& (0+255),f,b
 12598  00AF3E  0100               	movlb	0	; () banked
 12599  00AF40  EE20 F008          	lfsr	2,8
 12600  00AF44  0100               	movlb	0	; () banked
 12601  00AF46  51D2               	movf	find_volume@fs& (0+255),w,b
 12602  00AF48  26D9               	addwf	fsr2l,f,c
 12603  00AF4A  0100               	movlb	0	; () banked
 12604  00AF4C  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12605  00AF4E  22DA               	addwfc	fsr2h,f,c
 12606  00AF50  C081  FFDE         	movff	??_find_volume+1,postinc2
 12607  00AF54  C082  FFDD         	movff	??_find_volume+2,postdec2
 12608                           
 12609                           ; BSR set to: 0
 12610                           ;ff.c: 2357: if (fs->n_rootdir % (((UINT)512) / 32))
 12611  00AF58  0100               	movlb	0	; () banked
 12612  00AF5A  EE20 F008          	lfsr	2,8
 12613  00AF5E  0100               	movlb	0	; () banked
 12614  00AF60  51D2               	movf	find_volume@fs& (0+255),w,b
 12615  00AF62  26D9               	addwf	fsr2l,f,c
 12616  00AF64  0100               	movlb	0	; () banked
 12617  00AF66  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12618  00AF68  22DA               	addwfc	fsr2h,f,c
 12619  00AF6A  CFDE F080          	movff	postinc2,??_find_volume
 12620  00AF6E  CFDD F081          	movff	postdec2,??_find_volume+1
 12621  00AF72  0E0F               	movlw	15
 12622  00AF74  0100               	movlb	0	; () banked
 12623  00AF76  1780               	andwf	??_find_volume& (0+255),f,b
 12624  00AF78  0E00               	movlw	0
 12625  00AF7A  1781               	andwf	(??_find_volume+1)& (0+255),f,b
 12626  00AF7C  0100               	movlb	0	; () banked
 12627  00AF7E  5181               	movf	(??_find_volume+1)& (0+255),w,b
 12628  00AF80  1180               	iorwf	??_find_volume& (0+255),w,b
 12629  00AF82  A4D8               	btfss	status,2,c
 12630  00AF84  EF00  F05C         	goto	u11230
 12631                           
 12632                           ; BSR set to: 0
 12633                           ;ff.c: 2359: ch = 92;
 12634                           
 12635                           ; BSR set to: 0
 12636                           
 12637                           ; BSR set to: 0
 12638                           
 12639                           ; BSR set to: 0
 12640                           ;ff.c: 2358: return FR_NO_FILESYSTEM;
 12641  00AF88  0E00               	movlw	0
 12642  00AF8A  0101               	movlb	1	; () banked
 12643  00AF8C  6F64               	movwf	(_ch+1)& (0+255),b
 12644  00AF8E  0E5C               	movlw	92
 12645  00AF90  0101               	movlb	1	; () banked
 12646  00AF92  6F63               	movwf	_ch& (0+255),b
 12647                           
 12648                           ; BSR set to: 1
 12649                           ;ff.c: 2360: tsect = (WORD)(((WORD)*((BYTE*)(fs->win + 19)+1)<<8)|(WORD)*(BYTE*)(fs->win
      +                           + 19));
 12650  00AF94  0100               	movlb	0	; () banked
 12651  00AF96  EE20 F046          	lfsr	2,70
 12652  00AF9A  0100               	movlb	0	; () banked
 12653  00AF9C  51D2               	movf	find_volume@fs& (0+255),w,b
 12654  00AF9E  26D9               	addwf	fsr2l,f,c
 12655  00AFA0  0100               	movlb	0	; () banked
 12656  00AFA2  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12657  00AFA4  22DA               	addwfc	fsr2h,f,c
 12658  00AFA6  50DF               	movf	indf2,w,c
 12659  00AFA8  0100               	movlb	0	; () banked
 12660  00AFAA  6F80               	movwf	??_find_volume& (0+255),b
 12661  00AFAC  0100               	movlb	0	; () banked
 12662  00AFAE  5180               	movf	??_find_volume& (0+255),w,b
 12663  00AFB0  0100               	movlb	0	; () banked
 12664  00AFB2  6F82               	movwf	(??_find_volume+2)& (0+255),b
 12665  00AFB4  6B81               	clrf	(??_find_volume+1)& (0+255),b
 12666  00AFB6  0100               	movlb	0	; () banked
 12667  00AFB8  EE20 F045          	lfsr	2,69
 12668  00AFBC  0100               	movlb	0	; () banked
 12669  00AFBE  51D2               	movf	find_volume@fs& (0+255),w,b
 12670  00AFC0  26D9               	addwf	fsr2l,f,c
 12671  00AFC2  0100               	movlb	0	; () banked
 12672  00AFC4  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12673  00AFC6  22DA               	addwfc	fsr2h,f,c
 12674  00AFC8  50DF               	movf	indf2,w,c
 12675  00AFCA  0100               	movlb	0	; () banked
 12676  00AFCC  6F83               	movwf	(??_find_volume+3)& (0+255),b
 12677  00AFCE  0100               	movlb	0	; () banked
 12678  00AFD0  5183               	movf	(??_find_volume+3)& (0+255),w,b
 12679  00AFD2  0100               	movlb	0	; () banked
 12680  00AFD4  1381               	iorwf	(??_find_volume+1)& (0+255),f,b
 12681  00AFD6  0E00               	movlw	0
 12682  00AFD8  1382               	iorwf	(??_find_volume+2)& (0+255),f,b
 12683  00AFDA  0100               	movlb	0	; () banked
 12684  00AFDC  C081  F0BC         	movff	??_find_volume+1,find_volume@tsect
 12685  00AFE0  0100               	movlb	0	; () banked
 12686  00AFE2  C082  F0BD         	movff	??_find_volume+2,find_volume@tsect+1
 12687  00AFE6  0100               	movlb	0	; () banked
 12688  00AFE8  6BBE               	clrf	(find_volume@tsect+2)& (0+255),b
 12689  00AFEA  0100               	movlb	0	; () banked
 12690  00AFEC  6BBF               	clrf	(find_volume@tsect+3)& (0+255),b
 12691                           
 12692                           ; BSR set to: 0
 12693                           ;ff.c: 2361: if (!tsect) tsect = (DWORD)(((DWORD)*((BYTE*)(fs->win + 32)+3)<<24)|((DWORD
      +                          )*((BYTE*)(fs->win + 32)+2)<<16)|((WORD)*((BYTE*)(fs->win + 32)+1)<<8)|*(BYTE*)(fs->win 
      +                          + 32));
 12694  00AFEE  0100               	movlb	0	; () banked
 12695  00AFF0  51BF               	movf	(find_volume@tsect+3)& (0+255),w,b
 12696  00AFF2  11BC               	iorwf	find_volume@tsect& (0+255),w,b
 12697  00AFF4  11BD               	iorwf	(find_volume@tsect+1)& (0+255),w,b
 12698  00AFF6  11BE               	iorwf	(find_volume@tsect+2)& (0+255),w,b
 12699  00AFF8  A4D8               	btfss	status,2,c
 12700  00AFFA  D08E               	goto	l8371
 12701                           
 12702                           ; BSR set to: 0
 12703  00AFFC  0100               	movlb	0	; () banked
 12704  00AFFE  EE20 F053          	lfsr	2,83
 12705  00B002  0100               	movlb	0	; () banked
 12706  00B004  51D2               	movf	find_volume@fs& (0+255),w,b
 12707  00B006  26D9               	addwf	fsr2l,f,c
 12708  00B008  0100               	movlb	0	; () banked
 12709  00B00A  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12710  00B00C  22DA               	addwfc	fsr2h,f,c
 12711  00B00E  50DF               	movf	indf2,w,c
 12712  00B010  0100               	movlb	0	; () banked
 12713  00B012  6F80               	movwf	??_find_volume& (0+255),b
 12714  00B014  0100               	movlb	0	; () banked
 12715  00B016  5180               	movf	??_find_volume& (0+255),w,b
 12716  00B018  0100               	movlb	0	; () banked
 12717  00B01A  6F82               	movwf	(??_find_volume+2)& (0+255),b
 12718  00B01C  6B81               	clrf	(??_find_volume+1)& (0+255),b
 12719  00B01E  0100               	movlb	0	; () banked
 12720  00B020  EE20 F054          	lfsr	2,84
 12721  00B024  0100               	movlb	0	; () banked
 12722  00B026  51D2               	movf	find_volume@fs& (0+255),w,b
 12723  00B028  26D9               	addwf	fsr2l,f,c
 12724  00B02A  0100               	movlb	0	; () banked
 12725  00B02C  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12726  00B02E  22DA               	addwfc	fsr2h,f,c
 12727  00B030  50DF               	movf	indf2,w,c
 12728  00B032  0100               	movlb	0	; () banked
 12729  00B034  6F83               	movwf	(??_find_volume+3)& (0+255),b
 12730  00B036  C083  F084         	movff	??_find_volume+3,??_find_volume+4
 12731  00B03A  0100               	movlb	0	; () banked
 12732  00B03C  6B85               	clrf	(??_find_volume+5)& (0+255),b
 12733  00B03E  6B86               	clrf	(??_find_volume+6)& (0+255),b
 12734  00B040  6B87               	clrf	(??_find_volume+7)& (0+255),b
 12735  00B042  C085  F087         	movff	??_find_volume+5,??_find_volume+7
 12736  00B046  C084  F086         	movff	??_find_volume+4,??_find_volume+6
 12737  00B04A  0100               	movlb	0	; () banked
 12738  00B04C  6B85               	clrf	(??_find_volume+5)& (0+255),b
 12739  00B04E  6B84               	clrf	(??_find_volume+4)& (0+255),b
 12740  00B050  0100               	movlb	0	; () banked
 12741  00B052  EE20 F055          	lfsr	2,85
 12742  00B056  0100               	movlb	0	; () banked
 12743  00B058  51D2               	movf	find_volume@fs& (0+255),w,b
 12744  00B05A  26D9               	addwf	fsr2l,f,c
 12745  00B05C  0100               	movlb	0	; () banked
 12746  00B05E  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12747  00B060  22DA               	addwfc	fsr2h,f,c
 12748  00B062  50DF               	movf	indf2,w,c
 12749  00B064  0100               	movlb	0	; () banked
 12750  00B066  6F88               	movwf	(??_find_volume+8)& (0+255),b
 12751  00B068  C088  F089         	movff	??_find_volume+8,??_find_volume+9
 12752  00B06C  0100               	movlb	0	; () banked
 12753  00B06E  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 12754  00B070  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 12755  00B072  6B8C               	clrf	(??_find_volume+12)& (0+255),b
 12756  00B074  C089  F08C         	movff	??_find_volume+9,??_find_volume+12
 12757  00B078  0100               	movlb	0	; () banked
 12758  00B07A  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 12759  00B07C  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 12760  00B07E  6B89               	clrf	(??_find_volume+9)& (0+255),b
 12761  00B080  0100               	movlb	0	; () banked
 12762  00B082  5184               	movf	(??_find_volume+4)& (0+255),w,b
 12763  00B084  0100               	movlb	0	; () banked
 12764  00B086  1189               	iorwf	(??_find_volume+9)& (0+255),w,b
 12765  00B088  0100               	movlb	0	; () banked
 12766  00B08A  6F8D               	movwf	(??_find_volume+13)& (0+255),b
 12767  00B08C  0100               	movlb	0	; () banked
 12768  00B08E  5185               	movf	(??_find_volume+5)& (0+255),w,b
 12769  00B090  0100               	movlb	0	; () banked
 12770  00B092  118A               	iorwf	(??_find_volume+10)& (0+255),w,b
 12771  00B094  0100               	movlb	0	; () banked
 12772  00B096  6F8E               	movwf	(??_find_volume+14)& (0+255),b
 12773  00B098  0100               	movlb	0	; () banked
 12774  00B09A  5186               	movf	(??_find_volume+6)& (0+255),w,b
 12775  00B09C  0100               	movlb	0	; () banked
 12776  00B09E  118B               	iorwf	(??_find_volume+11)& (0+255),w,b
 12777  00B0A0  0100               	movlb	0	; () banked
 12778  00B0A2  6F8F               	movwf	(??_find_volume+15)& (0+255),b
 12779  00B0A4  0100               	movlb	0	; () banked
 12780  00B0A6  5187               	movf	(??_find_volume+7)& (0+255),w,b
 12781  00B0A8  0100               	movlb	0	; () banked
 12782  00B0AA  118C               	iorwf	(??_find_volume+12)& (0+255),w,b
 12783  00B0AC  0100               	movlb	0	; () banked
 12784  00B0AE  6F90               	movwf	(??_find_volume+16)& (0+255),b
 12785  00B0B0  0100               	movlb	0	; () banked
 12786  00B0B2  5181               	movf	(??_find_volume+1)& (0+255),w,b
 12787  00B0B4  0100               	movlb	0	; () banked
 12788  00B0B6  118D               	iorwf	(??_find_volume+13)& (0+255),w,b
 12789  00B0B8  0100               	movlb	0	; () banked
 12790  00B0BA  6F91               	movwf	(??_find_volume+17)& (0+255),b
 12791  00B0BC  0100               	movlb	0	; () banked
 12792  00B0BE  5182               	movf	(??_find_volume+2)& (0+255),w,b
 12793  00B0C0  0100               	movlb	0	; () banked
 12794  00B0C2  118E               	iorwf	(??_find_volume+14)& (0+255),w,b
 12795  00B0C4  0100               	movlb	0	; () banked
 12796  00B0C6  6F92               	movwf	(??_find_volume+18)& (0+255),b
 12797  00B0C8  0E00               	movlw	0
 12798  00B0CA  0100               	movlb	0	; () banked
 12799  00B0CC  118F               	iorwf	(??_find_volume+15)& (0+255),w,b
 12800  00B0CE  0100               	movlb	0	; () banked
 12801  00B0D0  6F93               	movwf	(??_find_volume+19)& (0+255),b
 12802  00B0D2  0E00               	movlw	0
 12803  00B0D4  0100               	movlb	0	; () banked
 12804  00B0D6  1190               	iorwf	(??_find_volume+16)& (0+255),w,b
 12805  00B0D8  0100               	movlb	0	; () banked
 12806  00B0DA  6F94               	movwf	(??_find_volume+20)& (0+255),b
 12807  00B0DC  0100               	movlb	0	; () banked
 12808  00B0DE  EE20 F052          	lfsr	2,82
 12809  00B0E2  0100               	movlb	0	; () banked
 12810  00B0E4  51D2               	movf	find_volume@fs& (0+255),w,b
 12811  00B0E6  26D9               	addwf	fsr2l,f,c
 12812  00B0E8  0100               	movlb	0	; () banked
 12813  00B0EA  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12814  00B0EC  22DA               	addwfc	fsr2h,f,c
 12815  00B0EE  50DF               	movf	indf2,w,c
 12816  00B0F0  0100               	movlb	0	; () banked
 12817  00B0F2  6F95               	movwf	(??_find_volume+21)& (0+255),b
 12818  00B0F4  0100               	movlb	0	; () banked
 12819  00B0F6  5195               	movf	(??_find_volume+21)& (0+255),w,b
 12820  00B0F8  0100               	movlb	0	; () banked
 12821  00B0FA  1191               	iorwf	(??_find_volume+17)& (0+255),w,b
 12822  00B0FC  0100               	movlb	0	; () banked
 12823  00B0FE  6FBC               	movwf	find_volume@tsect& (0+255),b
 12824  00B100  0100               	movlb	0	; () banked
 12825  00B102  5192               	movf	(??_find_volume+18)& (0+255),w,b
 12826  00B104  0100               	movlb	0	; () banked
 12827  00B106  6FBD               	movwf	(find_volume@tsect+1)& (0+255),b
 12828  00B108  0100               	movlb	0	; () banked
 12829  00B10A  5193               	movf	(??_find_volume+19)& (0+255),w,b
 12830  00B10C  0100               	movlb	0	; () banked
 12831  00B10E  6FBE               	movwf	(find_volume@tsect+2)& (0+255),b
 12832  00B110  0100               	movlb	0	; () banked
 12833  00B112  5194               	movf	(??_find_volume+20)& (0+255),w,b
 12834  00B114  0100               	movlb	0	; () banked
 12835  00B116  6FBF               	movwf	(find_volume@tsect+3)& (0+255),b
 12836  00B118                     l8371:
 12837                           
 12838                           ; BSR set to: 0
 12839                           ;ff.c: 2362: ch = 93;
 12840  00B118  0E00               	movlw	0
 12841  00B11A  0101               	movlb	1	; () banked
 12842  00B11C  6F64               	movwf	(_ch+1)& (0+255),b
 12843  00B11E  0E5D               	movlw	93
 12844  00B120  0101               	movlb	1	; () banked
 12845  00B122  6F63               	movwf	_ch& (0+255),b
 12846                           
 12847                           ; BSR set to: 1
 12848                           ;ff.c: 2363: nrsv = (WORD)(((WORD)*((BYTE*)(fs->win + 14)+1)<<8)|(WORD)*(BYTE*)(fs->win 
      +                          + 14));
 12849  00B124  0100               	movlb	0	; () banked
 12850  00B126  EE20 F040          	lfsr	2,64
 12851  00B12A  0100               	movlb	0	; () banked
 12852  00B12C  51D2               	movf	find_volume@fs& (0+255),w,b
 12853  00B12E  26D9               	addwf	fsr2l,f,c
 12854  00B130  0100               	movlb	0	; () banked
 12855  00B132  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12856  00B134  22DA               	addwfc	fsr2h,f,c
 12857  00B136  50DF               	movf	indf2,w,c
 12858  00B138  0100               	movlb	0	; () banked
 12859  00B13A  6F80               	movwf	??_find_volume& (0+255),b
 12860  00B13C  0100               	movlb	0	; () banked
 12861  00B13E  EE20 F041          	lfsr	2,65
 12862  00B142  0100               	movlb	0	; () banked
 12863  00B144  51D2               	movf	find_volume@fs& (0+255),w,b
 12864  00B146  26D9               	addwf	fsr2l,f,c
 12865  00B148  0100               	movlb	0	; () banked
 12866  00B14A  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12867  00B14C  22DA               	addwfc	fsr2h,f,c
 12868  00B14E  50DF               	movf	indf2,w,c
 12869  00B150  0100               	movlb	0	; () banked
 12870  00B152  6FBB               	movwf	(find_volume@nrsv+1)& (0+255),b
 12871  00B154  0100               	movlb	0	; () banked
 12872  00B156  5180               	movf	??_find_volume& (0+255),w,b
 12873  00B158  0100               	movlb	0	; () banked
 12874  00B15A  6FBA               	movwf	find_volume@nrsv& (0+255),b
 12875                           
 12876                           ; BSR set to: 0
 12877                           ;ff.c: 2364: if (!nrsv) return FR_NO_FILESYSTEM;
 12878  00B15C  0100               	movlb	0	; () banked
 12879  00B15E  51BB               	movf	(find_volume@nrsv+1)& (0+255),w,b
 12880  00B160  11BA               	iorwf	find_volume@nrsv& (0+255),w,b
 12881  00B162  B4D8               	btfsc	status,2,c
 12882  00B164  D34D               	goto	u11230
 12883                           
 12884                           ; BSR set to: 0
 12885                           ;ff.c: 2365: ch = 94;
 12886                           
 12887                           ; BSR set to: 0
 12888                           
 12889                           ; BSR set to: 0
 12890                           
 12891                           ; BSR set to: 0
 12892  00B166  0E00               	movlw	0
 12893  00B168  0101               	movlb	1	; () banked
 12894  00B16A  6F64               	movwf	(_ch+1)& (0+255),b
 12895  00B16C  0E5E               	movlw	94
 12896  00B16E  0101               	movlb	1	; () banked
 12897  00B170  6F63               	movwf	_ch& (0+255),b
 12898                           
 12899                           ; BSR set to: 1
 12900                           ;ff.c: 2367: sysect = nrsv + fasize + fs->n_rootdir / (((UINT)512) / 32);
 12901  00B172  0100               	movlb	0	; () banked
 12902  00B174  EE20 F008          	lfsr	2,8
 12903  00B178  0100               	movlb	0	; () banked
 12904  00B17A  51D2               	movf	find_volume@fs& (0+255),w,b
 12905  00B17C  26D9               	addwf	fsr2l,f,c
 12906  00B17E  0100               	movlb	0	; () banked
 12907  00B180  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 12908  00B182  22DA               	addwfc	fsr2h,f,c
 12909  00B184  CFDE F080          	movff	postinc2,??_find_volume
 12910  00B188  CFDD F081          	movff	postdec2,??_find_volume+1
 12911  00B18C  0E04               	movlw	4
 12912  00B18E  0100               	movlb	0	; () banked
 12913  00B190  6F82               	movwf	(??_find_volume+2)& (0+255),b
 12914  00B192                     u11125:
 12915  00B192  0100               	movlb	0	; () banked
 12916  00B194  90D8               	bcf	status,0,c
 12917  00B196  3381               	rrcf	(??_find_volume+1)& (0+255),f,b
 12918  00B198  3380               	rrcf	??_find_volume& (0+255),f,b
 12919  00B19A  0100               	movlb	0	; () banked
 12920  00B19C  2F82               	decfsz	(??_find_volume+2)& (0+255),f,b
 12921  00B19E  D7F9               	goto	u11125
 12922  00B1A0  0100               	movlb	0	; () banked
 12923  00B1A2  51BA               	movf	find_volume@nrsv& (0+255),w,b
 12924  00B1A4  0100               	movlb	0	; () banked
 12925  00B1A6  2580               	addwf	??_find_volume& (0+255),w,b
 12926  00B1A8  0100               	movlb	0	; () banked
 12927  00B1AA  6F83               	movwf	(??_find_volume+3)& (0+255),b
 12928  00B1AC  0100               	movlb	0	; () banked
 12929  00B1AE  51BB               	movf	(find_volume@nrsv+1)& (0+255),w,b
 12930  00B1B0  0100               	movlb	0	; () banked
 12931  00B1B2  2181               	addwfc	(??_find_volume+1)& (0+255),w,b
 12932  00B1B4  0100               	movlb	0	; () banked
 12933  00B1B6  6F84               	movwf	(??_find_volume+4)& (0+255),b
 12934  00B1B8  0100               	movlb	0	; () banked
 12935  00B1BA  6B85               	clrf	(??_find_volume+5)& (0+255),b
 12936  00B1BC  B0D8               	btfsc	status,0,c
 12937  00B1BE  2B85               	incf	(??_find_volume+5)& (0+255),f,b
 12938  00B1C0  0100               	movlb	0	; () banked
 12939  00B1C2  6B86               	clrf	(??_find_volume+6)& (0+255),b
 12940  00B1C4  0100               	movlb	0	; () banked
 12941  00B1C6  51C7               	movf	find_volume@fasize& (0+255),w,b
 12942  00B1C8  0100               	movlb	0	; () banked
 12943  00B1CA  2583               	addwf	(??_find_volume+3)& (0+255),w,b
 12944  00B1CC  0100               	movlb	0	; () banked
 12945  00B1CE  6FB4               	movwf	find_volume@sysect& (0+255),b
 12946  00B1D0  0100               	movlb	0	; () banked
 12947  00B1D2  51C8               	movf	(find_volume@fasize+1)& (0+255),w,b
 12948  00B1D4  0100               	movlb	0	; () banked
 12949  00B1D6  2184               	addwfc	(??_find_volume+4)& (0+255),w,b
 12950  00B1D8  0100               	movlb	0	; () banked
 12951  00B1DA  6FB5               	movwf	(find_volume@sysect+1)& (0+255),b
 12952  00B1DC  0100               	movlb	0	; () banked
 12953  00B1DE  51C9               	movf	(find_volume@fasize+2)& (0+255),w,b
 12954  00B1E0  0100               	movlb	0	; () banked
 12955  00B1E2  2185               	addwfc	(??_find_volume+5)& (0+255),w,b
 12956  00B1E4  0100               	movlb	0	; () banked
 12957  00B1E6  6FB6               	movwf	(find_volume@sysect+2)& (0+255),b
 12958  00B1E8  0100               	movlb	0	; () banked
 12959  00B1EA  51CA               	movf	(find_volume@fasize+3)& (0+255),w,b
 12960  00B1EC  0100               	movlb	0	; () banked
 12961  00B1EE  2186               	addwfc	(??_find_volume+6)& (0+255),w,b
 12962  00B1F0  0100               	movlb	0	; () banked
 12963  00B1F2  6FB7               	movwf	(find_volume@sysect+3)& (0+255),b
 12964                           
 12965                           ; BSR set to: 0
 12966                           ;ff.c: 2368: if (tsect < sysect) return FR_NO_FILESYSTEM;
 12967  00B1F4  0100               	movlb	0	; () banked
 12968  00B1F6  51B4               	movf	find_volume@sysect& (0+255),w,b
 12969  00B1F8  0100               	movlb	0	; () banked
 12970  00B1FA  5DBC               	subwf	find_volume@tsect& (0+255),w,b
 12971  00B1FC  0100               	movlb	0	; () banked
 12972  00B1FE  51B5               	movf	(find_volume@sysect+1)& (0+255),w,b
 12973  00B200  0100               	movlb	0	; () banked
 12974  00B202  59BD               	subwfb	(find_volume@tsect+1)& (0+255),w,b
 12975  00B204  0100               	movlb	0	; () banked
 12976  00B206  51B6               	movf	(find_volume@sysect+2)& (0+255),w,b
 12977  00B208  0100               	movlb	0	; () banked
 12978  00B20A  59BE               	subwfb	(find_volume@tsect+2)& (0+255),w,b
 12979  00B20C  0100               	movlb	0	; () banked
 12980  00B20E  51B7               	movf	(find_volume@sysect+3)& (0+255),w,b
 12981  00B210  0100               	movlb	0	; () banked
 12982  00B212  59BF               	subwfb	(find_volume@tsect+3)& (0+255),w,b
 12983  00B214  A0D8               	btfss	status,0,c
 12984  00B216  D2F4               	goto	u11230
 12985                           
 12986                           ; BSR set to: 0
 12987                           ;ff.c: 2369: nclst = (tsect - sysect) / fs->csize;
 12988                           
 12989                           ; BSR set to: 0
 12990                           
 12991                           ; BSR set to: 0
 12992                           
 12993                           ; BSR set to: 0
 12994  00B218  0100               	movlb	0	; () banked
 12995  00B21A  C0B4  F080         	movff	find_volume@sysect,??_find_volume
 12996  00B21E  0100               	movlb	0	; () banked
 12997  00B220  C0B5  F081         	movff	find_volume@sysect+1,??_find_volume+1
 12998  00B224  0100               	movlb	0	; () banked
 12999  00B226  C0B6  F082         	movff	find_volume@sysect+2,??_find_volume+2
 13000  00B22A  0100               	movlb	0	; () banked
 13001  00B22C  C0B7  F083         	movff	find_volume@sysect+3,??_find_volume+3
 13002  00B230  0100               	movlb	0	; () banked
 13003  00B232  1F80               	comf	??_find_volume& (0+255),f,b
 13004  00B234  1F81               	comf	(??_find_volume+1)& (0+255),f,b
 13005  00B236  1F82               	comf	(??_find_volume+2)& (0+255),f,b
 13006  00B238  1F83               	comf	(??_find_volume+3)& (0+255),f,b
 13007  00B23A  2B80               	incf	??_find_volume& (0+255),f,b
 13008  00B23C  0E00               	movlw	0
 13009  00B23E  2381               	addwfc	(??_find_volume+1)& (0+255),f,b
 13010  00B240  2382               	addwfc	(??_find_volume+2)& (0+255),f,b
 13011  00B242  2383               	addwfc	(??_find_volume+3)& (0+255),f,b
 13012  00B244  0100               	movlb	0	; () banked
 13013  00B246  51BC               	movf	find_volume@tsect& (0+255),w,b
 13014  00B248  0100               	movlb	0	; () banked
 13015  00B24A  2580               	addwf	??_find_volume& (0+255),w,b
 13016  00B24C  6E01               	movwf	___lldiv@dividend,c
 13017  00B24E  0100               	movlb	0	; () banked
 13018  00B250  51BD               	movf	(find_volume@tsect+1)& (0+255),w,b
 13019  00B252  0100               	movlb	0	; () banked
 13020  00B254  2181               	addwfc	(??_find_volume+1)& (0+255),w,b
 13021  00B256  6E02               	movwf	___lldiv@dividend+1,c
 13022  00B258  0100               	movlb	0	; () banked
 13023  00B25A  51BE               	movf	(find_volume@tsect+2)& (0+255),w,b
 13024  00B25C  0100               	movlb	0	; () banked
 13025  00B25E  2182               	addwfc	(??_find_volume+2)& (0+255),w,b
 13026  00B260  6E03               	movwf	___lldiv@dividend+2,c
 13027  00B262  0100               	movlb	0	; () banked
 13028  00B264  51BF               	movf	(find_volume@tsect+3)& (0+255),w,b
 13029  00B266  0100               	movlb	0	; () banked
 13030  00B268  2183               	addwfc	(??_find_volume+3)& (0+255),w,b
 13031  00B26A  6E04               	movwf	___lldiv@dividend+3,c
 13032  00B26C  0100               	movlb	0	; () banked
 13033  00B26E  EE20 F002          	lfsr	2,2
 13034  00B272  0100               	movlb	0	; () banked
 13035  00B274  51D2               	movf	find_volume@fs& (0+255),w,b
 13036  00B276  26D9               	addwf	fsr2l,f,c
 13037  00B278  0100               	movlb	0	; () banked
 13038  00B27A  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13039  00B27C  22DA               	addwfc	fsr2h,f,c
 13040  00B27E  50DF               	movf	indf2,w,c
 13041  00B280  0100               	movlb	0	; () banked
 13042  00B282  6F84               	movwf	(??_find_volume+4)& (0+255),b
 13043  00B284  0100               	movlb	0	; () banked
 13044  00B286  5184               	movf	(??_find_volume+4)& (0+255),w,b
 13045  00B288  6E05               	movwf	___lldiv@divisor,c
 13046  00B28A  6A06               	clrf	___lldiv@divisor+1,c
 13047  00B28C  6A07               	clrf	___lldiv@divisor+2,c
 13048  00B28E  6A08               	clrf	___lldiv@divisor+3,c
 13049  00B290  EC38  F02B         	call	___lldiv	;wreg free
 13050  00B294  C001  F0C0         	movff	?___lldiv,find_volume@nclst
 13051  00B298  C002  F0C1         	movff	?___lldiv+1,find_volume@nclst+1
 13052  00B29C  C003  F0C2         	movff	?___lldiv+2,find_volume@nclst+2
 13053  00B2A0  C004  F0C3         	movff	?___lldiv+3,find_volume@nclst+3
 13054                           
 13055                           ;ff.c: 2370: if (!nclst) return FR_NO_FILESYSTEM;
 13056  00B2A4  0100               	movlb	0	; () banked
 13057  00B2A6  51C3               	movf	(find_volume@nclst+3)& (0+255),w,b
 13058  00B2A8  11C0               	iorwf	find_volume@nclst& (0+255),w,b
 13059  00B2AA  11C1               	iorwf	(find_volume@nclst+1)& (0+255),w,b
 13060  00B2AC  11C2               	iorwf	(find_volume@nclst+2)& (0+255),w,b
 13061  00B2AE  B4D8               	btfsc	status,2,c
 13062  00B2B0  D2A7               	goto	u11230
 13063                           
 13064                           ; BSR set to: 0
 13065                           ;ff.c: 2371: fmt = 1;
 13066                           
 13067                           ; BSR set to: 0
 13068                           
 13069                           ; BSR set to: 0
 13070                           
 13071                           ; BSR set to: 0
 13072  00B2B2  0E01               	movlw	1
 13073  00B2B4  0100               	movlb	0	; () banked
 13074  00B2B6  6FD1               	movwf	find_volume@fmt& (0+255),b
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;ff.c: 2372: if (nclst >= 4086U) fmt = 2;
 13078  00B2B8  0EF6               	movlw	246
 13079  00B2BA  0100               	movlb	0	; () banked
 13080  00B2BC  5DC0               	subwf	find_volume@nclst& (0+255),w,b
 13081  00B2BE  0E0F               	movlw	15
 13082  00B2C0  0100               	movlb	0	; () banked
 13083  00B2C2  59C1               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 13084  00B2C4  0E00               	movlw	0
 13085  00B2C6  0100               	movlb	0	; () banked
 13086  00B2C8  59C2               	subwfb	(find_volume@nclst+2)& (0+255),w,b
 13087  00B2CA  0E00               	movlw	0
 13088  00B2CC  0100               	movlb	0	; () banked
 13089  00B2CE  59C3               	subwfb	(find_volume@nclst+3)& (0+255),w,b
 13090  00B2D0  A0D8               	btfss	status,0,c
 13091  00B2D2  D003               	goto	l8405
 13092                           
 13093                           ; BSR set to: 0
 13094  00B2D4  0E02               	movlw	2
 13095  00B2D6  0100               	movlb	0	; () banked
 13096  00B2D8  6FD1               	movwf	find_volume@fmt& (0+255),b
 13097  00B2DA                     l8405:
 13098                           
 13099                           ; BSR set to: 0
 13100                           ;ff.c: 2373: if (nclst >= 65526U) fmt = 3;
 13101  00B2DA  0EF6               	movlw	246
 13102  00B2DC  0100               	movlb	0	; () banked
 13103  00B2DE  5DC0               	subwf	find_volume@nclst& (0+255),w,b
 13104  00B2E0  0EFF               	movlw	255
 13105  00B2E2  0100               	movlb	0	; () banked
 13106  00B2E4  59C1               	subwfb	(find_volume@nclst+1)& (0+255),w,b
 13107  00B2E6  0E00               	movlw	0
 13108  00B2E8  0100               	movlb	0	; () banked
 13109  00B2EA  59C2               	subwfb	(find_volume@nclst+2)& (0+255),w,b
 13110  00B2EC  0E00               	movlw	0
 13111  00B2EE  0100               	movlb	0	; () banked
 13112  00B2F0  59C3               	subwfb	(find_volume@nclst+3)& (0+255),w,b
 13113  00B2F2  A0D8               	btfss	status,0,c
 13114  00B2F4  D003               	goto	l732
 13115                           
 13116                           ; BSR set to: 0
 13117  00B2F6  0E03               	movlw	3
 13118  00B2F8  0100               	movlb	0	; () banked
 13119  00B2FA  6FD1               	movwf	find_volume@fmt& (0+255),b
 13120  00B2FC                     l732:
 13121                           
 13122                           ; BSR set to: 0
 13123                           ;ff.c: 2374: ch = 95;
 13124  00B2FC  0E00               	movlw	0
 13125  00B2FE  0101               	movlb	1	; () banked
 13126  00B300  6F64               	movwf	(_ch+1)& (0+255),b
 13127  00B302  0E5F               	movlw	95
 13128  00B304  0101               	movlb	1	; () banked
 13129  00B306  6F63               	movwf	_ch& (0+255),b
 13130                           
 13131                           ; BSR set to: 1
 13132                           ;ff.c: 2376: fs->n_fatent = nclst + 2;
 13133  00B308  0E02               	movlw	2
 13134  00B30A  0100               	movlb	0	; () banked
 13135  00B30C  25C0               	addwf	find_volume@nclst& (0+255),w,b
 13136  00B30E  0100               	movlb	0	; () banked
 13137  00B310  6F80               	movwf	??_find_volume& (0+255),b
 13138  00B312  0E00               	movlw	0
 13139  00B314  0100               	movlb	0	; () banked
 13140  00B316  21C1               	addwfc	(find_volume@nclst+1)& (0+255),w,b
 13141  00B318  0100               	movlb	0	; () banked
 13142  00B31A  6F81               	movwf	(??_find_volume+1)& (0+255),b
 13143  00B31C  0E00               	movlw	0
 13144  00B31E  0100               	movlb	0	; () banked
 13145  00B320  21C2               	addwfc	(find_volume@nclst+2)& (0+255),w,b
 13146  00B322  0100               	movlb	0	; () banked
 13147  00B324  6F82               	movwf	(??_find_volume+2)& (0+255),b
 13148  00B326  0E00               	movlw	0
 13149  00B328  0100               	movlb	0	; () banked
 13150  00B32A  21C3               	addwfc	(find_volume@nclst+3)& (0+255),w,b
 13151  00B32C  0100               	movlb	0	; () banked
 13152  00B32E  6F83               	movwf	(??_find_volume+3)& (0+255),b
 13153  00B330  0100               	movlb	0	; () banked
 13154  00B332  EE20 F016          	lfsr	2,22
 13155  00B336  0100               	movlb	0	; () banked
 13156  00B338  51D2               	movf	find_volume@fs& (0+255),w,b
 13157  00B33A  26D9               	addwf	fsr2l,f,c
 13158  00B33C  0100               	movlb	0	; () banked
 13159  00B33E  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13160  00B340  22DA               	addwfc	fsr2h,f,c
 13161  00B342  C080  FFDE         	movff	??_find_volume,postinc2
 13162  00B346  C081  FFDE         	movff	??_find_volume+1,postinc2
 13163  00B34A  C082  FFDE         	movff	??_find_volume+2,postinc2
 13164  00B34E  C083  FFDD         	movff	??_find_volume+3,postdec2
 13165  00B352  06D9               	decf	fsr2l,f,c
 13166  00B354  06D9               	decf	fsr2l,f,c
 13167                           
 13168                           ; BSR set to: 0
 13169                           ;ff.c: 2377: fs->volbase = bsect;
 13170  00B356  0100               	movlb	0	; () banked
 13171  00B358  EE20 F01E          	lfsr	2,30
 13172  00B35C  0100               	movlb	0	; () banked
 13173  00B35E  51D2               	movf	find_volume@fs& (0+255),w,b
 13174  00B360  26D9               	addwf	fsr2l,f,c
 13175  00B362  0100               	movlb	0	; () banked
 13176  00B364  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13177  00B366  22DA               	addwfc	fsr2h,f,c
 13178  00B368  0100               	movlb	0	; () banked
 13179  00B36A  C0CB  FFDE         	movff	find_volume@bsect,postinc2
 13180  00B36E  0100               	movlb	0	; () banked
 13181  00B370  C0CC  FFDE         	movff	find_volume@bsect+1,postinc2
 13182  00B374  0100               	movlb	0	; () banked
 13183  00B376  C0CD  FFDE         	movff	find_volume@bsect+2,postinc2
 13184  00B37A  0100               	movlb	0	; () banked
 13185  00B37C  C0CE  FFDE         	movff	find_volume@bsect+3,postinc2
 13186                           
 13187                           ; BSR set to: 0
 13188                           ;ff.c: 2378: fs->fatbase = bsect + nrsv;
 13189  00B380  0100               	movlb	0	; () banked
 13190  00B382  51BA               	movf	find_volume@nrsv& (0+255),w,b
 13191  00B384  0100               	movlb	0	; () banked
 13192  00B386  25CB               	addwf	find_volume@bsect& (0+255),w,b
 13193  00B388  0100               	movlb	0	; () banked
 13194  00B38A  6F80               	movwf	??_find_volume& (0+255),b
 13195  00B38C  0100               	movlb	0	; () banked
 13196  00B38E  51BB               	movf	(find_volume@nrsv+1)& (0+255),w,b
 13197  00B390  0100               	movlb	0	; () banked
 13198  00B392  21CC               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 13199  00B394  0100               	movlb	0	; () banked
 13200  00B396  6F81               	movwf	(??_find_volume+1)& (0+255),b
 13201  00B398  0E00               	movlw	0
 13202  00B39A  0100               	movlb	0	; () banked
 13203  00B39C  21CD               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 13204  00B39E  0100               	movlb	0	; () banked
 13205  00B3A0  6F82               	movwf	(??_find_volume+2)& (0+255),b
 13206  00B3A2  0E00               	movlw	0
 13207  00B3A4  0100               	movlb	0	; () banked
 13208  00B3A6  21CE               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 13209  00B3A8  0100               	movlb	0	; () banked
 13210  00B3AA  6F83               	movwf	(??_find_volume+3)& (0+255),b
 13211  00B3AC  0100               	movlb	0	; () banked
 13212  00B3AE  EE20 F022          	lfsr	2,34
 13213  00B3B2  0100               	movlb	0	; () banked
 13214  00B3B4  51D2               	movf	find_volume@fs& (0+255),w,b
 13215  00B3B6  26D9               	addwf	fsr2l,f,c
 13216  00B3B8  0100               	movlb	0	; () banked
 13217  00B3BA  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13218  00B3BC  22DA               	addwfc	fsr2h,f,c
 13219  00B3BE  C080  FFDE         	movff	??_find_volume,postinc2
 13220  00B3C2  C081  FFDE         	movff	??_find_volume+1,postinc2
 13221  00B3C6  C082  FFDE         	movff	??_find_volume+2,postinc2
 13222  00B3CA  C083  FFDD         	movff	??_find_volume+3,postdec2
 13223  00B3CE  06D9               	decf	fsr2l,f,c
 13224  00B3D0  06D9               	decf	fsr2l,f,c
 13225                           
 13226                           ; BSR set to: 0
 13227                           ;ff.c: 2379: fs->database = bsect + sysect;
 13228  00B3D2  0100               	movlb	0	; () banked
 13229  00B3D4  51B4               	movf	find_volume@sysect& (0+255),w,b
 13230  00B3D6  0100               	movlb	0	; () banked
 13231  00B3D8  25CB               	addwf	find_volume@bsect& (0+255),w,b
 13232  00B3DA  0100               	movlb	0	; () banked
 13233  00B3DC  6F80               	movwf	??_find_volume& (0+255),b
 13234  00B3DE  0100               	movlb	0	; () banked
 13235  00B3E0  51B5               	movf	(find_volume@sysect+1)& (0+255),w,b
 13236  00B3E2  0100               	movlb	0	; () banked
 13237  00B3E4  21CC               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 13238  00B3E6  0100               	movlb	0	; () banked
 13239  00B3E8  6F81               	movwf	(??_find_volume+1)& (0+255),b
 13240  00B3EA  0100               	movlb	0	; () banked
 13241  00B3EC  51B6               	movf	(find_volume@sysect+2)& (0+255),w,b
 13242  00B3EE  0100               	movlb	0	; () banked
 13243  00B3F0  21CD               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 13244  00B3F2  0100               	movlb	0	; () banked
 13245  00B3F4  6F82               	movwf	(??_find_volume+2)& (0+255),b
 13246  00B3F6  0100               	movlb	0	; () banked
 13247  00B3F8  51B7               	movf	(find_volume@sysect+3)& (0+255),w,b
 13248  00B3FA  0100               	movlb	0	; () banked
 13249  00B3FC  21CE               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 13250  00B3FE  0100               	movlb	0	; () banked
 13251  00B400  6F83               	movwf	(??_find_volume+3)& (0+255),b
 13252  00B402  0100               	movlb	0	; () banked
 13253  00B404  EE20 F02A          	lfsr	2,42
 13254  00B408  0100               	movlb	0	; () banked
 13255  00B40A  51D2               	movf	find_volume@fs& (0+255),w,b
 13256  00B40C  26D9               	addwf	fsr2l,f,c
 13257  00B40E  0100               	movlb	0	; () banked
 13258  00B410  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13259  00B412  22DA               	addwfc	fsr2h,f,c
 13260  00B414  C080  FFDE         	movff	??_find_volume,postinc2
 13261  00B418  C081  FFDE         	movff	??_find_volume+1,postinc2
 13262  00B41C  C082  FFDE         	movff	??_find_volume+2,postinc2
 13263  00B420  C083  FFDD         	movff	??_find_volume+3,postdec2
 13264  00B424  06D9               	decf	fsr2l,f,c
 13265  00B426  06D9               	decf	fsr2l,f,c
 13266                           
 13267                           ; BSR set to: 0
 13268                           ;ff.c: 2380: if (fmt == 3) {
 13269  00B428  0100               	movlb	0	; () banked
 13270  00B42A  51D1               	movf	find_volume@fmt& (0+255),w,b
 13271  00B42C  0A03               	xorlw	3
 13272  00B42E  A4D8               	btfss	status,2,c
 13273  00B430  D0D1               	goto	l8427
 13274                           
 13275                           ; BSR set to: 0
 13276                           ;ff.c: 2381: if (fs->n_rootdir) return FR_NO_FILESYSTEM;
 13277  00B432  0100               	movlb	0	; () banked
 13278  00B434  EE20 F008          	lfsr	2,8
 13279  00B438  0100               	movlb	0	; () banked
 13280  00B43A  51D2               	movf	find_volume@fs& (0+255),w,b
 13281  00B43C  26D9               	addwf	fsr2l,f,c
 13282  00B43E  0100               	movlb	0	; () banked
 13283  00B440  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13284  00B442  22DA               	addwfc	fsr2h,f,c
 13285  00B444  50DE               	movf	postinc2,w,c
 13286  00B446  10DD               	iorwf	postdec2,w,c
 13287  00B448  A4D8               	btfss	status,2,c
 13288  00B44A  D1DA               	goto	u11230
 13289                           
 13290                           ; BSR set to: 0
 13291                           ;ff.c: 2382: fs->dirbase = (DWORD)(((DWORD)*((BYTE*)(fs->win + 44)+3)<<24)|((DWORD)*((BY
      +                          TE*)(fs->win + 44)+2)<<16)|((WORD)*((BYTE*)(fs->win + 44)+1)<<8)|*(BYTE*)(fs->win + 44))
      +                          ;
 13292                           
 13293                           ; BSR set to: 0
 13294                           
 13295                           ; BSR set to: 0
 13296                           
 13297                           ; BSR set to: 0
 13298  00B44C  0100               	movlb	0	; () banked
 13299  00B44E  EE20 F05F          	lfsr	2,95
 13300  00B452  0100               	movlb	0	; () banked
 13301  00B454  51D2               	movf	find_volume@fs& (0+255),w,b
 13302  00B456  26D9               	addwf	fsr2l,f,c
 13303  00B458  0100               	movlb	0	; () banked
 13304  00B45A  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13305  00B45C  22DA               	addwfc	fsr2h,f,c
 13306  00B45E  50DF               	movf	indf2,w,c
 13307  00B460  0100               	movlb	0	; () banked
 13308  00B462  6F80               	movwf	??_find_volume& (0+255),b
 13309  00B464  0100               	movlb	0	; () banked
 13310  00B466  5180               	movf	??_find_volume& (0+255),w,b
 13311  00B468  0100               	movlb	0	; () banked
 13312  00B46A  6F82               	movwf	(??_find_volume+2)& (0+255),b
 13313  00B46C  6B81               	clrf	(??_find_volume+1)& (0+255),b
 13314  00B46E  0100               	movlb	0	; () banked
 13315  00B470  EE20 F060          	lfsr	2,96
 13316  00B474  0100               	movlb	0	; () banked
 13317  00B476  51D2               	movf	find_volume@fs& (0+255),w,b
 13318  00B478  26D9               	addwf	fsr2l,f,c
 13319  00B47A  0100               	movlb	0	; () banked
 13320  00B47C  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13321  00B47E  22DA               	addwfc	fsr2h,f,c
 13322  00B480  50DF               	movf	indf2,w,c
 13323  00B482  0100               	movlb	0	; () banked
 13324  00B484  6F83               	movwf	(??_find_volume+3)& (0+255),b
 13325  00B486  C083  F084         	movff	??_find_volume+3,??_find_volume+4
 13326  00B48A  0100               	movlb	0	; () banked
 13327  00B48C  6B85               	clrf	(??_find_volume+5)& (0+255),b
 13328  00B48E  6B86               	clrf	(??_find_volume+6)& (0+255),b
 13329  00B490  6B87               	clrf	(??_find_volume+7)& (0+255),b
 13330  00B492  C085  F087         	movff	??_find_volume+5,??_find_volume+7
 13331  00B496  C084  F086         	movff	??_find_volume+4,??_find_volume+6
 13332  00B49A  0100               	movlb	0	; () banked
 13333  00B49C  6B85               	clrf	(??_find_volume+5)& (0+255),b
 13334  00B49E  6B84               	clrf	(??_find_volume+4)& (0+255),b
 13335  00B4A0  0100               	movlb	0	; () banked
 13336  00B4A2  EE20 F061          	lfsr	2,97
 13337  00B4A6  0100               	movlb	0	; () banked
 13338  00B4A8  51D2               	movf	find_volume@fs& (0+255),w,b
 13339  00B4AA  26D9               	addwf	fsr2l,f,c
 13340  00B4AC  0100               	movlb	0	; () banked
 13341  00B4AE  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13342  00B4B0  22DA               	addwfc	fsr2h,f,c
 13343  00B4B2  50DF               	movf	indf2,w,c
 13344  00B4B4  0100               	movlb	0	; () banked
 13345  00B4B6  6F88               	movwf	(??_find_volume+8)& (0+255),b
 13346  00B4B8  C088  F089         	movff	??_find_volume+8,??_find_volume+9
 13347  00B4BC  0100               	movlb	0	; () banked
 13348  00B4BE  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 13349  00B4C0  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 13350  00B4C2  6B8C               	clrf	(??_find_volume+12)& (0+255),b
 13351  00B4C4  C089  F08C         	movff	??_find_volume+9,??_find_volume+12
 13352  00B4C8  0100               	movlb	0	; () banked
 13353  00B4CA  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 13354  00B4CC  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 13355  00B4CE  6B89               	clrf	(??_find_volume+9)& (0+255),b
 13356  00B4D0  0100               	movlb	0	; () banked
 13357  00B4D2  5184               	movf	(??_find_volume+4)& (0+255),w,b
 13358  00B4D4  0100               	movlb	0	; () banked
 13359  00B4D6  1189               	iorwf	(??_find_volume+9)& (0+255),w,b
 13360  00B4D8  0100               	movlb	0	; () banked
 13361  00B4DA  6F8D               	movwf	(??_find_volume+13)& (0+255),b
 13362  00B4DC  0100               	movlb	0	; () banked
 13363  00B4DE  5185               	movf	(??_find_volume+5)& (0+255),w,b
 13364  00B4E0  0100               	movlb	0	; () banked
 13365  00B4E2  118A               	iorwf	(??_find_volume+10)& (0+255),w,b
 13366  00B4E4  0100               	movlb	0	; () banked
 13367  00B4E6  6F8E               	movwf	(??_find_volume+14)& (0+255),b
 13368  00B4E8  0100               	movlb	0	; () banked
 13369  00B4EA  5186               	movf	(??_find_volume+6)& (0+255),w,b
 13370  00B4EC  0100               	movlb	0	; () banked
 13371  00B4EE  118B               	iorwf	(??_find_volume+11)& (0+255),w,b
 13372  00B4F0  0100               	movlb	0	; () banked
 13373  00B4F2  6F8F               	movwf	(??_find_volume+15)& (0+255),b
 13374  00B4F4  0100               	movlb	0	; () banked
 13375  00B4F6  5187               	movf	(??_find_volume+7)& (0+255),w,b
 13376  00B4F8  0100               	movlb	0	; () banked
 13377  00B4FA  118C               	iorwf	(??_find_volume+12)& (0+255),w,b
 13378  00B4FC  0100               	movlb	0	; () banked
 13379  00B4FE  6F90               	movwf	(??_find_volume+16)& (0+255),b
 13380  00B500  0100               	movlb	0	; () banked
 13381  00B502  5181               	movf	(??_find_volume+1)& (0+255),w,b
 13382  00B504  0100               	movlb	0	; () banked
 13383  00B506  118D               	iorwf	(??_find_volume+13)& (0+255),w,b
 13384  00B508  0100               	movlb	0	; () banked
 13385  00B50A  6F91               	movwf	(??_find_volume+17)& (0+255),b
 13386  00B50C  0100               	movlb	0	; () banked
 13387  00B50E  5182               	movf	(??_find_volume+2)& (0+255),w,b
 13388  00B510  0100               	movlb	0	; () banked
 13389  00B512  118E               	iorwf	(??_find_volume+14)& (0+255),w,b
 13390  00B514  0100               	movlb	0	; () banked
 13391  00B516  6F92               	movwf	(??_find_volume+18)& (0+255),b
 13392  00B518  0E00               	movlw	0
 13393  00B51A  0100               	movlb	0	; () banked
 13394  00B51C  118F               	iorwf	(??_find_volume+15)& (0+255),w,b
 13395  00B51E  0100               	movlb	0	; () banked
 13396  00B520  6F93               	movwf	(??_find_volume+19)& (0+255),b
 13397  00B522  0E00               	movlw	0
 13398  00B524  0100               	movlb	0	; () banked
 13399  00B526  1190               	iorwf	(??_find_volume+16)& (0+255),w,b
 13400  00B528  0100               	movlb	0	; () banked
 13401  00B52A  6F94               	movwf	(??_find_volume+20)& (0+255),b
 13402  00B52C  0100               	movlb	0	; () banked
 13403  00B52E  EE20 F05E          	lfsr	2,94
 13404  00B532  0100               	movlb	0	; () banked
 13405  00B534  51D2               	movf	find_volume@fs& (0+255),w,b
 13406  00B536  26D9               	addwf	fsr2l,f,c
 13407  00B538  0100               	movlb	0	; () banked
 13408  00B53A  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13409  00B53C  22DA               	addwfc	fsr2h,f,c
 13410  00B53E  50DF               	movf	indf2,w,c
 13411  00B540  0100               	movlb	0	; () banked
 13412  00B542  6F95               	movwf	(??_find_volume+21)& (0+255),b
 13413  00B544  0100               	movlb	0	; () banked
 13414  00B546  5195               	movf	(??_find_volume+21)& (0+255),w,b
 13415  00B548  0100               	movlb	0	; () banked
 13416  00B54A  1191               	iorwf	(??_find_volume+17)& (0+255),w,b
 13417  00B54C  0100               	movlb	0	; () banked
 13418  00B54E  6F96               	movwf	(??_find_volume+22)& (0+255),b
 13419  00B550  0100               	movlb	0	; () banked
 13420  00B552  5192               	movf	(??_find_volume+18)& (0+255),w,b
 13421  00B554  0100               	movlb	0	; () banked
 13422  00B556  6F97               	movwf	(??_find_volume+23)& (0+255),b
 13423  00B558  0100               	movlb	0	; () banked
 13424  00B55A  5193               	movf	(??_find_volume+19)& (0+255),w,b
 13425  00B55C  0100               	movlb	0	; () banked
 13426  00B55E  6F98               	movwf	(??_find_volume+24)& (0+255),b
 13427  00B560  0100               	movlb	0	; () banked
 13428  00B562  5194               	movf	(??_find_volume+20)& (0+255),w,b
 13429  00B564  0100               	movlb	0	; () banked
 13430  00B566  6F99               	movwf	(??_find_volume+25)& (0+255),b
 13431  00B568  0100               	movlb	0	; () banked
 13432  00B56A  EE20 F026          	lfsr	2,38
 13433  00B56E  0100               	movlb	0	; () banked
 13434  00B570  51D2               	movf	find_volume@fs& (0+255),w,b
 13435  00B572  26D9               	addwf	fsr2l,f,c
 13436  00B574  0100               	movlb	0	; () banked
 13437  00B576  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13438  00B578  22DA               	addwfc	fsr2h,f,c
 13439  00B57A  C096  FFDE         	movff	??_find_volume+22,postinc2
 13440  00B57E  C097  FFDE         	movff	??_find_volume+23,postinc2
 13441  00B582  C098  FFDE         	movff	??_find_volume+24,postinc2
 13442  00B586  C099  FFDD         	movff	??_find_volume+25,postdec2
 13443  00B58A  06D9               	decf	fsr2l,f,c
 13444  00B58C  06D9               	decf	fsr2l,f,c
 13445                           
 13446                           ;ff.c: 2383: szbfat = fs->n_fatent * 4;
 13447  00B58E  0100               	movlb	0	; () banked
 13448  00B590  EE20 F016          	lfsr	2,22
 13449  00B594  0100               	movlb	0	; () banked
 13450  00B596  51D2               	movf	find_volume@fs& (0+255),w,b
 13451  00B598  26D9               	addwf	fsr2l,f,c
 13452  00B59A  0100               	movlb	0	; () banked
 13453  00B59C  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13454  00B59E  22DA               	addwfc	fsr2h,f,c
 13455  00B5A0  CFDE F080          	movff	postinc2,??_find_volume
 13456  00B5A4  CFDE F081          	movff	postinc2,??_find_volume+1
 13457  00B5A8  CFDE F082          	movff	postinc2,??_find_volume+2
 13458  00B5AC  CFDE F083          	movff	postinc2,??_find_volume+3
 13459  00B5B0  0E02               	movlw	2
 13460  00B5B2                     u11195:
 13461  00B5B2  90D8               	bcf	status,0,c
 13462  00B5B4  0100               	movlb	0	; () banked
 13463  00B5B6  3780               	rlcf	??_find_volume& (0+255),f,b
 13464  00B5B8  3781               	rlcf	(??_find_volume+1)& (0+255),f,b
 13465  00B5BA  3782               	rlcf	(??_find_volume+2)& (0+255),f,b
 13466  00B5BC  3783               	rlcf	(??_find_volume+3)& (0+255),f,b
 13467  00B5BE  2EE8               	decfsz	wreg,f,c
 13468  00B5C0  D7F8               	goto	u11195
 13469  00B5C2  C080  F0B0         	movff	??_find_volume,find_volume@szbfat
 13470  00B5C6  C081  F0B1         	movff	??_find_volume+1,find_volume@szbfat+1
 13471  00B5CA  C082  F0B2         	movff	??_find_volume+2,find_volume@szbfat+2
 13472  00B5CE  C083  F0B3         	movff	??_find_volume+3,find_volume@szbfat+3
 13473                           
 13474                           ;ff.c: 2384: } else {
 13475  00B5D2  D0D5               	goto	l735
 13476  00B5D4                     l8427:
 13477                           
 13478                           ; BSR set to: 0
 13479                           ;ff.c: 2385: if (!fs->n_rootdir) return FR_NO_FILESYSTEM;
 13480  00B5D4  0100               	movlb	0	; () banked
 13481  00B5D6  EE20 F008          	lfsr	2,8
 13482  00B5DA  0100               	movlb	0	; () banked
 13483  00B5DC  51D2               	movf	find_volume@fs& (0+255),w,b
 13484  00B5DE  26D9               	addwf	fsr2l,f,c
 13485  00B5E0  0100               	movlb	0	; () banked
 13486  00B5E2  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13487  00B5E4  22DA               	addwfc	fsr2h,f,c
 13488  00B5E6  50DE               	movf	postinc2,w,c
 13489  00B5E8  10DD               	iorwf	postdec2,w,c
 13490  00B5EA  B4D8               	btfsc	status,2,c
 13491  00B5EC  D109               	goto	u11230
 13492                           
 13493                           ; BSR set to: 0
 13494                           ;ff.c: 2386: fs->dirbase = fs->fatbase + fasize;
 13495                           
 13496                           ; BSR set to: 0
 13497                           
 13498                           ; BSR set to: 0
 13499                           
 13500                           ; BSR set to: 0
 13501  00B5EE  0100               	movlb	0	; () banked
 13502  00B5F0  EE20 F022          	lfsr	2,34
 13503  00B5F4  0100               	movlb	0	; () banked
 13504  00B5F6  51D2               	movf	find_volume@fs& (0+255),w,b
 13505  00B5F8  26D9               	addwf	fsr2l,f,c
 13506  00B5FA  0100               	movlb	0	; () banked
 13507  00B5FC  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13508  00B5FE  22DA               	addwfc	fsr2h,f,c
 13509  00B600  CFDE F080          	movff	postinc2,??_find_volume
 13510  00B604  CFDE F081          	movff	postinc2,??_find_volume+1
 13511  00B608  CFDE F082          	movff	postinc2,??_find_volume+2
 13512  00B60C  CFDE F083          	movff	postinc2,??_find_volume+3
 13513  00B610  0100               	movlb	0	; () banked
 13514  00B612  51C7               	movf	find_volume@fasize& (0+255),w,b
 13515  00B614  0100               	movlb	0	; () banked
 13516  00B616  2580               	addwf	??_find_volume& (0+255),w,b
 13517  00B618  0100               	movlb	0	; () banked
 13518  00B61A  6F84               	movwf	(??_find_volume+4)& (0+255),b
 13519  00B61C  0100               	movlb	0	; () banked
 13520  00B61E  51C8               	movf	(find_volume@fasize+1)& (0+255),w,b
 13521  00B620  0100               	movlb	0	; () banked
 13522  00B622  2181               	addwfc	(??_find_volume+1)& (0+255),w,b
 13523  00B624  0100               	movlb	0	; () banked
 13524  00B626  6F85               	movwf	(??_find_volume+5)& (0+255),b
 13525  00B628  0100               	movlb	0	; () banked
 13526  00B62A  51C9               	movf	(find_volume@fasize+2)& (0+255),w,b
 13527  00B62C  0100               	movlb	0	; () banked
 13528  00B62E  2182               	addwfc	(??_find_volume+2)& (0+255),w,b
 13529  00B630  0100               	movlb	0	; () banked
 13530  00B632  6F86               	movwf	(??_find_volume+6)& (0+255),b
 13531  00B634  0100               	movlb	0	; () banked
 13532  00B636  51CA               	movf	(find_volume@fasize+3)& (0+255),w,b
 13533  00B638  0100               	movlb	0	; () banked
 13534  00B63A  2183               	addwfc	(??_find_volume+3)& (0+255),w,b
 13535  00B63C  0100               	movlb	0	; () banked
 13536  00B63E  6F87               	movwf	(??_find_volume+7)& (0+255),b
 13537  00B640  0100               	movlb	0	; () banked
 13538  00B642  EE20 F026          	lfsr	2,38
 13539  00B646  0100               	movlb	0	; () banked
 13540  00B648  51D2               	movf	find_volume@fs& (0+255),w,b
 13541  00B64A  26D9               	addwf	fsr2l,f,c
 13542  00B64C  0100               	movlb	0	; () banked
 13543  00B64E  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13544  00B650  22DA               	addwfc	fsr2h,f,c
 13545  00B652  C084  FFDE         	movff	??_find_volume+4,postinc2
 13546  00B656  C085  FFDE         	movff	??_find_volume+5,postinc2
 13547  00B65A  C086  FFDE         	movff	??_find_volume+6,postinc2
 13548  00B65E  C087  FFDD         	movff	??_find_volume+7,postdec2
 13549  00B662  06D9               	decf	fsr2l,f,c
 13550  00B664  06D9               	decf	fsr2l,f,c
 13551                           
 13552                           ; BSR set to: 0
 13553                           ;ff.c: 2387: szbfat = (fmt == 2) ?
 13554                           ;ff.c: 2388: fs->n_fatent * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);
 13555  00B666  0100               	movlb	0	; () banked
 13556  00B668  51D1               	movf	find_volume@fmt& (0+255),w,b
 13557  00B66A  0A02               	xorlw	2
 13558  00B66C  B4D8               	btfsc	status,2,c
 13559  00B66E  D065               	goto	l8439
 13560                           
 13561                           ; BSR set to: 0
 13562  00B670  0100               	movlb	0	; () banked
 13563  00B672  EE20 F016          	lfsr	2,22
 13564  00B676  0100               	movlb	0	; () banked
 13565  00B678  51D2               	movf	find_volume@fs& (0+255),w,b
 13566  00B67A  26D9               	addwf	fsr2l,f,c
 13567  00B67C  0100               	movlb	0	; () banked
 13568  00B67E  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13569  00B680  22DA               	addwfc	fsr2h,f,c
 13570  00B682  CFDE F080          	movff	postinc2,??_find_volume
 13571  00B686  CFDE F081          	movff	postinc2,??_find_volume+1
 13572  00B68A  CFDE F082          	movff	postinc2,??_find_volume+2
 13573  00B68E  CFDE F083          	movff	postinc2,??_find_volume+3
 13574  00B692  0E01               	movlw	1
 13575  00B694  0100               	movlb	0	; () banked
 13576  00B696  1580               	andwf	??_find_volume& (0+255),w,b
 13577  00B698  0100               	movlb	0	; () banked
 13578  00B69A  6F84               	movwf	(??_find_volume+4)& (0+255),b
 13579  00B69C  0E00               	movlw	0
 13580  00B69E  0100               	movlb	0	; () banked
 13581  00B6A0  1581               	andwf	(??_find_volume+1)& (0+255),w,b
 13582  00B6A2  0100               	movlb	0	; () banked
 13583  00B6A4  6F85               	movwf	(??_find_volume+5)& (0+255),b
 13584  00B6A6  0E00               	movlw	0
 13585  00B6A8  0100               	movlb	0	; () banked
 13586  00B6AA  1582               	andwf	(??_find_volume+2)& (0+255),w,b
 13587  00B6AC  0100               	movlb	0	; () banked
 13588  00B6AE  6F86               	movwf	(??_find_volume+6)& (0+255),b
 13589  00B6B0  0E00               	movlw	0
 13590  00B6B2  0100               	movlb	0	; () banked
 13591  00B6B4  1583               	andwf	(??_find_volume+3)& (0+255),w,b
 13592  00B6B6  0100               	movlb	0	; () banked
 13593  00B6B8  6F87               	movwf	(??_find_volume+7)& (0+255),b
 13594  00B6BA  0100               	movlb	0	; () banked
 13595  00B6BC  EE20 F016          	lfsr	2,22
 13596  00B6C0  0100               	movlb	0	; () banked
 13597  00B6C2  51D2               	movf	find_volume@fs& (0+255),w,b
 13598  00B6C4  26D9               	addwf	fsr2l,f,c
 13599  00B6C6  0100               	movlb	0	; () banked
 13600  00B6C8  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13601  00B6CA  22DA               	addwfc	fsr2h,f,c
 13602  00B6CC  CFDE F001          	movff	postinc2,___lmul@multiplier
 13603  00B6D0  CFDE F002          	movff	postinc2,___lmul@multiplier+1
 13604  00B6D4  CFDE F003          	movff	postinc2,___lmul@multiplier+2
 13605  00B6D8  CFDE F004          	movff	postinc2,___lmul@multiplier+3
 13606  00B6DC  0E03               	movlw	3
 13607  00B6DE  6E05               	movwf	___lmul@multiplicand,c
 13608  00B6E0  0E00               	movlw	0
 13609  00B6E2  6E06               	movwf	___lmul@multiplicand+1,c
 13610  00B6E4  0E00               	movlw	0
 13611  00B6E6  6E07               	movwf	___lmul@multiplicand+2,c
 13612  00B6E8  0E00               	movlw	0
 13613  00B6EA  6E08               	movwf	___lmul@multiplicand+3,c
 13614  00B6EC  ECF7  F029         	call	___lmul	;wreg free
 13615  00B6F0  C001  F088         	movff	?___lmul,??_find_volume+8
 13616  00B6F4  C002  F089         	movff	?___lmul+1,??_find_volume+9
 13617  00B6F8  C003  F08A         	movff	?___lmul+2,??_find_volume+10
 13618  00B6FC  C004  F08B         	movff	?___lmul+3,??_find_volume+11
 13619  00B700  0100               	movlb	0	; () banked
 13620  00B702  90D8               	bcf	status,0,c
 13621  00B704  338B               	rrcf	(??_find_volume+11)& (0+255),f,b
 13622  00B706  338A               	rrcf	(??_find_volume+10)& (0+255),f,b
 13623  00B708  3389               	rrcf	(??_find_volume+9)& (0+255),f,b
 13624  00B70A  3388               	rrcf	(??_find_volume+8)& (0+255),f,b
 13625  00B70C  0100               	movlb	0	; () banked
 13626  00B70E  5184               	movf	(??_find_volume+4)& (0+255),w,b
 13627  00B710  0100               	movlb	0	; () banked
 13628  00B712  2588               	addwf	(??_find_volume+8)& (0+255),w,b
 13629  00B714  0100               	movlb	0	; () banked
 13630  00B716  6FB0               	movwf	find_volume@szbfat& (0+255),b
 13631  00B718  0100               	movlb	0	; () banked
 13632  00B71A  5185               	movf	(??_find_volume+5)& (0+255),w,b
 13633  00B71C  0100               	movlb	0	; () banked
 13634  00B71E  2189               	addwfc	(??_find_volume+9)& (0+255),w,b
 13635  00B720  0100               	movlb	0	; () banked
 13636  00B722  6FB1               	movwf	(find_volume@szbfat+1)& (0+255),b
 13637  00B724  0100               	movlb	0	; () banked
 13638  00B726  5186               	movf	(??_find_volume+6)& (0+255),w,b
 13639  00B728  0100               	movlb	0	; () banked
 13640  00B72A  218A               	addwfc	(??_find_volume+10)& (0+255),w,b
 13641  00B72C  0100               	movlb	0	; () banked
 13642  00B72E  6FB2               	movwf	(find_volume@szbfat+2)& (0+255),b
 13643  00B730  0100               	movlb	0	; () banked
 13644  00B732  5187               	movf	(??_find_volume+7)& (0+255),w,b
 13645  00B734  0100               	movlb	0	; () banked
 13646  00B736  218B               	addwfc	(??_find_volume+11)& (0+255),w,b
 13647  00B738  D020               	goto	L23
 13648  00B73A                     l8439:
 13649                           
 13650                           ; BSR set to: 0
 13651  00B73A  0100               	movlb	0	; () banked
 13652  00B73C  EE20 F016          	lfsr	2,22
 13653  00B740  0100               	movlb	0	; () banked
 13654  00B742  51D2               	movf	find_volume@fs& (0+255),w,b
 13655  00B744  26D9               	addwf	fsr2l,f,c
 13656  00B746  0100               	movlb	0	; () banked
 13657  00B748  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13658  00B74A  22DA               	addwfc	fsr2h,f,c
 13659  00B74C  CFDE F080          	movff	postinc2,??_find_volume
 13660  00B750  CFDE F081          	movff	postinc2,??_find_volume+1
 13661  00B754  CFDE F082          	movff	postinc2,??_find_volume+2
 13662  00B758  CFDE F083          	movff	postinc2,??_find_volume+3
 13663  00B75C  90D8               	bcf	status,0,c
 13664  00B75E  0100               	movlb	0	; () banked
 13665  00B760  3580               	rlcf	??_find_volume& (0+255),w,b
 13666  00B762  0100               	movlb	0	; () banked
 13667  00B764  6FB0               	movwf	find_volume@szbfat& (0+255),b
 13668  00B766  0100               	movlb	0	; () banked
 13669  00B768  3581               	rlcf	(??_find_volume+1)& (0+255),w,b
 13670  00B76A  0100               	movlb	0	; () banked
 13671  00B76C  6FB1               	movwf	(find_volume@szbfat+1)& (0+255),b
 13672  00B76E  0100               	movlb	0	; () banked
 13673  00B770  3582               	rlcf	(??_find_volume+2)& (0+255),w,b
 13674  00B772  0100               	movlb	0	; () banked
 13675  00B774  6FB2               	movwf	(find_volume@szbfat+2)& (0+255),b
 13676  00B776  0100               	movlb	0	; () banked
 13677  00B778  3583               	rlcf	(??_find_volume+3)& (0+255),w,b
 13678  00B77A                     L23:
 13679  00B77A  0100               	movlb	0	; () banked
 13680  00B77C  6FB3               	movwf	(find_volume@szbfat+3)& (0+255),b
 13681  00B77E                     l735:
 13682                           
 13683                           ; BSR set to: 0
 13684                           ;ff.c: 2389: }
 13685                           ;ff.c: 2390: if (fs->fsize < (szbfat + (((UINT)512) - 1)) / ((UINT)512))
 13686  00B77E  0EFF               	movlw	255
 13687  00B780  0100               	movlb	0	; () banked
 13688  00B782  25B0               	addwf	find_volume@szbfat& (0+255),w,b
 13689  00B784  0100               	movlb	0	; () banked
 13690  00B786  6F80               	movwf	??_find_volume& (0+255),b
 13691  00B788  0E01               	movlw	1
 13692  00B78A  0100               	movlb	0	; () banked
 13693  00B78C  21B1               	addwfc	(find_volume@szbfat+1)& (0+255),w,b
 13694  00B78E  0100               	movlb	0	; () banked
 13695  00B790  6F81               	movwf	(??_find_volume+1)& (0+255),b
 13696  00B792  0E00               	movlw	0
 13697  00B794  0100               	movlb	0	; () banked
 13698  00B796  21B2               	addwfc	(find_volume@szbfat+2)& (0+255),w,b
 13699  00B798  0100               	movlb	0	; () banked
 13700  00B79A  6F82               	movwf	(??_find_volume+2)& (0+255),b
 13701  00B79C  0E00               	movlw	0
 13702  00B79E  0100               	movlb	0	; () banked
 13703  00B7A0  21B3               	addwfc	(find_volume@szbfat+3)& (0+255),w,b
 13704  00B7A2  0100               	movlb	0	; () banked
 13705  00B7A4  6F83               	movwf	(??_find_volume+3)& (0+255),b
 13706  00B7A6  0E0A               	movlw	10
 13707  00B7A8  D006               	goto	u11220
 13708  00B7AA                     u11225:
 13709  00B7AA  0100               	movlb	0	; () banked
 13710  00B7AC  90D8               	bcf	status,0,c
 13711  00B7AE  3383               	rrcf	(??_find_volume+3)& (0+255),f,b
 13712  00B7B0  3382               	rrcf	(??_find_volume+2)& (0+255),f,b
 13713  00B7B2  3381               	rrcf	(??_find_volume+1)& (0+255),f,b
 13714  00B7B4  3380               	rrcf	??_find_volume& (0+255),f,b
 13715  00B7B6                     u11220:
 13716  00B7B6  2EE8               	decfsz	wreg,f,c
 13717  00B7B8  D7F8               	goto	u11225
 13718  00B7BA  0100               	movlb	0	; () banked
 13719  00B7BC  EE20 F01A          	lfsr	2,26
 13720  00B7C0  0100               	movlb	0	; () banked
 13721  00B7C2  51D2               	movf	find_volume@fs& (0+255),w,b
 13722  00B7C4  26D9               	addwf	fsr2l,f,c
 13723  00B7C6  0100               	movlb	0	; () banked
 13724  00B7C8  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13725  00B7CA  22DA               	addwfc	fsr2h,f,c
 13726  00B7CC  CFDE F084          	movff	postinc2,??_find_volume+4
 13727  00B7D0  CFDE F085          	movff	postinc2,??_find_volume+5
 13728  00B7D4  CFDE F086          	movff	postinc2,??_find_volume+6
 13729  00B7D8  CFDE F087          	movff	postinc2,??_find_volume+7
 13730  00B7DC  0100               	movlb	0	; () banked
 13731  00B7DE  5180               	movf	??_find_volume& (0+255),w,b
 13732  00B7E0  0100               	movlb	0	; () banked
 13733  00B7E2  5D84               	subwf	(??_find_volume+4)& (0+255),w,b
 13734  00B7E4  0100               	movlb	0	; () banked
 13735  00B7E6  5181               	movf	(??_find_volume+1)& (0+255),w,b
 13736  00B7E8  0100               	movlb	0	; () banked
 13737  00B7EA  5985               	subwfb	(??_find_volume+5)& (0+255),w,b
 13738  00B7EC  0100               	movlb	0	; () banked
 13739  00B7EE  5182               	movf	(??_find_volume+2)& (0+255),w,b
 13740  00B7F0  0100               	movlb	0	; () banked
 13741  00B7F2  5986               	subwfb	(??_find_volume+6)& (0+255),w,b
 13742  00B7F4  0100               	movlb	0	; () banked
 13743  00B7F6  5183               	movf	(??_find_volume+3)& (0+255),w,b
 13744  00B7F8  0100               	movlb	0	; () banked
 13745  00B7FA  5987               	subwfb	(??_find_volume+7)& (0+255),w,b
 13746  00B7FC  B0D8               	btfsc	status,0,c
 13747  00B7FE  D002               	goto	l8445
 13748  00B800                     u11230:
 13749                           
 13750                           ; BSR set to: 0
 13751                           ;ff.c: 2391: return FR_NO_FILESYSTEM;
 13752  00B800  0E0D               	movlw	13
 13753  00B802  D366               	goto	l693
 13754  00B804                     l8445:
 13755                           
 13756                           ; BSR set to: 0
 13757                           ;ff.c: 2392: ch = 96;
 13758  00B804  0E00               	movlw	0
 13759  00B806  0101               	movlb	1	; () banked
 13760  00B808  6F64               	movwf	(_ch+1)& (0+255),b
 13761  00B80A  0E60               	movlw	96
 13762  00B80C  0101               	movlb	1	; () banked
 13763  00B80E  6F63               	movwf	_ch& (0+255),b
 13764                           
 13765                           ; BSR set to: 1
 13766                           ;ff.c: 2395: fs->last_clust = fs->free_clust = 0xFFFFFFFF;
 13767  00B810  0100               	movlb	0	; () banked
 13768  00B812  EE20 F00E          	lfsr	2,14
 13769  00B816  0100               	movlb	0	; () banked
 13770  00B818  51D2               	movf	find_volume@fs& (0+255),w,b
 13771  00B81A  26D9               	addwf	fsr2l,f,c
 13772  00B81C  0100               	movlb	0	; () banked
 13773  00B81E  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13774  00B820  22DA               	addwfc	fsr2h,f,c
 13775  00B822  0EFF               	movlw	255
 13776  00B824  6EDE               	movwf	postinc2,c
 13777  00B826  0EFF               	movlw	255
 13778  00B828  6EDE               	movwf	postinc2,c
 13779  00B82A  0EFF               	movlw	255
 13780  00B82C  6EDE               	movwf	postinc2,c
 13781  00B82E  0EFF               	movlw	255
 13782  00B830  6EDD               	movwf	postdec2,c
 13783  00B832  52DD               	movf	postdec2,f,c
 13784  00B834  52DD               	movf	postdec2,f,c
 13785  00B836  CFDE F080          	movff	postinc2,??_find_volume
 13786  00B83A  CFDE F081          	movff	postinc2,??_find_volume+1
 13787  00B83E  CFDE F082          	movff	postinc2,??_find_volume+2
 13788  00B842  CFDD F083          	movff	postdec2,??_find_volume+3
 13789  00B846  50DD               	movf	postdec2,w,c
 13790  00B848  50DD               	movf	postdec2,w,c
 13791  00B84A  0100               	movlb	0	; () banked
 13792  00B84C  EE20 F00A          	lfsr	2,10
 13793  00B850  0100               	movlb	0	; () banked
 13794  00B852  51D2               	movf	find_volume@fs& (0+255),w,b
 13795  00B854  26D9               	addwf	fsr2l,f,c
 13796  00B856  0100               	movlb	0	; () banked
 13797  00B858  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13798  00B85A  22DA               	addwfc	fsr2h,f,c
 13799  00B85C  C080  FFDE         	movff	??_find_volume,postinc2
 13800  00B860  C081  FFDE         	movff	??_find_volume+1,postinc2
 13801  00B864  C082  FFDE         	movff	??_find_volume+2,postinc2
 13802  00B868  C083  FFDD         	movff	??_find_volume+3,postdec2
 13803  00B86C  06D9               	decf	fsr2l,f,c
 13804  00B86E  06D9               	decf	fsr2l,f,c
 13805                           
 13806                           ; BSR set to: 0
 13807                           ;ff.c: 2396: ch = 97;
 13808  00B870  0E00               	movlw	0
 13809  00B872  0101               	movlb	1	; () banked
 13810  00B874  6F64               	movwf	(_ch+1)& (0+255),b
 13811  00B876  0E61               	movlw	97
 13812  00B878  0101               	movlb	1	; () banked
 13813  00B87A  6F63               	movwf	_ch& (0+255),b
 13814                           
 13815                           ;ff.c: 2398: fs->fsi_flag = 0x80;
 13816  00B87C  0100               	movlb	0	; () banked
 13817  00B87E  EE20 F005          	lfsr	2,5
 13818  00B882  0100               	movlb	0	; () banked
 13819  00B884  51D2               	movf	find_volume@fs& (0+255),w,b
 13820  00B886  26D9               	addwf	fsr2l,f,c
 13821  00B888  0100               	movlb	0	; () banked
 13822  00B88A  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13823  00B88C  22DA               	addwfc	fsr2h,f,c
 13824  00B88E  0E80               	movlw	128
 13825  00B890  6EDF               	movwf	indf2,c
 13826                           
 13827                           ; BSR set to: 0
 13828                           ;ff.c: 2400: if (fmt == 3
 13829                           ;ff.c: 2401: && (WORD)(((WORD)*((BYTE*)(fs->win + 48)+1)<<8)|(WORD)*(BYTE*)(fs->win + 48
      +                          )) == 1
 13830                           ;ff.c: 2402: && move_window(fs, bsect + 1) == FR_OK)
 13831  00B892  0100               	movlb	0	; () banked
 13832  00B894  51D1               	movf	find_volume@fmt& (0+255),w,b
 13833  00B896  0A03               	xorlw	3
 13834  00B898  A4D8               	btfss	status,2,c
 13835  00B89A  D2F3               	goto	l8465
 13836                           
 13837                           ; BSR set to: 0
 13838  00B89C  0100               	movlb	0	; () banked
 13839  00B89E  EE20 F063          	lfsr	2,99
 13840  00B8A2  0100               	movlb	0	; () banked
 13841  00B8A4  51D2               	movf	find_volume@fs& (0+255),w,b
 13842  00B8A6  26D9               	addwf	fsr2l,f,c
 13843  00B8A8  0100               	movlb	0	; () banked
 13844  00B8AA  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13845  00B8AC  22DA               	addwfc	fsr2h,f,c
 13846  00B8AE  50DF               	movf	indf2,w,c
 13847  00B8B0  0100               	movlb	0	; () banked
 13848  00B8B2  6F80               	movwf	??_find_volume& (0+255),b
 13849  00B8B4  0100               	movlb	0	; () banked
 13850  00B8B6  5180               	movf	??_find_volume& (0+255),w,b
 13851  00B8B8  0100               	movlb	0	; () banked
 13852  00B8BA  6F82               	movwf	(??_find_volume+2)& (0+255),b
 13853  00B8BC  6B81               	clrf	(??_find_volume+1)& (0+255),b
 13854  00B8BE  0100               	movlb	0	; () banked
 13855  00B8C0  EE20 F062          	lfsr	2,98
 13856  00B8C4  0100               	movlb	0	; () banked
 13857  00B8C6  51D2               	movf	find_volume@fs& (0+255),w,b
 13858  00B8C8  26D9               	addwf	fsr2l,f,c
 13859  00B8CA  0100               	movlb	0	; () banked
 13860  00B8CC  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13861  00B8CE  22DA               	addwfc	fsr2h,f,c
 13862  00B8D0  50DF               	movf	indf2,w,c
 13863  00B8D2  0100               	movlb	0	; () banked
 13864  00B8D4  6F83               	movwf	(??_find_volume+3)& (0+255),b
 13865  00B8D6  0100               	movlb	0	; () banked
 13866  00B8D8  5183               	movf	(??_find_volume+3)& (0+255),w,b
 13867  00B8DA  0100               	movlb	0	; () banked
 13868  00B8DC  1381               	iorwf	(??_find_volume+1)& (0+255),f,b
 13869  00B8DE  0E00               	movlw	0
 13870  00B8E0  1382               	iorwf	(??_find_volume+2)& (0+255),f,b
 13871  00B8E2  0100               	movlb	0	; () banked
 13872  00B8E4  0581               	decf	(??_find_volume+1)& (0+255),w,b
 13873  00B8E6  1182               	iorwf	(??_find_volume+2)& (0+255),w,b
 13874  00B8E8  A4D8               	btfss	status,2,c
 13875  00B8EA  D2CB               	goto	l8465
 13876                           
 13877                           ; BSR set to: 0
 13878  00B8EC  0100               	movlb	0	; () banked
 13879  00B8EE  C0D3  F03C         	movff	find_volume@fs+1,move_window@fs+1
 13880  00B8F2  0100               	movlb	0	; () banked
 13881  00B8F4  C0D2  F03B         	movff	find_volume@fs,move_window@fs
 13882  00B8F8  0E01               	movlw	1
 13883  00B8FA  0100               	movlb	0	; () banked
 13884  00B8FC  25CB               	addwf	find_volume@bsect& (0+255),w,b
 13885  00B8FE  6E3D               	movwf	move_window@sector,c
 13886  00B900  0E00               	movlw	0
 13887  00B902  0100               	movlb	0	; () banked
 13888  00B904  21CC               	addwfc	(find_volume@bsect+1)& (0+255),w,b
 13889  00B906  6E3E               	movwf	move_window@sector+1,c
 13890  00B908  0E00               	movlw	0
 13891  00B90A  0100               	movlb	0	; () banked
 13892  00B90C  21CD               	addwfc	(find_volume@bsect+2)& (0+255),w,b
 13893  00B90E  6E3F               	movwf	move_window@sector+2,c
 13894  00B910  0E00               	movlw	0
 13895  00B912  0100               	movlb	0	; () banked
 13896  00B914  21CE               	addwfc	(find_volume@bsect+3)& (0+255),w,b
 13897  00B916  6E40               	movwf	move_window@sector+3,c
 13898  00B918  EC66  F02C         	call	_move_window	;wreg free
 13899  00B91C  0900               	iorlw	0
 13900  00B91E  A4D8               	btfss	status,2,c
 13901  00B920  D2B0               	goto	l8465
 13902                           
 13903                           ;ff.c: 2403: {
 13904                           ;ff.c: 2404: fs->fsi_flag = 0;
 13905  00B922  0100               	movlb	0	; () banked
 13906  00B924  EE20 F005          	lfsr	2,5
 13907  00B928  0100               	movlb	0	; () banked
 13908  00B92A  51D2               	movf	find_volume@fs& (0+255),w,b
 13909  00B92C  26D9               	addwf	fsr2l,f,c
 13910  00B92E  0100               	movlb	0	; () banked
 13911  00B930  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13912  00B932  22DA               	addwfc	fsr2h,f,c
 13913  00B934  0E00               	movlw	0
 13914  00B936  6EDF               	movwf	indf2,c
 13915                           
 13916                           ;ff.c: 2405: if ((WORD)(((WORD)*((BYTE*)(fs->win + 510)+1)<<8)|(WORD)*(BYTE*)(fs->win + 
      +                          510)) == 0xAA55
 13917                           ;ff.c: 2406: && (DWORD)(((DWORD)*((BYTE*)(fs->win + 0)+3)<<24)|((DWORD)*((BYTE*)(fs->win
      +                           + 0)+2)<<16)|((WORD)*((BYTE*)(fs->win + 0)+1)<<8)|*(BYTE*)(fs->win + 0)) == 0x41615252
 13918                           ;ff.c: 2407: && (DWORD)(((DWORD)*((BYTE*)(fs->win + 484)+3)<<24)|((DWORD)*((BYTE*)(fs->w
      +                          in + 484)+2)<<16)|((WORD)*((BYTE*)(fs->win + 484)+1)<<8)|*(BYTE*)(fs->win + 484)) == 0x6
      +                          1417272)
 13919  00B938  0100               	movlb	0	; () banked
 13920  00B93A  EE22 F031          	lfsr	2,561
 13921  00B93E  0100               	movlb	0	; () banked
 13922  00B940  51D2               	movf	find_volume@fs& (0+255),w,b
 13923  00B942  26D9               	addwf	fsr2l,f,c
 13924  00B944  0100               	movlb	0	; () banked
 13925  00B946  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13926  00B948  22DA               	addwfc	fsr2h,f,c
 13927  00B94A  50DF               	movf	indf2,w,c
 13928  00B94C  0100               	movlb	0	; () banked
 13929  00B94E  6F80               	movwf	??_find_volume& (0+255),b
 13930  00B950  0100               	movlb	0	; () banked
 13931  00B952  5180               	movf	??_find_volume& (0+255),w,b
 13932  00B954  0100               	movlb	0	; () banked
 13933  00B956  6F82               	movwf	(??_find_volume+2)& (0+255),b
 13934  00B958  6B81               	clrf	(??_find_volume+1)& (0+255),b
 13935  00B95A  0100               	movlb	0	; () banked
 13936  00B95C  EE22 F030          	lfsr	2,560
 13937  00B960  0100               	movlb	0	; () banked
 13938  00B962  51D2               	movf	find_volume@fs& (0+255),w,b
 13939  00B964  26D9               	addwf	fsr2l,f,c
 13940  00B966  0100               	movlb	0	; () banked
 13941  00B968  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13942  00B96A  22DA               	addwfc	fsr2h,f,c
 13943  00B96C  50DF               	movf	indf2,w,c
 13944  00B96E  0100               	movlb	0	; () banked
 13945  00B970  6F83               	movwf	(??_find_volume+3)& (0+255),b
 13946  00B972  0100               	movlb	0	; () banked
 13947  00B974  5183               	movf	(??_find_volume+3)& (0+255),w,b
 13948  00B976  0100               	movlb	0	; () banked
 13949  00B978  1381               	iorwf	(??_find_volume+1)& (0+255),f,b
 13950  00B97A  0E00               	movlw	0
 13951  00B97C  1382               	iorwf	(??_find_volume+2)& (0+255),f,b
 13952  00B97E  0100               	movlb	0	; () banked
 13953  00B980  5182               	movf	(??_find_volume+2)& (0+255),w,b
 13954  00B982  0AAA               	xorlw	170
 13955  00B984  0E55               	movlw	85
 13956  00B986  B4D8               	btfsc	status,2,c
 13957  00B988  1981               	xorwf	(??_find_volume+1)& (0+255),w,b
 13958  00B98A  A4D8               	btfss	status,2,c
 13959  00B98C  D27A               	goto	l8465
 13960                           
 13961                           ; BSR set to: 0
 13962  00B98E  0100               	movlb	0	; () banked
 13963  00B990  EE20 F033          	lfsr	2,51
 13964  00B994  0100               	movlb	0	; () banked
 13965  00B996  51D2               	movf	find_volume@fs& (0+255),w,b
 13966  00B998  26D9               	addwf	fsr2l,f,c
 13967  00B99A  0100               	movlb	0	; () banked
 13968  00B99C  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13969  00B99E  22DA               	addwfc	fsr2h,f,c
 13970  00B9A0  50DF               	movf	indf2,w,c
 13971  00B9A2  0100               	movlb	0	; () banked
 13972  00B9A4  6F80               	movwf	??_find_volume& (0+255),b
 13973  00B9A6  0100               	movlb	0	; () banked
 13974  00B9A8  5180               	movf	??_find_volume& (0+255),w,b
 13975  00B9AA  0100               	movlb	0	; () banked
 13976  00B9AC  6F82               	movwf	(??_find_volume+2)& (0+255),b
 13977  00B9AE  6B81               	clrf	(??_find_volume+1)& (0+255),b
 13978  00B9B0  0100               	movlb	0	; () banked
 13979  00B9B2  EE20 F034          	lfsr	2,52
 13980  00B9B6  0100               	movlb	0	; () banked
 13981  00B9B8  51D2               	movf	find_volume@fs& (0+255),w,b
 13982  00B9BA  26D9               	addwf	fsr2l,f,c
 13983  00B9BC  0100               	movlb	0	; () banked
 13984  00B9BE  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 13985  00B9C0  22DA               	addwfc	fsr2h,f,c
 13986  00B9C2  50DF               	movf	indf2,w,c
 13987  00B9C4  0100               	movlb	0	; () banked
 13988  00B9C6  6F83               	movwf	(??_find_volume+3)& (0+255),b
 13989  00B9C8  C083  F084         	movff	??_find_volume+3,??_find_volume+4
 13990  00B9CC  0100               	movlb	0	; () banked
 13991  00B9CE  6B85               	clrf	(??_find_volume+5)& (0+255),b
 13992  00B9D0  6B86               	clrf	(??_find_volume+6)& (0+255),b
 13993  00B9D2  6B87               	clrf	(??_find_volume+7)& (0+255),b
 13994  00B9D4  C085  F087         	movff	??_find_volume+5,??_find_volume+7
 13995  00B9D8  C084  F086         	movff	??_find_volume+4,??_find_volume+6
 13996  00B9DC  0100               	movlb	0	; () banked
 13997  00B9DE  6B85               	clrf	(??_find_volume+5)& (0+255),b
 13998  00B9E0  6B84               	clrf	(??_find_volume+4)& (0+255),b
 13999  00B9E2  0100               	movlb	0	; () banked
 14000  00B9E4  EE20 F035          	lfsr	2,53
 14001  00B9E8  0100               	movlb	0	; () banked
 14002  00B9EA  51D2               	movf	find_volume@fs& (0+255),w,b
 14003  00B9EC  26D9               	addwf	fsr2l,f,c
 14004  00B9EE  0100               	movlb	0	; () banked
 14005  00B9F0  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14006  00B9F2  22DA               	addwfc	fsr2h,f,c
 14007  00B9F4  50DF               	movf	indf2,w,c
 14008  00B9F6  0100               	movlb	0	; () banked
 14009  00B9F8  6F88               	movwf	(??_find_volume+8)& (0+255),b
 14010  00B9FA  C088  F089         	movff	??_find_volume+8,??_find_volume+9
 14011  00B9FE  0100               	movlb	0	; () banked
 14012  00BA00  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 14013  00BA02  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 14014  00BA04  6B8C               	clrf	(??_find_volume+12)& (0+255),b
 14015  00BA06  C089  F08C         	movff	??_find_volume+9,??_find_volume+12
 14016  00BA0A  0100               	movlb	0	; () banked
 14017  00BA0C  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 14018  00BA0E  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 14019  00BA10  6B89               	clrf	(??_find_volume+9)& (0+255),b
 14020  00BA12  0100               	movlb	0	; () banked
 14021  00BA14  5184               	movf	(??_find_volume+4)& (0+255),w,b
 14022  00BA16  0100               	movlb	0	; () banked
 14023  00BA18  1189               	iorwf	(??_find_volume+9)& (0+255),w,b
 14024  00BA1A  0100               	movlb	0	; () banked
 14025  00BA1C  6F8D               	movwf	(??_find_volume+13)& (0+255),b
 14026  00BA1E  0100               	movlb	0	; () banked
 14027  00BA20  5185               	movf	(??_find_volume+5)& (0+255),w,b
 14028  00BA22  0100               	movlb	0	; () banked
 14029  00BA24  118A               	iorwf	(??_find_volume+10)& (0+255),w,b
 14030  00BA26  0100               	movlb	0	; () banked
 14031  00BA28  6F8E               	movwf	(??_find_volume+14)& (0+255),b
 14032  00BA2A  0100               	movlb	0	; () banked
 14033  00BA2C  5186               	movf	(??_find_volume+6)& (0+255),w,b
 14034  00BA2E  0100               	movlb	0	; () banked
 14035  00BA30  118B               	iorwf	(??_find_volume+11)& (0+255),w,b
 14036  00BA32  0100               	movlb	0	; () banked
 14037  00BA34  6F8F               	movwf	(??_find_volume+15)& (0+255),b
 14038  00BA36  0100               	movlb	0	; () banked
 14039  00BA38  5187               	movf	(??_find_volume+7)& (0+255),w,b
 14040  00BA3A  0100               	movlb	0	; () banked
 14041  00BA3C  118C               	iorwf	(??_find_volume+12)& (0+255),w,b
 14042  00BA3E  0100               	movlb	0	; () banked
 14043  00BA40  6F90               	movwf	(??_find_volume+16)& (0+255),b
 14044  00BA42  0100               	movlb	0	; () banked
 14045  00BA44  5181               	movf	(??_find_volume+1)& (0+255),w,b
 14046  00BA46  0100               	movlb	0	; () banked
 14047  00BA48  118D               	iorwf	(??_find_volume+13)& (0+255),w,b
 14048  00BA4A  0100               	movlb	0	; () banked
 14049  00BA4C  6F91               	movwf	(??_find_volume+17)& (0+255),b
 14050  00BA4E  0100               	movlb	0	; () banked
 14051  00BA50  5182               	movf	(??_find_volume+2)& (0+255),w,b
 14052  00BA52  0100               	movlb	0	; () banked
 14053  00BA54  118E               	iorwf	(??_find_volume+14)& (0+255),w,b
 14054  00BA56  0100               	movlb	0	; () banked
 14055  00BA58  6F92               	movwf	(??_find_volume+18)& (0+255),b
 14056  00BA5A  0E00               	movlw	0
 14057  00BA5C  0100               	movlb	0	; () banked
 14058  00BA5E  118F               	iorwf	(??_find_volume+15)& (0+255),w,b
 14059  00BA60  0100               	movlb	0	; () banked
 14060  00BA62  6F93               	movwf	(??_find_volume+19)& (0+255),b
 14061  00BA64  0E00               	movlw	0
 14062  00BA66  0100               	movlb	0	; () banked
 14063  00BA68  1190               	iorwf	(??_find_volume+16)& (0+255),w,b
 14064  00BA6A  0100               	movlb	0	; () banked
 14065  00BA6C  6F94               	movwf	(??_find_volume+20)& (0+255),b
 14066  00BA6E  0100               	movlb	0	; () banked
 14067  00BA70  EE20 F032          	lfsr	2,50
 14068  00BA74  0100               	movlb	0	; () banked
 14069  00BA76  51D2               	movf	find_volume@fs& (0+255),w,b
 14070  00BA78  26D9               	addwf	fsr2l,f,c
 14071  00BA7A  0100               	movlb	0	; () banked
 14072  00BA7C  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14073  00BA7E  22DA               	addwfc	fsr2h,f,c
 14074  00BA80  50DF               	movf	indf2,w,c
 14075  00BA82  0100               	movlb	0	; () banked
 14076  00BA84  6F95               	movwf	(??_find_volume+21)& (0+255),b
 14077  00BA86  0100               	movlb	0	; () banked
 14078  00BA88  5195               	movf	(??_find_volume+21)& (0+255),w,b
 14079  00BA8A  0100               	movlb	0	; () banked
 14080  00BA8C  1191               	iorwf	(??_find_volume+17)& (0+255),w,b
 14081  00BA8E  0100               	movlb	0	; () banked
 14082  00BA90  6F96               	movwf	(??_find_volume+22)& (0+255),b
 14083  00BA92  0100               	movlb	0	; () banked
 14084  00BA94  5192               	movf	(??_find_volume+18)& (0+255),w,b
 14085  00BA96  0100               	movlb	0	; () banked
 14086  00BA98  6F97               	movwf	(??_find_volume+23)& (0+255),b
 14087  00BA9A  0100               	movlb	0	; () banked
 14088  00BA9C  5193               	movf	(??_find_volume+19)& (0+255),w,b
 14089  00BA9E  0100               	movlb	0	; () banked
 14090  00BAA0  6F98               	movwf	(??_find_volume+24)& (0+255),b
 14091  00BAA2  0100               	movlb	0	; () banked
 14092  00BAA4  5194               	movf	(??_find_volume+20)& (0+255),w,b
 14093  00BAA6  0100               	movlb	0	; () banked
 14094  00BAA8  6F99               	movwf	(??_find_volume+25)& (0+255),b
 14095  00BAAA  0100               	movlb	0	; () banked
 14096  00BAAC  5199               	movf	(??_find_volume+25)& (0+255),w,b
 14097  00BAAE  0A41               	xorlw	65
 14098  00BAB0  0E52               	movlw	82
 14099  00BAB2  B4D8               	btfsc	status,2,c
 14100  00BAB4  1996               	xorwf	(??_find_volume+22)& (0+255),w,b
 14101  00BAB6  0E52               	movlw	82
 14102  00BAB8  B4D8               	btfsc	status,2,c
 14103  00BABA  1997               	xorwf	(??_find_volume+23)& (0+255),w,b
 14104  00BABC  0E61               	movlw	97
 14105  00BABE  B4D8               	btfsc	status,2,c
 14106  00BAC0  1998               	xorwf	(??_find_volume+24)& (0+255),w,b
 14107  00BAC2  A4D8               	btfss	status,2,c
 14108  00BAC4  D1DE               	goto	l8465
 14109                           
 14110                           ; BSR set to: 0
 14111  00BAC6  0100               	movlb	0	; () banked
 14112  00BAC8  EE22 F017          	lfsr	2,535
 14113  00BACC  0100               	movlb	0	; () banked
 14114  00BACE  51D2               	movf	find_volume@fs& (0+255),w,b
 14115  00BAD0  26D9               	addwf	fsr2l,f,c
 14116  00BAD2  0100               	movlb	0	; () banked
 14117  00BAD4  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14118  00BAD6  22DA               	addwfc	fsr2h,f,c
 14119  00BAD8  50DF               	movf	indf2,w,c
 14120  00BADA  0100               	movlb	0	; () banked
 14121  00BADC  6F80               	movwf	??_find_volume& (0+255),b
 14122  00BADE  0100               	movlb	0	; () banked
 14123  00BAE0  5180               	movf	??_find_volume& (0+255),w,b
 14124  00BAE2  0100               	movlb	0	; () banked
 14125  00BAE4  6F82               	movwf	(??_find_volume+2)& (0+255),b
 14126  00BAE6  6B81               	clrf	(??_find_volume+1)& (0+255),b
 14127  00BAE8  0100               	movlb	0	; () banked
 14128  00BAEA  EE22 F018          	lfsr	2,536
 14129  00BAEE  0100               	movlb	0	; () banked
 14130  00BAF0  51D2               	movf	find_volume@fs& (0+255),w,b
 14131  00BAF2  26D9               	addwf	fsr2l,f,c
 14132  00BAF4  0100               	movlb	0	; () banked
 14133  00BAF6  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14134  00BAF8  22DA               	addwfc	fsr2h,f,c
 14135  00BAFA  50DF               	movf	indf2,w,c
 14136  00BAFC  0100               	movlb	0	; () banked
 14137  00BAFE  6F83               	movwf	(??_find_volume+3)& (0+255),b
 14138  00BB00  C083  F084         	movff	??_find_volume+3,??_find_volume+4
 14139  00BB04  0100               	movlb	0	; () banked
 14140  00BB06  6B85               	clrf	(??_find_volume+5)& (0+255),b
 14141  00BB08  6B86               	clrf	(??_find_volume+6)& (0+255),b
 14142  00BB0A  6B87               	clrf	(??_find_volume+7)& (0+255),b
 14143  00BB0C  C085  F087         	movff	??_find_volume+5,??_find_volume+7
 14144  00BB10  C084  F086         	movff	??_find_volume+4,??_find_volume+6
 14145  00BB14  0100               	movlb	0	; () banked
 14146  00BB16  6B85               	clrf	(??_find_volume+5)& (0+255),b
 14147  00BB18  6B84               	clrf	(??_find_volume+4)& (0+255),b
 14148  00BB1A  0100               	movlb	0	; () banked
 14149  00BB1C  EE22 F019          	lfsr	2,537
 14150  00BB20  0100               	movlb	0	; () banked
 14151  00BB22  51D2               	movf	find_volume@fs& (0+255),w,b
 14152  00BB24  26D9               	addwf	fsr2l,f,c
 14153  00BB26  0100               	movlb	0	; () banked
 14154  00BB28  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14155  00BB2A  22DA               	addwfc	fsr2h,f,c
 14156  00BB2C  50DF               	movf	indf2,w,c
 14157  00BB2E  0100               	movlb	0	; () banked
 14158  00BB30  6F88               	movwf	(??_find_volume+8)& (0+255),b
 14159  00BB32  C088  F089         	movff	??_find_volume+8,??_find_volume+9
 14160  00BB36  0100               	movlb	0	; () banked
 14161  00BB38  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 14162  00BB3A  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 14163  00BB3C  6B8C               	clrf	(??_find_volume+12)& (0+255),b
 14164  00BB3E  C089  F08C         	movff	??_find_volume+9,??_find_volume+12
 14165  00BB42  0100               	movlb	0	; () banked
 14166  00BB44  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 14167  00BB46  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 14168  00BB48  6B89               	clrf	(??_find_volume+9)& (0+255),b
 14169  00BB4A  0100               	movlb	0	; () banked
 14170  00BB4C  5184               	movf	(??_find_volume+4)& (0+255),w,b
 14171  00BB4E  0100               	movlb	0	; () banked
 14172  00BB50  1189               	iorwf	(??_find_volume+9)& (0+255),w,b
 14173  00BB52  0100               	movlb	0	; () banked
 14174  00BB54  6F8D               	movwf	(??_find_volume+13)& (0+255),b
 14175  00BB56  0100               	movlb	0	; () banked
 14176  00BB58  5185               	movf	(??_find_volume+5)& (0+255),w,b
 14177  00BB5A  0100               	movlb	0	; () banked
 14178  00BB5C  118A               	iorwf	(??_find_volume+10)& (0+255),w,b
 14179  00BB5E  0100               	movlb	0	; () banked
 14180  00BB60  6F8E               	movwf	(??_find_volume+14)& (0+255),b
 14181  00BB62  0100               	movlb	0	; () banked
 14182  00BB64  5186               	movf	(??_find_volume+6)& (0+255),w,b
 14183  00BB66  0100               	movlb	0	; () banked
 14184  00BB68  118B               	iorwf	(??_find_volume+11)& (0+255),w,b
 14185  00BB6A  0100               	movlb	0	; () banked
 14186  00BB6C  6F8F               	movwf	(??_find_volume+15)& (0+255),b
 14187  00BB6E  0100               	movlb	0	; () banked
 14188  00BB70  5187               	movf	(??_find_volume+7)& (0+255),w,b
 14189  00BB72  0100               	movlb	0	; () banked
 14190  00BB74  118C               	iorwf	(??_find_volume+12)& (0+255),w,b
 14191  00BB76  0100               	movlb	0	; () banked
 14192  00BB78  6F90               	movwf	(??_find_volume+16)& (0+255),b
 14193  00BB7A  0100               	movlb	0	; () banked
 14194  00BB7C  5181               	movf	(??_find_volume+1)& (0+255),w,b
 14195  00BB7E  0100               	movlb	0	; () banked
 14196  00BB80  118D               	iorwf	(??_find_volume+13)& (0+255),w,b
 14197  00BB82  0100               	movlb	0	; () banked
 14198  00BB84  6F91               	movwf	(??_find_volume+17)& (0+255),b
 14199  00BB86  0100               	movlb	0	; () banked
 14200  00BB88  5182               	movf	(??_find_volume+2)& (0+255),w,b
 14201  00BB8A  0100               	movlb	0	; () banked
 14202  00BB8C  118E               	iorwf	(??_find_volume+14)& (0+255),w,b
 14203  00BB8E  0100               	movlb	0	; () banked
 14204  00BB90  6F92               	movwf	(??_find_volume+18)& (0+255),b
 14205  00BB92  0E00               	movlw	0
 14206  00BB94  0100               	movlb	0	; () banked
 14207  00BB96  118F               	iorwf	(??_find_volume+15)& (0+255),w,b
 14208  00BB98  0100               	movlb	0	; () banked
 14209  00BB9A  6F93               	movwf	(??_find_volume+19)& (0+255),b
 14210  00BB9C  0E00               	movlw	0
 14211  00BB9E  0100               	movlb	0	; () banked
 14212  00BBA0  1190               	iorwf	(??_find_volume+16)& (0+255),w,b
 14213  00BBA2  0100               	movlb	0	; () banked
 14214  00BBA4  6F94               	movwf	(??_find_volume+20)& (0+255),b
 14215  00BBA6  0100               	movlb	0	; () banked
 14216  00BBA8  EE22 F016          	lfsr	2,534
 14217  00BBAC  0100               	movlb	0	; () banked
 14218  00BBAE  51D2               	movf	find_volume@fs& (0+255),w,b
 14219  00BBB0  26D9               	addwf	fsr2l,f,c
 14220  00BBB2  0100               	movlb	0	; () banked
 14221  00BBB4  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14222  00BBB6  22DA               	addwfc	fsr2h,f,c
 14223  00BBB8  50DF               	movf	indf2,w,c
 14224  00BBBA  0100               	movlb	0	; () banked
 14225  00BBBC  6F95               	movwf	(??_find_volume+21)& (0+255),b
 14226  00BBBE  0100               	movlb	0	; () banked
 14227  00BBC0  5195               	movf	(??_find_volume+21)& (0+255),w,b
 14228  00BBC2  0100               	movlb	0	; () banked
 14229  00BBC4  1191               	iorwf	(??_find_volume+17)& (0+255),w,b
 14230  00BBC6  0100               	movlb	0	; () banked
 14231  00BBC8  6F96               	movwf	(??_find_volume+22)& (0+255),b
 14232  00BBCA  0100               	movlb	0	; () banked
 14233  00BBCC  5192               	movf	(??_find_volume+18)& (0+255),w,b
 14234  00BBCE  0100               	movlb	0	; () banked
 14235  00BBD0  6F97               	movwf	(??_find_volume+23)& (0+255),b
 14236  00BBD2  0100               	movlb	0	; () banked
 14237  00BBD4  5193               	movf	(??_find_volume+19)& (0+255),w,b
 14238  00BBD6  0100               	movlb	0	; () banked
 14239  00BBD8  6F98               	movwf	(??_find_volume+24)& (0+255),b
 14240  00BBDA  0100               	movlb	0	; () banked
 14241  00BBDC  5194               	movf	(??_find_volume+20)& (0+255),w,b
 14242  00BBDE  0100               	movlb	0	; () banked
 14243  00BBE0  6F99               	movwf	(??_find_volume+25)& (0+255),b
 14244  00BBE2  0100               	movlb	0	; () banked
 14245  00BBE4  5199               	movf	(??_find_volume+25)& (0+255),w,b
 14246  00BBE6  0A61               	xorlw	97
 14247  00BBE8  0E72               	movlw	114
 14248  00BBEA  B4D8               	btfsc	status,2,c
 14249  00BBEC  1996               	xorwf	(??_find_volume+22)& (0+255),w,b
 14250  00BBEE  0E72               	movlw	114
 14251  00BBF0  B4D8               	btfsc	status,2,c
 14252  00BBF2  1997               	xorwf	(??_find_volume+23)& (0+255),w,b
 14253  00BBF4  0E41               	movlw	65
 14254  00BBF6  B4D8               	btfsc	status,2,c
 14255  00BBF8  1998               	xorwf	(??_find_volume+24)& (0+255),w,b
 14256  00BBFA  A4D8               	btfss	status,2,c
 14257  00BBFC  D142               	goto	l8465
 14258                           
 14259                           ; BSR set to: 0
 14260                           ;ff.c: 2408: {
 14261                           ;ff.c: 2410: fs->free_clust = (DWORD)(((DWORD)*((BYTE*)(fs->win + 488)+3)<<24)|((DWORD)*
      +                          ((BYTE*)(fs->win + 488)+2)<<16)|((WORD)*((BYTE*)(fs->win + 488)+1)<<8)|*(BYTE*)(fs->win 
      +                          + 488));
 14262  00BBFE  0100               	movlb	0	; () banked
 14263  00BC00  EE22 F01B          	lfsr	2,539
 14264  00BC04  0100               	movlb	0	; () banked
 14265  00BC06  51D2               	movf	find_volume@fs& (0+255),w,b
 14266  00BC08  26D9               	addwf	fsr2l,f,c
 14267  00BC0A  0100               	movlb	0	; () banked
 14268  00BC0C  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14269  00BC0E  22DA               	addwfc	fsr2h,f,c
 14270  00BC10  50DF               	movf	indf2,w,c
 14271  00BC12  0100               	movlb	0	; () banked
 14272  00BC14  6F80               	movwf	??_find_volume& (0+255),b
 14273  00BC16  0100               	movlb	0	; () banked
 14274  00BC18  5180               	movf	??_find_volume& (0+255),w,b
 14275  00BC1A  0100               	movlb	0	; () banked
 14276  00BC1C  6F82               	movwf	(??_find_volume+2)& (0+255),b
 14277  00BC1E  6B81               	clrf	(??_find_volume+1)& (0+255),b
 14278  00BC20  0100               	movlb	0	; () banked
 14279  00BC22  EE22 F01C          	lfsr	2,540
 14280  00BC26  0100               	movlb	0	; () banked
 14281  00BC28  51D2               	movf	find_volume@fs& (0+255),w,b
 14282  00BC2A  26D9               	addwf	fsr2l,f,c
 14283  00BC2C  0100               	movlb	0	; () banked
 14284  00BC2E  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14285  00BC30  22DA               	addwfc	fsr2h,f,c
 14286  00BC32  50DF               	movf	indf2,w,c
 14287  00BC34  0100               	movlb	0	; () banked
 14288  00BC36  6F83               	movwf	(??_find_volume+3)& (0+255),b
 14289  00BC38  C083  F084         	movff	??_find_volume+3,??_find_volume+4
 14290  00BC3C  0100               	movlb	0	; () banked
 14291  00BC3E  6B85               	clrf	(??_find_volume+5)& (0+255),b
 14292  00BC40  6B86               	clrf	(??_find_volume+6)& (0+255),b
 14293  00BC42  6B87               	clrf	(??_find_volume+7)& (0+255),b
 14294  00BC44  C085  F087         	movff	??_find_volume+5,??_find_volume+7
 14295  00BC48  C084  F086         	movff	??_find_volume+4,??_find_volume+6
 14296  00BC4C  0100               	movlb	0	; () banked
 14297  00BC4E  6B85               	clrf	(??_find_volume+5)& (0+255),b
 14298  00BC50  6B84               	clrf	(??_find_volume+4)& (0+255),b
 14299  00BC52  0100               	movlb	0	; () banked
 14300  00BC54  EE22 F01D          	lfsr	2,541
 14301  00BC58  0100               	movlb	0	; () banked
 14302  00BC5A  51D2               	movf	find_volume@fs& (0+255),w,b
 14303  00BC5C  26D9               	addwf	fsr2l,f,c
 14304  00BC5E  0100               	movlb	0	; () banked
 14305  00BC60  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14306  00BC62  22DA               	addwfc	fsr2h,f,c
 14307  00BC64  50DF               	movf	indf2,w,c
 14308  00BC66  0100               	movlb	0	; () banked
 14309  00BC68  6F88               	movwf	(??_find_volume+8)& (0+255),b
 14310  00BC6A  C088  F089         	movff	??_find_volume+8,??_find_volume+9
 14311  00BC6E  0100               	movlb	0	; () banked
 14312  00BC70  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 14313  00BC72  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 14314  00BC74  6B8C               	clrf	(??_find_volume+12)& (0+255),b
 14315  00BC76  C089  F08C         	movff	??_find_volume+9,??_find_volume+12
 14316  00BC7A  0100               	movlb	0	; () banked
 14317  00BC7C  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 14318  00BC7E  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 14319  00BC80  6B89               	clrf	(??_find_volume+9)& (0+255),b
 14320  00BC82  0100               	movlb	0	; () banked
 14321  00BC84  5184               	movf	(??_find_volume+4)& (0+255),w,b
 14322  00BC86  0100               	movlb	0	; () banked
 14323  00BC88  1189               	iorwf	(??_find_volume+9)& (0+255),w,b
 14324  00BC8A  0100               	movlb	0	; () banked
 14325  00BC8C  6F8D               	movwf	(??_find_volume+13)& (0+255),b
 14326  00BC8E  0100               	movlb	0	; () banked
 14327  00BC90  5185               	movf	(??_find_volume+5)& (0+255),w,b
 14328  00BC92  0100               	movlb	0	; () banked
 14329  00BC94  118A               	iorwf	(??_find_volume+10)& (0+255),w,b
 14330  00BC96  0100               	movlb	0	; () banked
 14331  00BC98  6F8E               	movwf	(??_find_volume+14)& (0+255),b
 14332  00BC9A  0100               	movlb	0	; () banked
 14333  00BC9C  5186               	movf	(??_find_volume+6)& (0+255),w,b
 14334  00BC9E  0100               	movlb	0	; () banked
 14335  00BCA0  118B               	iorwf	(??_find_volume+11)& (0+255),w,b
 14336  00BCA2  0100               	movlb	0	; () banked
 14337  00BCA4  6F8F               	movwf	(??_find_volume+15)& (0+255),b
 14338  00BCA6  0100               	movlb	0	; () banked
 14339  00BCA8  5187               	movf	(??_find_volume+7)& (0+255),w,b
 14340  00BCAA  0100               	movlb	0	; () banked
 14341  00BCAC  118C               	iorwf	(??_find_volume+12)& (0+255),w,b
 14342  00BCAE  0100               	movlb	0	; () banked
 14343  00BCB0  6F90               	movwf	(??_find_volume+16)& (0+255),b
 14344  00BCB2  0100               	movlb	0	; () banked
 14345  00BCB4  5181               	movf	(??_find_volume+1)& (0+255),w,b
 14346  00BCB6  0100               	movlb	0	; () banked
 14347  00BCB8  118D               	iorwf	(??_find_volume+13)& (0+255),w,b
 14348  00BCBA  0100               	movlb	0	; () banked
 14349  00BCBC  6F91               	movwf	(??_find_volume+17)& (0+255),b
 14350  00BCBE  0100               	movlb	0	; () banked
 14351  00BCC0  5182               	movf	(??_find_volume+2)& (0+255),w,b
 14352  00BCC2  0100               	movlb	0	; () banked
 14353  00BCC4  118E               	iorwf	(??_find_volume+14)& (0+255),w,b
 14354  00BCC6  0100               	movlb	0	; () banked
 14355  00BCC8  6F92               	movwf	(??_find_volume+18)& (0+255),b
 14356  00BCCA  0E00               	movlw	0
 14357  00BCCC  0100               	movlb	0	; () banked
 14358  00BCCE  118F               	iorwf	(??_find_volume+15)& (0+255),w,b
 14359  00BCD0  0100               	movlb	0	; () banked
 14360  00BCD2  6F93               	movwf	(??_find_volume+19)& (0+255),b
 14361  00BCD4  0E00               	movlw	0
 14362  00BCD6  0100               	movlb	0	; () banked
 14363  00BCD8  1190               	iorwf	(??_find_volume+16)& (0+255),w,b
 14364  00BCDA  0100               	movlb	0	; () banked
 14365  00BCDC  6F94               	movwf	(??_find_volume+20)& (0+255),b
 14366  00BCDE  0100               	movlb	0	; () banked
 14367  00BCE0  EE22 F01A          	lfsr	2,538
 14368  00BCE4  0100               	movlb	0	; () banked
 14369  00BCE6  51D2               	movf	find_volume@fs& (0+255),w,b
 14370  00BCE8  26D9               	addwf	fsr2l,f,c
 14371  00BCEA  0100               	movlb	0	; () banked
 14372  00BCEC  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14373  00BCEE  22DA               	addwfc	fsr2h,f,c
 14374  00BCF0  50DF               	movf	indf2,w,c
 14375  00BCF2  0100               	movlb	0	; () banked
 14376  00BCF4  6F95               	movwf	(??_find_volume+21)& (0+255),b
 14377  00BCF6  0100               	movlb	0	; () banked
 14378  00BCF8  5195               	movf	(??_find_volume+21)& (0+255),w,b
 14379  00BCFA  0100               	movlb	0	; () banked
 14380  00BCFC  1191               	iorwf	(??_find_volume+17)& (0+255),w,b
 14381  00BCFE  0100               	movlb	0	; () banked
 14382  00BD00  6F96               	movwf	(??_find_volume+22)& (0+255),b
 14383  00BD02  0100               	movlb	0	; () banked
 14384  00BD04  5192               	movf	(??_find_volume+18)& (0+255),w,b
 14385  00BD06  0100               	movlb	0	; () banked
 14386  00BD08  6F97               	movwf	(??_find_volume+23)& (0+255),b
 14387  00BD0A  0100               	movlb	0	; () banked
 14388  00BD0C  5193               	movf	(??_find_volume+19)& (0+255),w,b
 14389  00BD0E  0100               	movlb	0	; () banked
 14390  00BD10  6F98               	movwf	(??_find_volume+24)& (0+255),b
 14391  00BD12  0100               	movlb	0	; () banked
 14392  00BD14  5194               	movf	(??_find_volume+20)& (0+255),w,b
 14393  00BD16  0100               	movlb	0	; () banked
 14394  00BD18  6F99               	movwf	(??_find_volume+25)& (0+255),b
 14395  00BD1A  0100               	movlb	0	; () banked
 14396  00BD1C  EE20 F00E          	lfsr	2,14
 14397  00BD20  0100               	movlb	0	; () banked
 14398  00BD22  51D2               	movf	find_volume@fs& (0+255),w,b
 14399  00BD24  26D9               	addwf	fsr2l,f,c
 14400  00BD26  0100               	movlb	0	; () banked
 14401  00BD28  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14402  00BD2A  22DA               	addwfc	fsr2h,f,c
 14403  00BD2C  C096  FFDE         	movff	??_find_volume+22,postinc2
 14404  00BD30  C097  FFDE         	movff	??_find_volume+23,postinc2
 14405  00BD34  C098  FFDE         	movff	??_find_volume+24,postinc2
 14406  00BD38  C099  FFDD         	movff	??_find_volume+25,postdec2
 14407  00BD3C  06D9               	decf	fsr2l,f,c
 14408  00BD3E  06D9               	decf	fsr2l,f,c
 14409                           
 14410                           ;ff.c: 2413: fs->last_clust = (DWORD)(((DWORD)*((BYTE*)(fs->win + 492)+3)<<24)|((DWORD)*
      +                          ((BYTE*)(fs->win + 492)+2)<<16)|((WORD)*((BYTE*)(fs->win + 492)+1)<<8)|*(BYTE*)(fs->win 
      +                          + 492));
 14411  00BD40  0100               	movlb	0	; () banked
 14412  00BD42  EE22 F01F          	lfsr	2,543
 14413  00BD46  0100               	movlb	0	; () banked
 14414  00BD48  51D2               	movf	find_volume@fs& (0+255),w,b
 14415  00BD4A  26D9               	addwf	fsr2l,f,c
 14416  00BD4C  0100               	movlb	0	; () banked
 14417  00BD4E  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14418  00BD50  22DA               	addwfc	fsr2h,f,c
 14419  00BD52  50DF               	movf	indf2,w,c
 14420  00BD54  0100               	movlb	0	; () banked
 14421  00BD56  6F80               	movwf	??_find_volume& (0+255),b
 14422  00BD58  0100               	movlb	0	; () banked
 14423  00BD5A  5180               	movf	??_find_volume& (0+255),w,b
 14424  00BD5C  0100               	movlb	0	; () banked
 14425  00BD5E  6F82               	movwf	(??_find_volume+2)& (0+255),b
 14426  00BD60  6B81               	clrf	(??_find_volume+1)& (0+255),b
 14427  00BD62  0100               	movlb	0	; () banked
 14428  00BD64  EE22 F020          	lfsr	2,544
 14429  00BD68  0100               	movlb	0	; () banked
 14430  00BD6A  51D2               	movf	find_volume@fs& (0+255),w,b
 14431  00BD6C  26D9               	addwf	fsr2l,f,c
 14432  00BD6E  0100               	movlb	0	; () banked
 14433  00BD70  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14434  00BD72  22DA               	addwfc	fsr2h,f,c
 14435  00BD74  50DF               	movf	indf2,w,c
 14436  00BD76  0100               	movlb	0	; () banked
 14437  00BD78  6F83               	movwf	(??_find_volume+3)& (0+255),b
 14438  00BD7A  C083  F084         	movff	??_find_volume+3,??_find_volume+4
 14439  00BD7E  0100               	movlb	0	; () banked
 14440  00BD80  6B85               	clrf	(??_find_volume+5)& (0+255),b
 14441  00BD82  6B86               	clrf	(??_find_volume+6)& (0+255),b
 14442  00BD84  6B87               	clrf	(??_find_volume+7)& (0+255),b
 14443  00BD86  C085  F087         	movff	??_find_volume+5,??_find_volume+7
 14444  00BD8A  C084  F086         	movff	??_find_volume+4,??_find_volume+6
 14445  00BD8E  0100               	movlb	0	; () banked
 14446  00BD90  6B85               	clrf	(??_find_volume+5)& (0+255),b
 14447  00BD92  6B84               	clrf	(??_find_volume+4)& (0+255),b
 14448  00BD94  0100               	movlb	0	; () banked
 14449  00BD96  EE22 F021          	lfsr	2,545
 14450  00BD9A  0100               	movlb	0	; () banked
 14451  00BD9C  51D2               	movf	find_volume@fs& (0+255),w,b
 14452  00BD9E  26D9               	addwf	fsr2l,f,c
 14453  00BDA0  0100               	movlb	0	; () banked
 14454  00BDA2  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14455  00BDA4  22DA               	addwfc	fsr2h,f,c
 14456  00BDA6  50DF               	movf	indf2,w,c
 14457  00BDA8  0100               	movlb	0	; () banked
 14458  00BDAA  6F88               	movwf	(??_find_volume+8)& (0+255),b
 14459  00BDAC  C088  F089         	movff	??_find_volume+8,??_find_volume+9
 14460  00BDB0  0100               	movlb	0	; () banked
 14461  00BDB2  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 14462  00BDB4  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 14463  00BDB6  6B8C               	clrf	(??_find_volume+12)& (0+255),b
 14464  00BDB8  C089  F08C         	movff	??_find_volume+9,??_find_volume+12
 14465  00BDBC  0100               	movlb	0	; () banked
 14466  00BDBE  6B8B               	clrf	(??_find_volume+11)& (0+255),b
 14467  00BDC0  6B8A               	clrf	(??_find_volume+10)& (0+255),b
 14468  00BDC2  6B89               	clrf	(??_find_volume+9)& (0+255),b
 14469  00BDC4  0100               	movlb	0	; () banked
 14470  00BDC6  5184               	movf	(??_find_volume+4)& (0+255),w,b
 14471  00BDC8  0100               	movlb	0	; () banked
 14472  00BDCA  1189               	iorwf	(??_find_volume+9)& (0+255),w,b
 14473  00BDCC  0100               	movlb	0	; () banked
 14474  00BDCE  6F8D               	movwf	(??_find_volume+13)& (0+255),b
 14475  00BDD0  0100               	movlb	0	; () banked
 14476  00BDD2  5185               	movf	(??_find_volume+5)& (0+255),w,b
 14477  00BDD4  0100               	movlb	0	; () banked
 14478  00BDD6  118A               	iorwf	(??_find_volume+10)& (0+255),w,b
 14479  00BDD8  0100               	movlb	0	; () banked
 14480  00BDDA  6F8E               	movwf	(??_find_volume+14)& (0+255),b
 14481  00BDDC  0100               	movlb	0	; () banked
 14482  00BDDE  5186               	movf	(??_find_volume+6)& (0+255),w,b
 14483  00BDE0  0100               	movlb	0	; () banked
 14484  00BDE2  118B               	iorwf	(??_find_volume+11)& (0+255),w,b
 14485  00BDE4  0100               	movlb	0	; () banked
 14486  00BDE6  6F8F               	movwf	(??_find_volume+15)& (0+255),b
 14487  00BDE8  0100               	movlb	0	; () banked
 14488  00BDEA  5187               	movf	(??_find_volume+7)& (0+255),w,b
 14489  00BDEC  0100               	movlb	0	; () banked
 14490  00BDEE  118C               	iorwf	(??_find_volume+12)& (0+255),w,b
 14491  00BDF0  0100               	movlb	0	; () banked
 14492  00BDF2  6F90               	movwf	(??_find_volume+16)& (0+255),b
 14493  00BDF4  0100               	movlb	0	; () banked
 14494  00BDF6  5181               	movf	(??_find_volume+1)& (0+255),w,b
 14495  00BDF8  0100               	movlb	0	; () banked
 14496  00BDFA  118D               	iorwf	(??_find_volume+13)& (0+255),w,b
 14497  00BDFC  0100               	movlb	0	; () banked
 14498  00BDFE  6F91               	movwf	(??_find_volume+17)& (0+255),b
 14499  00BE00  0100               	movlb	0	; () banked
 14500  00BE02  5182               	movf	(??_find_volume+2)& (0+255),w,b
 14501  00BE04  0100               	movlb	0	; () banked
 14502  00BE06  118E               	iorwf	(??_find_volume+14)& (0+255),w,b
 14503  00BE08  0100               	movlb	0	; () banked
 14504  00BE0A  6F92               	movwf	(??_find_volume+18)& (0+255),b
 14505  00BE0C  0E00               	movlw	0
 14506  00BE0E  0100               	movlb	0	; () banked
 14507  00BE10  118F               	iorwf	(??_find_volume+15)& (0+255),w,b
 14508  00BE12  0100               	movlb	0	; () banked
 14509  00BE14  6F93               	movwf	(??_find_volume+19)& (0+255),b
 14510  00BE16  0E00               	movlw	0
 14511  00BE18  0100               	movlb	0	; () banked
 14512  00BE1A  1190               	iorwf	(??_find_volume+16)& (0+255),w,b
 14513  00BE1C  0100               	movlb	0	; () banked
 14514  00BE1E  6F94               	movwf	(??_find_volume+20)& (0+255),b
 14515  00BE20  0100               	movlb	0	; () banked
 14516  00BE22  EE22 F01E          	lfsr	2,542
 14517  00BE26  0100               	movlb	0	; () banked
 14518  00BE28  51D2               	movf	find_volume@fs& (0+255),w,b
 14519  00BE2A  26D9               	addwf	fsr2l,f,c
 14520  00BE2C  0100               	movlb	0	; () banked
 14521  00BE2E  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14522  00BE30  22DA               	addwfc	fsr2h,f,c
 14523  00BE32  50DF               	movf	indf2,w,c
 14524  00BE34  0100               	movlb	0	; () banked
 14525  00BE36  6F95               	movwf	(??_find_volume+21)& (0+255),b
 14526  00BE38  0100               	movlb	0	; () banked
 14527  00BE3A  5195               	movf	(??_find_volume+21)& (0+255),w,b
 14528  00BE3C  0100               	movlb	0	; () banked
 14529  00BE3E  1191               	iorwf	(??_find_volume+17)& (0+255),w,b
 14530  00BE40  0100               	movlb	0	; () banked
 14531  00BE42  6F96               	movwf	(??_find_volume+22)& (0+255),b
 14532  00BE44  0100               	movlb	0	; () banked
 14533  00BE46  5192               	movf	(??_find_volume+18)& (0+255),w,b
 14534  00BE48  0100               	movlb	0	; () banked
 14535  00BE4A  6F97               	movwf	(??_find_volume+23)& (0+255),b
 14536  00BE4C  0100               	movlb	0	; () banked
 14537  00BE4E  5193               	movf	(??_find_volume+19)& (0+255),w,b
 14538  00BE50  0100               	movlb	0	; () banked
 14539  00BE52  6F98               	movwf	(??_find_volume+24)& (0+255),b
 14540  00BE54  0100               	movlb	0	; () banked
 14541  00BE56  5194               	movf	(??_find_volume+20)& (0+255),w,b
 14542  00BE58  0100               	movlb	0	; () banked
 14543  00BE5A  6F99               	movwf	(??_find_volume+25)& (0+255),b
 14544  00BE5C  0100               	movlb	0	; () banked
 14545  00BE5E  EE20 F00A          	lfsr	2,10
 14546  00BE62  0100               	movlb	0	; () banked
 14547  00BE64  51D2               	movf	find_volume@fs& (0+255),w,b
 14548  00BE66  26D9               	addwf	fsr2l,f,c
 14549  00BE68  0100               	movlb	0	; () banked
 14550  00BE6A  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14551  00BE6C  22DA               	addwfc	fsr2h,f,c
 14552  00BE6E  C096  FFDE         	movff	??_find_volume+22,postinc2
 14553  00BE72  C097  FFDE         	movff	??_find_volume+23,postinc2
 14554  00BE76  C098  FFDE         	movff	??_find_volume+24,postinc2
 14555  00BE7A  C099  FFDD         	movff	??_find_volume+25,postdec2
 14556  00BE7E  06D9               	decf	fsr2l,f,c
 14557  00BE80  06D9               	decf	fsr2l,f,c
 14558  00BE82                     l8465:
 14559                           
 14560                           ;ff.c: 2415: }
 14561                           ;ff.c: 2416: }
 14562                           ;ff.c: 2419: fs->fs_type = fmt;
 14563  00BE82  C0D2  FFD9         	movff	find_volume@fs,fsr2l
 14564  00BE86  C0D3  FFDA         	movff	find_volume@fs+1,fsr2h
 14565  00BE8A  0100               	movlb	0	; () banked
 14566  00BE8C  C0D1  FFDF         	movff	find_volume@fmt,indf2
 14567                           
 14568                           ; BSR set to: 0
 14569                           ;ff.c: 2420: fs->id = ++Fsid;
 14570  00BE90  0101               	movlb	1	; () banked
 14571  00BE92  4B57               	infsnz	_Fsid& (0+255),f,b
 14572  00BE94  2B58               	incf	(_Fsid+1)& (0+255),f,b
 14573  00BE96  0100               	movlb	0	; () banked
 14574  00BE98  EE20 F006          	lfsr	2,6
 14575  00BE9C  0100               	movlb	0	; () banked
 14576  00BE9E  51D2               	movf	find_volume@fs& (0+255),w,b
 14577  00BEA0  26D9               	addwf	fsr2l,f,c
 14578  00BEA2  0100               	movlb	0	; () banked
 14579  00BEA4  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14580  00BEA6  22DA               	addwfc	fsr2h,f,c
 14581  00BEA8  0101               	movlb	1	; () banked
 14582  00BEAA  C157  FFDE         	movff	_Fsid,postinc2
 14583  00BEAE  0101               	movlb	1	; () banked
 14584  00BEB0  C158  FFDD         	movff	_Fsid+1,postdec2
 14585                           
 14586                           ; BSR set to: 1
 14587                           ;ff.c: 2422: fs->cdir = 0;
 14588  00BEB4  0100               	movlb	0	; () banked
 14589  00BEB6  EE20 F012          	lfsr	2,18
 14590  00BEBA  0100               	movlb	0	; () banked
 14591  00BEBC  51D2               	movf	find_volume@fs& (0+255),w,b
 14592  00BEBE  26D9               	addwf	fsr2l,f,c
 14593  00BEC0  0100               	movlb	0	; () banked
 14594  00BEC2  51D3               	movf	(find_volume@fs+1)& (0+255),w,b
 14595  00BEC4  22DA               	addwfc	fsr2h,f,c
 14596  00BEC6  6ADE               	clrf	postinc2,c
 14597  00BEC8  6ADE               	clrf	postinc2,c
 14598  00BECA  6ADE               	clrf	postinc2,c
 14599  00BECC  6ADD               	clrf	postdec2,c
 14600  00BECE                     L20:
 14601                           
 14602                           ; BSR set to: 0
 14603                           ;ff.c: 2428: return FR_OK;
 14604  00BECE  0E00               	movlw	0
 14605  00BED0                     l693:
 14606  00BED0  0012               	return	
 14607  00BED2                     __end_of_find_volume:
 14608                           	opt stack 0
 14609                           tblptru	equ	0xFF8
 14610                           tblptrh	equ	0xFF7
 14611                           tblptrl	equ	0xFF6
 14612                           tablat	equ	0xFF5
 14613                           prodh	equ	0xFF4
 14614                           prodl	equ	0xFF3
 14615                           indf0	equ	0xFEF
 14616                           postinc0	equ	0xFEE
 14617                           fsr0h	equ	0xFEA
 14618                           fsr0l	equ	0xFE9
 14619                           wreg	equ	0xFE8
 14620                           indf1	equ	0xFE7
 14621                           postinc1	equ	0xFE6
 14622                           postdec1	equ	0xFE5
 14623                           fsr1h	equ	0xFE2
 14624                           fsr1l	equ	0xFE1
 14625                           indf2	equ	0xFDF
 14626                           postinc2	equ	0xFDE
 14627                           postdec2	equ	0xFDD
 14628                           plusw2	equ	0xFDB
 14629                           fsr2h	equ	0xFDA
 14630                           fsr2l	equ	0xFD9
 14631                           status	equ	0xFD8
 14632                           
 14633 ;; *************** function _get_ldnumber *****************
 14634 ;; Defined at:
 14635 ;;		line 2160 in file "ff.c"
 14636 ;; Parameters:    Size  Location     Type
 14637 ;;  path            2    0[COMRAM] PTR PTR const unsigned c
 14638 ;;		 -> f_mkfs@path(2), f_setlabel@label(2), f_getlabel@path(2), f_utime@path(2), 
 14639 ;;		 -> f_rename@path_new(2), f_rename@path_old(2), f_chmod@path(2), f_mkdir@path(2), 
 14640 ;;		 -> f_unlink@path(2), f_getfree@path(2), f_stat@path(2), f_opendir@path(2), 
 14641 ;;		 -> f_getcwd@buff(2), f_chdir@path(2), f_chdrive@path(2), f_open@path(2), 
 14642 ;;		 -> f_mount@path(2), f_mount@rp(2), 
 14643 ;; Auto vars:     Size  Location     Type
 14644 ;;  tt              2   16[COMRAM] PTR const unsigned char 
 14645 ;;		 -> STR_5(9), STR_3(1), 
 14646 ;;  i               2   14[COMRAM] unsigned int 
 14647 ;;  tp              2   12[COMRAM] PTR const unsigned char 
 14648 ;;		 -> STR_5(9), STR_3(1), 
 14649 ;;  vol             2    8[COMRAM] int 
 14650 ;;  sp              2    4[COMRAM] PTR const unsigned char 
 14651 ;;		 -> STR_18(5), STR_17(5), STR_16(5), STR_15(4), 
 14652 ;;		 -> STR_14(4), STR_13(3), STR_12(5), STR_11(4), 
 14653 ;;  tc              1   11[COMRAM] unsigned char 
 14654 ;;  c               1   10[COMRAM] unsigned char 
 14655 ;; Return value:  Size  Location     Type
 14656 ;;                  2    0[COMRAM] int 
 14657 ;; Registers used:
 14658 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
 14659 ;; Tracked objects:
 14660 ;;		On entry : 0/0
 14661 ;;		On exit  : 0/0
 14662 ;;		Unchanged: 0/0
 14663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 14664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14665 ;;      Locals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14666 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14667 ;;      Totals:        18       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 14668 ;;Total ram usage:       18 bytes
 14669 ;; Hardware stack levels used:    1
 14670 ;; This function calls:
 14671 ;;		Nothing
 14672 ;; This function is called by:
 14673 ;;		_find_volume
 14674 ;;		_f_mount
 14675 ;;		_f_chdrive
 14676 ;;		_f_rename
 14677 ;;		_f_mkfs
 14678 ;; This function uses a non-reentrant model
 14679 ;;
 14680                           
 14681                           	psect	text23
 14682  0064A8                     __ptext23:
 14683                           	opt stack 0
 14684  0064A8                     _get_ldnumber:
 14685                           	opt stack 28
 14686                           
 14687                           ;ff.c: 2164: ld1=ld2=ld3=0;
 14688                           
 14689                           ;incstack = 0
 14690  0064A8  0E00               	movlw	0
 14691  0064AA  0100               	movlb	0	; () banked
 14692  0064AC  6FFE               	movwf	_ld3& (0+255),b
 14693  0064AE  C0FE  F0FD         	movff	_ld3,_ld2
 14694  0064B2  C0FD  F0FC         	movff	_ld2,_ld1
 14695                           
 14696                           ; BSR set to: 0
 14697                           ;ff.c: 2165: const TCHAR *tp, *tt;
 14698                           ;ff.c: 2166: UINT i;
 14699                           ;ff.c: 2167: int vol = -1;
 14700  0064B6  6809               	setf	get_ldnumber@vol,c
 14701  0064B8  680A               	setf	get_ldnumber@vol+1,c
 14702                           
 14703                           ;ff.c: 2169: myvar[0] = 1;
 14704  0064BA  0E01               	movlw	1
 14705  0064BC  0101               	movlb	1	; () banked
 14706  0064BE  6F52               	movwf	_myvar& (0+255),b
 14707                           
 14708                           ;ff.c: 2170: static const char* const str[] = {"RAM","NAND","CF","SD1","SD2","USB1","USB
      +                          2","USB3"};
 14709                           ;ff.c: 2171: const char *sp;
 14710                           ;ff.c: 2172: char c;
 14711                           ;ff.c: 2173: TCHAR tc;
 14712                           ;ff.c: 2176: ld2 = 3;
 14713  0064C0  0E03               	movlw	3
 14714  0064C2  0100               	movlb	0	; () banked
 14715  0064C4  6FFD               	movwf	_ld2& (0+255),b
 14716                           
 14717                           ; BSR set to: 0
 14718                           ;ff.c: 2177: if (*path) {
 14719  0064C6  C001  FFD9         	movff	get_ldnumber@path,fsr2l
 14720  0064CA  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
 14721  0064CE  50DE               	movf	postinc2,w,c
 14722  0064D0  10DD               	iorwf	postdec2,w,c
 14723  0064D2  B4D8               	btfsc	status,2,c
 14724  0064D4  D0E9               	goto	l7925
 14725                           
 14726                           ; BSR set to: 0
 14727                           ;ff.c: 2178: ld2 = 4;myvar[1] = 1;
 14728  0064D6  0E04               	movlw	4
 14729  0064D8  0100               	movlb	0	; () banked
 14730  0064DA  6FFD               	movwf	_ld2& (0+255),b
 14731  0064DC  0E01               	movlw	1
 14732  0064DE  0101               	movlb	1	; () banked
 14733  0064E0  6F53               	movwf	(_myvar+1)& (0+255),b
 14734                           
 14735                           ; BSR set to: 1
 14736                           ;ff.c: 2179: for (tt = *path; (UINT)*tt >= (0 ? ' ' : '!') && *tt != ':'; tt++) ;
 14737  0064E2  C001  FFD9         	movff	get_ldnumber@path,fsr2l
 14738  0064E6  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
 14739  0064EA  CFDE F011          	movff	postinc2,get_ldnumber@tt
 14740  0064EE  CFDD F012          	movff	postdec2,get_ldnumber@tt+1
 14741  0064F2  D002               	goto	l7849
 14742  0064F4                     l7847:
 14743  0064F4  4A11               	infsnz	get_ldnumber@tt,f,c
 14744  0064F6  2A12               	incf	get_ldnumber@tt+1,f,c
 14745  0064F8                     l7849:
 14746  0064F8  0E00               	movlw	0
 14747  0064FA  6E08               	movwf	_get_ldnumber$973+1,c
 14748  0064FC  0E21               	movlw	33
 14749  0064FE  6E07               	movwf	_get_ldnumber$973,c
 14750  006500  C011  FFF6         	movff	get_ldnumber@tt,tblptrl
 14751  006504  C012  FFF7         	movff	get_ldnumber@tt+1,tblptrh
 14752  006508                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14753  006508  6AF8               	clrf	tblptru,c
 14754  00650A                     	endif
 14755  00650A                     	if	0	;tblptru may be non-zero
 14756  00650A                     	endif
 14757  00650A  0008               	tblrd		*
 14758  00650C  50F5               	movf	tablat,w,c
 14759  00650E  6E03               	movwf	??_get_ldnumber& (0+255),c
 14760  006510  6A04               	clrf	(??_get_ldnumber+1)& (0+255),c
 14761  006512  5007               	movf	_get_ldnumber$973,w,c
 14762  006514  5C03               	subwf	??_get_ldnumber,w,c
 14763  006516  5008               	movf	_get_ldnumber$973+1,w,c
 14764  006518  5804               	subwfb	??_get_ldnumber+1,w,c
 14765  00651A  A0D8               	btfss	status,0,c
 14766  00651C  D00A               	goto	l7857
 14767  00651E  C011  FFF6         	movff	get_ldnumber@tt,tblptrl
 14768  006522  C012  FFF7         	movff	get_ldnumber@tt+1,tblptrh
 14769  006526                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14770  006526  6AF8               	clrf	tblptru,c
 14771  006528                     	endif
 14772  006528                     	if	0	;tblptru may be non-zero
 14773  006528                     	endif
 14774  006528  0008               	tblrd		*
 14775  00652A  50F5               	movf	tablat,w,c
 14776  00652C  0A3A               	xorlw	58
 14777  00652E  A4D8               	btfss	status,2,c
 14778  006530  D7E1               	goto	l7847
 14779  006532                     l7857:
 14780                           
 14781                           ;ff.c: 2180: if (*tt == ':') {
 14782  006532  C011  FFF6         	movff	get_ldnumber@tt,tblptrl
 14783  006536  C012  FFF7         	movff	get_ldnumber@tt+1,tblptrh
 14784  00653A                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14785  00653A  6AF8               	clrf	tblptru,c
 14786  00653C                     	endif
 14787  00653C                     	if	0	;tblptru may be non-zero
 14788  00653C                     	endif
 14789  00653C  0008               	tblrd		*
 14790  00653E  50F5               	movf	tablat,w,c
 14791  006540  0A3A               	xorlw	58
 14792  006542  A4D8               	btfss	status,2,c
 14793  006544  D0AA               	goto	l7921
 14794                           
 14795                           ;ff.c: 2181: ld1 = 12;
 14796  006546  0E0C               	movlw	12
 14797  006548  0100               	movlb	0	; () banked
 14798  00654A  6FFC               	movwf	_ld1& (0+255),b
 14799                           
 14800                           ; BSR set to: 0
 14801                           ;ff.c: 2182: tp = *path;
 14802  00654C  C001  FFD9         	movff	get_ldnumber@path,fsr2l
 14803  006550  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
 14804  006554  CFDE F00D          	movff	postinc2,get_ldnumber@tp
 14805  006558  CFDD F00E          	movff	postdec2,get_ldnumber@tp+1
 14806                           
 14807                           ; BSR set to: 0
 14808                           ;ff.c: 2183: i = *tp++ - '0';
 14809  00655C  C00D  FFF6         	movff	get_ldnumber@tp,tblptrl
 14810  006560  C00E  FFF7         	movff	get_ldnumber@tp+1,tblptrh
 14811  006564                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14812  006564  6AF8               	clrf	tblptru,c
 14813  006566                     	endif
 14814  006566                     	if	0	;tblptru may be non-zero
 14815  006566                     	endif
 14816  006566  0008               	tblrd		*
 14817  006568  CFF5 F003          	movff	tablat,??_get_ldnumber
 14818  00656C  0ED0               	movlw	208
 14819  00656E  2403               	addwf	??_get_ldnumber,w,c
 14820  006570  6E0F               	movwf	get_ldnumber@i,c
 14821  006572  6A10               	clrf	get_ldnumber@i+1,c
 14822  006574  0EFF               	movlw	255
 14823  006576  2210               	addwfc	get_ldnumber@i+1,f,c
 14824                           
 14825                           ; BSR set to: 0
 14826  006578  4A0D               	infsnz	get_ldnumber@tp,f,c
 14827  00657A  2A0E               	incf	get_ldnumber@tp+1,f,c
 14828                           
 14829                           ; BSR set to: 0
 14830                           ;ff.c: 2184: if (i < 10 && tp == tt) {
 14831  00657C  0E0A               	movlw	10
 14832  00657E  5C0F               	subwf	get_ldnumber@i,w,c
 14833  006580  0E00               	movlw	0
 14834  006582  5810               	subwfb	get_ldnumber@i+1,w,c
 14835  006584  B0D8               	btfsc	status,0,c
 14836  006586  D017               	goto	l7879
 14837                           
 14838                           ; BSR set to: 0
 14839  006588  5012               	movf	get_ldnumber@tt+1,w,c
 14840  00658A  180E               	xorwf	get_ldnumber@tp+1,w,c
 14841  00658C  E102               	bnz	u10365
 14842  00658E  5011               	movf	get_ldnumber@tt,w,c
 14843  006590  180D               	xorwf	get_ldnumber@tp,w,c
 14844  006592                     u10365:
 14845  006592  A4D8               	btfss	status,2,c
 14846  006594  D010               	goto	l7879
 14847                           
 14848                           ; BSR set to: 0
 14849                           ;ff.c: 2185: ld3 = 11;
 14850  006596  0E0B               	movlw	11
 14851  006598  0100               	movlb	0	; () banked
 14852  00659A  6FFE               	movwf	_ld3& (0+255),b
 14853                           
 14854                           ; BSR set to: 0
 14855                           ;ff.c: 2186: if (i < 5) {
 14856  00659C  0E05               	movlw	5
 14857  00659E  5C0F               	subwf	get_ldnumber@i,w,c
 14858  0065A0  0E00               	movlw	0
 14859  0065A2  5810               	subwfb	get_ldnumber@i+1,w,c
 14860  0065A4  B0D8               	btfsc	status,0,c
 14861  0065A6  D075               	goto	l7915
 14862                           
 14863                           ; BSR set to: 0
 14864                           ;ff.c: 2187: vol = (int)i;
 14865  0065A8  C00F  F009         	movff	get_ldnumber@i,get_ldnumber@vol
 14866  0065AC  C010  F00A         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 14867                           
 14868                           ; BSR set to: 0
 14869                           ;ff.c: 2188: *path = ++tt;
 14870  0065B0  4A11               	infsnz	get_ldnumber@tt,f,c
 14871  0065B2  2A12               	incf	get_ldnumber@tt+1,f,c
 14872  0065B4  D066               	goto	L24
 14873  0065B6                     l7879:
 14874                           
 14875                           ; BSR set to: 0
 14876                           ;ff.c: 2192: else {
 14877                           ;ff.c: 2193: ld3 = 12;;
 14878  0065B6  0E0C               	movlw	12
 14879  0065B8  0100               	movlb	0	; () banked
 14880  0065BA  6FFE               	movwf	_ld3& (0+255),b
 14881                           
 14882                           ;ff.c: 2194: i = 0; tt++;
 14883  0065BC  0E00               	movlw	0
 14884  0065BE  6E10               	movwf	get_ldnumber@i+1,c
 14885  0065C0  0E00               	movlw	0
 14886  0065C2  6E0F               	movwf	get_ldnumber@i,c
 14887                           
 14888                           ; BSR set to: 0
 14889  0065C4  4A11               	infsnz	get_ldnumber@tt,f,c
 14890  0065C6  2A12               	incf	get_ldnumber@tt+1,f,c
 14891  0065C8                     l7883:
 14892                           
 14893                           ;ff.c: 2196: sp = str[i]; tp = *path;
 14894  0065C8  C00F  F003         	movff	get_ldnumber@i,??_get_ldnumber
 14895  0065CC  C010  F004         	movff	get_ldnumber@i+1,??_get_ldnumber+1
 14896  0065D0  90D8               	bcf	status,0,c
 14897  0065D2  3603               	rlcf	??_get_ldnumber,f,c
 14898  0065D4  3604               	rlcf	??_get_ldnumber+1,f,c
 14899  0065D6  0EFF               	movlw	low get_ldnumber@str
 14900  0065D8  2403               	addwf	??_get_ldnumber,w,c
 14901  0065DA  6EF6               	movwf	tblptrl,c
 14902  0065DC  0EBE               	movlw	high get_ldnumber@str
 14903  0065DE  2004               	addwfc	??_get_ldnumber+1,w,c
 14904  0065E0  6EF7               	movwf	tblptrh,c
 14905  0065E2                     	if	1	;There are 3 active tblptr bytes
 14906  0065E2  6AF8               	clrf	tblptru,c
 14907  0065E4  0E00               	movlw	low (__mediumconst shr (0+16))
 14908  0065E6  22F8               	addwfc	tblptru,f,c
 14909  0065E8                     	endif
 14910  0065E8  0009               	tblrd		*+
 14911  0065EA  CFF5 F005          	movff	tablat,get_ldnumber@sp
 14912  0065EE  000A               	tblrd		*-
 14913  0065F0  CFF5 F006          	movff	tablat,get_ldnumber@sp+1
 14914  0065F4  C001  FFD9         	movff	get_ldnumber@path,fsr2l
 14915  0065F8  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
 14916  0065FC  CFDE F00D          	movff	postinc2,get_ldnumber@tp
 14917  006600  CFDD F00E          	movff	postdec2,get_ldnumber@tp+1
 14918  006604                     l7887:
 14919                           
 14920                           ;ff.c: 2198: c = *sp++; tc = *tp++;
 14921  006604  C005  FFF6         	movff	get_ldnumber@sp,tblptrl
 14922  006608  C006  FFF7         	movff	get_ldnumber@sp+1,tblptrh
 14923  00660C                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14924  00660C  6AF8               	clrf	tblptru,c
 14925  00660E                     	endif
 14926  00660E                     	if	0	;tblptru may be non-zero
 14927  00660E                     	endif
 14928  00660E  0008               	tblrd		*
 14929  006610  CFF5 F00B          	movff	tablat,get_ldnumber@c
 14930  006614  4A05               	infsnz	get_ldnumber@sp,f,c
 14931  006616  2A06               	incf	get_ldnumber@sp+1,f,c
 14932  006618  C00D  FFF6         	movff	get_ldnumber@tp,tblptrl
 14933  00661C  C00E  FFF7         	movff	get_ldnumber@tp+1,tblptrh
 14934  006620                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 14935  006620  6AF8               	clrf	tblptru,c
 14936  006622                     	endif
 14937  006622                     	if	0	;tblptru may be non-zero
 14938  006622                     	endif
 14939  006622  0008               	tblrd		*
 14940  006624  CFF5 F00C          	movff	tablat,get_ldnumber@tc
 14941  006628  4A0D               	infsnz	get_ldnumber@tp,f,c
 14942  00662A  2A0E               	incf	get_ldnumber@tp+1,f,c
 14943                           
 14944                           ;ff.c: 2199: if ((((tc)>='a')&&((tc)<='z'))) tc -= 0x20;
 14945  00662C  0E60               	movlw	96
 14946  00662E  640C               	cpfsgt	get_ldnumber@tc,c
 14947  006630  D006               	goto	l7901
 14948  006632  0E7B               	movlw	123
 14949  006634  5C0C               	subwf	get_ldnumber@tc,w,c
 14950  006636  B0D8               	btfsc	status,0,c
 14951  006638  D002               	goto	l7901
 14952  00663A  0E20               	movlw	32
 14953  00663C  5E0C               	subwf	get_ldnumber@tc,f,c
 14954  00663E                     l7901:
 14955                           
 14956                           ;ff.c: 2200: } while (c && (TCHAR)c == tc);
 14957  00663E  500B               	movf	get_ldnumber@c,w,c
 14958  006640  B4D8               	btfsc	status,2,c
 14959  006642  D004               	goto	l669
 14960  006644  500B               	movf	get_ldnumber@c,w,c
 14961  006646  180C               	xorwf	get_ldnumber@tc,w,c
 14962  006648  B4D8               	btfsc	status,2,c
 14963  00664A  D7DC               	goto	l7887
 14964  00664C                     l669:
 14965                           
 14966                           ;ff.c: 2201: } while ((c || tp != tt) && ++i < 5);
 14967  00664C  660B               	tstfsz	get_ldnumber@c,c
 14968  00664E  D007               	goto	l7907
 14969  006650  5012               	movf	get_ldnumber@tt+1,w,c
 14970  006652  180E               	xorwf	get_ldnumber@tp+1,w,c
 14971  006654  E102               	bnz	u10435
 14972  006656  5011               	movf	get_ldnumber@tt,w,c
 14973  006658  180D               	xorwf	get_ldnumber@tp,w,c
 14974  00665A                     u10435:
 14975  00665A  B4D8               	btfsc	status,2,c
 14976  00665C  D008               	goto	l7909
 14977  00665E                     l7907:
 14978  00665E  4A0F               	infsnz	get_ldnumber@i,f,c
 14979  006660  2A10               	incf	get_ldnumber@i+1,f,c
 14980  006662  0E05               	movlw	5
 14981  006664  5C0F               	subwf	get_ldnumber@i& (0+255),w,c
 14982  006666  0E00               	movlw	0
 14983  006668  5810               	subwfb	(get_ldnumber@i+1)& (0+255),w,c
 14984  00666A  A0D8               	btfss	status,0,c
 14985  00666C  D7AD               	goto	l7883
 14986  00666E                     l7909:
 14987                           
 14988                           ;ff.c: 2202: if (i < 5) {
 14989  00666E  0E05               	movlw	5
 14990  006670  5C0F               	subwf	get_ldnumber@i,w,c
 14991  006672  0E00               	movlw	0
 14992  006674  5810               	subwfb	get_ldnumber@i+1,w,c
 14993  006676  B0D8               	btfsc	status,0,c
 14994  006678  D00C               	goto	l7915
 14995                           
 14996                           ;ff.c: 2203: vol = (int)i;
 14997  00667A  C00F  F009         	movff	get_ldnumber@i,get_ldnumber@vol
 14998  00667E  C010  F00A         	movff	get_ldnumber@i+1,get_ldnumber@vol+1
 14999  006682                     L24:
 15000                           
 15001                           ;ff.c: 2204: *path = tt;
 15002  006682  C001  FFD9         	movff	get_ldnumber@path,fsr2l
 15003  006686  C002  FFDA         	movff	get_ldnumber@path+1,fsr2h
 15004  00668A  C011  FFDE         	movff	get_ldnumber@tt,postinc2
 15005  00668E  C012  FFDD         	movff	get_ldnumber@tt+1,postdec2
 15006  006692                     l7915:
 15007                           
 15008                           ;ff.c: 2205: }
 15009                           ;ff.c: 2206: }
 15010                           ;ff.c: 2207: myvar[2] = 1;
 15011  006692  0E01               	movlw	1
 15012  006694  0101               	movlb	1	; () banked
 15013  006696  6F54               	movwf	(_myvar+2)& (0+255),b
 15014  006698  D007               	goto	l7925
 15015  00669A                     l7921:
 15016                           
 15017                           ;ff.c: 2210: }
 15018                           ;ff.c: 2211: ld1 = 15;
 15019  00669A  0E0F               	movlw	15
 15020  00669C  0100               	movlb	0	; () banked
 15021  00669E  6FFC               	movwf	_ld1& (0+255),b
 15022                           
 15023                           ; BSR set to: 0
 15024                           ;ff.c: 2213: vol = CurrVol;
 15025  0066A0  0100               	movlb	0	; () banked
 15026  0066A2  C0F9  F009         	movff	_CurrVol,get_ldnumber@vol
 15027  0066A6  6A0A               	clrf	get_ldnumber@vol+1,c
 15028  0066A8                     l7925:
 15029                           
 15030                           ; BSR set to: 0
 15031                           ;ff.c: 2217: }
 15032                           ;ff.c: 2218: return vol;
 15033  0066A8  C009  F001         	movff	get_ldnumber@vol,?_get_ldnumber
 15034  0066AC  C00A  F002         	movff	get_ldnumber@vol+1,?_get_ldnumber+1
 15035                           
 15036                           ; BSR set to: 0
 15037  0066B0  0012               	return	
 15038  0066B2                     __end_of_get_ldnumber:
 15039                           	opt stack 0
 15040                           tblptru	equ	0xFF8
 15041                           tblptrh	equ	0xFF7
 15042                           tblptrl	equ	0xFF6
 15043                           tablat	equ	0xFF5
 15044                           prodh	equ	0xFF4
 15045                           prodl	equ	0xFF3
 15046                           indf0	equ	0xFEF
 15047                           postinc0	equ	0xFEE
 15048                           fsr0h	equ	0xFEA
 15049                           fsr0l	equ	0xFE9
 15050                           wreg	equ	0xFE8
 15051                           indf1	equ	0xFE7
 15052                           postinc1	equ	0xFE6
 15053                           postdec1	equ	0xFE5
 15054                           fsr1h	equ	0xFE2
 15055                           fsr1l	equ	0xFE1
 15056                           indf2	equ	0xFDF
 15057                           postinc2	equ	0xFDE
 15058                           postdec2	equ	0xFDD
 15059                           plusw2	equ	0xFDB
 15060                           fsr2h	equ	0xFDA
 15061                           fsr2l	equ	0xFD9
 15062                           status	equ	0xFD8
 15063                           
 15064 ;; *************** function _disk_initialize *****************
 15065 ;; Defined at:
 15066 ;;		line 392 in file "sdmm.c"
 15067 ;; Parameters:    Size  Location     Type
 15068 ;;  drv             1    wreg     unsigned char 
 15069 ;; Auto vars:     Size  Location     Type
 15070 ;;  drv             1   28[COMRAM] unsigned char 
 15071 ;;  buf             4   31[COMRAM] unsigned char [4]
 15072 ;;  tmr             2   39[COMRAM] unsigned int 
 15073 ;;  ty              1   38[COMRAM] unsigned char 
 15074 ;;  s               1   37[COMRAM] unsigned char 
 15075 ;;  cmd             1   36[COMRAM] unsigned char 
 15076 ;;  n               1   35[COMRAM] unsigned char 
 15077 ;; Return value:  Size  Location     Type
 15078 ;;                  1    wreg      unsigned char 
 15079 ;; Registers used:
 15080 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15081 ;; Tracked objects:
 15082 ;;		On entry : 0/0
 15083 ;;		On exit  : 0/0
 15084 ;;		Unchanged: 0/0
 15085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15086 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15087 ;;      Locals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15088 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15089 ;;      Totals:        14       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15090 ;;Total ram usage:       14 bytes
 15091 ;; Hardware stack levels used:    1
 15092 ;; Hardware stack levels required when called:    4
 15093 ;; This function calls:
 15094 ;;		_deselect
 15095 ;;		_dly_us
 15096 ;;		_rcvr_mmc
 15097 ;;		_send_cmd
 15098 ;; This function is called by:
 15099 ;;		_find_volume
 15100 ;;		_f_mkfs
 15101 ;; This function uses a non-reentrant model
 15102 ;;
 15103                           
 15104                           	psect	text24
 15105  006AF0                     __ptext24:
 15106                           	opt stack 0
 15107  006AF0                     _disk_initialize:
 15108                           	opt stack 24
 15109                           
 15110                           ;incstack = 0
 15111                           ;disk_initialize@drv stored from wreg
 15112  006AF0  6E1D               	movwf	disk_initialize@drv,c
 15113                           
 15114                           ;sdmm.c: 396: BYTE n, ty, cmd, buf[4];
 15115                           ;sdmm.c: 397: UINT tmr;
 15116                           ;sdmm.c: 398: DSTATUS s;
 15117                           ;sdmm.c: 400: ab = 10;
 15118  006AF2  0E0A               	movlw	10
 15119  006AF4  0100               	movlb	0	; () banked
 15120  006AF6  6FFA               	movwf	_ab& (0+255),b
 15121                           
 15122                           ; BSR set to: 0
 15123                           ;sdmm.c: 401: if (drv) return RES_NOTRDY;
 15124  006AF8  501D               	movf	disk_initialize@drv,w,c
 15125  006AFA  B4D8               	btfsc	status,2,c
 15126  006AFC  D002               	goto	l7409
 15127                           
 15128                           ; BSR set to: 0
 15129  006AFE  0E03               	movlw	3
 15130  006B00  D115               	goto	l182
 15131  006B02                     l7409:
 15132                           
 15133                           ; BSR set to: 0
 15134                           ;sdmm.c: 402: ab = 50;
 15135  006B02  0E32               	movlw	50
 15136  006B04  0100               	movlb	0	; () banked
 15137  006B06  6FFA               	movwf	_ab& (0+255),b
 15138                           
 15139                           ; BSR set to: 0
 15140                           ;sdmm.c: 403: dly_us(10000);
 15141  006B08  0E27               	movlw	39
 15142  006B0A  6E02               	movwf	dly_us@n+1,c
 15143  006B0C  0E10               	movlw	16
 15144  006B0E  6E01               	movwf	dly_us@n,c
 15145  006B10  ECA1  F028         	call	_dly_us	;wreg free
 15146                           
 15147                           ;sdmm.c: 404: ab = 51;
 15148  006B14  0E33               	movlw	51
 15149  006B16  0100               	movlb	0	; () banked
 15150  006B18  6FFA               	movwf	_ab& (0+255),b
 15151                           
 15152                           ; BSR set to: 0
 15153                           ;sdmm.c: 405: (TRISC &= ~0x40); (PORTC |= 0x40);
 15154  006B1A  9C94               	bcf	3988,6,c	;volatile
 15155                           
 15156                           ; BSR set to: 0
 15157  006B1C  8C82               	bsf	3970,6,c	;volatile
 15158                           
 15159                           ; BSR set to: 0
 15160                           ;sdmm.c: 406: (TRISC &= ~0x80); (PORTC &= ~0x08);
 15161  006B1E  9E94               	bcf	3988,7,c	;volatile
 15162                           
 15163                           ; BSR set to: 0
 15164  006B20  9682               	bcf	3970,3,c	;volatile
 15165                           
 15166                           ; BSR set to: 0
 15167                           ;sdmm.c: 407: (TRISC &= ~0x20);
 15168  006B22  9A94               	bcf	3988,5,c	;volatile
 15169                           
 15170                           ; BSR set to: 0
 15171                           ;sdmm.c: 408: (TRISC |= 0x10);
 15172  006B24  8894               	bsf	3988,4,c	;volatile
 15173                           
 15174                           ; BSR set to: 0
 15175                           ;sdmm.c: 409: ab = 11;
 15176  006B26  0E0B               	movlw	11
 15177  006B28  0100               	movlb	0	; () banked
 15178  006B2A  6FFA               	movwf	_ab& (0+255),b
 15179                           
 15180                           ; BSR set to: 0
 15181                           ;sdmm.c: 410: for (n = 10; n; n--) rcvr_mmc(buf, 1);
 15182  006B2C  0E0A               	movlw	10
 15183  006B2E  6E24               	movwf	disk_initialize@n,c
 15184  006B30  D00B               	goto	l7435
 15185  006B32                     l7431:
 15186  006B32  0E00               	movlw	high disk_initialize@buf
 15187  006B34  6E02               	movwf	rcvr_mmc@buff+1,c
 15188  006B36  0E20               	movlw	low disk_initialize@buf
 15189  006B38  6E01               	movwf	rcvr_mmc@buff,c
 15190  006B3A  0E00               	movlw	0
 15191  006B3C  6E04               	movwf	rcvr_mmc@bc+1,c
 15192  006B3E  0E01               	movlw	1
 15193  006B40  6E03               	movwf	rcvr_mmc@bc,c
 15194  006B42  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 15195  006B46  0624               	decf	disk_initialize@n,f,c
 15196  006B48                     l7435:
 15197  006B48  6624               	tstfsz	disk_initialize@n,c
 15198  006B4A  D7F3               	goto	l7431
 15199                           
 15200                           ;sdmm.c: 412: ty = 0;
 15201  006B4C  0E00               	movlw	0
 15202  006B4E  6E27               	movwf	disk_initialize@ty,c
 15203                           
 15204                           ;sdmm.c: 413: if (send_cmd((0), 0) == 1) {
 15205  006B50  0E00               	movlw	0
 15206  006B52  6E0F               	movwf	send_cmd@arg,c
 15207  006B54  0E00               	movlw	0
 15208  006B56  6E10               	movwf	send_cmd@arg+1,c
 15209  006B58  0E00               	movlw	0
 15210  006B5A  6E11               	movwf	send_cmd@arg+2,c
 15211  006B5C  0E00               	movlw	0
 15212  006B5E  6E12               	movwf	send_cmd@arg+3,c
 15213  006B60  0E00               	movlw	0
 15214  006B62  ECC0  F02C         	call	_send_cmd
 15215  006B66  6E1C               	movwf	??_disk_initialize& (0+255),c
 15216  006B68  041C               	decf	??_disk_initialize,w,c
 15217  006B6A  A4D8               	btfss	status,2,c
 15218  006B6C  D0CE               	goto	l186
 15219                           
 15220                           ;sdmm.c: 414: ab1 = ab = 12;
 15221  006B6E  0E0C               	movlw	12
 15222  006B70  0100               	movlb	0	; () banked
 15223  006B72  6FFA               	movwf	_ab& (0+255),b
 15224  006B74  C0FA  F0FB         	movff	_ab,_ab1
 15225                           
 15226                           ; BSR set to: 0
 15227                           ;sdmm.c: 415: if (send_cmd((8), 0x1AA) == 1) {
 15228  006B78  0EAA               	movlw	170
 15229  006B7A  6E0F               	movwf	send_cmd@arg,c
 15230  006B7C  0E01               	movlw	1
 15231  006B7E  6E10               	movwf	send_cmd@arg+1,c
 15232  006B80  0E00               	movlw	0
 15233  006B82  6E11               	movwf	send_cmd@arg+2,c
 15234  006B84  0E00               	movlw	0
 15235  006B86  6E12               	movwf	send_cmd@arg+3,c
 15236  006B88  0E08               	movlw	8
 15237  006B8A  ECC0  F02C         	call	_send_cmd
 15238  006B8E  6E1C               	movwf	??_disk_initialize& (0+255),c
 15239  006B90  041C               	decf	??_disk_initialize,w,c
 15240  006B92  A4D8               	btfss	status,2,c
 15241  006B94  D067               	goto	l7481
 15242                           
 15243                           ;sdmm.c: 416: ab = 13;
 15244  006B96  0E0D               	movlw	13
 15245  006B98  0100               	movlb	0	; () banked
 15246  006B9A  6FFA               	movwf	_ab& (0+255),b
 15247                           
 15248                           ; BSR set to: 0
 15249                           ;sdmm.c: 417: rcvr_mmc(buf, 4);
 15250  006B9C  0E00               	movlw	high disk_initialize@buf
 15251  006B9E  6E02               	movwf	rcvr_mmc@buff+1,c
 15252  006BA0  0E20               	movlw	low disk_initialize@buf
 15253  006BA2  6E01               	movwf	rcvr_mmc@buff,c
 15254  006BA4  0E00               	movlw	0
 15255  006BA6  6E04               	movwf	rcvr_mmc@bc+1,c
 15256  006BA8  0E04               	movlw	4
 15257  006BAA  6E03               	movwf	rcvr_mmc@bc,c
 15258  006BAC  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 15259                           
 15260                           ;sdmm.c: 418: if (buf[2] == 0x01 && buf[3] == 0xAA) {
 15261  006BB0  0422               	decf	disk_initialize@buf+2,w,c
 15262  006BB2  A4D8               	btfss	status,2,c
 15263  006BB4  D0AA               	goto	l186
 15264  006BB6  5023               	movf	disk_initialize@buf+3,w,c
 15265  006BB8  0AAA               	xorlw	170
 15266  006BBA  A4D8               	btfss	status,2,c
 15267  006BBC  D0A6               	goto	l186
 15268                           
 15269                           ;sdmm.c: 419: ab = 14;
 15270  006BBE  0E0E               	movlw	14
 15271  006BC0  0100               	movlb	0	; () banked
 15272  006BC2  6FFA               	movwf	_ab& (0+255),b
 15273                           
 15274                           ;sdmm.c: 420: for (tmr = 1000; tmr; tmr--) {
 15275  006BC4  0E03               	movlw	3
 15276  006BC6  6E29               	movwf	disk_initialize@tmr+1,c
 15277  006BC8  0EE8               	movlw	232
 15278  006BCA  6E28               	movwf	disk_initialize@tmr,c
 15279  006BCC  D01B               	goto	l7463
 15280  006BCE                     l7455:
 15281                           
 15282                           ;sdmm.c: 421: if (send_cmd((0x80+41), 1UL << 30) == 0) {ab = 16; break;}
 15283  006BCE  0E00               	movlw	0
 15284  006BD0  6E0F               	movwf	send_cmd@arg,c
 15285  006BD2  0E00               	movlw	0
 15286  006BD4  6E10               	movwf	send_cmd@arg+1,c
 15287  006BD6  0E00               	movlw	0
 15288  006BD8  6E11               	movwf	send_cmd@arg+2,c
 15289  006BDA  0E40               	movlw	64
 15290  006BDC  6E12               	movwf	send_cmd@arg+3,c
 15291  006BDE  0EA9               	movlw	169
 15292  006BE0  ECC0  F02C         	call	_send_cmd
 15293  006BE4  0900               	iorlw	0
 15294  006BE6  A4D8               	btfss	status,2,c
 15295  006BE8  D004               	goto	l7459
 15296  006BEA  0E10               	movlw	16
 15297  006BEC  0100               	movlb	0	; () banked
 15298  006BEE  6FFA               	movwf	_ab& (0+255),b
 15299  006BF0  D00D               	goto	l7465
 15300  006BF2                     l7459:
 15301                           
 15302                           ;sdmm.c: 422: dly_us(1000);
 15303  006BF2  0E03               	movlw	3
 15304  006BF4  6E02               	movwf	dly_us@n+1,c
 15305  006BF6  0EE8               	movlw	232
 15306  006BF8  6E01               	movwf	dly_us@n,c
 15307  006BFA  ECA1  F028         	call	_dly_us	;wreg free
 15308  006BFE  0628               	decf	disk_initialize@tmr,f,c
 15309  006C00  A0D8               	btfss	status,0,c
 15310  006C02  0629               	decf	disk_initialize@tmr+1,f,c
 15311  006C04                     l7463:
 15312  006C04  5029               	movf	disk_initialize@tmr+1,w,c
 15313  006C06  1028               	iorwf	disk_initialize@tmr,w,c
 15314  006C08  A4D8               	btfss	status,2,c
 15315  006C0A  D7E1               	goto	l7455
 15316  006C0C                     l7465:
 15317                           
 15318                           ;sdmm.c: 423: }
 15319                           ;sdmm.c: 424: if (tmr && send_cmd((58), 0) == 0) {
 15320  006C0C  5029               	movf	disk_initialize@tmr+1,w,c
 15321  006C0E  1028               	iorwf	disk_initialize@tmr,w,c
 15322  006C10  B4D8               	btfsc	status,2,c
 15323  006C12  D07B               	goto	l186
 15324  006C14  0E00               	movlw	0
 15325  006C16  6E0F               	movwf	send_cmd@arg,c
 15326  006C18  0E00               	movlw	0
 15327  006C1A  6E10               	movwf	send_cmd@arg+1,c
 15328  006C1C  0E00               	movlw	0
 15329  006C1E  6E11               	movwf	send_cmd@arg+2,c
 15330  006C20  0E00               	movlw	0
 15331  006C22  6E12               	movwf	send_cmd@arg+3,c
 15332  006C24  0E3A               	movlw	58
 15333  006C26  ECC0  F02C         	call	_send_cmd
 15334  006C2A  0900               	iorlw	0
 15335  006C2C  A4D8               	btfss	status,2,c
 15336  006C2E  D06D               	goto	l186
 15337                           
 15338                           ;sdmm.c: 425: rcvr_mmc(buf, 4);
 15339  006C30  0E00               	movlw	high disk_initialize@buf
 15340  006C32  6E02               	movwf	rcvr_mmc@buff+1,c
 15341  006C34  0E20               	movlw	low disk_initialize@buf
 15342  006C36  6E01               	movwf	rcvr_mmc@buff,c
 15343  006C38  0E00               	movlw	0
 15344  006C3A  6E04               	movwf	rcvr_mmc@bc+1,c
 15345  006C3C  0E04               	movlw	4
 15346  006C3E  6E03               	movwf	rcvr_mmc@bc,c
 15347  006C40  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 15348                           
 15349                           ;sdmm.c: 426: ab = 17;
 15350  006C44  0E11               	movlw	17
 15351  006C46  0100               	movlb	0	; () banked
 15352  006C48  6FFA               	movwf	_ab& (0+255),b
 15353                           
 15354                           ; BSR set to: 0
 15355                           ;sdmm.c: 427: ty = (buf[0] & 0x40) ? 0x04 | 0x08 : 0x04;
 15356  006C4A  BC20               	btfsc	disk_initialize@buf,6,c
 15357  006C4C  D004               	goto	l7477
 15358                           
 15359                           ; BSR set to: 0
 15360  006C4E  0E00               	movlw	0
 15361  006C50  6E1F               	movwf	_disk_initialize$255+1,c
 15362  006C52  0E04               	movlw	4
 15363  006C54  D003               	goto	L25
 15364  006C56                     l7477:
 15365                           
 15366                           ; BSR set to: 0
 15367  006C56  0E00               	movlw	0
 15368  006C58  6E1F               	movwf	_disk_initialize$255+1,c
 15369  006C5A  0E0C               	movlw	12
 15370  006C5C                     L25:
 15371  006C5C  6E1E               	movwf	_disk_initialize$255,c
 15372                           
 15373                           ; BSR set to: 0
 15374                           
 15375                           ; BSR set to: 0
 15376  006C5E  C01E  F027         	movff	_disk_initialize$255,disk_initialize@ty
 15377  006C62  D053               	goto	l186
 15378  006C64                     l7481:
 15379                           
 15380                           ;sdmm.c: 431: if (send_cmd((0x80+41), 0) <= 1) {
 15381  006C64  0E00               	movlw	0
 15382  006C66  6E0F               	movwf	send_cmd@arg,c
 15383  006C68  0E00               	movlw	0
 15384  006C6A  6E10               	movwf	send_cmd@arg+1,c
 15385  006C6C  0E00               	movlw	0
 15386  006C6E  6E11               	movwf	send_cmd@arg+2,c
 15387  006C70  0E00               	movlw	0
 15388  006C72  6E12               	movwf	send_cmd@arg+3,c
 15389  006C74  0EA9               	movlw	169
 15390  006C76  ECC0  F02C         	call	_send_cmd
 15391  006C7A  6E1C               	movwf	??_disk_initialize& (0+255),c
 15392  006C7C  0E02               	movlw	2
 15393  006C7E  5C1C               	subwf	??_disk_initialize,w,c
 15394  006C80  B0D8               	btfsc	status,0,c
 15395  006C82  D007               	goto	l7485
 15396                           
 15397                           ;sdmm.c: 432: ab = 18;
 15398  006C84  0E12               	movlw	18
 15399  006C86  0100               	movlb	0	; () banked
 15400  006C88  6FFA               	movwf	_ab& (0+255),b
 15401                           
 15402                           ;sdmm.c: 433: ty = 0x02; cmd = (0x80+41);
 15403  006C8A  0E02               	movlw	2
 15404  006C8C  6E27               	movwf	disk_initialize@ty,c
 15405  006C8E  0EA9               	movlw	169
 15406  006C90  D003               	goto	L26
 15407  006C92                     l7485:
 15408                           
 15409                           ;sdmm.c: 435: ty = 0x01; cmd = (1);
 15410  006C92  0E01               	movlw	1
 15411  006C94  6E27               	movwf	disk_initialize@ty,c
 15412  006C96  0E01               	movlw	1
 15413  006C98                     L26:
 15414  006C98  6E25               	movwf	disk_initialize@cmd,c
 15415                           
 15416                           ;sdmm.c: 436: }
 15417                           ;sdmm.c: 437: for (tmr = 1000; tmr; tmr--) {
 15418  006C9A  0E03               	movlw	3
 15419  006C9C  6E29               	movwf	disk_initialize@tmr+1,c
 15420  006C9E  0EE8               	movlw	232
 15421  006CA0  6E28               	movwf	disk_initialize@tmr,c
 15422  006CA2  D01B               	goto	l7495
 15423  006CA4                     l7487:
 15424                           
 15425                           ;sdmm.c: 438: if (send_cmd(cmd, 0) == 0){ab = 19; break;}
 15426  006CA4  0E00               	movlw	0
 15427  006CA6  6E0F               	movwf	send_cmd@arg,c
 15428  006CA8  0E00               	movlw	0
 15429  006CAA  6E10               	movwf	send_cmd@arg+1,c
 15430  006CAC  0E00               	movlw	0
 15431  006CAE  6E11               	movwf	send_cmd@arg+2,c
 15432  006CB0  0E00               	movlw	0
 15433  006CB2  6E12               	movwf	send_cmd@arg+3,c
 15434  006CB4  5025               	movf	disk_initialize@cmd,w,c
 15435  006CB6  ECC0  F02C         	call	_send_cmd
 15436  006CBA  0900               	iorlw	0
 15437  006CBC  A4D8               	btfss	status,2,c
 15438  006CBE  D004               	goto	l7491
 15439  006CC0  0E13               	movlw	19
 15440  006CC2  0100               	movlb	0	; () banked
 15441  006CC4  6FFA               	movwf	_ab& (0+255),b
 15442  006CC6  D00D               	goto	l7497
 15443  006CC8                     l7491:
 15444                           
 15445                           ;sdmm.c: 439: dly_us(1000);
 15446  006CC8  0E03               	movlw	3
 15447  006CCA  6E02               	movwf	dly_us@n+1,c
 15448  006CCC  0EE8               	movlw	232
 15449  006CCE  6E01               	movwf	dly_us@n,c
 15450  006CD0  ECA1  F028         	call	_dly_us	;wreg free
 15451  006CD4  0628               	decf	disk_initialize@tmr,f,c
 15452  006CD6  A0D8               	btfss	status,0,c
 15453  006CD8  0629               	decf	disk_initialize@tmr+1,f,c
 15454  006CDA                     l7495:
 15455  006CDA  5029               	movf	disk_initialize@tmr+1,w,c
 15456  006CDC  1028               	iorwf	disk_initialize@tmr,w,c
 15457  006CDE  A4D8               	btfss	status,2,c
 15458  006CE0  D7E1               	goto	l7487
 15459  006CE2                     l7497:
 15460                           
 15461                           ;sdmm.c: 440: }
 15462                           ;sdmm.c: 441: if (!tmr || send_cmd((16), 512) != 0)
 15463  006CE2  5029               	movf	disk_initialize@tmr+1,w,c
 15464  006CE4  1028               	iorwf	disk_initialize@tmr,w,c
 15465  006CE6  B4D8               	btfsc	status,2,c
 15466  006CE8  D00E               	goto	l7501
 15467  006CEA  0E00               	movlw	0
 15468  006CEC  6E0F               	movwf	send_cmd@arg,c
 15469  006CEE  0E02               	movlw	2
 15470  006CF0  6E10               	movwf	send_cmd@arg+1,c
 15471  006CF2  0E00               	movlw	0
 15472  006CF4  6E11               	movwf	send_cmd@arg+2,c
 15473  006CF6  0E00               	movlw	0
 15474  006CF8  6E12               	movwf	send_cmd@arg+3,c
 15475  006CFA  0E10               	movlw	16
 15476  006CFC  ECC0  F02C         	call	_send_cmd
 15477  006D00  0900               	iorlw	0
 15478  006D02  B4D8               	btfsc	status,2,c
 15479  006D04  D002               	goto	l186
 15480  006D06                     l7501:
 15481                           
 15482                           ;sdmm.c: 442: ty = 0;
 15483  006D06  0E00               	movlw	0
 15484  006D08  6E27               	movwf	disk_initialize@ty,c
 15485  006D0A                     l186:
 15486                           
 15487                           ;sdmm.c: 443: }
 15488                           ;sdmm.c: 444: }
 15489                           ;sdmm.c: 445: ab = 15;
 15490  006D0A  0E0F               	movlw	15
 15491  006D0C  0100               	movlb	0	; () banked
 15492  006D0E  6FFA               	movwf	_ab& (0+255),b
 15493                           
 15494                           ; BSR set to: 0
 15495                           ;sdmm.c: 446: CardType = ty;
 15496  006D10  C027  F0F8         	movff	disk_initialize@ty,_CardType
 15497                           
 15498                           ;sdmm.c: 447: s = ty ? 0 : 0x01;
 15499  006D14  5027               	movf	disk_initialize@ty,w,c
 15500  006D16  A4D8               	btfss	status,2,c
 15501  006D18  D002               	goto	u9690
 15502  006D1A  0E01               	movlw	1
 15503  006D1C  D001               	goto	u9696
 15504  006D1E                     u9690:
 15505  006D1E  0E00               	movlw	0
 15506  006D20                     u9696:
 15507  006D20  6E26               	movwf	disk_initialize@s,c
 15508                           
 15509                           ; BSR set to: 0
 15510                           ;sdmm.c: 448: Stat = s;
 15511  006D22  C026  F0FF         	movff	disk_initialize@s,_Stat
 15512                           
 15513                           ; BSR set to: 0
 15514                           ;sdmm.c: 450: deselect();
 15515  006D26  EC95  F028         	call	_deselect	;wreg free
 15516                           
 15517                           ;sdmm.c: 452: return s;
 15518  006D2A  5026               	movf	disk_initialize@s,w,c
 15519  006D2C                     l182:
 15520  006D2C  0012               	return	
 15521  006D2E                     __end_of_disk_initialize:
 15522                           	opt stack 0
 15523                           tblptru	equ	0xFF8
 15524                           tblptrh	equ	0xFF7
 15525                           tblptrl	equ	0xFF6
 15526                           tablat	equ	0xFF5
 15527                           prodh	equ	0xFF4
 15528                           prodl	equ	0xFF3
 15529                           indf0	equ	0xFEF
 15530                           postinc0	equ	0xFEE
 15531                           fsr0h	equ	0xFEA
 15532                           fsr0l	equ	0xFE9
 15533                           wreg	equ	0xFE8
 15534                           indf1	equ	0xFE7
 15535                           postinc1	equ	0xFE6
 15536                           postdec1	equ	0xFE5
 15537                           fsr1h	equ	0xFE2
 15538                           fsr1l	equ	0xFE1
 15539                           indf2	equ	0xFDF
 15540                           postinc2	equ	0xFDE
 15541                           postdec2	equ	0xFDD
 15542                           plusw2	equ	0xFDB
 15543                           fsr2h	equ	0xFDA
 15544                           fsr2l	equ	0xFD9
 15545                           status	equ	0xFD8
 15546                           
 15547 ;; *************** function _check_fs *****************
 15548 ;; Defined at:
 15549 ;;		line 2230 in file "ff.c"
 15550 ;; Parameters:    Size  Location     Type
 15551 ;;  fs              2   69[COMRAM] PTR struct .
 15552 ;;		 -> NULL(0), FatFs(562), 
 15553 ;;  sect            4   71[COMRAM] unsigned long 
 15554 ;; Auto vars:     Size  Location     Type
 15555 ;;		None
 15556 ;; Return value:  Size  Location     Type
 15557 ;;                  1    wreg      unsigned char 
 15558 ;; Registers used:
 15559 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 15560 ;; Tracked objects:
 15561 ;;		On entry : 0/0
 15562 ;;		On exit  : 0/0
 15563 ;;		Unchanged: 0/0
 15564 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15565 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15566 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15567 ;;      Temps:         30       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15568 ;;      Totals:        36       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15569 ;;Total ram usage:       36 bytes
 15570 ;; Hardware stack levels used:    1
 15571 ;; Hardware stack levels required when called:    7
 15572 ;; This function calls:
 15573 ;;		_move_window
 15574 ;; This function is called by:
 15575 ;;		_find_volume
 15576 ;; This function uses a non-reentrant model
 15577 ;;
 15578                           
 15579                           	psect	text25
 15580  007204                     __ptext25:
 15581                           	opt stack 0
 15582  007204                     _check_fs:
 15583                           	opt stack 21
 15584                           
 15585                           ;ff.c: 2235: chr = 1;
 15586                           
 15587                           ;incstack = 0
 15588  007204  0E00               	movlw	0
 15589  007206  0101               	movlb	1	; () banked
 15590  007208  6F66               	movwf	(_chr+1)& (0+255),b
 15591  00720A  0E01               	movlw	1
 15592  00720C  0101               	movlb	1	; () banked
 15593  00720E  6F65               	movwf	_chr& (0+255),b
 15594                           
 15595                           ; BSR set to: 1
 15596                           ;ff.c: 2236: fs->wflag = 0; fs->winsect = 0xFFFFFFFF;
 15597  007210  EE20 F004          	lfsr	2,4
 15598  007214  5046               	movf	check_fs@fs,w,c
 15599  007216  26D9               	addwf	fsr2l,f,c
 15600  007218  5047               	movf	check_fs@fs+1,w,c
 15601  00721A  22DA               	addwfc	fsr2h,f,c
 15602  00721C  0E00               	movlw	0
 15603  00721E  6EDF               	movwf	indf2,c
 15604                           
 15605                           ; BSR set to: 1
 15606  007220  EE20 F02E          	lfsr	2,46
 15607  007224  5046               	movf	check_fs@fs,w,c
 15608  007226  26D9               	addwf	fsr2l,f,c
 15609  007228  5047               	movf	check_fs@fs+1,w,c
 15610  00722A  22DA               	addwfc	fsr2h,f,c
 15611  00722C  0EFF               	movlw	255
 15612  00722E  6EDE               	movwf	postinc2,c
 15613  007230  0EFF               	movlw	255
 15614  007232  6EDE               	movwf	postinc2,c
 15615  007234  0EFF               	movlw	255
 15616  007236  6EDE               	movwf	postinc2,c
 15617  007238  0EFF               	movlw	255
 15618  00723A  6EDD               	movwf	postdec2,c
 15619  00723C  52DD               	movf	postdec2,f,c
 15620  00723E  52DD               	movf	postdec2,f,c
 15621                           
 15622                           ; BSR set to: 1
 15623                           ;ff.c: 2237: if (move_window(fs, sect) != FR_OK)
 15624  007240  C047  F03C         	movff	check_fs@fs+1,move_window@fs+1
 15625  007244  C046  F03B         	movff	check_fs@fs,move_window@fs
 15626  007248  C048  F03D         	movff	check_fs@sect,move_window@sector
 15627  00724C  C049  F03E         	movff	check_fs@sect+1,move_window@sector+1
 15628  007250  C04A  F03F         	movff	check_fs@sect+2,move_window@sector+2
 15629  007254  C04B  F040         	movff	check_fs@sect+3,move_window@sector+3
 15630  007258  EC66  F02C         	call	_move_window	;wreg free
 15631  00725C  0900               	iorlw	0
 15632  00725E  B4D8               	btfsc	status,2,c
 15633  007260  D002               	goto	l7941
 15634                           
 15635                           ;ff.c: 2238: return 3;
 15636  007262  0E03               	movlw	3
 15637  007264  D122               	goto	l684
 15638  007266                     l7941:
 15639                           
 15640                           ;ff.c: 2239: chr = 2;
 15641  007266  0E00               	movlw	0
 15642  007268  0101               	movlb	1	; () banked
 15643  00726A  6F66               	movwf	(_chr+1)& (0+255),b
 15644  00726C  0E02               	movlw	2
 15645  00726E  0101               	movlb	1	; () banked
 15646  007270  6F65               	movwf	_chr& (0+255),b
 15647                           
 15648                           ; BSR set to: 1
 15649                           ;ff.c: 2240: if ((WORD)(((WORD)*((BYTE*)(&fs->win[510])+1)<<8)|(WORD)*(BYTE*)(&fs->win[5
      +                          10])) != 0xAA55)
 15650  007272  EE22 F031          	lfsr	2,561
 15651  007276  5046               	movf	check_fs@fs,w,c
 15652  007278  26D9               	addwf	fsr2l,f,c
 15653  00727A  5047               	movf	check_fs@fs+1,w,c
 15654  00727C  22DA               	addwfc	fsr2h,f,c
 15655  00727E  50DF               	movf	indf2,w,c
 15656  007280  6E4C               	movwf	??_check_fs& (0+255),c
 15657  007282  504C               	movf	??_check_fs,w,c
 15658  007284  6E4E               	movwf	(??_check_fs+2)& (0+255),c
 15659  007286  6A4D               	clrf	(??_check_fs+1)& (0+255),c
 15660  007288  EE22 F030          	lfsr	2,560
 15661  00728C  5046               	movf	check_fs@fs,w,c
 15662  00728E  26D9               	addwf	fsr2l,f,c
 15663  007290  5047               	movf	check_fs@fs+1,w,c
 15664  007292  22DA               	addwfc	fsr2h,f,c
 15665  007294  50DF               	movf	indf2,w,c
 15666  007296  6E4F               	movwf	(??_check_fs+3)& (0+255),c
 15667  007298  504F               	movf	??_check_fs+3,w,c
 15668  00729A  124D               	iorwf	??_check_fs+1,f,c
 15669  00729C  0E00               	movlw	0
 15670  00729E  124E               	iorwf	??_check_fs+2,f,c
 15671  0072A0  504E               	movf	??_check_fs+2,w,c
 15672  0072A2  0AAA               	xorlw	170
 15673  0072A4  0E55               	movlw	85
 15674  0072A6  B4D8               	btfsc	status,2,c
 15675  0072A8  184D               	xorwf	??_check_fs+1,w,c
 15676  0072AA  B4D8               	btfsc	status,2,c
 15677  0072AC  D002               	goto	l7949
 15678                           
 15679                           ; BSR set to: 1
 15680                           ;ff.c: 2241: return 2;
 15681  0072AE  0E02               	movlw	2
 15682  0072B0  D0FC               	goto	l684
 15683  0072B2                     l7949:
 15684                           
 15685                           ; BSR set to: 1
 15686                           ;ff.c: 2242: chr = 3;
 15687  0072B2  0E00               	movlw	0
 15688  0072B4  0101               	movlb	1	; () banked
 15689  0072B6  6F66               	movwf	(_chr+1)& (0+255),b
 15690  0072B8  0E03               	movlw	3
 15691  0072BA  0101               	movlb	1	; () banked
 15692  0072BC  6F65               	movwf	_chr& (0+255),b
 15693                           
 15694                           ; BSR set to: 1
 15695                           ;ff.c: 2244: if (((DWORD)(((DWORD)*((BYTE*)(&fs->win[54])+3)<<24)|((DWORD)*((BYTE*)(&fs-
      +                          >win[54])+2)<<16)|((WORD)*((BYTE*)(&fs->win[54])+1)<<8)|*(BYTE*)(&fs->win[54])) & 0xFFFF
      +                          FF) == 0x544146)
 15696  0072BE  EE20 F069          	lfsr	2,105
 15697  0072C2  5046               	movf	check_fs@fs,w,c
 15698  0072C4  26D9               	addwf	fsr2l,f,c
 15699  0072C6  5047               	movf	check_fs@fs+1,w,c
 15700  0072C8  22DA               	addwfc	fsr2h,f,c
 15701  0072CA  50DF               	movf	indf2,w,c
 15702  0072CC  6E4C               	movwf	??_check_fs& (0+255),c
 15703  0072CE  504C               	movf	??_check_fs,w,c
 15704  0072D0  6E4E               	movwf	(??_check_fs+2)& (0+255),c
 15705  0072D2  6A4D               	clrf	(??_check_fs+1)& (0+255),c
 15706  0072D4  EE20 F06A          	lfsr	2,106
 15707  0072D8  5046               	movf	check_fs@fs,w,c
 15708  0072DA  26D9               	addwf	fsr2l,f,c
 15709  0072DC  5047               	movf	check_fs@fs+1,w,c
 15710  0072DE  22DA               	addwfc	fsr2h,f,c
 15711  0072E0  50DF               	movf	indf2,w,c
 15712  0072E2  6E4F               	movwf	(??_check_fs+3)& (0+255),c
 15713  0072E4  C04F  F050         	movff	??_check_fs+3,??_check_fs+4
 15714  0072E8  6A51               	clrf	(??_check_fs+5)& (0+255),c
 15715  0072EA  6A52               	clrf	(??_check_fs+6)& (0+255),c
 15716  0072EC  6A53               	clrf	(??_check_fs+7)& (0+255),c
 15717  0072EE  C051  F053         	movff	??_check_fs+5,??_check_fs+7
 15718  0072F2  C050  F052         	movff	??_check_fs+4,??_check_fs+6
 15719  0072F6  6A51               	clrf	??_check_fs+5,c
 15720  0072F8  6A50               	clrf	??_check_fs+4,c
 15721  0072FA  EE20 F06B          	lfsr	2,107
 15722  0072FE  5046               	movf	check_fs@fs,w,c
 15723  007300  26D9               	addwf	fsr2l,f,c
 15724  007302  5047               	movf	check_fs@fs+1,w,c
 15725  007304  22DA               	addwfc	fsr2h,f,c
 15726  007306  50DF               	movf	indf2,w,c
 15727  007308  6E54               	movwf	(??_check_fs+8)& (0+255),c
 15728  00730A  C054  F055         	movff	??_check_fs+8,??_check_fs+9
 15729  00730E  6A56               	clrf	(??_check_fs+10)& (0+255),c
 15730  007310  6A57               	clrf	(??_check_fs+11)& (0+255),c
 15731  007312  6A58               	clrf	(??_check_fs+12)& (0+255),c
 15732  007314  C055  F058         	movff	??_check_fs+9,??_check_fs+12
 15733  007318  6A57               	clrf	??_check_fs+11,c
 15734  00731A  6A56               	clrf	??_check_fs+10,c
 15735  00731C  6A55               	clrf	??_check_fs+9,c
 15736  00731E  5050               	movf	??_check_fs+4,w,c
 15737  007320  1055               	iorwf	??_check_fs+9,w,c
 15738  007322  6E59               	movwf	(??_check_fs+13)& (0+255),c
 15739  007324  5051               	movf	??_check_fs+5,w,c
 15740  007326  1056               	iorwf	??_check_fs+10,w,c
 15741  007328  6E5A               	movwf	(??_check_fs+14)& (0+255),c
 15742  00732A  5052               	movf	??_check_fs+6,w,c
 15743  00732C  1057               	iorwf	??_check_fs+11,w,c
 15744  00732E  6E5B               	movwf	(??_check_fs+15)& (0+255),c
 15745  007330  5053               	movf	??_check_fs+7,w,c
 15746  007332  1058               	iorwf	??_check_fs+12,w,c
 15747  007334  6E5C               	movwf	(??_check_fs+16)& (0+255),c
 15748  007336  504D               	movf	??_check_fs+1,w,c
 15749  007338  1059               	iorwf	??_check_fs+13,w,c
 15750  00733A  6E5D               	movwf	(??_check_fs+17)& (0+255),c
 15751  00733C  504E               	movf	??_check_fs+2,w,c
 15752  00733E  105A               	iorwf	??_check_fs+14,w,c
 15753  007340  6E5E               	movwf	(??_check_fs+18)& (0+255),c
 15754  007342  0E00               	movlw	0
 15755  007344  105B               	iorwf	??_check_fs+15,w,c
 15756  007346  6E5F               	movwf	(??_check_fs+19)& (0+255),c
 15757  007348  0E00               	movlw	0
 15758  00734A  105C               	iorwf	??_check_fs+16,w,c
 15759  00734C  6E60               	movwf	(??_check_fs+20)& (0+255),c
 15760  00734E  EE20 F068          	lfsr	2,104
 15761  007352  5046               	movf	check_fs@fs,w,c
 15762  007354  26D9               	addwf	fsr2l,f,c
 15763  007356  5047               	movf	check_fs@fs+1,w,c
 15764  007358  22DA               	addwfc	fsr2h,f,c
 15765  00735A  50DF               	movf	indf2,w,c
 15766  00735C  6E61               	movwf	(??_check_fs+21)& (0+255),c
 15767  00735E  5061               	movf	??_check_fs+21,w,c
 15768  007360  105D               	iorwf	??_check_fs+17,w,c
 15769  007362  6E62               	movwf	(??_check_fs+22)& (0+255),c
 15770  007364  505E               	movf	??_check_fs+18,w,c
 15771  007366  6E63               	movwf	(??_check_fs+23)& (0+255),c
 15772  007368  505F               	movf	??_check_fs+19,w,c
 15773  00736A  6E64               	movwf	(??_check_fs+24)& (0+255),c
 15774  00736C  5060               	movf	??_check_fs+20,w,c
 15775  00736E  6E65               	movwf	(??_check_fs+25)& (0+255),c
 15776  007370  0EFF               	movlw	255
 15777  007372  1462               	andwf	??_check_fs+22,w,c
 15778  007374  6E66               	movwf	(??_check_fs+26)& (0+255),c
 15779  007376  0EFF               	movlw	255
 15780  007378  1463               	andwf	??_check_fs+23,w,c
 15781  00737A  6E67               	movwf	(??_check_fs+27)& (0+255),c
 15782  00737C  0EFF               	movlw	255
 15783  00737E  1464               	andwf	??_check_fs+24,w,c
 15784  007380  6E68               	movwf	(??_check_fs+28)& (0+255),c
 15785  007382  0E00               	movlw	0
 15786  007384  1465               	andwf	??_check_fs+25,w,c
 15787  007386  6E69               	movwf	(??_check_fs+29)& (0+255),c
 15788  007388  5068               	movf	??_check_fs+28,w,c
 15789  00738A  0A54               	xorlw	84
 15790  00738C  0E46               	movlw	70
 15791  00738E  B4D8               	btfsc	status,2,c
 15792  007390  1866               	xorwf	??_check_fs+26,w,c
 15793  007392  0E41               	movlw	65
 15794  007394  B4D8               	btfsc	status,2,c
 15795  007396  1867               	xorwf	??_check_fs+27,w,c
 15796  007398  1069               	iorwf	??_check_fs+29,w,c
 15797  00739A  A4D8               	btfss	status,2,c
 15798  00739C  D007               	goto	l7959
 15799                           
 15800                           ; BSR set to: 1
 15801                           ;ff.c: 2245: {
 15802                           ;ff.c: 2246: chr = 30;
 15803  00739E  0E00               	movlw	0
 15804  0073A0  0101               	movlb	1	; () banked
 15805  0073A2  6F66               	movwf	(_chr+1)& (0+255),b
 15806  0073A4  0E1E               	movlw	30
 15807  0073A6  0101               	movlb	1	; () banked
 15808  0073A8  6F65               	movwf	_chr& (0+255),b
 15809  0073AA  D076               	goto	u10490
 15810  0073AC                     l7959:
 15811                           
 15812                           ; BSR set to: 1
 15813                           ;ff.c: 2248: }
 15814                           ;ff.c: 2249: chr = 4;
 15815  0073AC  0E00               	movlw	0
 15816  0073AE  0101               	movlb	1	; () banked
 15817  0073B0  6F66               	movwf	(_chr+1)& (0+255),b
 15818  0073B2  0E04               	movlw	4
 15819  0073B4  0101               	movlb	1	; () banked
 15820  0073B6  6F65               	movwf	_chr& (0+255),b
 15821                           
 15822                           ; BSR set to: 1
 15823                           ;ff.c: 2250: if (((DWORD)(((DWORD)*((BYTE*)(&fs->win[82])+3)<<24)|((DWORD)*((BYTE*)(&fs-
      +                          >win[82])+2)<<16)|((WORD)*((BYTE*)(&fs->win[82])+1)<<8)|*(BYTE*)(&fs->win[82])) & 0xFFFF
      +                          FF) == 0x544146)
 15824  0073B8  EE20 F085          	lfsr	2,133
 15825  0073BC  5046               	movf	check_fs@fs,w,c
 15826  0073BE  26D9               	addwf	fsr2l,f,c
 15827  0073C0  5047               	movf	check_fs@fs+1,w,c
 15828  0073C2  22DA               	addwfc	fsr2h,f,c
 15829  0073C4  50DF               	movf	indf2,w,c
 15830  0073C6  6E4C               	movwf	??_check_fs& (0+255),c
 15831  0073C8  504C               	movf	??_check_fs,w,c
 15832  0073CA  6E4E               	movwf	(??_check_fs+2)& (0+255),c
 15833  0073CC  6A4D               	clrf	(??_check_fs+1)& (0+255),c
 15834  0073CE  EE20 F086          	lfsr	2,134
 15835  0073D2  5046               	movf	check_fs@fs,w,c
 15836  0073D4  26D9               	addwf	fsr2l,f,c
 15837  0073D6  5047               	movf	check_fs@fs+1,w,c
 15838  0073D8  22DA               	addwfc	fsr2h,f,c
 15839  0073DA  50DF               	movf	indf2,w,c
 15840  0073DC  6E4F               	movwf	(??_check_fs+3)& (0+255),c
 15841  0073DE  C04F  F050         	movff	??_check_fs+3,??_check_fs+4
 15842  0073E2  6A51               	clrf	(??_check_fs+5)& (0+255),c
 15843  0073E4  6A52               	clrf	(??_check_fs+6)& (0+255),c
 15844  0073E6  6A53               	clrf	(??_check_fs+7)& (0+255),c
 15845  0073E8  C051  F053         	movff	??_check_fs+5,??_check_fs+7
 15846  0073EC  C050  F052         	movff	??_check_fs+4,??_check_fs+6
 15847  0073F0  6A51               	clrf	??_check_fs+5,c
 15848  0073F2  6A50               	clrf	??_check_fs+4,c
 15849  0073F4  EE20 F087          	lfsr	2,135
 15850  0073F8  5046               	movf	check_fs@fs,w,c
 15851  0073FA  26D9               	addwf	fsr2l,f,c
 15852  0073FC  5047               	movf	check_fs@fs+1,w,c
 15853  0073FE  22DA               	addwfc	fsr2h,f,c
 15854  007400  50DF               	movf	indf2,w,c
 15855  007402  6E54               	movwf	(??_check_fs+8)& (0+255),c
 15856  007404  C054  F055         	movff	??_check_fs+8,??_check_fs+9
 15857  007408  6A56               	clrf	(??_check_fs+10)& (0+255),c
 15858  00740A  6A57               	clrf	(??_check_fs+11)& (0+255),c
 15859  00740C  6A58               	clrf	(??_check_fs+12)& (0+255),c
 15860  00740E  C055  F058         	movff	??_check_fs+9,??_check_fs+12
 15861  007412  6A57               	clrf	??_check_fs+11,c
 15862  007414  6A56               	clrf	??_check_fs+10,c
 15863  007416  6A55               	clrf	??_check_fs+9,c
 15864  007418  5050               	movf	??_check_fs+4,w,c
 15865  00741A  1055               	iorwf	??_check_fs+9,w,c
 15866  00741C  6E59               	movwf	(??_check_fs+13)& (0+255),c
 15867  00741E  5051               	movf	??_check_fs+5,w,c
 15868  007420  1056               	iorwf	??_check_fs+10,w,c
 15869  007422  6E5A               	movwf	(??_check_fs+14)& (0+255),c
 15870  007424  5052               	movf	??_check_fs+6,w,c
 15871  007426  1057               	iorwf	??_check_fs+11,w,c
 15872  007428  6E5B               	movwf	(??_check_fs+15)& (0+255),c
 15873  00742A  5053               	movf	??_check_fs+7,w,c
 15874  00742C  1058               	iorwf	??_check_fs+12,w,c
 15875  00742E  6E5C               	movwf	(??_check_fs+16)& (0+255),c
 15876  007430  504D               	movf	??_check_fs+1,w,c
 15877  007432  1059               	iorwf	??_check_fs+13,w,c
 15878  007434  6E5D               	movwf	(??_check_fs+17)& (0+255),c
 15879  007436  504E               	movf	??_check_fs+2,w,c
 15880  007438  105A               	iorwf	??_check_fs+14,w,c
 15881  00743A  6E5E               	movwf	(??_check_fs+18)& (0+255),c
 15882  00743C  0E00               	movlw	0
 15883  00743E  105B               	iorwf	??_check_fs+15,w,c
 15884  007440  6E5F               	movwf	(??_check_fs+19)& (0+255),c
 15885  007442  0E00               	movlw	0
 15886  007444  105C               	iorwf	??_check_fs+16,w,c
 15887  007446  6E60               	movwf	(??_check_fs+20)& (0+255),c
 15888  007448  EE20 F084          	lfsr	2,132
 15889  00744C  5046               	movf	check_fs@fs,w,c
 15890  00744E  26D9               	addwf	fsr2l,f,c
 15891  007450  5047               	movf	check_fs@fs+1,w,c
 15892  007452  22DA               	addwfc	fsr2h,f,c
 15893  007454  50DF               	movf	indf2,w,c
 15894  007456  6E61               	movwf	(??_check_fs+21)& (0+255),c
 15895  007458  5061               	movf	??_check_fs+21,w,c
 15896  00745A  105D               	iorwf	??_check_fs+17,w,c
 15897  00745C  6E62               	movwf	(??_check_fs+22)& (0+255),c
 15898  00745E  505E               	movf	??_check_fs+18,w,c
 15899  007460  6E63               	movwf	(??_check_fs+23)& (0+255),c
 15900  007462  505F               	movf	??_check_fs+19,w,c
 15901  007464  6E64               	movwf	(??_check_fs+24)& (0+255),c
 15902  007466  5060               	movf	??_check_fs+20,w,c
 15903  007468  6E65               	movwf	(??_check_fs+25)& (0+255),c
 15904  00746A  0EFF               	movlw	255
 15905  00746C  1462               	andwf	??_check_fs+22,w,c
 15906  00746E  6E66               	movwf	(??_check_fs+26)& (0+255),c
 15907  007470  0EFF               	movlw	255
 15908  007472  1463               	andwf	??_check_fs+23,w,c
 15909  007474  6E67               	movwf	(??_check_fs+27)& (0+255),c
 15910  007476  0EFF               	movlw	255
 15911  007478  1464               	andwf	??_check_fs+24,w,c
 15912  00747A  6E68               	movwf	(??_check_fs+28)& (0+255),c
 15913  00747C  0E00               	movlw	0
 15914  00747E  1465               	andwf	??_check_fs+25,w,c
 15915  007480  6E69               	movwf	(??_check_fs+29)& (0+255),c
 15916  007482  5068               	movf	??_check_fs+28,w,c
 15917  007484  0A54               	xorlw	84
 15918  007486  0E46               	movlw	70
 15919  007488  B4D8               	btfsc	status,2,c
 15920  00748A  1866               	xorwf	??_check_fs+26,w,c
 15921  00748C  0E41               	movlw	65
 15922  00748E  B4D8               	btfsc	status,2,c
 15923  007490  1867               	xorwf	??_check_fs+27,w,c
 15924  007492  1069               	iorwf	??_check_fs+29,w,c
 15925  007494  A4D8               	btfss	status,2,c
 15926  007496  D002               	goto	l7967
 15927  007498                     u10490:
 15928                           
 15929                           ; BSR set to: 1
 15930                           ;ff.c: 2251: return 0;
 15931  007498  0E00               	movlw	0
 15932  00749A  D007               	goto	l684
 15933  00749C                     l7967:
 15934                           
 15935                           ; BSR set to: 1
 15936                           ;ff.c: 2252: chr = 5;
 15937  00749C  0E00               	movlw	0
 15938  00749E  0101               	movlb	1	; () banked
 15939  0074A0  6F66               	movwf	(_chr+1)& (0+255),b
 15940  0074A2  0E05               	movlw	5
 15941  0074A4  0101               	movlb	1	; () banked
 15942  0074A6  6F65               	movwf	_chr& (0+255),b
 15943                           
 15944                           ; BSR set to: 1
 15945                           ;ff.c: 2253: return 1;
 15946  0074A8  0E01               	movlw	1
 15947  0074AA                     l684:
 15948  0074AA  0012               	return	
 15949  0074AC                     __end_of_check_fs:
 15950                           	opt stack 0
 15951                           tblptru	equ	0xFF8
 15952                           tblptrh	equ	0xFF7
 15953                           tblptrl	equ	0xFF6
 15954                           tablat	equ	0xFF5
 15955                           prodh	equ	0xFF4
 15956                           prodl	equ	0xFF3
 15957                           indf0	equ	0xFEF
 15958                           postinc0	equ	0xFEE
 15959                           fsr0h	equ	0xFEA
 15960                           fsr0l	equ	0xFE9
 15961                           wreg	equ	0xFE8
 15962                           indf1	equ	0xFE7
 15963                           postinc1	equ	0xFE6
 15964                           postdec1	equ	0xFE5
 15965                           fsr1h	equ	0xFE2
 15966                           fsr1l	equ	0xFE1
 15967                           indf2	equ	0xFDF
 15968                           postinc2	equ	0xFDE
 15969                           postdec2	equ	0xFDD
 15970                           plusw2	equ	0xFDB
 15971                           fsr2h	equ	0xFDA
 15972                           fsr2l	equ	0xFD9
 15973                           status	equ	0xFD8
 15974                           
 15975 ;; *************** function ___lmul *****************
 15976 ;; Defined at:
 15977 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\Umul32.c"
 15978 ;; Parameters:    Size  Location     Type
 15979 ;;  multiplier      4    0[COMRAM] unsigned long 
 15980 ;;  multiplicand    4    4[COMRAM] unsigned long 
 15981 ;; Auto vars:     Size  Location     Type
 15982 ;;  product         4    8[COMRAM] unsigned long 
 15983 ;; Return value:  Size  Location     Type
 15984 ;;                  4    0[COMRAM] unsigned long 
 15985 ;; Registers used:
 15986 ;;		wreg, status,2, status,0
 15987 ;; Tracked objects:
 15988 ;;		On entry : 0/0
 15989 ;;		On exit  : 0/0
 15990 ;;		Unchanged: 0/0
 15991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 15992 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15993 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15994 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15995 ;;      Totals:        12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 15996 ;;Total ram usage:       12 bytes
 15997 ;; Hardware stack levels used:    1
 15998 ;; This function calls:
 15999 ;;		Nothing
 16000 ;; This function is called by:
 16001 ;;		_clust2sect
 16002 ;;		_find_volume
 16003 ;;		_f_mkfs
 16004 ;; This function uses a non-reentrant model
 16005 ;;
 16006                           
 16007                           	psect	text26
 16008  0053EE                     __ptext26:
 16009                           	opt stack 0
 16010  0053EE                     ___lmul:
 16011                           	opt stack 28
 16012                           
 16013                           ;incstack = 0
 16014  0053EE  0E00               	movlw	0
 16015  0053F0  6E09               	movwf	___lmul@product,c
 16016  0053F2  0E00               	movlw	0
 16017  0053F4  6E0A               	movwf	___lmul@product+1,c
 16018  0053F6  0E00               	movlw	0
 16019  0053F8  6E0B               	movwf	___lmul@product+2,c
 16020  0053FA  0E00               	movlw	0
 16021  0053FC  6E0C               	movwf	___lmul@product+3,c
 16022  0053FE                     l7063:
 16023  0053FE  A001               	btfss	___lmul@multiplier,0,c
 16024  005400  D008               	goto	l7067
 16025  005402  5005               	movf	___lmul@multiplicand,w,c
 16026  005404  2609               	addwf	___lmul@product,f,c
 16027  005406  5006               	movf	___lmul@multiplicand+1,w,c
 16028  005408  220A               	addwfc	___lmul@product+1,f,c
 16029  00540A  5007               	movf	___lmul@multiplicand+2,w,c
 16030  00540C  220B               	addwfc	___lmul@product+2,f,c
 16031  00540E  5008               	movf	___lmul@multiplicand+3,w,c
 16032  005410  220C               	addwfc	___lmul@product+3,f,c
 16033  005412                     l7067:
 16034  005412  90D8               	bcf	status,0,c
 16035  005414  3605               	rlcf	___lmul@multiplicand,f,c
 16036  005416  3606               	rlcf	___lmul@multiplicand+1,f,c
 16037  005418  3607               	rlcf	___lmul@multiplicand+2,f,c
 16038  00541A  3608               	rlcf	___lmul@multiplicand+3,f,c
 16039  00541C  90D8               	bcf	status,0,c
 16040  00541E  3204               	rrcf	___lmul@multiplier+3,f,c
 16041  005420  3203               	rrcf	___lmul@multiplier+2,f,c
 16042  005422  3202               	rrcf	___lmul@multiplier+1,f,c
 16043  005424  3201               	rrcf	___lmul@multiplier,f,c
 16044  005426  5004               	movf	___lmul@multiplier+3,w,c
 16045  005428  1001               	iorwf	___lmul@multiplier,w,c
 16046  00542A  1002               	iorwf	___lmul@multiplier+1,w,c
 16047  00542C  1003               	iorwf	___lmul@multiplier+2,w,c
 16048  00542E  A4D8               	btfss	status,2,c
 16049  005430  D7E6               	goto	l7063
 16050  005432  C009  F001         	movff	___lmul@product,?___lmul
 16051  005436  C00A  F002         	movff	___lmul@product+1,?___lmul+1
 16052  00543A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
 16053  00543E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
 16054  005442  0012               	return	
 16055  005444                     __end_of___lmul:
 16056                           	opt stack 0
 16057                           tblptru	equ	0xFF8
 16058                           tblptrh	equ	0xFF7
 16059                           tblptrl	equ	0xFF6
 16060                           tablat	equ	0xFF5
 16061                           prodh	equ	0xFF4
 16062                           prodl	equ	0xFF3
 16063                           indf0	equ	0xFEF
 16064                           postinc0	equ	0xFEE
 16065                           fsr0h	equ	0xFEA
 16066                           fsr0l	equ	0xFE9
 16067                           wreg	equ	0xFE8
 16068                           indf1	equ	0xFE7
 16069                           postinc1	equ	0xFE6
 16070                           postdec1	equ	0xFE5
 16071                           fsr1h	equ	0xFE2
 16072                           fsr1l	equ	0xFE1
 16073                           indf2	equ	0xFDF
 16074                           postinc2	equ	0xFDE
 16075                           postdec2	equ	0xFDD
 16076                           plusw2	equ	0xFDB
 16077                           fsr2h	equ	0xFDA
 16078                           fsr2l	equ	0xFD9
 16079                           status	equ	0xFD8
 16080                           
 16081 ;; *************** function ___lldiv *****************
 16082 ;; Defined at:
 16083 ;;		line 8 in file "C:\Program Files (x86)\Microchip\xc8\v1.33\sources\common\lldiv.c"
 16084 ;; Parameters:    Size  Location     Type
 16085 ;;  dividend        4    0[COMRAM] unsigned long 
 16086 ;;  divisor         4    4[COMRAM] unsigned long 
 16087 ;; Auto vars:     Size  Location     Type
 16088 ;;  quotient        4    8[COMRAM] unsigned long 
 16089 ;;  counter         1   12[COMRAM] unsigned char 
 16090 ;; Return value:  Size  Location     Type
 16091 ;;                  4    0[COMRAM] unsigned long 
 16092 ;; Registers used:
 16093 ;;		wreg, status,2, status,0
 16094 ;; Tracked objects:
 16095 ;;		On entry : 0/0
 16096 ;;		On exit  : 0/0
 16097 ;;		Unchanged: 0/0
 16098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16099 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16100 ;;      Locals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16101 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16102 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16103 ;;Total ram usage:       13 bytes
 16104 ;; Hardware stack levels used:    1
 16105 ;; This function calls:
 16106 ;;		Nothing
 16107 ;; This function is called by:
 16108 ;;		_clmt_clust
 16109 ;;		_find_volume
 16110 ;;		_f_lseek
 16111 ;;		_f_mkfs
 16112 ;;		_f_printf
 16113 ;; This function uses a non-reentrant model
 16114 ;;
 16115                           
 16116                           	psect	text27
 16117  005670                     __ptext27:
 16118                           	opt stack 0
 16119  005670                     ___lldiv:
 16120                           	opt stack 28
 16121                           
 16122                           ;incstack = 0
 16123  005670  0E00               	movlw	0
 16124  005672  6E09               	movwf	___lldiv@quotient,c
 16125  005674  0E00               	movlw	0
 16126  005676  6E0A               	movwf	___lldiv@quotient+1,c
 16127  005678  0E00               	movlw	0
 16128  00567A  6E0B               	movwf	___lldiv@quotient+2,c
 16129  00567C  0E00               	movlw	0
 16130  00567E  6E0C               	movwf	___lldiv@quotient+3,c
 16131  005680  5008               	movf	___lldiv@divisor+3,w,c
 16132  005682  1005               	iorwf	___lldiv@divisor,w,c
 16133  005684  1006               	iorwf	___lldiv@divisor+1,w,c
 16134  005686  1007               	iorwf	___lldiv@divisor+2,w,c
 16135  005688  B4D8               	btfsc	status,2,c
 16136  00568A  D02A               	goto	l1865
 16137  00568C  0E01               	movlw	1
 16138  00568E  6E0D               	movwf	___lldiv@counter,c
 16139  005690  D006               	goto	l7999
 16140  005692                     l7997:
 16141  005692  90D8               	bcf	status,0,c
 16142  005694  3605               	rlcf	___lldiv@divisor,f,c
 16143  005696  3606               	rlcf	___lldiv@divisor+1,f,c
 16144  005698  3607               	rlcf	___lldiv@divisor+2,f,c
 16145  00569A  3608               	rlcf	___lldiv@divisor+3,f,c
 16146  00569C  2A0D               	incf	___lldiv@counter,f,c
 16147  00569E                     l7999:
 16148  00569E  AE08               	btfss	___lldiv@divisor+3,7,c
 16149  0056A0  D7F8               	goto	l7997
 16150  0056A2                     l8001:
 16151  0056A2  90D8               	bcf	status,0,c
 16152  0056A4  3609               	rlcf	___lldiv@quotient,f,c
 16153  0056A6  360A               	rlcf	___lldiv@quotient+1,f,c
 16154  0056A8  360B               	rlcf	___lldiv@quotient+2,f,c
 16155  0056AA  360C               	rlcf	___lldiv@quotient+3,f,c
 16156  0056AC  5005               	movf	___lldiv@divisor,w,c
 16157  0056AE  5C01               	subwf	___lldiv@dividend,w,c
 16158  0056B0  5006               	movf	___lldiv@divisor+1,w,c
 16159  0056B2  5802               	subwfb	___lldiv@dividend+1,w,c
 16160  0056B4  5007               	movf	___lldiv@divisor+2,w,c
 16161  0056B6  5803               	subwfb	___lldiv@dividend+2,w,c
 16162  0056B8  5008               	movf	___lldiv@divisor+3,w,c
 16163  0056BA  5804               	subwfb	___lldiv@dividend+3,w,c
 16164  0056BC  A0D8               	btfss	status,0,c
 16165  0056BE  D009               	goto	l8009
 16166  0056C0  5005               	movf	___lldiv@divisor,w,c
 16167  0056C2  5E01               	subwf	___lldiv@dividend,f,c
 16168  0056C4  5006               	movf	___lldiv@divisor+1,w,c
 16169  0056C6  5A02               	subwfb	___lldiv@dividend+1,f,c
 16170  0056C8  5007               	movf	___lldiv@divisor+2,w,c
 16171  0056CA  5A03               	subwfb	___lldiv@dividend+2,f,c
 16172  0056CC  5008               	movf	___lldiv@divisor+3,w,c
 16173  0056CE  5A04               	subwfb	___lldiv@dividend+3,f,c
 16174  0056D0  8009               	bsf	___lldiv@quotient,0,c
 16175  0056D2                     l8009:
 16176  0056D2  90D8               	bcf	status,0,c
 16177  0056D4  3208               	rrcf	___lldiv@divisor+3,f,c
 16178  0056D6  3207               	rrcf	___lldiv@divisor+2,f,c
 16179  0056D8  3206               	rrcf	___lldiv@divisor+1,f,c
 16180  0056DA  3205               	rrcf	___lldiv@divisor,f,c
 16181  0056DC  2E0D               	decfsz	___lldiv@counter,f,c
 16182  0056DE  D7E1               	goto	l8001
 16183  0056E0                     l1865:
 16184  0056E0  C009  F001         	movff	___lldiv@quotient,?___lldiv
 16185  0056E4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
 16186  0056E8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
 16187  0056EC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
 16188  0056F0  0012               	return	
 16189  0056F2                     __end_of___lldiv:
 16190                           	opt stack 0
 16191                           tblptru	equ	0xFF8
 16192                           tblptrh	equ	0xFF7
 16193                           tblptrl	equ	0xFF6
 16194                           tablat	equ	0xFF5
 16195                           prodh	equ	0xFF4
 16196                           prodl	equ	0xFF3
 16197                           indf0	equ	0xFEF
 16198                           postinc0	equ	0xFEE
 16199                           fsr0h	equ	0xFEA
 16200                           fsr0l	equ	0xFE9
 16201                           wreg	equ	0xFE8
 16202                           indf1	equ	0xFE7
 16203                           postinc1	equ	0xFE6
 16204                           postdec1	equ	0xFE5
 16205                           fsr1h	equ	0xFE2
 16206                           fsr1l	equ	0xFE1
 16207                           indf2	equ	0xFDF
 16208                           postinc2	equ	0xFDE
 16209                           postdec2	equ	0xFDD
 16210                           plusw2	equ	0xFDB
 16211                           fsr2h	equ	0xFDA
 16212                           fsr2l	equ	0xFD9
 16213                           status	equ	0xFD8
 16214                           
 16215 ;; *************** function _f_close *****************
 16216 ;; Defined at:
 16217 ;;		line 2949 in file "ff.c"
 16218 ;; Parameters:    Size  Location     Type
 16219 ;;  fp              2   90[COMRAM] PTR struct .
 16220 ;;		 -> fp(34), 
 16221 ;; Auto vars:     Size  Location     Type
 16222 ;;  res             1   92[COMRAM] enum E67
 16223 ;; Return value:  Size  Location     Type
 16224 ;;                  1    wreg      enum E3569
 16225 ;; Registers used:
 16226 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16227 ;; Tracked objects:
 16228 ;;		On entry : 0/0
 16229 ;;		On exit  : 0/0
 16230 ;;		Unchanged: 0/0
 16231 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16232 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16233 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16234 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16235 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16236 ;;Total ram usage:        3 bytes
 16237 ;; Hardware stack levels used:    1
 16238 ;; Hardware stack levels required when called:    8
 16239 ;; This function calls:
 16240 ;;		_f_sync
 16241 ;;		_validate
 16242 ;; This function is called by:
 16243 ;;		_main
 16244 ;; This function uses a non-reentrant model
 16245 ;;
 16246                           
 16247                           	psect	text28
 16248  005230                     __ptext28:
 16249                           	opt stack 0
 16250  005230                     _f_close:
 16251                           	opt stack 22
 16252                           
 16253                           ;ff.c: 2953: FRESULT res;
 16254                           ;ff.c: 2957: res = f_sync(fp);
 16255                           
 16256                           ;incstack = 0
 16257  005230  C05C  F04F         	movff	f_close@fp+1,f_sync@fp+1
 16258  005234  C05B  F04E         	movff	f_close@fp,f_sync@fp
 16259  005238  EC65  F034         	call	_f_sync	;wreg free
 16260  00523C  6E5D               	movwf	f_close@res,c
 16261                           
 16262                           ;ff.c: 2958: if (res == FR_OK)
 16263  00523E  665D               	tstfsz	f_close@res,c
 16264  005240  D011               	goto	l8979
 16265                           
 16266                           ;ff.c: 2960: {
 16267                           ;ff.c: 2961: res = validate(fp);
 16268  005242  C05C  F003         	movff	f_close@fp+1,validate@obj+1
 16269  005246  C05B  F002         	movff	f_close@fp,validate@obj
 16270  00524A  ECC2  F02B         	call	_validate	;wreg free
 16271  00524E  6E5D               	movwf	f_close@res,c
 16272                           
 16273                           ;ff.c: 2962: if (res == FR_OK) {
 16274  005250  665D               	tstfsz	f_close@res,c
 16275  005252  D008               	goto	l8979
 16276                           
 16277                           ;ff.c: 2970: fp->fs = 0;
 16278  005254  C05B  FFD9         	movff	f_close@fp,fsr2l
 16279  005258  C05C  FFDA         	movff	f_close@fp+1,fsr2h
 16280  00525C  0E00               	movlw	0
 16281  00525E  6EDE               	movwf	postinc2,c
 16282  005260  0E00               	movlw	0
 16283  005262  6EDD               	movwf	postdec2,c
 16284  005264                     l8979:
 16285                           
 16286                           ;ff.c: 2974: }
 16287                           ;ff.c: 2975: }
 16288                           ;ff.c: 2976: return res;
 16289  005264  505D               	movf	f_close@res,w,c
 16290  005266  0012               	return	
 16291  005268                     __end_of_f_close:
 16292                           	opt stack 0
 16293                           tblptru	equ	0xFF8
 16294                           tblptrh	equ	0xFF7
 16295                           tblptrl	equ	0xFF6
 16296                           tablat	equ	0xFF5
 16297                           prodh	equ	0xFF4
 16298                           prodl	equ	0xFF3
 16299                           indf0	equ	0xFEF
 16300                           postinc0	equ	0xFEE
 16301                           fsr0h	equ	0xFEA
 16302                           fsr0l	equ	0xFE9
 16303                           wreg	equ	0xFE8
 16304                           indf1	equ	0xFE7
 16305                           postinc1	equ	0xFE6
 16306                           postdec1	equ	0xFE5
 16307                           fsr1h	equ	0xFE2
 16308                           fsr1l	equ	0xFE1
 16309                           indf2	equ	0xFDF
 16310                           postinc2	equ	0xFDE
 16311                           postdec2	equ	0xFDD
 16312                           plusw2	equ	0xFDB
 16313                           fsr2h	equ	0xFDA
 16314                           fsr2l	equ	0xFD9
 16315                           status	equ	0xFD8
 16316                           
 16317 ;; *************** function _f_sync *****************
 16318 ;; Defined at:
 16319 ;;		line 2901 in file "ff.c"
 16320 ;; Parameters:    Size  Location     Type
 16321 ;;  fp              2   77[COMRAM] PTR struct .
 16322 ;;		 -> fp(34), 
 16323 ;; Auto vars:     Size  Location     Type
 16324 ;;  tm              4   84[COMRAM] unsigned long 
 16325 ;;  dir             2   88[COMRAM] PTR unsigned char 
 16326 ;;		 -> NULL(0), FatFs(562), 
 16327 ;;  res             1   83[COMRAM] enum E67
 16328 ;; Return value:  Size  Location     Type
 16329 ;;                  1    wreg      enum E67
 16330 ;; Registers used:
 16331 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16332 ;; Tracked objects:
 16333 ;;		On entry : 0/0
 16334 ;;		On exit  : 0/0
 16335 ;;		Unchanged: 0/0
 16336 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16337 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16338 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16339 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16340 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16341 ;;Total ram usage:       13 bytes
 16342 ;; Hardware stack levels used:    1
 16343 ;; Hardware stack levels required when called:    7
 16344 ;; This function calls:
 16345 ;;		_move_window
 16346 ;;		_st_clust
 16347 ;;		_sync_fs
 16348 ;;		_validate
 16349 ;; This function is called by:
 16350 ;;		_f_close
 16351 ;; This function uses a non-reentrant model
 16352 ;;
 16353                           
 16354                           	psect	text29
 16355  0068CA                     __ptext29:
 16356                           	opt stack 0
 16357  0068CA                     _f_sync:
 16358                           	opt stack 22
 16359                           
 16360                           ;ff.c: 2905: FRESULT res;
 16361                           ;ff.c: 2906: DWORD tm;
 16362                           ;ff.c: 2907: BYTE *dir;
 16363                           ;ff.c: 2910: res = validate(fp);
 16364                           
 16365                           ;incstack = 0
 16366  0068CA  C04F  F003         	movff	f_sync@fp+1,validate@obj+1
 16367  0068CE  C04E  F002         	movff	f_sync@fp,validate@obj
 16368  0068D2  ECC2  F02B         	call	_validate	;wreg free
 16369  0068D6  6E54               	movwf	f_sync@res,c
 16370                           
 16371                           ;ff.c: 2911: if (res == FR_OK) {
 16372  0068D8  6654               	tstfsz	f_sync@res,c
 16373  0068DA  D108               	goto	l8517
 16374                           
 16375                           ;ff.c: 2912: if (fp->flag & 0x20) {
 16376  0068DC  EE20 F004          	lfsr	2,4
 16377  0068E0  504E               	movf	f_sync@fp,w,c
 16378  0068E2  26D9               	addwf	fsr2l,f,c
 16379  0068E4  504F               	movf	f_sync@fp+1,w,c
 16380  0068E6  22DA               	addwfc	fsr2h,f,c
 16381  0068E8  50DF               	movf	indf2,w,c
 16382  0068EA  6E50               	movwf	??_f_sync& (0+255),c
 16383  0068EC  AA50               	btfss	??_f_sync,5,c
 16384  0068EE  D0FE               	goto	l8517
 16385                           
 16386                           ;ff.c: 2921: res = move_window(fp->fs, fp->dir_sect);
 16387  0068F0  C04E  FFD9         	movff	f_sync@fp,fsr2l
 16388  0068F4  C04F  FFDA         	movff	f_sync@fp+1,fsr2h
 16389  0068F8  CFDE F03B          	movff	postinc2,move_window@fs
 16390  0068FC  CFDD F03C          	movff	postdec2,move_window@fs+1
 16391  006900  EE20 F01A          	lfsr	2,26
 16392  006904  504E               	movf	f_sync@fp,w,c
 16393  006906  26D9               	addwf	fsr2l,f,c
 16394  006908  504F               	movf	f_sync@fp+1,w,c
 16395  00690A  22DA               	addwfc	fsr2h,f,c
 16396  00690C  CFDE F03D          	movff	postinc2,move_window@sector
 16397  006910  CFDE F03E          	movff	postinc2,move_window@sector+1
 16398  006914  CFDE F03F          	movff	postinc2,move_window@sector+2
 16399  006918  CFDE F040          	movff	postinc2,move_window@sector+3
 16400  00691C  EC66  F02C         	call	_move_window	;wreg free
 16401  006920  6E54               	movwf	f_sync@res,c
 16402                           
 16403                           ;ff.c: 2922: if (res == FR_OK) {
 16404  006922  6654               	tstfsz	f_sync@res,c
 16405  006924  D0E3               	goto	l8517
 16406                           
 16407                           ;ff.c: 2923: dir = fp->dir_ptr;
 16408  006926  EE20 F01E          	lfsr	2,30
 16409  00692A  504E               	movf	f_sync@fp,w,c
 16410  00692C  26D9               	addwf	fsr2l,f,c
 16411  00692E  504F               	movf	f_sync@fp+1,w,c
 16412  006930  22DA               	addwfc	fsr2h,f,c
 16413  006932  CFDE F059          	movff	postinc2,f_sync@dir
 16414  006936  CFDD F05A          	movff	postdec2,f_sync@dir+1
 16415                           
 16416                           ;ff.c: 2924: dir[11] |= 0x20;
 16417  00693A  EE20 F00B          	lfsr	2,11
 16418  00693E  5059               	movf	f_sync@dir,w,c
 16419  006940  26D9               	addwf	fsr2l,f,c
 16420  006942  505A               	movf	f_sync@dir+1,w,c
 16421  006944  22DA               	addwfc	fsr2h,f,c
 16422  006946  0E00               	movlw	0
 16423  006948  8ADB               	bsf	plusw2,5,c
 16424                           
 16425                           ;ff.c: 2925: *(BYTE*)(dir + 28)=(BYTE)(fp->fsize); *((BYTE*)(dir + 28)+1)=(BYTE)((WORD)(
      +                          fp->fsize)>>8); *((BYTE*)(dir + 28)+2)=(BYTE)((DWORD)(fp->fsize)>>16); *((BYTE*)(dir + 2
      +                          8)+3)=(BYTE)((DWORD)(fp->fsize)>>24);
 16426  00694A  EE20 F00A          	lfsr	2,10
 16427  00694E  504E               	movf	f_sync@fp,w,c
 16428  006950  26D9               	addwf	fsr2l,f,c
 16429  006952  504F               	movf	f_sync@fp+1,w,c
 16430  006954  22DA               	addwfc	fsr2h,f,c
 16431  006956  EE10 F01C          	lfsr	1,28
 16432  00695A  5059               	movf	f_sync@dir,w,c
 16433  00695C  26E1               	addwf	fsr1l,f,c
 16434  00695E  505A               	movf	f_sync@dir+1,w,c
 16435  006960  22E2               	addwfc	fsr1h,f,c
 16436  006962  CFDF FFE7          	movff	indf2,indf1
 16437  006966  EE20 F01D          	lfsr	2,29
 16438  00696A  5059               	movf	f_sync@dir,w,c
 16439  00696C  26D9               	addwf	fsr2l,f,c
 16440  00696E  505A               	movf	f_sync@dir+1,w,c
 16441  006970  22DA               	addwfc	fsr2h,f,c
 16442  006972  EE10 F00A          	lfsr	1,10
 16443  006976  504E               	movf	f_sync@fp,w,c
 16444  006978  26E1               	addwf	fsr1l,f,c
 16445  00697A  504F               	movf	f_sync@fp+1,w,c
 16446  00697C  22E2               	addwfc	fsr1h,f,c
 16447  00697E  CFE6 F050          	movff	postinc1,??_f_sync
 16448  006982  CFE5 F051          	movff	postdec1,??_f_sync+1
 16449  006986  C051  F050         	movff	??_f_sync+1,??_f_sync
 16450  00698A  6A51               	clrf	??_f_sync+1,c
 16451  00698C  5050               	movf	??_f_sync,w,c
 16452  00698E  6EDF               	movwf	indf2,c
 16453  006990  EE20 F01E          	lfsr	2,30
 16454  006994  5059               	movf	f_sync@dir,w,c
 16455  006996  26D9               	addwf	fsr2l,f,c
 16456  006998  505A               	movf	f_sync@dir+1,w,c
 16457  00699A  22DA               	addwfc	fsr2h,f,c
 16458  00699C  EE10 F00A          	lfsr	1,10
 16459  0069A0  504E               	movf	f_sync@fp,w,c
 16460  0069A2  26E1               	addwf	fsr1l,f,c
 16461  0069A4  504F               	movf	f_sync@fp+1,w,c
 16462  0069A6  22E2               	addwfc	fsr1h,f,c
 16463  0069A8  CFE6 F050          	movff	postinc1,??_f_sync
 16464  0069AC  CFE6 F051          	movff	postinc1,??_f_sync+1
 16465  0069B0  CFE6 F052          	movff	postinc1,??_f_sync+2
 16466  0069B4  CFE6 F053          	movff	postinc1,??_f_sync+3
 16467  0069B8  0E11               	movlw	17
 16468  0069BA  D005               	goto	u11330
 16469  0069BC                     u11335:
 16470  0069BC  90D8               	bcf	status,0,c
 16471  0069BE  3253               	rrcf	??_f_sync+3,f,c
 16472  0069C0  3252               	rrcf	??_f_sync+2,f,c
 16473  0069C2  3251               	rrcf	??_f_sync+1,f,c
 16474  0069C4  3250               	rrcf	??_f_sync,f,c
 16475  0069C6                     u11330:
 16476  0069C6  2EE8               	decfsz	wreg,f,c
 16477  0069C8  D7F9               	goto	u11335
 16478  0069CA  5050               	movf	??_f_sync,w,c
 16479  0069CC  6EDF               	movwf	indf2,c
 16480  0069CE  EE20 F01F          	lfsr	2,31
 16481  0069D2  5059               	movf	f_sync@dir,w,c
 16482  0069D4  26D9               	addwf	fsr2l,f,c
 16483  0069D6  505A               	movf	f_sync@dir+1,w,c
 16484  0069D8  22DA               	addwfc	fsr2h,f,c
 16485  0069DA  EE10 F00A          	lfsr	1,10
 16486  0069DE  504E               	movf	f_sync@fp,w,c
 16487  0069E0  26E1               	addwf	fsr1l,f,c
 16488  0069E2  504F               	movf	f_sync@fp+1,w,c
 16489  0069E4  22E2               	addwfc	fsr1h,f,c
 16490  0069E6  CFE6 F050          	movff	postinc1,??_f_sync
 16491  0069EA  CFE6 F051          	movff	postinc1,??_f_sync+1
 16492  0069EE  CFE6 F052          	movff	postinc1,??_f_sync+2
 16493  0069F2  CFE6 F053          	movff	postinc1,??_f_sync+3
 16494  0069F6  0E19               	movlw	25
 16495  0069F8  D005               	goto	u11340
 16496  0069FA                     u11345:
 16497  0069FA  90D8               	bcf	status,0,c
 16498  0069FC  3253               	rrcf	??_f_sync+3,f,c
 16499  0069FE  3252               	rrcf	??_f_sync+2,f,c
 16500  006A00  3251               	rrcf	??_f_sync+1,f,c
 16501  006A02  3250               	rrcf	??_f_sync,f,c
 16502  006A04                     u11340:
 16503  006A04  2EE8               	decfsz	wreg,f,c
 16504  006A06  D7F9               	goto	u11345
 16505  006A08  5050               	movf	??_f_sync,w,c
 16506  006A0A  6EDF               	movwf	indf2,c
 16507                           
 16508                           ;ff.c: 2926: st_clust(dir, fp->sclust);
 16509  006A0C  C05A  F002         	movff	f_sync@dir+1,st_clust@dir+1
 16510  006A10  C059  F001         	movff	f_sync@dir,st_clust@dir
 16511  006A14  EE20 F00E          	lfsr	2,14
 16512  006A18  504E               	movf	f_sync@fp,w,c
 16513  006A1A  26D9               	addwf	fsr2l,f,c
 16514  006A1C  504F               	movf	f_sync@fp+1,w,c
 16515  006A1E  22DA               	addwfc	fsr2h,f,c
 16516  006A20  CFDE F003          	movff	postinc2,st_clust@cl
 16517  006A24  CFDE F004          	movff	postinc2,st_clust@cl+1
 16518  006A28  CFDE F005          	movff	postinc2,st_clust@cl+2
 16519  006A2C  CFDE F006          	movff	postinc2,st_clust@cl+3
 16520  006A30  ECCC  F029         	call	_st_clust	;wreg free
 16521                           
 16522                           ;ff.c: 2927: tm = ((DWORD)(2016 - 1980) << 25 | (DWORD)7 << 21 | (DWORD)30 << 16);
 16523  006A34  0E00               	movlw	0
 16524  006A36  6E55               	movwf	f_sync@tm,c
 16525  006A38  0E00               	movlw	0
 16526  006A3A  6E56               	movwf	f_sync@tm+1,c
 16527  006A3C  0EFE               	movlw	254
 16528  006A3E  6E57               	movwf	f_sync@tm+2,c
 16529  006A40  0E48               	movlw	72
 16530  006A42  6E58               	movwf	f_sync@tm+3,c
 16531                           
 16532                           ;ff.c: 2928: *(BYTE*)(dir + 22)=(BYTE)(tm); *((BYTE*)(dir + 22)+1)=(BYTE)((WORD)(tm)>>8)
      +                          ; *((BYTE*)(dir + 22)+2)=(BYTE)((DWORD)(tm)>>16); *((BYTE*)(dir + 22)+3)=(BYTE)((DWORD)(
      +                          tm)>>24);
 16533  006A44  EE20 F016          	lfsr	2,22
 16534  006A48  5059               	movf	f_sync@dir,w,c
 16535  006A4A  26D9               	addwf	fsr2l,f,c
 16536  006A4C  505A               	movf	f_sync@dir+1,w,c
 16537  006A4E  22DA               	addwfc	fsr2h,f,c
 16538  006A50  C055  FFDF         	movff	f_sync@tm,indf2
 16539  006A54  EE20 F017          	lfsr	2,23
 16540  006A58  5059               	movf	f_sync@dir,w,c
 16541  006A5A  26D9               	addwf	fsr2l,f,c
 16542  006A5C  505A               	movf	f_sync@dir+1,w,c
 16543  006A5E  22DA               	addwfc	fsr2h,f,c
 16544  006A60  C056  F050         	movff	f_sync@tm+1,??_f_sync
 16545  006A64  C050  F051         	movff	??_f_sync,??_f_sync+1
 16546  006A68  6A52               	clrf	(??_f_sync+2)& (0+255),c
 16547  006A6A  5051               	movf	??_f_sync+1,w,c
 16548  006A6C  6EDF               	movwf	indf2,c
 16549  006A6E  EE20 F018          	lfsr	2,24
 16550  006A72  5059               	movf	f_sync@dir,w,c
 16551  006A74  26D9               	addwf	fsr2l,f,c
 16552  006A76  505A               	movf	f_sync@dir+1,w,c
 16553  006A78  22DA               	addwfc	fsr2h,f,c
 16554  006A7A  C057  FFDF         	movff	f_sync@tm+2,indf2
 16555  006A7E  EE20 F019          	lfsr	2,25
 16556  006A82  5059               	movf	f_sync@dir,w,c
 16557  006A84  26D9               	addwf	fsr2l,f,c
 16558  006A86  505A               	movf	f_sync@dir+1,w,c
 16559  006A88  22DA               	addwfc	fsr2h,f,c
 16560  006A8A  C058  FFDF         	movff	f_sync@tm+3,indf2
 16561                           
 16562                           ;ff.c: 2929: *(BYTE*)(dir + 18)=(BYTE)(0); *((BYTE*)(dir + 18)+1)=(BYTE)((WORD)(0)>>8);
 16563  006A8E  EE20 F012          	lfsr	2,18
 16564  006A92  5059               	movf	f_sync@dir,w,c
 16565  006A94  26D9               	addwf	fsr2l,f,c
 16566  006A96  505A               	movf	f_sync@dir+1,w,c
 16567  006A98  22DA               	addwfc	fsr2h,f,c
 16568  006A9A  0E00               	movlw	0
 16569  006A9C  6EDF               	movwf	indf2,c
 16570  006A9E  EE20 F013          	lfsr	2,19
 16571  006AA2  5059               	movf	f_sync@dir,w,c
 16572  006AA4  26D9               	addwf	fsr2l,f,c
 16573  006AA6  505A               	movf	f_sync@dir+1,w,c
 16574  006AA8  22DA               	addwfc	fsr2h,f,c
 16575  006AAA  0E00               	movlw	0
 16576  006AAC  6EDF               	movwf	indf2,c
 16577                           
 16578                           ;ff.c: 2930: fp->flag &= ~0x20;
 16579  006AAE  EE20 F004          	lfsr	2,4
 16580  006AB2  504E               	movf	f_sync@fp,w,c
 16581  006AB4  26D9               	addwf	fsr2l,f,c
 16582  006AB6  504F               	movf	f_sync@fp+1,w,c
 16583  006AB8  22DA               	addwfc	fsr2h,f,c
 16584  006ABA  0EDF               	movlw	223
 16585  006ABC  16DF               	andwf	indf2,f,c
 16586                           
 16587                           ;ff.c: 2931: fp->fs->wflag = 1;
 16588  006ABE  C04E  FFD9         	movff	f_sync@fp,fsr2l
 16589  006AC2  C04F  FFDA         	movff	f_sync@fp+1,fsr2h
 16590  006AC6  EE10 F004          	lfsr	1,4
 16591  006ACA  50DE               	movf	postinc2,w,c
 16592  006ACC  26E1               	addwf	fsr1l,f,c
 16593  006ACE  50DD               	movf	postdec2,w,c
 16594  006AD0  22E2               	addwfc	fsr1h,f,c
 16595  006AD2  0E01               	movlw	1
 16596  006AD4  6EE7               	movwf	indf1,c
 16597                           
 16598                           ;ff.c: 2932: res = sync_fs(fp->fs);
 16599  006AD6  C04E  FFD9         	movff	f_sync@fp,fsr2l
 16600  006ADA  C04F  FFDA         	movff	f_sync@fp+1,fsr2h
 16601  006ADE  CFDE F043          	movff	postinc2,sync_fs@fs
 16602  006AE2  CFDD F044          	movff	postdec2,sync_fs@fs+1
 16603  006AE6  EC81  F03D         	call	_sync_fs	;wreg free
 16604  006AEA  6E54               	movwf	f_sync@res,c
 16605  006AEC                     l8517:
 16606                           
 16607                           ;ff.c: 2933: }
 16608                           ;ff.c: 2934: }
 16609                           ;ff.c: 2935: }
 16610                           ;ff.c: 2937: return res;
 16611  006AEC  5054               	movf	f_sync@res,w,c
 16612  006AEE  0012               	return	
 16613  006AF0                     __end_of_f_sync:
 16614                           	opt stack 0
 16615                           tblptru	equ	0xFF8
 16616                           tblptrh	equ	0xFF7
 16617                           tblptrl	equ	0xFF6
 16618                           tablat	equ	0xFF5
 16619                           prodh	equ	0xFF4
 16620                           prodl	equ	0xFF3
 16621                           indf0	equ	0xFEF
 16622                           postinc0	equ	0xFEE
 16623                           fsr0h	equ	0xFEA
 16624                           fsr0l	equ	0xFE9
 16625                           wreg	equ	0xFE8
 16626                           indf1	equ	0xFE7
 16627                           postinc1	equ	0xFE6
 16628                           postdec1	equ	0xFE5
 16629                           fsr1h	equ	0xFE2
 16630                           fsr1l	equ	0xFE1
 16631                           indf2	equ	0xFDF
 16632                           postinc2	equ	0xFDE
 16633                           postdec2	equ	0xFDD
 16634                           plusw2	equ	0xFDB
 16635                           fsr2h	equ	0xFDA
 16636                           fsr2l	equ	0xFD9
 16637                           status	equ	0xFD8
 16638                           
 16639 ;; *************** function _validate *****************
 16640 ;; Defined at:
 16641 ;;		line 2439 in file "ff.c"
 16642 ;; Parameters:    Size  Location     Type
 16643 ;;  obj             2    1[COMRAM] PTR void 
 16644 ;;		 -> fp(34), 
 16645 ;; Auto vars:     Size  Location     Type
 16646 ;;  fil             2    5[COMRAM] PTR struct .
 16647 ;;		 -> fp(34), 
 16648 ;; Return value:  Size  Location     Type
 16649 ;;                  1    wreg      enum E67
 16650 ;; Registers used:
 16651 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 16652 ;; Tracked objects:
 16653 ;;		On entry : 0/0
 16654 ;;		On exit  : 0/0
 16655 ;;		Unchanged: 0/0
 16656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16657 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16658 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16659 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16660 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16661 ;;Total ram usage:        6 bytes
 16662 ;; Hardware stack levels used:    1
 16663 ;; Hardware stack levels required when called:    1
 16664 ;; This function calls:
 16665 ;;		_disk_status
 16666 ;; This function is called by:
 16667 ;;		_f_write
 16668 ;;		_f_sync
 16669 ;;		_f_close
 16670 ;;		_f_read
 16671 ;;		_f_lseek
 16672 ;;		_f_closedir
 16673 ;;		_f_readdir
 16674 ;;		_f_truncate
 16675 ;;		_f_forward
 16676 ;; This function uses a non-reentrant model
 16677 ;;
 16678                           
 16679                           	psect	text30
 16680  005784                     __ptext30:
 16681                           	opt stack 0
 16682  005784                     _validate:
 16683                           	opt stack 28
 16684                           
 16685                           ;ff.c: 2443: FIL *fil = (FIL*)obj;
 16686                           
 16687                           ;incstack = 0
 16688  005784  C003  F007         	movff	validate@obj+1,validate@fil+1
 16689  005788  C002  F006         	movff	validate@obj,validate@fil
 16690                           
 16691                           ;ff.c: 2446: if (!fil || !fil->fs || !fil->fs->fs_type || fil->fs->id != fil->id || (dis
      +                          k_status(fil->fs->drv) & 0x01))
 16692  00578C  5007               	movf	validate@fil+1,w,c
 16693  00578E  1006               	iorwf	validate@fil,w,c
 16694  005790  B4D8               	btfsc	status,2,c
 16695  005792  D041               	goto	l7983
 16696  005794  C006  FFD9         	movff	validate@fil,fsr2l
 16697  005798  C007  FFDA         	movff	validate@fil+1,fsr2h
 16698  00579C  50DE               	movf	postinc2,w,c
 16699  00579E  10DD               	iorwf	postdec2,w,c
 16700  0057A0  B4D8               	btfsc	status,2,c
 16701  0057A2  D039               	goto	l7983
 16702  0057A4  C006  FFD9         	movff	validate@fil,fsr2l
 16703  0057A8  C007  FFDA         	movff	validate@fil+1,fsr2h
 16704  0057AC  CFDE F004          	movff	postinc2,??_validate
 16705  0057B0  CFDD F005          	movff	postdec2,??_validate+1
 16706  0057B4  C004  FFD9         	movff	??_validate,fsr2l
 16707  0057B8  C005  FFDA         	movff	??_validate+1,fsr2h
 16708  0057BC  50DF               	movf	indf2,w,c
 16709  0057BE  B4D8               	btfsc	status,2,c
 16710  0057C0  D02A               	goto	l7983
 16711  0057C2  EE20 F002          	lfsr	2,2
 16712  0057C6  5006               	movf	validate@fil,w,c
 16713  0057C8  26D9               	addwf	fsr2l,f,c
 16714  0057CA  5007               	movf	validate@fil+1,w,c
 16715  0057CC  22DA               	addwfc	fsr2h,f,c
 16716  0057CE  C006  FFE1         	movff	validate@fil,fsr1l
 16717  0057D2  C007  FFE2         	movff	validate@fil+1,fsr1h
 16718  0057D6  EE00 F006          	lfsr	0,6
 16719  0057DA  50E6               	movf	postinc1,w,c
 16720  0057DC  26E9               	addwf	fsr0l,f,c
 16721  0057DE  50E5               	movf	postdec1,w,c
 16722  0057E0  22EA               	addwfc	fsr0h,f,c
 16723  0057E2  52EE               	movf	postinc0,f,c
 16724  0057E4  52DE               	movf	postinc2,f,c
 16725  0057E6  50DD               	movf	postdec2,w,c
 16726  0057E8  18ED               	xorwf	postdec0,w,c
 16727  0057EA  CFDF FFE8          	movff	indf2,wreg
 16728  0057EE  B4D8               	btfsc	status,2,c
 16729  0057F0  18EF               	xorwf	indf0,w,c
 16730  0057F2  A4D8               	btfss	status,2,c
 16731  0057F4  D010               	goto	l7983
 16732  0057F6  C006  FFD9         	movff	validate@fil,fsr2l
 16733  0057FA  C007  FFDA         	movff	validate@fil+1,fsr2h
 16734  0057FE  EE10 F001          	lfsr	1,1
 16735  005802  50DE               	movf	postinc2,w,c
 16736  005804  26E1               	addwf	fsr1l,f,c
 16737  005806  50DD               	movf	postdec2,w,c
 16738  005808  22E2               	addwfc	fsr1h,f,c
 16739  00580A  50E7               	movf	indf1,w,c
 16740  00580C  EC81  F028         	call	_disk_status
 16741  005810  6E04               	movwf	??_validate& (0+255),c
 16742  005812  A004               	btfss	??_validate,0,c
 16743  005814  D002               	goto	l7987
 16744  005816                     l7983:
 16745                           
 16746                           ;ff.c: 2447: return FR_INVALID_OBJECT;
 16747  005816  0E09               	movlw	9
 16748  005818  D001               	goto	l749
 16749  00581A                     l7987:
 16750                           
 16751                           ;ff.c: 2449: ;
 16752                           ;ff.c: 2451: return FR_OK;
 16753  00581A  0E00               	movlw	0
 16754  00581C                     l749:
 16755  00581C  0012               	return	
 16756  00581E                     __end_of_validate:
 16757                           	opt stack 0
 16758                           tblptru	equ	0xFF8
 16759                           tblptrh	equ	0xFF7
 16760                           tblptrl	equ	0xFF6
 16761                           tablat	equ	0xFF5
 16762                           prodh	equ	0xFF4
 16763                           prodl	equ	0xFF3
 16764                           indf0	equ	0xFEF
 16765                           postinc0	equ	0xFEE
 16766                           postdec0	equ	0xFED
 16767                           fsr0h	equ	0xFEA
 16768                           fsr0l	equ	0xFE9
 16769                           wreg	equ	0xFE8
 16770                           indf1	equ	0xFE7
 16771                           postinc1	equ	0xFE6
 16772                           postdec1	equ	0xFE5
 16773                           fsr1h	equ	0xFE2
 16774                           fsr1l	equ	0xFE1
 16775                           indf2	equ	0xFDF
 16776                           postinc2	equ	0xFDE
 16777                           postdec2	equ	0xFDD
 16778                           plusw2	equ	0xFDB
 16779                           fsr2h	equ	0xFDA
 16780                           fsr2l	equ	0xFD9
 16781                           status	equ	0xFD8
 16782                           
 16783 ;; *************** function _sync_fs *****************
 16784 ;; Defined at:
 16785 ;;		line 803 in file "ff.c"
 16786 ;; Parameters:    Size  Location     Type
 16787 ;;  fs              2   66[COMRAM] PTR struct .
 16788 ;;		 -> NULL(0), FatFs(562), 
 16789 ;; Auto vars:     Size  Location     Type
 16790 ;;  res             1   76[COMRAM] enum E67
 16791 ;; Return value:  Size  Location     Type
 16792 ;;                  1    wreg      enum E67
 16793 ;; Registers used:
 16794 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 16795 ;; Tracked objects:
 16796 ;;		On entry : 0/0
 16797 ;;		On exit  : 0/0
 16798 ;;		Unchanged: 0/0
 16799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 16800 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16801 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16802 ;;      Temps:          8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16803 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 16804 ;;Total ram usage:       11 bytes
 16805 ;; Hardware stack levels used:    1
 16806 ;; Hardware stack levels required when called:    6
 16807 ;; This function calls:
 16808 ;;		_disk_ioctl
 16809 ;;		_disk_write
 16810 ;;		_mem_set
 16811 ;;		_sync_window
 16812 ;; This function is called by:
 16813 ;;		_f_sync
 16814 ;;		_f_unlink
 16815 ;;		_f_mkdir
 16816 ;;		_f_chmod
 16817 ;;		_f_rename
 16818 ;;		_f_utime
 16819 ;;		_f_setlabel
 16820 ;; This function uses a non-reentrant model
 16821 ;;
 16822                           
 16823                           	psect	text31
 16824  007B02                     __ptext31:
 16825                           	opt stack 0
 16826  007B02                     _sync_fs:
 16827                           	opt stack 22
 16828                           
 16829                           ;ff.c: 807: FRESULT res;
 16830                           ;ff.c: 810: res = sync_window(fs);
 16831                           
 16832                           ;incstack = 0
 16833  007B02  C044  F027         	movff	sync_fs@fs+1,sync_window@fs+1
 16834  007B06  C043  F026         	movff	sync_fs@fs,sync_window@fs
 16835  007B0A  EC8F  F031         	call	_sync_window	;wreg free
 16836  007B0E  6E4D               	movwf	sync_fs@res,c
 16837                           
 16838                           ;ff.c: 811: if (res == FR_OK) {
 16839  007B10  664D               	tstfsz	sync_fs@res,c
 16840  007B12  D19D               	goto	l315
 16841                           
 16842                           ;ff.c: 813: if (fs->fs_type == 3 && fs->fsi_flag == 1) {
 16843  007B14  0E03               	movlw	3
 16844  007B16  C043  FFD9         	movff	sync_fs@fs,fsr2l
 16845  007B1A  C044  FFDA         	movff	sync_fs@fs+1,fsr2h
 16846  007B1E  62DF               	cpfseq	indf2,c
 16847  007B20  D182               	goto	l7575
 16848  007B22  EE20 F005          	lfsr	2,5
 16849  007B26  5043               	movf	sync_fs@fs,w,c
 16850  007B28  26D9               	addwf	fsr2l,f,c
 16851  007B2A  5044               	movf	sync_fs@fs+1,w,c
 16852  007B2C  22DA               	addwfc	fsr2h,f,c
 16853  007B2E  0E01               	movlw	1
 16854  007B30  62DF               	cpfseq	indf2,c
 16855  007B32  D179               	goto	l7575
 16856                           
 16857                           ;ff.c: 815: mem_set(fs->win, 0, ((UINT)512));
 16858  007B34  0E32               	movlw	50
 16859  007B36  2443               	addwf	sync_fs@fs,w,c
 16860  007B38  6E01               	movwf	mem_set@dst,c
 16861  007B3A  0E00               	movlw	0
 16862  007B3C  2044               	addwfc	sync_fs@fs+1,w,c
 16863  007B3E  6E02               	movwf	mem_set@dst+1,c
 16864  007B40  0E00               	movlw	0
 16865  007B42  6E04               	movwf	mem_set@val+1,c
 16866  007B44  0E00               	movlw	0
 16867  007B46  6E03               	movwf	mem_set@val,c
 16868  007B48  0E02               	movlw	2
 16869  007B4A  6E06               	movwf	mem_set@cnt+1,c
 16870  007B4C  0E00               	movlw	0
 16871  007B4E  6E05               	movwf	mem_set@cnt,c
 16872  007B50  ECCD  F028         	call	_mem_set	;wreg free
 16873                           
 16874                           ;ff.c: 816: *(BYTE*)(fs->win + 510)=(BYTE)(0xAA55); *((BYTE*)(fs->win + 510)+1)=(BYTE)((
      +                          WORD)(0xAA55)>>8);
 16875  007B54  EE22 F030          	lfsr	2,560
 16876  007B58  5043               	movf	sync_fs@fs,w,c
 16877  007B5A  26D9               	addwf	fsr2l,f,c
 16878  007B5C  5044               	movf	sync_fs@fs+1,w,c
 16879  007B5E  22DA               	addwfc	fsr2h,f,c
 16880  007B60  0E55               	movlw	85
 16881  007B62  6EDF               	movwf	indf2,c
 16882  007B64  EE22 F031          	lfsr	2,561
 16883  007B68  5043               	movf	sync_fs@fs,w,c
 16884  007B6A  26D9               	addwf	fsr2l,f,c
 16885  007B6C  5044               	movf	sync_fs@fs+1,w,c
 16886  007B6E  22DA               	addwfc	fsr2h,f,c
 16887  007B70  0EAA               	movlw	170
 16888  007B72  6EDF               	movwf	indf2,c
 16889                           
 16890                           ;ff.c: 817: *(BYTE*)(fs->win + 0)=(BYTE)(0x41615252); *((BYTE*)(fs->win + 0)+1)=(BYTE)((
      +                          WORD)(0x41615252)>>8); *((BYTE*)(fs->win + 0)+2)=(BYTE)((DWORD)(0x41615252)>>16); *((BYT
      +                          E*)(fs->win + 0)+3)=(BYTE)((DWORD)(0x41615252)>>24);
 16891  007B74  EE20 F032          	lfsr	2,50
 16892  007B78  5043               	movf	sync_fs@fs,w,c
 16893  007B7A  26D9               	addwf	fsr2l,f,c
 16894  007B7C  5044               	movf	sync_fs@fs+1,w,c
 16895  007B7E  22DA               	addwfc	fsr2h,f,c
 16896  007B80  0E52               	movlw	82
 16897  007B82  6EDF               	movwf	indf2,c
 16898  007B84  EE20 F033          	lfsr	2,51
 16899  007B88  5043               	movf	sync_fs@fs,w,c
 16900  007B8A  26D9               	addwf	fsr2l,f,c
 16901  007B8C  5044               	movf	sync_fs@fs+1,w,c
 16902  007B8E  22DA               	addwfc	fsr2h,f,c
 16903  007B90  0E52               	movlw	82
 16904  007B92  6EDF               	movwf	indf2,c
 16905  007B94  EE20 F034          	lfsr	2,52
 16906  007B98  5043               	movf	sync_fs@fs,w,c
 16907  007B9A  26D9               	addwf	fsr2l,f,c
 16908  007B9C  5044               	movf	sync_fs@fs+1,w,c
 16909  007B9E  22DA               	addwfc	fsr2h,f,c
 16910  007BA0  0E61               	movlw	97
 16911  007BA2  6EDF               	movwf	indf2,c
 16912  007BA4  EE20 F035          	lfsr	2,53
 16913  007BA8  5043               	movf	sync_fs@fs,w,c
 16914  007BAA  26D9               	addwf	fsr2l,f,c
 16915  007BAC  5044               	movf	sync_fs@fs+1,w,c
 16916  007BAE  22DA               	addwfc	fsr2h,f,c
 16917  007BB0  0E41               	movlw	65
 16918  007BB2  6EDF               	movwf	indf2,c
 16919                           
 16920                           ;ff.c: 818: *(BYTE*)(fs->win + 484)=(BYTE)(0x61417272); *((BYTE*)(fs->win + 484)+1)=(BYT
      +                          E)((WORD)(0x61417272)>>8); *((BYTE*)(fs->win + 484)+2)=(BYTE)((DWORD)(0x61417272)>>16); 
      +                          *((BYTE*)(fs->win + 484)+3)=(BYTE)((DWORD)(0x61417272)>>24);
 16921  007BB4  EE22 F016          	lfsr	2,534
 16922  007BB8  5043               	movf	sync_fs@fs,w,c
 16923  007BBA  26D9               	addwf	fsr2l,f,c
 16924  007BBC  5044               	movf	sync_fs@fs+1,w,c
 16925  007BBE  22DA               	addwfc	fsr2h,f,c
 16926  007BC0  0E72               	movlw	114
 16927  007BC2  6EDF               	movwf	indf2,c
 16928  007BC4  EE22 F017          	lfsr	2,535
 16929  007BC8  5043               	movf	sync_fs@fs,w,c
 16930  007BCA  26D9               	addwf	fsr2l,f,c
 16931  007BCC  5044               	movf	sync_fs@fs+1,w,c
 16932  007BCE  22DA               	addwfc	fsr2h,f,c
 16933  007BD0  0E72               	movlw	114
 16934  007BD2  6EDF               	movwf	indf2,c
 16935  007BD4  EE22 F018          	lfsr	2,536
 16936  007BD8  5043               	movf	sync_fs@fs,w,c
 16937  007BDA  26D9               	addwf	fsr2l,f,c
 16938  007BDC  5044               	movf	sync_fs@fs+1,w,c
 16939  007BDE  22DA               	addwfc	fsr2h,f,c
 16940  007BE0  0E41               	movlw	65
 16941  007BE2  6EDF               	movwf	indf2,c
 16942  007BE4  EE22 F019          	lfsr	2,537
 16943  007BE8  5043               	movf	sync_fs@fs,w,c
 16944  007BEA  26D9               	addwf	fsr2l,f,c
 16945  007BEC  5044               	movf	sync_fs@fs+1,w,c
 16946  007BEE  22DA               	addwfc	fsr2h,f,c
 16947  007BF0  0E61               	movlw	97
 16948  007BF2  6EDF               	movwf	indf2,c
 16949                           
 16950                           ;ff.c: 819: *(BYTE*)(fs->win + 488)=(BYTE)(fs->free_clust); *((BYTE*)(fs->win + 488)+1)=
      +                          (BYTE)((WORD)(fs->free_clust)>>8); *((BYTE*)(fs->win + 488)+2)=(BYTE)((DWORD)(fs->free_c
      +                          lust)>>16); *((BYTE*)(fs->win + 488)+3)=(BYTE)((DWORD)(fs->free_clust)>>24);
 16951  007BF4  EE20 F00E          	lfsr	2,14
 16952  007BF8  5043               	movf	sync_fs@fs,w,c
 16953  007BFA  26D9               	addwf	fsr2l,f,c
 16954  007BFC  5044               	movf	sync_fs@fs+1,w,c
 16955  007BFE  22DA               	addwfc	fsr2h,f,c
 16956  007C00  EE12 F01A          	lfsr	1,538
 16957  007C04  5043               	movf	sync_fs@fs,w,c
 16958  007C06  26E1               	addwf	fsr1l,f,c
 16959  007C08  5044               	movf	sync_fs@fs+1,w,c
 16960  007C0A  22E2               	addwfc	fsr1h,f,c
 16961  007C0C  CFDF FFE7          	movff	indf2,indf1
 16962  007C10  EE22 F01B          	lfsr	2,539
 16963  007C14  5043               	movf	sync_fs@fs,w,c
 16964  007C16  26D9               	addwf	fsr2l,f,c
 16965  007C18  5044               	movf	sync_fs@fs+1,w,c
 16966  007C1A  22DA               	addwfc	fsr2h,f,c
 16967  007C1C  EE10 F00E          	lfsr	1,14
 16968  007C20  5043               	movf	sync_fs@fs,w,c
 16969  007C22  26E1               	addwf	fsr1l,f,c
 16970  007C24  5044               	movf	sync_fs@fs+1,w,c
 16971  007C26  22E2               	addwfc	fsr1h,f,c
 16972  007C28  CFE6 F045          	movff	postinc1,??_sync_fs
 16973  007C2C  CFE5 F046          	movff	postdec1,??_sync_fs+1
 16974  007C30  C046  F045         	movff	??_sync_fs+1,??_sync_fs
 16975  007C34  6A46               	clrf	??_sync_fs+1,c
 16976  007C36  5045               	movf	??_sync_fs,w,c
 16977  007C38  6EDF               	movwf	indf2,c
 16978  007C3A  EE22 F01C          	lfsr	2,540
 16979  007C3E  5043               	movf	sync_fs@fs,w,c
 16980  007C40  26D9               	addwf	fsr2l,f,c
 16981  007C42  5044               	movf	sync_fs@fs+1,w,c
 16982  007C44  22DA               	addwfc	fsr2h,f,c
 16983  007C46  EE10 F00E          	lfsr	1,14
 16984  007C4A  5043               	movf	sync_fs@fs,w,c
 16985  007C4C  26E1               	addwf	fsr1l,f,c
 16986  007C4E  5044               	movf	sync_fs@fs+1,w,c
 16987  007C50  22E2               	addwfc	fsr1h,f,c
 16988  007C52  CFE6 F045          	movff	postinc1,??_sync_fs
 16989  007C56  CFE6 F046          	movff	postinc1,??_sync_fs+1
 16990  007C5A  CFE6 F047          	movff	postinc1,??_sync_fs+2
 16991  007C5E  CFE6 F048          	movff	postinc1,??_sync_fs+3
 16992  007C62  0E11               	movlw	17
 16993  007C64  D005               	goto	u9750
 16994  007C66                     u9755:
 16995  007C66  90D8               	bcf	status,0,c
 16996  007C68  3248               	rrcf	??_sync_fs+3,f,c
 16997  007C6A  3247               	rrcf	??_sync_fs+2,f,c
 16998  007C6C  3246               	rrcf	??_sync_fs+1,f,c
 16999  007C6E  3245               	rrcf	??_sync_fs,f,c
 17000  007C70                     u9750:
 17001  007C70  2EE8               	decfsz	wreg,f,c
 17002  007C72  D7F9               	goto	u9755
 17003  007C74  5045               	movf	??_sync_fs,w,c
 17004  007C76  6EDF               	movwf	indf2,c
 17005  007C78  EE22 F01D          	lfsr	2,541
 17006  007C7C  5043               	movf	sync_fs@fs,w,c
 17007  007C7E  26D9               	addwf	fsr2l,f,c
 17008  007C80  5044               	movf	sync_fs@fs+1,w,c
 17009  007C82  22DA               	addwfc	fsr2h,f,c
 17010  007C84  EE10 F00E          	lfsr	1,14
 17011  007C88  5043               	movf	sync_fs@fs,w,c
 17012  007C8A  26E1               	addwf	fsr1l,f,c
 17013  007C8C  5044               	movf	sync_fs@fs+1,w,c
 17014  007C8E  22E2               	addwfc	fsr1h,f,c
 17015  007C90  CFE6 F045          	movff	postinc1,??_sync_fs
 17016  007C94  CFE6 F046          	movff	postinc1,??_sync_fs+1
 17017  007C98  CFE6 F047          	movff	postinc1,??_sync_fs+2
 17018  007C9C  CFE6 F048          	movff	postinc1,??_sync_fs+3
 17019  007CA0  0E19               	movlw	25
 17020  007CA2  D005               	goto	u9760
 17021  007CA4                     u9765:
 17022  007CA4  90D8               	bcf	status,0,c
 17023  007CA6  3248               	rrcf	??_sync_fs+3,f,c
 17024  007CA8  3247               	rrcf	??_sync_fs+2,f,c
 17025  007CAA  3246               	rrcf	??_sync_fs+1,f,c
 17026  007CAC  3245               	rrcf	??_sync_fs,f,c
 17027  007CAE                     u9760:
 17028  007CAE  2EE8               	decfsz	wreg,f,c
 17029  007CB0  D7F9               	goto	u9765
 17030  007CB2  5045               	movf	??_sync_fs,w,c
 17031  007CB4  6EDF               	movwf	indf2,c
 17032                           
 17033                           ;ff.c: 820: *(BYTE*)(fs->win + 492)=(BYTE)(fs->last_clust); *((BYTE*)(fs->win + 492)+1)=
      +                          (BYTE)((WORD)(fs->last_clust)>>8); *((BYTE*)(fs->win + 492)+2)=(BYTE)((DWORD)(fs->last_c
      +                          lust)>>16); *((BYTE*)(fs->win + 492)+3)=(BYTE)((DWORD)(fs->last_clust)>>24);
 17034  007CB6  EE20 F00A          	lfsr	2,10
 17035  007CBA  5043               	movf	sync_fs@fs,w,c
 17036  007CBC  26D9               	addwf	fsr2l,f,c
 17037  007CBE  5044               	movf	sync_fs@fs+1,w,c
 17038  007CC0  22DA               	addwfc	fsr2h,f,c
 17039  007CC2  EE12 F01E          	lfsr	1,542
 17040  007CC6  5043               	movf	sync_fs@fs,w,c
 17041  007CC8  26E1               	addwf	fsr1l,f,c
 17042  007CCA  5044               	movf	sync_fs@fs+1,w,c
 17043  007CCC  22E2               	addwfc	fsr1h,f,c
 17044  007CCE  CFDF FFE7          	movff	indf2,indf1
 17045  007CD2  EE22 F01F          	lfsr	2,543
 17046  007CD6  5043               	movf	sync_fs@fs,w,c
 17047  007CD8  26D9               	addwf	fsr2l,f,c
 17048  007CDA  5044               	movf	sync_fs@fs+1,w,c
 17049  007CDC  22DA               	addwfc	fsr2h,f,c
 17050  007CDE  EE10 F00A          	lfsr	1,10
 17051  007CE2  5043               	movf	sync_fs@fs,w,c
 17052  007CE4  26E1               	addwf	fsr1l,f,c
 17053  007CE6  5044               	movf	sync_fs@fs+1,w,c
 17054  007CE8  22E2               	addwfc	fsr1h,f,c
 17055  007CEA  CFE6 F045          	movff	postinc1,??_sync_fs
 17056  007CEE  CFE5 F046          	movff	postdec1,??_sync_fs+1
 17057  007CF2  C046  F045         	movff	??_sync_fs+1,??_sync_fs
 17058  007CF6  6A46               	clrf	??_sync_fs+1,c
 17059  007CF8  5045               	movf	??_sync_fs,w,c
 17060  007CFA  6EDF               	movwf	indf2,c
 17061  007CFC  EE22 F020          	lfsr	2,544
 17062  007D00  5043               	movf	sync_fs@fs,w,c
 17063  007D02  26D9               	addwf	fsr2l,f,c
 17064  007D04  5044               	movf	sync_fs@fs+1,w,c
 17065  007D06  22DA               	addwfc	fsr2h,f,c
 17066  007D08  EE10 F00A          	lfsr	1,10
 17067  007D0C  5043               	movf	sync_fs@fs,w,c
 17068  007D0E  26E1               	addwf	fsr1l,f,c
 17069  007D10  5044               	movf	sync_fs@fs+1,w,c
 17070  007D12  22E2               	addwfc	fsr1h,f,c
 17071  007D14  CFE6 F045          	movff	postinc1,??_sync_fs
 17072  007D18  CFE6 F046          	movff	postinc1,??_sync_fs+1
 17073  007D1C  CFE6 F047          	movff	postinc1,??_sync_fs+2
 17074  007D20  CFE6 F048          	movff	postinc1,??_sync_fs+3
 17075  007D24  0E11               	movlw	17
 17076  007D26  D005               	goto	u9770
 17077  007D28                     u9775:
 17078  007D28  90D8               	bcf	status,0,c
 17079  007D2A  3248               	rrcf	??_sync_fs+3,f,c
 17080  007D2C  3247               	rrcf	??_sync_fs+2,f,c
 17081  007D2E  3246               	rrcf	??_sync_fs+1,f,c
 17082  007D30  3245               	rrcf	??_sync_fs,f,c
 17083  007D32                     u9770:
 17084  007D32  2EE8               	decfsz	wreg,f,c
 17085  007D34  D7F9               	goto	u9775
 17086  007D36  5045               	movf	??_sync_fs,w,c
 17087  007D38  6EDF               	movwf	indf2,c
 17088  007D3A  EE22 F021          	lfsr	2,545
 17089  007D3E  5043               	movf	sync_fs@fs,w,c
 17090  007D40  26D9               	addwf	fsr2l,f,c
 17091  007D42  5044               	movf	sync_fs@fs+1,w,c
 17092  007D44  22DA               	addwfc	fsr2h,f,c
 17093  007D46  EE10 F00A          	lfsr	1,10
 17094  007D4A  5043               	movf	sync_fs@fs,w,c
 17095  007D4C  26E1               	addwf	fsr1l,f,c
 17096  007D4E  5044               	movf	sync_fs@fs+1,w,c
 17097  007D50  22E2               	addwfc	fsr1h,f,c
 17098  007D52  CFE6 F045          	movff	postinc1,??_sync_fs
 17099  007D56  CFE6 F046          	movff	postinc1,??_sync_fs+1
 17100  007D5A  CFE6 F047          	movff	postinc1,??_sync_fs+2
 17101  007D5E  CFE6 F048          	movff	postinc1,??_sync_fs+3
 17102  007D62  0E19               	movlw	25
 17103  007D64  D005               	goto	u9780
 17104  007D66                     u9785:
 17105  007D66  90D8               	bcf	status,0,c
 17106  007D68  3248               	rrcf	??_sync_fs+3,f,c
 17107  007D6A  3247               	rrcf	??_sync_fs+2,f,c
 17108  007D6C  3246               	rrcf	??_sync_fs+1,f,c
 17109  007D6E  3245               	rrcf	??_sync_fs,f,c
 17110  007D70                     u9780:
 17111  007D70  2EE8               	decfsz	wreg,f,c
 17112  007D72  D7F9               	goto	u9785
 17113  007D74  5045               	movf	??_sync_fs,w,c
 17114  007D76  6EDF               	movwf	indf2,c
 17115                           
 17116                           ;ff.c: 822: fs->winsect = fs->volbase + 1;
 17117  007D78  EE20 F01E          	lfsr	2,30
 17118  007D7C  5043               	movf	sync_fs@fs,w,c
 17119  007D7E  26D9               	addwf	fsr2l,f,c
 17120  007D80  5044               	movf	sync_fs@fs+1,w,c
 17121  007D82  22DA               	addwfc	fsr2h,f,c
 17122  007D84  CFDE F045          	movff	postinc2,??_sync_fs
 17123  007D88  CFDE F046          	movff	postinc2,??_sync_fs+1
 17124  007D8C  CFDE F047          	movff	postinc2,??_sync_fs+2
 17125  007D90  CFDE F048          	movff	postinc2,??_sync_fs+3
 17126  007D94  0E01               	movlw	1
 17127  007D96  2445               	addwf	??_sync_fs,w,c
 17128  007D98  6E49               	movwf	(??_sync_fs+4)& (0+255),c
 17129  007D9A  0E00               	movlw	0
 17130  007D9C  2046               	addwfc	??_sync_fs+1,w,c
 17131  007D9E  6E4A               	movwf	(??_sync_fs+5)& (0+255),c
 17132  007DA0  0E00               	movlw	0
 17133  007DA2  2047               	addwfc	??_sync_fs+2,w,c
 17134  007DA4  6E4B               	movwf	(??_sync_fs+6)& (0+255),c
 17135  007DA6  0E00               	movlw	0
 17136  007DA8  2048               	addwfc	??_sync_fs+3,w,c
 17137  007DAA  6E4C               	movwf	(??_sync_fs+7)& (0+255),c
 17138  007DAC  EE20 F02E          	lfsr	2,46
 17139  007DB0  5043               	movf	sync_fs@fs,w,c
 17140  007DB2  26D9               	addwf	fsr2l,f,c
 17141  007DB4  5044               	movf	sync_fs@fs+1,w,c
 17142  007DB6  22DA               	addwfc	fsr2h,f,c
 17143  007DB8  C049  FFDE         	movff	??_sync_fs+4,postinc2
 17144  007DBC  C04A  FFDE         	movff	??_sync_fs+5,postinc2
 17145  007DC0  C04B  FFDE         	movff	??_sync_fs+6,postinc2
 17146  007DC4  C04C  FFDD         	movff	??_sync_fs+7,postdec2
 17147  007DC8  06D9               	decf	fsr2l,f,c
 17148  007DCA  06D9               	decf	fsr2l,f,c
 17149                           
 17150                           ;ff.c: 823: disk_write(fs->drv, fs->win, fs->winsect, 1);
 17151  007DCC  0E32               	movlw	50
 17152  007DCE  2443               	addwf	sync_fs@fs,w,c
 17153  007DD0  6E45               	movwf	??_sync_fs& (0+255),c
 17154  007DD2  0E00               	movlw	0
 17155  007DD4  2044               	addwfc	sync_fs@fs+1,w,c
 17156  007DD6  6E46               	movwf	(??_sync_fs+1)& (0+255),c
 17157  007DD8  C045  F01C         	movff	??_sync_fs,disk_write@buff
 17158  007DDC  C046  F01D         	movff	??_sync_fs+1,disk_write@buff+1
 17159  007DE0  EE20 F02E          	lfsr	2,46
 17160  007DE4  5043               	movf	sync_fs@fs,w,c
 17161  007DE6  26D9               	addwf	fsr2l,f,c
 17162  007DE8  5044               	movf	sync_fs@fs+1,w,c
 17163  007DEA  22DA               	addwfc	fsr2h,f,c
 17164  007DEC  CFDE F01E          	movff	postinc2,disk_write@sector
 17165  007DF0  CFDE F01F          	movff	postinc2,disk_write@sector+1
 17166  007DF4  CFDE F020          	movff	postinc2,disk_write@sector+2
 17167  007DF8  CFDE F021          	movff	postinc2,disk_write@sector+3
 17168  007DFC  0E00               	movlw	0
 17169  007DFE  6E23               	movwf	disk_write@count+1,c
 17170  007E00  0E01               	movlw	1
 17171  007E02  6E22               	movwf	disk_write@count,c
 17172  007E04  EE20 F001          	lfsr	2,1
 17173  007E08  5043               	movf	sync_fs@fs,w,c
 17174  007E0A  26D9               	addwf	fsr2l,f,c
 17175  007E0C  5044               	movf	sync_fs@fs+1,w,c
 17176  007E0E  22DA               	addwfc	fsr2h,f,c
 17177  007E10  50DF               	movf	indf2,w,c
 17178  007E12  EC45  F02F         	call	_disk_write
 17179                           
 17180                           ;ff.c: 824: fs->fsi_flag = 0;
 17181  007E16  EE20 F005          	lfsr	2,5
 17182  007E1A  5043               	movf	sync_fs@fs,w,c
 17183  007E1C  26D9               	addwf	fsr2l,f,c
 17184  007E1E  5044               	movf	sync_fs@fs+1,w,c
 17185  007E20  22DA               	addwfc	fsr2h,f,c
 17186  007E22  0E00               	movlw	0
 17187  007E24  6EDF               	movwf	indf2,c
 17188  007E26                     l7575:
 17189                           
 17190                           ;ff.c: 825: }
 17191                           ;ff.c: 827: if (disk_ioctl(fs->drv, 0, 0) != RES_OK)
 17192  007E26  0E00               	movlw	0
 17193  007E28  6E1C               	movwf	disk_ioctl@ctrl,c
 17194  007E2A  0E00               	movlw	0
 17195  007E2C  6E1E               	movwf	disk_ioctl@buff+1,c
 17196  007E2E  0E00               	movlw	0
 17197  007E30  6E1D               	movwf	disk_ioctl@buff,c
 17198  007E32  EE20 F001          	lfsr	2,1
 17199  007E36  5043               	movf	sync_fs@fs,w,c
 17200  007E38  26D9               	addwf	fsr2l,f,c
 17201  007E3A  5044               	movf	sync_fs@fs+1,w,c
 17202  007E3C  22DA               	addwfc	fsr2h,f,c
 17203  007E3E  50DF               	movf	indf2,w,c
 17204  007E40  EC59  F033         	call	_disk_ioctl
 17205  007E44  0900               	iorlw	0
 17206  007E46  B4D8               	btfsc	status,2,c
 17207  007E48  D002               	goto	l315
 17208                           
 17209                           ;ff.c: 828: res = FR_DISK_ERR;
 17210  007E4A  0E01               	movlw	1
 17211  007E4C  6E4D               	movwf	sync_fs@res,c
 17212  007E4E                     l315:
 17213                           
 17214                           ;ff.c: 829: }
 17215                           ;ff.c: 831: return res;
 17216  007E4E  504D               	movf	sync_fs@res,w,c
 17217  007E50  0012               	return	
 17218  007E52                     __end_of_sync_fs:
 17219                           	opt stack 0
 17220                           tblptru	equ	0xFF8
 17221                           tblptrh	equ	0xFF7
 17222                           tblptrl	equ	0xFF6
 17223                           tablat	equ	0xFF5
 17224                           prodh	equ	0xFF4
 17225                           prodl	equ	0xFF3
 17226                           indf0	equ	0xFEF
 17227                           postinc0	equ	0xFEE
 17228                           postdec0	equ	0xFED
 17229                           fsr0h	equ	0xFEA
 17230                           fsr0l	equ	0xFE9
 17231                           wreg	equ	0xFE8
 17232                           indf1	equ	0xFE7
 17233                           postinc1	equ	0xFE6
 17234                           postdec1	equ	0xFE5
 17235                           fsr1h	equ	0xFE2
 17236                           fsr1l	equ	0xFE1
 17237                           indf2	equ	0xFDF
 17238                           postinc2	equ	0xFDE
 17239                           postdec2	equ	0xFDD
 17240                           plusw2	equ	0xFDB
 17241                           fsr2h	equ	0xFDA
 17242                           fsr2l	equ	0xFD9
 17243                           status	equ	0xFD8
 17244                           
 17245 ;; *************** function _mem_set *****************
 17246 ;; Defined at:
 17247 ;;		line 567 in file "ff.c"
 17248 ;; Parameters:    Size  Location     Type
 17249 ;;  dst             2    0[COMRAM] PTR void 
 17250 ;;		 -> FatFs.win(512), f_utime@sfn(12), f_rename@sfn(12), f_chmod@sfn(12), 
 17251 ;;		 -> f_mkdir@sfn(12), f_unlink@sfn(12), f_stat@sfn(12), f_readdir@sfn(12), 
 17252 ;;		 -> f_opendir@sfn(12), f_getcwd@sfn(12), f_chdir@sfn(12), f_open@sfn(12), 
 17253 ;;		 -> NULL(0), FatFs(562), 
 17254 ;;  val             2    2[COMRAM] int 
 17255 ;;  cnt             2    4[COMRAM] unsigned int 
 17256 ;; Auto vars:     Size  Location     Type
 17257 ;;  d               2    6[COMRAM] PTR unsigned char 
 17258 ;;		 -> FatFs.win(512), f_utime@sfn(12), f_rename@sfn(12), f_chmod@sfn(12), 
 17259 ;;		 -> f_mkdir@sfn(12), f_unlink@sfn(12), f_stat@sfn(12), f_readdir@sfn(12), 
 17260 ;;		 -> f_opendir@sfn(12), f_getcwd@sfn(12), f_chdir@sfn(12), f_open@sfn(12), 
 17261 ;;		 -> NULL(0), FatFs(562), 
 17262 ;; Return value:  Size  Location     Type
 17263 ;;		None               void
 17264 ;; Registers used:
 17265 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17266 ;; Tracked objects:
 17267 ;;		On entry : 0/0
 17268 ;;		On exit  : 0/0
 17269 ;;		Unchanged: 0/0
 17270 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17271 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17272 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17273 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17274 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17275 ;;Total ram usage:        8 bytes
 17276 ;; Hardware stack levels used:    1
 17277 ;; This function calls:
 17278 ;;		Nothing
 17279 ;; This function is called by:
 17280 ;;		_sync_fs
 17281 ;;		_dir_next
 17282 ;;		_dir_register
 17283 ;;		_create_name
 17284 ;;		_dir_remove
 17285 ;;		_f_mkdir
 17286 ;;		_f_setlabel
 17287 ;;		_f_mkfs
 17288 ;; This function uses a non-reentrant model
 17289 ;;
 17290                           
 17291                           	psect	text32
 17292  00519A                     __ptext32:
 17293                           	opt stack 0
 17294  00519A                     _mem_set:
 17295                           	opt stack 26
 17296                           
 17297                           ;ff.c: 568: BYTE *d = (BYTE*)dst;
 17298                           
 17299                           ;incstack = 0
 17300  00519A  C002  F008         	movff	mem_set@dst+1,mem_set@d+1
 17301  00519E  C001  F007         	movff	mem_set@dst,mem_set@d
 17302                           
 17303                           ;ff.c: 570: while (cnt--)
 17304  0051A2  D008               	goto	l7077
 17305  0051A4                     l7073:
 17306                           
 17307                           ;ff.c: 571: *d++ = (BYTE)val;
 17308  0051A4  C007  FFD9         	movff	mem_set@d,fsr2l
 17309  0051A8  C008  FFDA         	movff	mem_set@d+1,fsr2h
 17310  0051AC  C003  FFDF         	movff	mem_set@val,indf2
 17311  0051B0  4A07               	infsnz	mem_set@d,f,c
 17312  0051B2  2A08               	incf	mem_set@d+1,f,c
 17313  0051B4                     l7077:
 17314  0051B4  0605               	decf	mem_set@cnt,f,c
 17315  0051B6  A0D8               	btfss	status,0,c
 17316  0051B8  0606               	decf	mem_set@cnt+1,f,c
 17317  0051BA  2805               	incf	mem_set@cnt& (0+255),w,c
 17318  0051BC  B4D8               	btfsc	status,2,c
 17319  0051BE  2806               	incf	(mem_set@cnt+1)& (0+255),w,c
 17320  0051C0  B4D8               	btfsc	status,2,c
 17321  0051C2  0012               	return	
 17322  0051C4  D7EF               	goto	l7073
 17323  0051C6                     __end_of_mem_set:
 17324                           	opt stack 0
 17325                           tblptru	equ	0xFF8
 17326                           tblptrh	equ	0xFF7
 17327                           tblptrl	equ	0xFF6
 17328                           tablat	equ	0xFF5
 17329                           prodh	equ	0xFF4
 17330                           prodl	equ	0xFF3
 17331                           indf0	equ	0xFEF
 17332                           postinc0	equ	0xFEE
 17333                           postdec0	equ	0xFED
 17334                           fsr0h	equ	0xFEA
 17335                           fsr0l	equ	0xFE9
 17336                           wreg	equ	0xFE8
 17337                           indf1	equ	0xFE7
 17338                           postinc1	equ	0xFE6
 17339                           postdec1	equ	0xFE5
 17340                           fsr1h	equ	0xFE2
 17341                           fsr1l	equ	0xFE1
 17342                           indf2	equ	0xFDF
 17343                           postinc2	equ	0xFDE
 17344                           postdec2	equ	0xFDD
 17345                           plusw2	equ	0xFDB
 17346                           fsr2h	equ	0xFDA
 17347                           fsr2l	equ	0xFD9
 17348                           status	equ	0xFD8
 17349                           
 17350 ;; *************** function _disk_ioctl *****************
 17351 ;; Defined at:
 17352 ;;		line 529 in file "sdmm.c"
 17353 ;; Parameters:    Size  Location     Type
 17354 ;;  drv             1    wreg     unsigned char 
 17355 ;;  ctrl            1   27[COMRAM] unsigned char 
 17356 ;;  buff            2   28[COMRAM] PTR void 
 17357 ;;		 -> f_mkfs@eb(8), f_mkfs@n(4), f_mkfs@n_vol(4), remove_chain@rt(8), 
 17358 ;;		 -> NULL(0), 
 17359 ;; Auto vars:     Size  Location     Type
 17360 ;;  drv             1   59[COMRAM] unsigned char 
 17361 ;;  csd            16   43[COMRAM] unsigned char [16]
 17362 ;;  cs              4   61[COMRAM] unsigned long 
 17363 ;;  res             1   65[COMRAM] enum E14
 17364 ;;  n               1   60[COMRAM] unsigned char 
 17365 ;; Return value:  Size  Location     Type
 17366 ;;                  1    wreg      enum E14
 17367 ;; Registers used:
 17368 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17369 ;; Tracked objects:
 17370 ;;		On entry : 0/0
 17371 ;;		On exit  : 0/0
 17372 ;;		Unchanged: 0/0
 17373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17374 ;;      Params:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17375 ;;      Locals:        23       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17376 ;;      Temps:         13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17377 ;;      Totals:        39       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17378 ;;Total ram usage:       39 bytes
 17379 ;; Hardware stack levels used:    1
 17380 ;; Hardware stack levels required when called:    4
 17381 ;; This function calls:
 17382 ;;		_deselect
 17383 ;;		_disk_status
 17384 ;;		_rcvr_datablock
 17385 ;;		_select
 17386 ;;		_send_cmd
 17387 ;; This function is called by:
 17388 ;;		_sync_fs
 17389 ;;		_remove_chain
 17390 ;;		_f_mkfs
 17391 ;; This function uses a non-reentrant model
 17392 ;;
 17393                           
 17394                           	psect	text33
 17395  0066B2                     __ptext33:
 17396                           	opt stack 0
 17397  0066B2                     _disk_ioctl:
 17398                           	opt stack 24
 17399                           
 17400                           ;incstack = 0
 17401                           ;disk_ioctl@drv stored from wreg
 17402  0066B2  6E3C               	movwf	disk_ioctl@drv,c
 17403                           
 17404                           ;sdmm.c: 535: DRESULT res;
 17405                           ;sdmm.c: 536: BYTE n, csd[16];
 17406                           ;sdmm.c: 537: DWORD cs;
 17407                           ;sdmm.c: 540: if (disk_status(drv) & 0x01) return RES_NOTRDY;
 17408  0066B4  503C               	movf	disk_ioctl@drv,w,c
 17409  0066B6  EC81  F028         	call	_disk_status
 17410  0066BA  6E1F               	movwf	??_disk_ioctl& (0+255),c
 17411  0066BC  A01F               	btfss	??_disk_ioctl,0,c
 17412  0066BE  D002               	goto	l7173
 17413  0066C0  0E03               	movlw	3
 17414  0066C2  D102               	goto	l239
 17415  0066C4                     l7173:
 17416                           
 17417                           ;sdmm.c: 542: res = RES_ERROR;
 17418  0066C4  0E01               	movlw	1
 17419  0066C6  6E42               	movwf	disk_ioctl@res,c
 17420                           
 17421                           ;sdmm.c: 543: switch (ctrl) {
 17422  0066C8  D0F1               	goto	l7201
 17423  0066CA                     l7175:
 17424                           
 17425                           ;sdmm.c: 545: if (select()) res = RES_OK;
 17426  0066CA  ECFC  F028         	call	_select	;wreg free
 17427  0066CE  500D               	movf	?_select+1,w,c
 17428  0066D0  100C               	iorwf	?_select,w,c
 17429  0066D2  B4D8               	btfsc	status,2,c
 17430  0066D4  D0F6               	goto	l7203
 17431  0066D6  D0E5               	goto	L28
 17432  0066D8                     l7179:
 17433                           
 17434                           ;sdmm.c: 549: if ((send_cmd((9), 0) == 0) && rcvr_datablock(csd, 16)) {
 17435  0066D8  0E00               	movlw	0
 17436  0066DA  6E0F               	movwf	send_cmd@arg,c
 17437  0066DC  0E00               	movlw	0
 17438  0066DE  6E10               	movwf	send_cmd@arg+1,c
 17439  0066E0  0E00               	movlw	0
 17440  0066E2  6E11               	movwf	send_cmd@arg+2,c
 17441  0066E4  0E00               	movlw	0
 17442  0066E6  6E12               	movwf	send_cmd@arg+3,c
 17443  0066E8  0E09               	movlw	9
 17444  0066EA  ECC0  F02C         	call	_send_cmd
 17445  0066EE  0900               	iorlw	0
 17446  0066F0  A4D8               	btfss	status,2,c
 17447  0066F2  D0E7               	goto	l7203
 17448  0066F4  0E00               	movlw	high disk_ioctl@csd
 17449  0066F6  6E08               	movwf	rcvr_datablock@buff+1,c
 17450  0066F8  0E2C               	movlw	low disk_ioctl@csd
 17451  0066FA  6E07               	movwf	rcvr_datablock@buff,c
 17452  0066FC  0E00               	movlw	0
 17453  0066FE  6E0A               	movwf	rcvr_datablock@btr+1,c
 17454  006700  0E10               	movlw	16
 17455  006702  6E09               	movwf	rcvr_datablock@btr,c
 17456  006704  ECB7  F02A         	call	_rcvr_datablock	;wreg free
 17457  006708  5008               	movf	?_rcvr_datablock+1,w,c
 17458  00670A  1007               	iorwf	?_rcvr_datablock,w,c
 17459  00670C  B4D8               	btfsc	status,2,c
 17460  00670E  D0D9               	goto	l7203
 17461                           
 17462                           ;sdmm.c: 550: if ((csd[0] >> 6) == 1) {
 17463  006710  C02C  F01F         	movff	disk_ioctl@csd,??_disk_ioctl
 17464  006714  0E06               	movlw	6
 17465  006716  6E20               	movwf	(??_disk_ioctl+1)& (0+255),c
 17466  006718                     u9125:
 17467  006718  90D8               	bcf	status,0,c
 17468  00671A  321F               	rrcf	??_disk_ioctl,f,c
 17469  00671C  2E20               	decfsz	(??_disk_ioctl+1)& (0+255),f,c
 17470  00671E  D7FC               	goto	u9125
 17471  006720  501F               	movf	??_disk_ioctl,w,c
 17472  006722  0A01               	xorlw	1
 17473  006724  A4D8               	btfss	status,2,c
 17474  006726  D04E               	goto	l7189
 17475                           
 17476                           ;sdmm.c: 551: cs = csd[9] + ((WORD)csd[8] << 8) + ((DWORD)(csd[7] & 63) << 16) + 1;
 17477  006728  C033  F01F         	movff	disk_ioctl@csd+7,??_disk_ioctl
 17478  00672C  0E3F               	movlw	63
 17479  00672E  161F               	andwf	??_disk_ioctl,f,c
 17480  006730  C01F  F020         	movff	??_disk_ioctl,??_disk_ioctl+1
 17481  006734  6A21               	clrf	(??_disk_ioctl+2)& (0+255),c
 17482  006736  6A22               	clrf	(??_disk_ioctl+3)& (0+255),c
 17483  006738  6A23               	clrf	(??_disk_ioctl+4)& (0+255),c
 17484  00673A  C021  F023         	movff	??_disk_ioctl+2,??_disk_ioctl+4
 17485  00673E  C020  F022         	movff	??_disk_ioctl+1,??_disk_ioctl+3
 17486  006742  6A21               	clrf	??_disk_ioctl+2,c
 17487  006744  6A20               	clrf	??_disk_ioctl+1,c
 17488  006746  5034               	movf	disk_ioctl@csd+8,w,c
 17489  006748  6E25               	movwf	(??_disk_ioctl+6)& (0+255),c
 17490  00674A  6A24               	clrf	(??_disk_ioctl+5)& (0+255),c
 17491  00674C  5035               	movf	disk_ioctl@csd+9,w,c
 17492  00674E  6E26               	movwf	(??_disk_ioctl+7)& (0+255),c
 17493  006750  6A27               	clrf	(??_disk_ioctl+8)& (0+255),c
 17494  006752  5024               	movf	??_disk_ioctl+5,w,c
 17495  006754  2626               	addwf	??_disk_ioctl+7,f,c
 17496  006756  5025               	movf	??_disk_ioctl+6,w,c
 17497  006758  2227               	addwfc	??_disk_ioctl+8,f,c
 17498  00675A  5026               	movf	??_disk_ioctl+7,w,c
 17499  00675C  2420               	addwf	??_disk_ioctl+1,w,c
 17500  00675E  6E28               	movwf	(??_disk_ioctl+9)& (0+255),c
 17501  006760  5027               	movf	??_disk_ioctl+8,w,c
 17502  006762  2021               	addwfc	??_disk_ioctl+2,w,c
 17503  006764  6E29               	movwf	(??_disk_ioctl+10)& (0+255),c
 17504  006766  0E00               	movlw	0
 17505  006768  2022               	addwfc	??_disk_ioctl+3,w,c
 17506  00676A  6E2A               	movwf	(??_disk_ioctl+11)& (0+255),c
 17507  00676C  0E00               	movlw	0
 17508  00676E  2023               	addwfc	??_disk_ioctl+4,w,c
 17509  006770  6E2B               	movwf	(??_disk_ioctl+12)& (0+255),c
 17510  006772  0E01               	movlw	1
 17511  006774  2428               	addwf	??_disk_ioctl+9,w,c
 17512  006776  6E3E               	movwf	disk_ioctl@cs,c
 17513  006778  0E00               	movlw	0
 17514  00677A  2029               	addwfc	??_disk_ioctl+10,w,c
 17515  00677C  6E3F               	movwf	disk_ioctl@cs+1,c
 17516  00677E  0E00               	movlw	0
 17517  006780  202A               	addwfc	??_disk_ioctl+11,w,c
 17518  006782  6E40               	movwf	disk_ioctl@cs+2,c
 17519  006784  0E00               	movlw	0
 17520  006786  202B               	addwfc	??_disk_ioctl+12,w,c
 17521  006788  6E41               	movwf	disk_ioctl@cs+3,c
 17522                           
 17523                           ;sdmm.c: 552: *(DWORD*)buff = cs << 10;
 17524  00678A  C03E  F01F         	movff	disk_ioctl@cs,??_disk_ioctl
 17525  00678E  C03F  F020         	movff	disk_ioctl@cs+1,??_disk_ioctl+1
 17526  006792  C040  F021         	movff	disk_ioctl@cs+2,??_disk_ioctl+2
 17527  006796  C041  F022         	movff	disk_ioctl@cs+3,??_disk_ioctl+3
 17528  00679A  0E0A               	movlw	10
 17529  00679C                     u9145:
 17530  00679C  90D8               	bcf	status,0,c
 17531  00679E  361F               	rlcf	??_disk_ioctl,f,c
 17532  0067A0  3620               	rlcf	??_disk_ioctl+1,f,c
 17533  0067A2  3621               	rlcf	??_disk_ioctl+2,f,c
 17534  0067A4  3622               	rlcf	??_disk_ioctl+3,f,c
 17535  0067A6  2EE8               	decfsz	wreg,f,c
 17536  0067A8  D7F9               	goto	u9145
 17537  0067AA  C01D  FFD9         	movff	disk_ioctl@buff,fsr2l
 17538  0067AE  C01E  FFDA         	movff	disk_ioctl@buff+1,fsr2h
 17539  0067B2  C01F  FFDE         	movff	??_disk_ioctl,postinc2
 17540  0067B6  C020  FFDE         	movff	??_disk_ioctl+1,postinc2
 17541  0067BA  C021  FFDE         	movff	??_disk_ioctl+2,postinc2
 17542  0067BE  C022  FFDD         	movff	??_disk_ioctl+3,postdec2
 17543  0067C2  D05E               	goto	L27
 17544  0067C4                     l7189:
 17545                           
 17546                           ;sdmm.c: 554: n = (csd[5] & 15) + ((csd[10] & 128) >> 7) + ((csd[9] & 3) << 1) + 2;
 17547  0067C4  C035  F01F         	movff	disk_ioctl@csd+9,??_disk_ioctl
 17548  0067C8  0E03               	movlw	3
 17549  0067CA  161F               	andwf	??_disk_ioctl,f,c
 17550  0067CC  90D8               	bcf	status,0,c
 17551  0067CE  341F               	rlcf	??_disk_ioctl,w,c
 17552  0067D0  6E20               	movwf	(??_disk_ioctl+1)& (0+255),c
 17553  0067D2  6A21               	clrf	(??_disk_ioctl+2)& (0+255),c
 17554  0067D4  AE36               	btfss	disk_ioctl@csd+10,7,c
 17555  0067D6  D001               	bra	u9155
 17556  0067D8  2A21               	incf	(??_disk_ioctl+2)& (0+255),f,c
 17557  0067DA                     u9155:
 17558  0067DA  0E01               	movlw	1
 17559  0067DC  1621               	andwf	??_disk_ioctl+2,f,c
 17560  0067DE  5031               	movf	disk_ioctl@csd+5,w,c
 17561  0067E0  0B0F               	andlw	15
 17562  0067E2  2421               	addwf	??_disk_ioctl+2,w,c
 17563  0067E4  2420               	addwf	??_disk_ioctl+1,w,c
 17564  0067E6  0F02               	addlw	2
 17565  0067E8  6E3D               	movwf	disk_ioctl@n,c
 17566                           
 17567                           ;sdmm.c: 555: cs = (csd[8] >> 6) + ((WORD)csd[7] << 2) + ((WORD)(csd[6] & 3) << 10) + 1;
 17568  0067EA  5032               	movf	disk_ioctl@csd+6,w,c
 17569  0067EC  0B03               	andlw	3
 17570  0067EE  6E1F               	movwf	??_disk_ioctl& (0+255),c
 17571  0067F0  6A20               	clrf	(??_disk_ioctl+1)& (0+255),c
 17572  0067F2  0E0A               	movlw	10
 17573  0067F4                     u9165:
 17574  0067F4  90D8               	bcf	status,0,c
 17575  0067F6  361F               	rlcf	??_disk_ioctl,f,c
 17576  0067F8  3620               	rlcf	??_disk_ioctl+1,f,c
 17577  0067FA  2EE8               	decfsz	wreg,f,c
 17578  0067FC  D7FB               	goto	u9165
 17579  0067FE  5033               	movf	disk_ioctl@csd+7,w,c
 17580  006800  6E21               	movwf	(??_disk_ioctl+2)& (0+255),c
 17581  006802  6A22               	clrf	(??_disk_ioctl+3)& (0+255),c
 17582  006804  90D8               	bcf	status,0,c
 17583  006806  3621               	rlcf	??_disk_ioctl+2,f,c
 17584  006808  3622               	rlcf	??_disk_ioctl+3,f,c
 17585  00680A  90D8               	bcf	status,0,c
 17586  00680C  3621               	rlcf	??_disk_ioctl+2,f,c
 17587  00680E  3622               	rlcf	??_disk_ioctl+3,f,c
 17588  006810  4434               	rlncf	disk_ioctl@csd+8,w,c
 17589  006812  46E8               	rlncf	wreg,f,c
 17590  006814  0B03               	andlw	3
 17591  006816  6E23               	movwf	(??_disk_ioctl+4)& (0+255),c
 17592  006818  6A24               	clrf	(??_disk_ioctl+5)& (0+255),c
 17593  00681A  5021               	movf	??_disk_ioctl+2,w,c
 17594  00681C  2623               	addwf	??_disk_ioctl+4,f,c
 17595  00681E  5022               	movf	??_disk_ioctl+3,w,c
 17596  006820  2224               	addwfc	??_disk_ioctl+5,f,c
 17597  006822  501F               	movf	??_disk_ioctl,w,c
 17598  006824  2623               	addwf	??_disk_ioctl+4,f,c
 17599  006826  5020               	movf	??_disk_ioctl+1,w,c
 17600  006828  2224               	addwfc	??_disk_ioctl+5,f,c
 17601  00682A  0E01               	movlw	1
 17602  00682C  2623               	addwf	??_disk_ioctl+4,f,c
 17603  00682E  0E00               	movlw	0
 17604  006830  2224               	addwfc	??_disk_ioctl+5,f,c
 17605  006832  C023  F03E         	movff	??_disk_ioctl+4,disk_ioctl@cs
 17606  006836  C024  F03F         	movff	??_disk_ioctl+5,disk_ioctl@cs+1
 17607  00683A  6A40               	clrf	disk_ioctl@cs+2,c
 17608  00683C  6A41               	clrf	disk_ioctl@cs+3,c
 17609                           
 17610                           ;sdmm.c: 556: *(DWORD*)buff = cs << (n - 9);
 17611  00683E  C03D  F01F         	movff	disk_ioctl@n,??_disk_ioctl
 17612  006842  0EF7               	movlw	-9
 17613  006844  261F               	addwf	??_disk_ioctl,f,c
 17614  006846  C03E  F020         	movff	disk_ioctl@cs,??_disk_ioctl+1
 17615  00684A  C03F  F021         	movff	disk_ioctl@cs+1,??_disk_ioctl+2
 17616  00684E  C040  F022         	movff	disk_ioctl@cs+2,??_disk_ioctl+3
 17617  006852  C041  F023         	movff	disk_ioctl@cs+3,??_disk_ioctl+4
 17618  006856  2A1F               	incf	??_disk_ioctl,f,c
 17619  006858  D005               	goto	u9170
 17620  00685A                     u9175:
 17621  00685A  90D8               	bcf	status,0,c
 17622  00685C  3620               	rlcf	??_disk_ioctl+1,f,c
 17623  00685E  3621               	rlcf	??_disk_ioctl+2,f,c
 17624  006860  3622               	rlcf	??_disk_ioctl+3,f,c
 17625  006862  3623               	rlcf	??_disk_ioctl+4,f,c
 17626  006864                     u9170:
 17627  006864  2E1F               	decfsz	??_disk_ioctl,f,c
 17628  006866  D7F9               	goto	u9175
 17629  006868  C01D  FFD9         	movff	disk_ioctl@buff,fsr2l
 17630  00686C  C01E  FFDA         	movff	disk_ioctl@buff+1,fsr2h
 17631  006870  C020  FFDE         	movff	??_disk_ioctl+1,postinc2
 17632  006874  C021  FFDE         	movff	??_disk_ioctl+2,postinc2
 17633  006878  C022  FFDE         	movff	??_disk_ioctl+3,postinc2
 17634  00687C  C023  FFDD         	movff	??_disk_ioctl+4,postdec2
 17635  006880                     L27:
 17636  006880  06D9               	decf	fsr2l,f,c
 17637  006882  06D9               	decf	fsr2l,f,c
 17638  006884  D00E               	goto	L28
 17639  006886                     l7195:
 17640                           
 17641                           ;sdmm.c: 563: *(DWORD*)buff = 128;
 17642  006886  C01D  FFD9         	movff	disk_ioctl@buff,fsr2l
 17643  00688A  C01E  FFDA         	movff	disk_ioctl@buff+1,fsr2h
 17644  00688E  0E80               	movlw	128
 17645  006890  6EDE               	movwf	postinc2,c
 17646  006892  0E00               	movlw	0
 17647  006894  6EDE               	movwf	postinc2,c
 17648  006896  0E00               	movlw	0
 17649  006898  6EDE               	movwf	postinc2,c
 17650  00689A  0E00               	movlw	0
 17651  00689C  6EDD               	movwf	postdec2,c
 17652  00689E  52DD               	movf	postdec2,f,c
 17653  0068A0  52DD               	movf	postdec2,f,c
 17654  0068A2                     L28:
 17655                           
 17656                           ;sdmm.c: 564: res = RES_OK;
 17657  0068A2  0E00               	movlw	0
 17658  0068A4  D001               	goto	L29
 17659  0068A6                     l7199:
 17660                           
 17661                           ;sdmm.c: 568: res = RES_PARERR;
 17662  0068A6  0E04               	movlw	4
 17663  0068A8                     L29:
 17664  0068A8  6E42               	movwf	disk_ioctl@res,c
 17665                           
 17666                           ;sdmm.c: 569: }
 17667  0068AA  D00B               	goto	l7203
 17668  0068AC                     l7201:
 17669  0068AC  501C               	movf	disk_ioctl@ctrl,w,c
 17670                           
 17671                           ; Switch size 1, requested type "space"
 17672                           ; Number of cases is 3, Range of values is 0 to 3
 17673                           ; switch strategies available:
 17674                           ; Name         Instructions Cycles
 17675                           ; simple_byte           10     6 (average)
 17676                           ;	Chosen strategy is simple_byte
 17677  0068AE  0A00               	xorlw	0	; case 0
 17678  0068B0  B4D8               	btfsc	status,2,c
 17679  0068B2  D70B               	goto	l7175
 17680  0068B4  0A01               	xorlw	1	; case 1
 17681  0068B6  B4D8               	btfsc	status,2,c
 17682  0068B8  D70F               	goto	l7179
 17683  0068BA  0A02               	xorlw	2	; case 3
 17684  0068BC  B4D8               	btfsc	status,2,c
 17685  0068BE  D7E3               	goto	l7195
 17686  0068C0  D7F2               	goto	l7199
 17687  0068C2                     l7203:
 17688                           
 17689                           ;sdmm.c: 571: deselect();
 17690  0068C2  EC95  F028         	call	_deselect	;wreg free
 17691                           
 17692                           ;sdmm.c: 573: return res;
 17693  0068C6  5042               	movf	disk_ioctl@res,w,c
 17694  0068C8                     l239:
 17695  0068C8  0012               	return	
 17696  0068CA                     __end_of_disk_ioctl:
 17697                           	opt stack 0
 17698                           tblptru	equ	0xFF8
 17699                           tblptrh	equ	0xFF7
 17700                           tblptrl	equ	0xFF6
 17701                           tablat	equ	0xFF5
 17702                           prodh	equ	0xFF4
 17703                           prodl	equ	0xFF3
 17704                           indf0	equ	0xFEF
 17705                           postinc0	equ	0xFEE
 17706                           postdec0	equ	0xFED
 17707                           fsr0h	equ	0xFEA
 17708                           fsr0l	equ	0xFE9
 17709                           wreg	equ	0xFE8
 17710                           indf1	equ	0xFE7
 17711                           postinc1	equ	0xFE6
 17712                           postdec1	equ	0xFE5
 17713                           fsr1h	equ	0xFE2
 17714                           fsr1l	equ	0xFE1
 17715                           indf2	equ	0xFDF
 17716                           postinc2	equ	0xFDE
 17717                           postdec2	equ	0xFDD
 17718                           plusw2	equ	0xFDB
 17719                           fsr2h	equ	0xFDA
 17720                           fsr2l	equ	0xFD9
 17721                           status	equ	0xFD8
 17722                           
 17723 ;; *************** function _st_clust *****************
 17724 ;; Defined at:
 17725 ;;		line 1295 in file "ff.c"
 17726 ;; Parameters:    Size  Location     Type
 17727 ;;  dir             2    0[COMRAM] PTR unsigned char 
 17728 ;;		 -> FatFs.win(512), NULL(0), FatFs(562), 
 17729 ;;  cl              4    2[COMRAM] unsigned long 
 17730 ;; Auto vars:     Size  Location     Type
 17731 ;;		None
 17732 ;; Return value:  Size  Location     Type
 17733 ;;		None               void
 17734 ;; Registers used:
 17735 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 17736 ;; Tracked objects:
 17737 ;;		On entry : 0/0
 17738 ;;		On exit  : 0/0
 17739 ;;		Unchanged: 0/0
 17740 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17741 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17742 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17743 ;;      Temps:          3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17744 ;;      Totals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17745 ;;Total ram usage:        9 bytes
 17746 ;; Hardware stack levels used:    1
 17747 ;; This function calls:
 17748 ;;		Nothing
 17749 ;; This function is called by:
 17750 ;;		_f_open
 17751 ;;		_f_sync
 17752 ;;		_f_mkdir
 17753 ;;		_f_rename
 17754 ;; This function uses a non-reentrant model
 17755 ;;
 17756                           
 17757                           	psect	text34
 17758  005398                     __ptext34:
 17759                           	opt stack 0
 17760  005398                     _st_clust:
 17761                           	opt stack 29
 17762                           
 17763                           ;ff.c: 1300: *(BYTE*)(dir + 26)=(BYTE)(cl); *((BYTE*)(dir + 26)+1)=(BYTE)((WORD)(cl)>>8)
      +                          ;
 17764                           
 17765                           ;incstack = 0
 17766  005398  EE20 F01A          	lfsr	2,26
 17767  00539C  5001               	movf	st_clust@dir,w,c
 17768  00539E  26D9               	addwf	fsr2l,f,c
 17769  0053A0  5002               	movf	st_clust@dir+1,w,c
 17770  0053A2  22DA               	addwfc	fsr2h,f,c
 17771  0053A4  C003  FFDF         	movff	st_clust@cl,indf2
 17772  0053A8  EE20 F01B          	lfsr	2,27
 17773  0053AC  5001               	movf	st_clust@dir,w,c
 17774  0053AE  26D9               	addwf	fsr2l,f,c
 17775  0053B0  5002               	movf	st_clust@dir+1,w,c
 17776  0053B2  22DA               	addwfc	fsr2h,f,c
 17777  0053B4  C004  F007         	movff	st_clust@cl+1,??_st_clust
 17778  0053B8  C007  F008         	movff	??_st_clust,??_st_clust+1
 17779  0053BC  6A09               	clrf	(??_st_clust+2)& (0+255),c
 17780  0053BE  5008               	movf	??_st_clust+1,w,c
 17781  0053C0  6EDF               	movwf	indf2,c
 17782                           
 17783                           ;ff.c: 1301: *(BYTE*)(dir + 20)=(BYTE)(cl >> 16); *((BYTE*)(dir + 20)+1)=(BYTE)((WORD)(c
      +                          l >> 16)>>8);
 17784  0053C2  EE20 F014          	lfsr	2,20
 17785  0053C6  5001               	movf	st_clust@dir,w,c
 17786  0053C8  26D9               	addwf	fsr2l,f,c
 17787  0053CA  5002               	movf	st_clust@dir+1,w,c
 17788  0053CC  22DA               	addwfc	fsr2h,f,c
 17789  0053CE  C005  FFDF         	movff	st_clust@cl+2,indf2
 17790  0053D2  EE20 F015          	lfsr	2,21
 17791  0053D6  5001               	movf	st_clust@dir,w,c
 17792  0053D8  26D9               	addwf	fsr2l,f,c
 17793  0053DA  5002               	movf	st_clust@dir+1,w,c
 17794  0053DC  22DA               	addwfc	fsr2h,f,c
 17795  0053DE  C006  F007         	movff	st_clust@cl+3,??_st_clust
 17796  0053E2  C007  F008         	movff	??_st_clust,??_st_clust+1
 17797  0053E6  6A09               	clrf	(??_st_clust+2)& (0+255),c
 17798  0053E8  5008               	movf	??_st_clust+1,w,c
 17799  0053EA  6EDF               	movwf	indf2,c
 17800  0053EC  0012               	return	
 17801  0053EE                     __end_of_st_clust:
 17802                           	opt stack 0
 17803                           tblptru	equ	0xFF8
 17804                           tblptrh	equ	0xFF7
 17805                           tblptrl	equ	0xFF6
 17806                           tablat	equ	0xFF5
 17807                           prodh	equ	0xFF4
 17808                           prodl	equ	0xFF3
 17809                           indf0	equ	0xFEF
 17810                           postinc0	equ	0xFEE
 17811                           postdec0	equ	0xFED
 17812                           fsr0h	equ	0xFEA
 17813                           fsr0l	equ	0xFE9
 17814                           wreg	equ	0xFE8
 17815                           indf1	equ	0xFE7
 17816                           postinc1	equ	0xFE6
 17817                           postdec1	equ	0xFE5
 17818                           fsr1h	equ	0xFE2
 17819                           fsr1l	equ	0xFE1
 17820                           indf2	equ	0xFDF
 17821                           postinc2	equ	0xFDE
 17822                           postdec2	equ	0xFDD
 17823                           plusw2	equ	0xFDB
 17824                           fsr2h	equ	0xFDA
 17825                           fsr2l	equ	0xFD9
 17826                           status	equ	0xFD8
 17827                           
 17828 ;; *************** function _move_window *****************
 17829 ;; Defined at:
 17830 ;;		line 772 in file "ff.c"
 17831 ;; Parameters:    Size  Location     Type
 17832 ;;  fs              2   58[COMRAM] PTR struct .
 17833 ;;		 -> NULL(0), FatFs(562), 
 17834 ;;  sector          4   60[COMRAM] unsigned long 
 17835 ;; Auto vars:     Size  Location     Type
 17836 ;;  res             1   68[COMRAM] enum E67
 17837 ;; Return value:  Size  Location     Type
 17838 ;;                  1    wreg      enum E67
 17839 ;; Registers used:
 17840 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 17841 ;; Tracked objects:
 17842 ;;		On entry : 0/0
 17843 ;;		On exit  : 0/0
 17844 ;;		Unchanged: 0/0
 17845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 17846 ;;      Params:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17847 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17848 ;;      Temps:          4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17849 ;;      Totals:        11       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 17850 ;;Total ram usage:       11 bytes
 17851 ;; Hardware stack levels used:    1
 17852 ;; Hardware stack levels required when called:    6
 17853 ;; This function calls:
 17854 ;;		_disk_read
 17855 ;;		_sync_window
 17856 ;; This function is called by:
 17857 ;;		_get_fat
 17858 ;;		_put_fat
 17859 ;;		_dir_alloc
 17860 ;;		_dir_find
 17861 ;;		_dir_register
 17862 ;;		_check_fs
 17863 ;;		_find_volume
 17864 ;;		_f_open
 17865 ;;		_f_write
 17866 ;;		_f_sync
 17867 ;;		_dir_read
 17868 ;;		_dir_remove
 17869 ;;		_f_read
 17870 ;;		_f_getfree
 17871 ;;		_f_rename
 17872 ;;		_f_getlabel
 17873 ;;		_f_forward
 17874 ;; This function uses a non-reentrant model
 17875 ;;
 17876                           
 17877                           	psect	text35
 17878  0058CC                     __ptext35:
 17879                           	opt stack 0
 17880  0058CC                     _move_window:
 17881                           	opt stack 23
 17882                           
 17883                           ;ff.c: 777: FRESULT res = FR_OK;
 17884                           
 17885                           ;incstack = 0
 17886  0058CC  0E00               	movlw	0
 17887  0058CE  6E45               	movwf	move_window@res,c
 17888                           
 17889                           ;ff.c: 780: if (sector != fs->winsect) {
 17890  0058D0  EE20 F02E          	lfsr	2,46
 17891  0058D4  503B               	movf	move_window@fs,w,c
 17892  0058D6  26D9               	addwf	fsr2l,f,c
 17893  0058D8  503C               	movf	move_window@fs+1,w,c
 17894  0058DA  22DA               	addwfc	fsr2h,f,c
 17895  0058DC  CFDE F041          	movff	postinc2,??_move_window
 17896  0058E0  CFDE F042          	movff	postinc2,??_move_window+1
 17897  0058E4  CFDE F043          	movff	postinc2,??_move_window+2
 17898  0058E8  CFDE F044          	movff	postinc2,??_move_window+3
 17899  0058EC  5040               	movf	move_window@sector+3,w,c
 17900  0058EE  1844               	xorwf	??_move_window+3,w,c
 17901  0058F0  E108               	bnz	u8605
 17902  0058F2  503F               	movf	move_window@sector+2,w,c
 17903  0058F4  1843               	xorwf	??_move_window+2,w,c
 17904  0058F6  E105               	bnz	u8605
 17905  0058F8  503E               	movf	move_window@sector+1,w,c
 17906  0058FA  1842               	xorwf	??_move_window+1,w,c
 17907  0058FC  E102               	bnz	u8605
 17908  0058FE  503D               	movf	move_window@sector,w,c
 17909  005900  1841               	xorwf	??_move_window,w,c
 17910  005902                     u8605:
 17911  005902  B4D8               	btfsc	status,2,c
 17912  005904  D03B               	goto	l6927
 17913                           
 17914                           ;ff.c: 782: res = sync_window(fs);
 17915  005906  C03C  F027         	movff	move_window@fs+1,sync_window@fs+1
 17916  00590A  C03B  F026         	movff	move_window@fs,sync_window@fs
 17917  00590E  EC8F  F031         	call	_sync_window	;wreg free
 17918  005912  6E45               	movwf	move_window@res,c
 17919                           
 17920                           ;ff.c: 784: if (res == FR_OK) {
 17921  005914  6645               	tstfsz	move_window@res,c
 17922  005916  D032               	goto	l6927
 17923                           
 17924                           ;ff.c: 785: if (disk_read(fs->drv, fs->win, sector, 1) != RES_OK) {
 17925  005918  0E32               	movlw	50
 17926  00591A  243B               	addwf	move_window@fs,w,c
 17927  00591C  6E1C               	movwf	disk_read@buff,c
 17928  00591E  0E00               	movlw	0
 17929  005920  203C               	addwfc	move_window@fs+1,w,c
 17930  005922  6E1D               	movwf	disk_read@buff+1,c
 17931  005924  C03D  F01E         	movff	move_window@sector,disk_read@sector
 17932  005928  C03E  F01F         	movff	move_window@sector+1,disk_read@sector+1
 17933  00592C  C03F  F020         	movff	move_window@sector+2,disk_read@sector+2
 17934  005930  C040  F021         	movff	move_window@sector+3,disk_read@sector+3
 17935  005934  0E00               	movlw	0
 17936  005936  6E23               	movwf	disk_read@count+1,c
 17937  005938  0E01               	movlw	1
 17938  00593A  6E22               	movwf	disk_read@count,c
 17939  00593C  EE20 F001          	lfsr	2,1
 17940  005940  503B               	movf	move_window@fs,w,c
 17941  005942  26D9               	addwf	fsr2l,f,c
 17942  005944  503C               	movf	move_window@fs+1,w,c
 17943  005946  22DA               	addwfc	fsr2h,f,c
 17944  005948  50DF               	movf	indf2,w,c
 17945  00594A  EC1C  F02D         	call	_disk_read
 17946  00594E  0900               	iorlw	0
 17947  005950  B4D8               	btfsc	status,2,c
 17948  005952  D006               	goto	l6925
 17949                           
 17950                           ;ff.c: 786: sector = 0xFFFFFFFF;
 17951  005954  683D               	setf	move_window@sector,c
 17952  005956  683E               	setf	move_window@sector+1,c
 17953  005958  683F               	setf	move_window@sector+2,c
 17954  00595A  6840               	setf	move_window@sector+3,c
 17955                           
 17956                           ;ff.c: 787: res = FR_DISK_ERR;
 17957  00595C  0E01               	movlw	1
 17958  00595E  6E45               	movwf	move_window@res,c
 17959  005960                     l6925:
 17960                           
 17961                           ;ff.c: 788: }
 17962                           ;ff.c: 789: fs->winsect = sector;
 17963  005960  EE20 F02E          	lfsr	2,46
 17964  005964  503B               	movf	move_window@fs,w,c
 17965  005966  26D9               	addwf	fsr2l,f,c
 17966  005968  503C               	movf	move_window@fs+1,w,c
 17967  00596A  22DA               	addwfc	fsr2h,f,c
 17968  00596C  C03D  FFDE         	movff	move_window@sector,postinc2
 17969  005970  C03E  FFDE         	movff	move_window@sector+1,postinc2
 17970  005974  C03F  FFDE         	movff	move_window@sector+2,postinc2
 17971  005978  C040  FFDE         	movff	move_window@sector+3,postinc2
 17972  00597C                     l6927:
 17973                           
 17974                           ;ff.c: 790: }
 17975                           ;ff.c: 791: }
 17976                           ;ff.c: 792: return res;
 17977  00597C  5045               	movf	move_window@res,w,c
 17978  00597E  0012               	return	
 17979  005980                     __end_of_move_window:
 17980                           	opt stack 0
 17981                           tblptru	equ	0xFF8
 17982                           tblptrh	equ	0xFF7
 17983                           tblptrl	equ	0xFF6
 17984                           tablat	equ	0xFF5
 17985                           prodh	equ	0xFF4
 17986                           prodl	equ	0xFF3
 17987                           indf0	equ	0xFEF
 17988                           postinc0	equ	0xFEE
 17989                           postdec0	equ	0xFED
 17990                           fsr0h	equ	0xFEA
 17991                           fsr0l	equ	0xFE9
 17992                           wreg	equ	0xFE8
 17993                           indf1	equ	0xFE7
 17994                           postinc1	equ	0xFE6
 17995                           postdec1	equ	0xFE5
 17996                           fsr1h	equ	0xFE2
 17997                           fsr1l	equ	0xFE1
 17998                           indf2	equ	0xFDF
 17999                           postinc2	equ	0xFDE
 18000                           postdec2	equ	0xFDD
 18001                           plusw2	equ	0xFDB
 18002                           fsr2h	equ	0xFDA
 18003                           fsr2l	equ	0xFD9
 18004                           status	equ	0xFD8
 18005                           
 18006 ;; *************** function _sync_window *****************
 18007 ;; Defined at:
 18008 ;;		line 743 in file "ff.c"
 18009 ;; Parameters:    Size  Location     Type
 18010 ;;  fs              2   37[COMRAM] PTR struct .
 18011 ;;		 -> NULL(0), FatFs(562), 
 18012 ;; Auto vars:     Size  Location     Type
 18013 ;;  wsect           4   54[COMRAM] unsigned long 
 18014 ;;  nf              2   52[COMRAM] unsigned int 
 18015 ;;  res             1   51[COMRAM] enum E67
 18016 ;; Return value:  Size  Location     Type
 18017 ;;                  1    wreg      enum E67
 18018 ;; Registers used:
 18019 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18020 ;; Tracked objects:
 18021 ;;		On entry : 0/0
 18022 ;;		On exit  : 0/0
 18023 ;;		Unchanged: 0/0
 18024 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18025 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18026 ;;      Locals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18027 ;;      Temps:         12       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18028 ;;      Totals:        21       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18029 ;;Total ram usage:       21 bytes
 18030 ;; Hardware stack levels used:    1
 18031 ;; Hardware stack levels required when called:    5
 18032 ;; This function calls:
 18033 ;;		_disk_write
 18034 ;; This function is called by:
 18035 ;;		_move_window
 18036 ;;		_sync_fs
 18037 ;;		_dir_next
 18038 ;;		_f_write
 18039 ;;		_f_mkdir
 18040 ;; This function uses a non-reentrant model
 18041 ;;
 18042                           
 18043                           	psect	text36
 18044  00631E                     __ptext36:
 18045                           	opt stack 0
 18046  00631E                     _sync_window:
 18047                           	opt stack 24
 18048                           
 18049                           ;ff.c: 747: DWORD wsect;
 18050                           ;ff.c: 748: UINT nf;
 18051                           ;ff.c: 749: FRESULT res = FR_OK;
 18052                           
 18053                           ;incstack = 0
 18054  00631E  0E00               	movlw	0
 18055  006320  6E34               	movwf	sync_window@res,c
 18056                           
 18057                           ;ff.c: 752: if (fs->wflag) {
 18058  006322  EE20 F004          	lfsr	2,4
 18059  006326  5026               	movf	sync_window@fs,w,c
 18060  006328  26D9               	addwf	fsr2l,f,c
 18061  00632A  5027               	movf	sync_window@fs+1,w,c
 18062  00632C  22DA               	addwfc	fsr2h,f,c
 18063  00632E  50DF               	movf	indf2,w,c
 18064  006330  B4D8               	btfsc	status,2,c
 18065  006332  D0B8               	goto	l6907
 18066                           
 18067                           ;ff.c: 753: wsect = fs->winsect;
 18068  006334  EE20 F02E          	lfsr	2,46
 18069  006338  5026               	movf	sync_window@fs,w,c
 18070  00633A  26D9               	addwf	fsr2l,f,c
 18071  00633C  5027               	movf	sync_window@fs+1,w,c
 18072  00633E  22DA               	addwfc	fsr2h,f,c
 18073  006340  CFDE F037          	movff	postinc2,sync_window@wsect
 18074  006344  CFDE F038          	movff	postinc2,sync_window@wsect+1
 18075  006348  CFDE F039          	movff	postinc2,sync_window@wsect+2
 18076  00634C  CFDE F03A          	movff	postinc2,sync_window@wsect+3
 18077                           
 18078                           ;ff.c: 754: if (disk_write(fs->drv, fs->win, wsect, 1) != RES_OK) {
 18079  006350  0E32               	movlw	50
 18080  006352  2426               	addwf	sync_window@fs,w,c
 18081  006354  6E28               	movwf	??_sync_window& (0+255),c
 18082  006356  0E00               	movlw	0
 18083  006358  2027               	addwfc	sync_window@fs+1,w,c
 18084  00635A  6E29               	movwf	(??_sync_window+1)& (0+255),c
 18085  00635C  C028  F01C         	movff	??_sync_window,disk_write@buff
 18086  006360  C029  F01D         	movff	??_sync_window+1,disk_write@buff+1
 18087  006364  C037  F01E         	movff	sync_window@wsect,disk_write@sector
 18088  006368  C038  F01F         	movff	sync_window@wsect+1,disk_write@sector+1
 18089  00636C  C039  F020         	movff	sync_window@wsect+2,disk_write@sector+2
 18090  006370  C03A  F021         	movff	sync_window@wsect+3,disk_write@sector+3
 18091  006374  0E00               	movlw	0
 18092  006376  6E23               	movwf	disk_write@count+1,c
 18093  006378  0E01               	movlw	1
 18094  00637A  6E22               	movwf	disk_write@count,c
 18095  00637C  EE20 F001          	lfsr	2,1
 18096  006380  5026               	movf	sync_window@fs,w,c
 18097  006382  26D9               	addwf	fsr2l,f,c
 18098  006384  5027               	movf	sync_window@fs+1,w,c
 18099  006386  22DA               	addwfc	fsr2h,f,c
 18100  006388  50DF               	movf	indf2,w,c
 18101  00638A  EC45  F02F         	call	_disk_write
 18102  00638E  0900               	iorlw	0
 18103  006390  B4D8               	btfsc	status,2,c
 18104  006392  D003               	goto	l6891
 18105                           
 18106                           ;ff.c: 755: res = FR_DISK_ERR;
 18107  006394  0E01               	movlw	1
 18108  006396  6E34               	movwf	sync_window@res,c
 18109                           
 18110                           ;ff.c: 756: } else {
 18111  006398  D085               	goto	l6907
 18112  00639A                     l6891:
 18113                           
 18114                           ;ff.c: 757: fs->wflag = 0;
 18115  00639A  EE20 F004          	lfsr	2,4
 18116  00639E  5026               	movf	sync_window@fs,w,c
 18117  0063A0  26D9               	addwf	fsr2l,f,c
 18118  0063A2  5027               	movf	sync_window@fs+1,w,c
 18119  0063A4  22DA               	addwfc	fsr2h,f,c
 18120  0063A6  0E00               	movlw	0
 18121  0063A8  6EDF               	movwf	indf2,c
 18122                           
 18123                           ;ff.c: 758: if (wsect - fs->fatbase < fs->fsize) {
 18124  0063AA  EE20 F01A          	lfsr	2,26
 18125  0063AE  5026               	movf	sync_window@fs,w,c
 18126  0063B0  26D9               	addwf	fsr2l,f,c
 18127  0063B2  5027               	movf	sync_window@fs+1,w,c
 18128  0063B4  22DA               	addwfc	fsr2h,f,c
 18129  0063B6  CFDE F028          	movff	postinc2,??_sync_window
 18130  0063BA  CFDE F029          	movff	postinc2,??_sync_window+1
 18131  0063BE  CFDE F02A          	movff	postinc2,??_sync_window+2
 18132  0063C2  CFDE F02B          	movff	postinc2,??_sync_window+3
 18133  0063C6  EE20 F022          	lfsr	2,34
 18134  0063CA  5026               	movf	sync_window@fs,w,c
 18135  0063CC  26D9               	addwf	fsr2l,f,c
 18136  0063CE  5027               	movf	sync_window@fs+1,w,c
 18137  0063D0  22DA               	addwfc	fsr2h,f,c
 18138  0063D2  CFDE F02C          	movff	postinc2,??_sync_window+4
 18139  0063D6  CFDE F02D          	movff	postinc2,??_sync_window+5
 18140  0063DA  CFDE F02E          	movff	postinc2,??_sync_window+6
 18141  0063DE  CFDE F02F          	movff	postinc2,??_sync_window+7
 18142  0063E2  1E2C               	comf	??_sync_window+4,f,c
 18143  0063E4  1E2D               	comf	??_sync_window+5,f,c
 18144  0063E6  1E2E               	comf	??_sync_window+6,f,c
 18145  0063E8  1E2F               	comf	??_sync_window+7,f,c
 18146  0063EA  2A2C               	incf	??_sync_window+4,f,c
 18147  0063EC  0E00               	movlw	0
 18148  0063EE  222D               	addwfc	??_sync_window+5,f,c
 18149  0063F0  222E               	addwfc	??_sync_window+6,f,c
 18150  0063F2  222F               	addwfc	??_sync_window+7,f,c
 18151  0063F4  5037               	movf	sync_window@wsect,w,c
 18152  0063F6  242C               	addwf	??_sync_window+4,w,c
 18153  0063F8  6E30               	movwf	(??_sync_window+8)& (0+255),c
 18154  0063FA  5038               	movf	sync_window@wsect+1,w,c
 18155  0063FC  202D               	addwfc	??_sync_window+5,w,c
 18156  0063FE  6E31               	movwf	(??_sync_window+9)& (0+255),c
 18157  006400  5039               	movf	sync_window@wsect+2,w,c
 18158  006402  202E               	addwfc	??_sync_window+6,w,c
 18159  006404  6E32               	movwf	(??_sync_window+10)& (0+255),c
 18160  006406  503A               	movf	sync_window@wsect+3,w,c
 18161  006408  202F               	addwfc	??_sync_window+7,w,c
 18162  00640A  6E33               	movwf	(??_sync_window+11)& (0+255),c
 18163  00640C  5028               	movf	??_sync_window,w,c
 18164  00640E  5C30               	subwf	??_sync_window+8,w,c
 18165  006410  5029               	movf	??_sync_window+1,w,c
 18166  006412  5831               	subwfb	??_sync_window+9,w,c
 18167  006414  502A               	movf	??_sync_window+2,w,c
 18168  006416  5832               	subwfb	??_sync_window+10,w,c
 18169  006418  502B               	movf	??_sync_window+3,w,c
 18170  00641A  5833               	subwfb	??_sync_window+11,w,c
 18171  00641C  B0D8               	btfsc	status,0,c
 18172  00641E  D042               	goto	l6907
 18173                           
 18174                           ;ff.c: 759: for (nf = fs->n_fats; nf >= 2; nf--) {
 18175  006420  EE20 F003          	lfsr	2,3
 18176  006424  5026               	movf	sync_window@fs,w,c
 18177  006426  26D9               	addwf	fsr2l,f,c
 18178  006428  5027               	movf	sync_window@fs+1,w,c
 18179  00642A  22DA               	addwfc	fsr2h,f,c
 18180  00642C  50DF               	movf	indf2,w,c
 18181  00642E  6E28               	movwf	??_sync_window& (0+255),c
 18182  006430  5028               	movf	??_sync_window,w,c
 18183  006432  6E35               	movwf	sync_window@nf,c
 18184  006434  6A36               	clrf	sync_window@nf+1,c
 18185  006436  0E02               	movlw	2
 18186  006438  5C35               	subwf	sync_window@nf,w,c
 18187  00643A  0E00               	movlw	0
 18188  00643C  5836               	subwfb	sync_window@nf+1,w,c
 18189  00643E  A0D8               	btfss	status,0,c
 18190  006440  D031               	goto	l6907
 18191                           
 18192                           ;ff.c: 760: wsect += fs->fsize;
 18193  006442  EE20 F01A          	lfsr	2,26
 18194  006446  5026               	movf	sync_window@fs,w,c
 18195  006448  26D9               	addwf	fsr2l,f,c
 18196  00644A  5027               	movf	sync_window@fs+1,w,c
 18197  00644C  22DA               	addwfc	fsr2h,f,c
 18198  00644E  50DE               	movf	postinc2,w,c
 18199  006450  2637               	addwf	sync_window@wsect,f,c
 18200  006452  50DE               	movf	postinc2,w,c
 18201  006454  2238               	addwfc	sync_window@wsect+1,f,c
 18202  006456  50DE               	movf	postinc2,w,c
 18203  006458  2239               	addwfc	sync_window@wsect+2,f,c
 18204  00645A  50DD               	movf	postdec2,w,c
 18205  00645C  223A               	addwfc	sync_window@wsect+3,f,c
 18206                           
 18207                           ;ff.c: 761: disk_write(fs->drv, fs->win, wsect, 1);
 18208  00645E  0E32               	movlw	50
 18209  006460  2426               	addwf	sync_window@fs,w,c
 18210  006462  6E28               	movwf	??_sync_window& (0+255),c
 18211  006464  0E00               	movlw	0
 18212  006466  2027               	addwfc	sync_window@fs+1,w,c
 18213  006468  6E29               	movwf	(??_sync_window+1)& (0+255),c
 18214  00646A  C028  F01C         	movff	??_sync_window,disk_write@buff
 18215  00646E  C029  F01D         	movff	??_sync_window+1,disk_write@buff+1
 18216  006472  C037  F01E         	movff	sync_window@wsect,disk_write@sector
 18217  006476  C038  F01F         	movff	sync_window@wsect+1,disk_write@sector+1
 18218  00647A  C039  F020         	movff	sync_window@wsect+2,disk_write@sector+2
 18219  00647E  C03A  F021         	movff	sync_window@wsect+3,disk_write@sector+3
 18220  006482  0E00               	movlw	0
 18221  006484  6E23               	movwf	disk_write@count+1,c
 18222  006486  0E01               	movlw	1
 18223  006488  6E22               	movwf	disk_write@count,c
 18224  00648A  EE20 F001          	lfsr	2,1
 18225  00648E  5026               	movf	sync_window@fs,w,c
 18226  006490  26D9               	addwf	fsr2l,f,c
 18227  006492  5027               	movf	sync_window@fs+1,w,c
 18228  006494  22DA               	addwfc	fsr2h,f,c
 18229  006496  50DF               	movf	indf2,w,c
 18230  006498  EC45  F02F         	call	_disk_write
 18231  00649C  0635               	decf	sync_window@nf,f,c
 18232  00649E  A0D8               	btfss	status,0,c
 18233  0064A0  0636               	decf	sync_window@nf+1,f,c
 18234  0064A2  D7C9               	goto	L30
 18235  0064A4                     l6907:
 18236                           
 18237                           ;ff.c: 762: }
 18238                           ;ff.c: 763: }
 18239                           ;ff.c: 764: }
 18240                           ;ff.c: 765: }
 18241                           ;ff.c: 766: return res;
 18242  0064A4  5034               	movf	sync_window@res,w,c
 18243  0064A6  0012               	return	
 18244  0064A8                     __end_of_sync_window:
 18245                           	opt stack 0
 18246                           tblptru	equ	0xFF8
 18247                           tblptrh	equ	0xFF7
 18248                           tblptrl	equ	0xFF6
 18249                           tablat	equ	0xFF5
 18250                           prodh	equ	0xFF4
 18251                           prodl	equ	0xFF3
 18252                           indf0	equ	0xFEF
 18253                           postinc0	equ	0xFEE
 18254                           postdec0	equ	0xFED
 18255                           fsr0h	equ	0xFEA
 18256                           fsr0l	equ	0xFE9
 18257                           wreg	equ	0xFE8
 18258                           indf1	equ	0xFE7
 18259                           postinc1	equ	0xFE6
 18260                           postdec1	equ	0xFE5
 18261                           fsr1h	equ	0xFE2
 18262                           fsr1l	equ	0xFE1
 18263                           indf2	equ	0xFDF
 18264                           postinc2	equ	0xFDE
 18265                           postdec2	equ	0xFDD
 18266                           plusw2	equ	0xFDB
 18267                           fsr2h	equ	0xFDA
 18268                           fsr2l	equ	0xFD9
 18269                           status	equ	0xFD8
 18270                           
 18271 ;; *************** function _disk_write *****************
 18272 ;; Defined at:
 18273 ;;		line 493 in file "sdmm.c"
 18274 ;; Parameters:    Size  Location     Type
 18275 ;;  drv             1    wreg     unsigned char 
 18276 ;;  buff            2   27[COMRAM] PTR const unsigned char 
 18277 ;;		 -> FatFs.win(512), pb.buf(64), f_printf@pb(71), pb.buf(64), 
 18278 ;;		 -> f_puts@pb(71), pb.buf(64), f_putc@pb(71), NULL(0), 
 18279 ;;		 -> STR_7(14), FatFs(562), 
 18280 ;;  sector          4   29[COMRAM] unsigned long 
 18281 ;;  count           2   33[COMRAM] unsigned int 
 18282 ;; Auto vars:     Size  Location     Type
 18283 ;;  drv             1   36[COMRAM] unsigned char 
 18284 ;; Return value:  Size  Location     Type
 18285 ;;                  1    wreg      enum E14
 18286 ;; Registers used:
 18287 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18288 ;; Tracked objects:
 18289 ;;		On entry : 0/0
 18290 ;;		On exit  : 0/0
 18291 ;;		Unchanged: 0/0
 18292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18293 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18294 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18295 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18296 ;;      Totals:        10       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18297 ;;Total ram usage:       10 bytes
 18298 ;; Hardware stack levels used:    1
 18299 ;; Hardware stack levels required when called:    4
 18300 ;; This function calls:
 18301 ;;		_deselect
 18302 ;;		_disk_status
 18303 ;;		_send_cmd
 18304 ;;		_xmit_datablock
 18305 ;; This function is called by:
 18306 ;;		_sync_window
 18307 ;;		_sync_fs
 18308 ;;		_f_write
 18309 ;;		_f_mkfs
 18310 ;; This function uses a non-reentrant model
 18311 ;;
 18312                           
 18313                           	psect	text37
 18314  005E8A                     __ptext37:
 18315                           	opt stack 0
 18316  005E8A                     _disk_write:
 18317                           	opt stack 24
 18318                           
 18319                           ;incstack = 0
 18320                           ;disk_write@drv stored from wreg
 18321  005E8A  6E25               	movwf	disk_write@drv,c
 18322                           
 18323                           ;sdmm.c: 500: if (disk_status(drv) & 0x01) return RES_NOTRDY;
 18324  005E8C  5025               	movf	disk_write@drv,w,c
 18325  005E8E  EC81  F028         	call	_disk_status
 18326  005E92  6E24               	movwf	??_disk_write& (0+255),c
 18327  005E94  A024               	btfss	??_disk_write,0,c
 18328  005E96  D002               	goto	l224
 18329  005E98  0E03               	movlw	3
 18330  005E9A  D082               	goto	l225
 18331  005E9C                     l224:
 18332                           
 18333                           ;sdmm.c: 501: if (!(CardType & 0x08)) sector *= 512;
 18334  005E9C  0100               	movlb	0	; () banked
 18335  005E9E  B7F8               	btfsc	_CardType& (0+255),3,b
 18336  005EA0  D008               	goto	l226
 18337                           
 18338                           ; BSR set to: 0
 18339  005EA2  0E09               	movlw	9
 18340  005EA4                     u8365:
 18341  005EA4  90D8               	bcf	status,0,c
 18342  005EA6  361E               	rlcf	disk_write@sector,f,c
 18343  005EA8  361F               	rlcf	disk_write@sector+1,f,c
 18344  005EAA  3620               	rlcf	disk_write@sector+2,f,c
 18345  005EAC  3621               	rlcf	disk_write@sector+3,f,c
 18346  005EAE  2EE8               	decfsz	wreg,f,c
 18347  005EB0  D7F9               	goto	u8365
 18348  005EB2                     l226:
 18349                           
 18350                           ; BSR set to: 0
 18351                           ;sdmm.c: 503: if (count == 1) {
 18352  005EB2  0422               	decf	disk_write@count,w,c
 18353  005EB4  1023               	iorwf	disk_write@count+1,w,c
 18354  005EB6  A4D8               	btfss	status,2,c
 18355  005EB8  D022               	goto	l6829
 18356                           
 18357                           ; BSR set to: 0
 18358                           ;sdmm.c: 504: if ((send_cmd((24), sector) == 0)
 18359                           ;sdmm.c: 505: && xmit_datablock(buff, 0xFE))
 18360  005EBA  C01E  F00F         	movff	disk_write@sector,send_cmd@arg
 18361  005EBE  C01F  F010         	movff	disk_write@sector+1,send_cmd@arg+1
 18362  005EC2  C020  F011         	movff	disk_write@sector+2,send_cmd@arg+2
 18363  005EC6  C021  F012         	movff	disk_write@sector+3,send_cmd@arg+3
 18364  005ECA  0E18               	movlw	24
 18365  005ECC  ECC0  F02C         	call	_send_cmd
 18366  005ED0  0900               	iorlw	0
 18367  005ED2  A4D8               	btfss	status,2,c
 18368  005ED4  D05C               	goto	l6843
 18369  005ED6  6A0E               	clrf	xmit_datablock@buff+2,c
 18370  005ED8  0E0F               	movlw	(high __ramtop+-1)
 18371  005EDA  641D               	cpfsgt	disk_write@buff+1,c
 18372  005EDC  8A0E               	bsf	xmit_datablock@buff+2,5,c
 18373  005EDE  C01D  F00D         	movff	disk_write@buff+1,xmit_datablock@buff+1
 18374  005EE2  C01C  F00C         	movff	disk_write@buff,xmit_datablock@buff
 18375  005EE6  0EFE               	movlw	254
 18376  005EE8  6E0F               	movwf	xmit_datablock@token,c
 18377  005EEA  EC79  F02B         	call	_xmit_datablock	;wreg free
 18378  005EEE  500D               	movf	?_xmit_datablock+1,w,c
 18379  005EF0  100C               	iorwf	?_xmit_datablock,w,c
 18380  005EF2  B4D8               	btfsc	status,2,c
 18381  005EF4  D04C               	goto	l6843
 18382                           
 18383                           ;sdmm.c: 506: count = 0;
 18384  005EF6  0E00               	movlw	0
 18385  005EF8  6E23               	movwf	disk_write@count+1,c
 18386  005EFA  0E00               	movlw	0
 18387  005EFC  D047               	goto	L31
 18388  005EFE                     l6829:
 18389                           
 18390                           ;sdmm.c: 508: else {
 18391                           ;sdmm.c: 509: if (CardType & (0x02|0x04)) send_cmd((0x80+23), count);
 18392  005EFE  C0F8  F024         	movff	_CardType,??_disk_write
 18393  005F02  0E06               	movlw	6
 18394  005F04  1624               	andwf	??_disk_write,f,c
 18395  005F06  B4D8               	btfsc	status,2,c
 18396  005F08  D009               	goto	l230
 18397  005F0A  C022  F00F         	movff	disk_write@count,send_cmd@arg
 18398  005F0E  C023  F010         	movff	disk_write@count+1,send_cmd@arg+1
 18399  005F12  6A11               	clrf	send_cmd@arg+2,c
 18400  005F14  6A12               	clrf	send_cmd@arg+3,c
 18401  005F16  0E97               	movlw	151
 18402  005F18  ECC0  F02C         	call	_send_cmd
 18403  005F1C                     l230:
 18404                           
 18405                           ;sdmm.c: 510: if (send_cmd((25), sector) == 0) {
 18406  005F1C  C01E  F00F         	movff	disk_write@sector,send_cmd@arg
 18407  005F20  C01F  F010         	movff	disk_write@sector+1,send_cmd@arg+1
 18408  005F24  C020  F011         	movff	disk_write@sector+2,send_cmd@arg+2
 18409  005F28  C021  F012         	movff	disk_write@sector+3,send_cmd@arg+3
 18410  005F2C  0E19               	movlw	25
 18411  005F2E  ECC0  F02C         	call	_send_cmd
 18412  005F32  0900               	iorlw	0
 18413  005F34  A4D8               	btfss	status,2,c
 18414  005F36  D02B               	goto	l6843
 18415  005F38                     l6833:
 18416                           
 18417                           ;sdmm.c: 512: if (!xmit_datablock(buff, 0xFC)) break;
 18418  005F38  6A0E               	clrf	xmit_datablock@buff+2,c
 18419  005F3A  0E0F               	movlw	(high __ramtop+-1)
 18420  005F3C  641D               	cpfsgt	disk_write@buff+1,c
 18421  005F3E  8A0E               	bsf	xmit_datablock@buff+2,5,c
 18422  005F40  C01D  F00D         	movff	disk_write@buff+1,xmit_datablock@buff+1
 18423  005F44  C01C  F00C         	movff	disk_write@buff,xmit_datablock@buff
 18424  005F48  0EFC               	movlw	252
 18425  005F4A  6E0F               	movwf	xmit_datablock@token,c
 18426  005F4C  EC79  F02B         	call	_xmit_datablock	;wreg free
 18427  005F50  500D               	movf	?_xmit_datablock+1,w,c
 18428  005F52  100C               	iorwf	?_xmit_datablock,w,c
 18429  005F54  B4D8               	btfsc	status,2,c
 18430  005F56  D009               	goto	l6839
 18431                           
 18432                           ;sdmm.c: 513: buff += 512;
 18433  005F58  0E02               	movlw	2
 18434  005F5A  261D               	addwf	disk_write@buff+1,f,c
 18435                           
 18436                           ;sdmm.c: 514: } while (--count);
 18437  005F5C  0622               	decf	disk_write@count,f,c
 18438  005F5E  A0D8               	btfss	status,0,c
 18439  005F60  0623               	decf	disk_write@count+1,f,c
 18440  005F62  5023               	movf	(disk_write@count+1)& (0+255),w,c
 18441  005F64  1022               	iorwf	disk_write@count& (0+255),w,c
 18442  005F66  A4D8               	btfss	status,2,c
 18443  005F68  D7E7               	goto	l6833
 18444  005F6A                     l6839:
 18445                           
 18446                           ;sdmm.c: 515: if (!xmit_datablock(0, 0xFD))
 18447  005F6A  0E00               	movlw	0
 18448  005F6C  6E0E               	movwf	xmit_datablock@buff+2,c
 18449  005F6E  0E00               	movlw	0
 18450  005F70  6E0D               	movwf	xmit_datablock@buff+1,c
 18451  005F72  0E00               	movlw	0
 18452  005F74  6E0C               	movwf	xmit_datablock@buff,c
 18453  005F76  0EFD               	movlw	253
 18454  005F78  6E0F               	movwf	xmit_datablock@token,c
 18455  005F7A  EC79  F02B         	call	_xmit_datablock	;wreg free
 18456  005F7E  500D               	movf	?_xmit_datablock+1,w,c
 18457  005F80  100C               	iorwf	?_xmit_datablock,w,c
 18458  005F82  A4D8               	btfss	status,2,c
 18459  005F84  D004               	goto	l6843
 18460                           
 18461                           ;sdmm.c: 516: count = 1;
 18462  005F86  0E00               	movlw	0
 18463  005F88  6E23               	movwf	disk_write@count+1,c
 18464  005F8A  0E01               	movlw	1
 18465  005F8C                     L31:
 18466  005F8C  6E22               	movwf	disk_write@count,c
 18467  005F8E                     l6843:
 18468                           
 18469                           ;sdmm.c: 517: }
 18470                           ;sdmm.c: 518: }
 18471                           ;sdmm.c: 519: deselect();
 18472  005F8E  EC95  F028         	call	_deselect	;wreg free
 18473                           
 18474                           ;sdmm.c: 521: return count ? RES_ERROR : RES_OK;
 18475  005F92  5023               	movf	disk_write@count+1,w,c
 18476  005F94  1022               	iorwf	disk_write@count,w,c
 18477  005F96  B4D8               	btfsc	status,2,c
 18478  005F98  D002               	goto	u8450
 18479  005F9A  0E01               	movlw	1
 18480  005F9C  D001               	goto	l225
 18481  005F9E                     u8450:
 18482  005F9E  0E00               	movlw	0
 18483  005FA0                     l225:
 18484  005FA0  0012               	return	
 18485  005FA2                     __end_of_disk_write:
 18486                           	opt stack 0
 18487                           tblptru	equ	0xFF8
 18488                           tblptrh	equ	0xFF7
 18489                           tblptrl	equ	0xFF6
 18490                           tablat	equ	0xFF5
 18491                           prodh	equ	0xFF4
 18492                           prodl	equ	0xFF3
 18493                           indf0	equ	0xFEF
 18494                           postinc0	equ	0xFEE
 18495                           postdec0	equ	0xFED
 18496                           fsr0h	equ	0xFEA
 18497                           fsr0l	equ	0xFE9
 18498                           wreg	equ	0xFE8
 18499                           indf1	equ	0xFE7
 18500                           postinc1	equ	0xFE6
 18501                           postdec1	equ	0xFE5
 18502                           fsr1h	equ	0xFE2
 18503                           fsr1l	equ	0xFE1
 18504                           indf2	equ	0xFDF
 18505                           postinc2	equ	0xFDE
 18506                           postdec2	equ	0xFDD
 18507                           plusw2	equ	0xFDB
 18508                           fsr2h	equ	0xFDA
 18509                           fsr2l	equ	0xFD9
 18510                           status	equ	0xFD8
 18511                           
 18512 ;; *************** function _xmit_datablock *****************
 18513 ;; Defined at:
 18514 ;;		line 294 in file "sdmm.c"
 18515 ;; Parameters:    Size  Location     Type
 18516 ;;  buff            3   11[COMRAM] PTR const unsigned char 
 18517 ;;		 -> FatFs.win(512), pb.buf(64), f_printf@pb(71), pb.buf(64), 
 18518 ;;		 -> f_puts@pb(71), pb.buf(64), f_putc@pb(71), NULL(0), 
 18519 ;;		 -> ROM(49151), STR_7(14), FatFs(562), 
 18520 ;;  token           1   14[COMRAM] unsigned char 
 18521 ;; Auto vars:     Size  Location     Type
 18522 ;;  d               2   16[COMRAM] unsigned char [2]
 18523 ;; Return value:  Size  Location     Type
 18524 ;;                  2   11[COMRAM] int 
 18525 ;; Registers used:
 18526 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18527 ;; Tracked objects:
 18528 ;;		On entry : 0/0
 18529 ;;		On exit  : 0/0
 18530 ;;		Unchanged: 0/0
 18531 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18532 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18533 ;;      Locals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18534 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18535 ;;      Totals:         7       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18536 ;;Total ram usage:        7 bytes
 18537 ;; Hardware stack levels used:    1
 18538 ;; Hardware stack levels required when called:    2
 18539 ;; This function calls:
 18540 ;;		_rcvr_mmc
 18541 ;;		_wait_ready
 18542 ;;		_xmit_mmc
 18543 ;; This function is called by:
 18544 ;;		_disk_write
 18545 ;; This function uses a non-reentrant model
 18546 ;;
 18547                           
 18548                           	psect	text38
 18549  0056F2                     __ptext38:
 18550                           	opt stack 0
 18551  0056F2                     _xmit_datablock:
 18552                           	opt stack 25
 18553                           
 18554                           ;sdmm.c: 299: BYTE d[2];
 18555                           ;sdmm.c: 302: if (!wait_ready()) return 0;
 18556                           
 18557                           ;incstack = 0
 18558  0056F2  EC53  F029         	call	_wait_ready	;wreg free
 18559  0056F6  5008               	movf	?_wait_ready+1,w,c
 18560  0056F8  1007               	iorwf	?_wait_ready,w,c
 18561  0056FA  B4D8               	btfsc	status,2,c
 18562  0056FC  D03A               	goto	u8210
 18563                           
 18564                           ;sdmm.c: 304: d[0] = token;
 18565  0056FE  C00F  F011         	movff	xmit_datablock@token,xmit_datablock@d
 18566                           
 18567                           ;sdmm.c: 305: xmit_mmc(d, 1);
 18568  005702  0E20               	movlw	32
 18569  005704  6E03               	movwf	xmit_mmc@buff+2,c
 18570  005706  0E00               	movlw	high xmit_datablock@d
 18571  005708  6E02               	movwf	xmit_mmc@buff+1,c
 18572  00570A  0E11               	movlw	low xmit_datablock@d
 18573  00570C  6E01               	movwf	xmit_mmc@buff,c
 18574  00570E  0E00               	movlw	0
 18575  005710  6E05               	movwf	xmit_mmc@bc+1,c
 18576  005712  0E01               	movlw	1
 18577  005714  6E04               	movwf	xmit_mmc@bc,c
 18578  005716  EC0F  F02C         	call	_xmit_mmc	;wreg free
 18579                           
 18580                           ;sdmm.c: 306: if (token != 0xFD) {
 18581  00571A  500F               	movf	xmit_datablock@token,w,c
 18582  00571C  0AFD               	xorlw	253
 18583  00571E  B4D8               	btfsc	status,2,c
 18584  005720  D02C               	goto	l6717
 18585                           
 18586                           ;sdmm.c: 307: xmit_mmc(buff, 512);
 18587  005722  C00E  F003         	movff	xmit_datablock@buff+2,xmit_mmc@buff+2
 18588  005726  C00D  F002         	movff	xmit_datablock@buff+1,xmit_mmc@buff+1
 18589  00572A  C00C  F001         	movff	xmit_datablock@buff,xmit_mmc@buff
 18590  00572E  0E02               	movlw	2
 18591  005730  6E05               	movwf	xmit_mmc@bc+1,c
 18592  005732  0E00               	movlw	0
 18593  005734  6E04               	movwf	xmit_mmc@bc,c
 18594  005736  EC0F  F02C         	call	_xmit_mmc	;wreg free
 18595                           
 18596                           ;sdmm.c: 308: rcvr_mmc(d, 2);
 18597  00573A  0E00               	movlw	high xmit_datablock@d
 18598  00573C  6E02               	movwf	rcvr_mmc@buff+1,c
 18599  00573E  0E11               	movlw	low xmit_datablock@d
 18600  005740  6E01               	movwf	rcvr_mmc@buff,c
 18601  005742  0E00               	movlw	0
 18602  005744  6E04               	movwf	rcvr_mmc@bc+1,c
 18603  005746  0E02               	movlw	2
 18604  005748  6E03               	movwf	rcvr_mmc@bc,c
 18605  00574A  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 18606                           
 18607                           ;sdmm.c: 309: rcvr_mmc(d, 1);
 18608  00574E  0E00               	movlw	high xmit_datablock@d
 18609  005750  6E02               	movwf	rcvr_mmc@buff+1,c
 18610  005752  0E11               	movlw	low xmit_datablock@d
 18611  005754  6E01               	movwf	rcvr_mmc@buff,c
 18612  005756  0E00               	movlw	0
 18613  005758  6E04               	movwf	rcvr_mmc@bc+1,c
 18614  00575A  0E01               	movlw	1
 18615  00575C  6E03               	movwf	rcvr_mmc@bc,c
 18616  00575E  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 18617                           
 18618                           ;sdmm.c: 310: if ((d[0] & 0x1F) != 0x05)
 18619  005762  C011  F010         	movff	xmit_datablock@d,??_xmit_datablock
 18620  005766  0E1F               	movlw	31
 18621  005768  1610               	andwf	??_xmit_datablock,f,c
 18622  00576A  5010               	movf	??_xmit_datablock,w,c
 18623  00576C  0A05               	xorlw	5
 18624  00576E  B4D8               	btfsc	status,2,c
 18625  005770  D004               	goto	l6717
 18626  005772                     u8210:
 18627                           
 18628                           ;sdmm.c: 311: return 0;
 18629  005772  0E00               	movlw	0
 18630  005774  6E0D               	movwf	?_xmit_datablock+1,c
 18631  005776  0E00               	movlw	0
 18632  005778  D003               	goto	L32
 18633  00577A                     l6717:
 18634                           
 18635                           ;sdmm.c: 312: }
 18636                           ;sdmm.c: 314: return 1;
 18637  00577A  0E00               	movlw	0
 18638  00577C  6E0D               	movwf	?_xmit_datablock+1,c
 18639  00577E  0E01               	movlw	1
 18640  005780                     L32:
 18641  005780  6E0C               	movwf	?_xmit_datablock,c
 18642  005782  0012               	return	
 18643  005784                     __end_of_xmit_datablock:
 18644                           	opt stack 0
 18645                           tblptru	equ	0xFF8
 18646                           tblptrh	equ	0xFF7
 18647                           tblptrl	equ	0xFF6
 18648                           tablat	equ	0xFF5
 18649                           prodh	equ	0xFF4
 18650                           prodl	equ	0xFF3
 18651                           indf0	equ	0xFEF
 18652                           postinc0	equ	0xFEE
 18653                           postdec0	equ	0xFED
 18654                           fsr0h	equ	0xFEA
 18655                           fsr0l	equ	0xFE9
 18656                           wreg	equ	0xFE8
 18657                           indf1	equ	0xFE7
 18658                           postinc1	equ	0xFE6
 18659                           postdec1	equ	0xFE5
 18660                           fsr1h	equ	0xFE2
 18661                           fsr1l	equ	0xFE1
 18662                           indf2	equ	0xFDF
 18663                           postinc2	equ	0xFDE
 18664                           postdec2	equ	0xFDD
 18665                           plusw2	equ	0xFDB
 18666                           fsr2h	equ	0xFDA
 18667                           fsr2l	equ	0xFD9
 18668                           status	equ	0xFD8
 18669                           
 18670 ;; *************** function _disk_read *****************
 18671 ;; Defined at:
 18672 ;;		line 461 in file "sdmm.c"
 18673 ;; Parameters:    Size  Location     Type
 18674 ;;  drv             1    wreg     unsigned char 
 18675 ;;  buff            2   27[COMRAM] PTR unsigned char 
 18676 ;;		 -> f_gets@s(2), NULL(0), FatFs(562), 
 18677 ;;  sector          4   29[COMRAM] unsigned long 
 18678 ;;  count           2   33[COMRAM] unsigned int 
 18679 ;; Auto vars:     Size  Location     Type
 18680 ;;  drv             1   36[COMRAM] unsigned char 
 18681 ;;  cmd             1   39[COMRAM] unsigned char 
 18682 ;; Return value:  Size  Location     Type
 18683 ;;                  1    wreg      enum E14
 18684 ;; Registers used:
 18685 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18686 ;; Tracked objects:
 18687 ;;		On entry : 0/0
 18688 ;;		On exit  : 0/0
 18689 ;;		Unchanged: 0/0
 18690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18691 ;;      Params:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18692 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18693 ;;      Temps:          1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18694 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18695 ;;Total ram usage:       13 bytes
 18696 ;; Hardware stack levels used:    1
 18697 ;; Hardware stack levels required when called:    4
 18698 ;; This function calls:
 18699 ;;		_deselect
 18700 ;;		_disk_status
 18701 ;;		_rcvr_datablock
 18702 ;;		_send_cmd
 18703 ;; This function is called by:
 18704 ;;		_move_window
 18705 ;;		_f_read
 18706 ;;		_f_mkfs
 18707 ;; This function uses a non-reentrant model
 18708 ;;
 18709                           
 18710                           	psect	text39
 18711  005A38                     __ptext39:
 18712                           	opt stack 0
 18713  005A38                     _disk_read:
 18714                           	opt stack 24
 18715                           
 18716                           ;incstack = 0
 18717                           ;disk_read@drv stored from wreg
 18718  005A38  6E25               	movwf	disk_read@drv,c
 18719                           
 18720                           ;sdmm.c: 468: BYTE cmd;
 18721                           ;sdmm.c: 471: if (disk_status(drv) & 0x01) return RES_NOTRDY;
 18722  005A3A  5025               	movf	disk_read@drv,w,c
 18723  005A3C  EC81  F028         	call	_disk_status
 18724  005A40  6E24               	movwf	??_disk_read& (0+255),c
 18725  005A42  A024               	btfss	??_disk_read,0,c
 18726  005A44  D002               	goto	l210
 18727  005A46  0E03               	movlw	3
 18728  005A48  D058               	goto	l211
 18729  005A4A                     l210:
 18730                           
 18731                           ;sdmm.c: 472: if (!(CardType & 0x08)) sector *= 512;
 18732  005A4A  0100               	movlb	0	; () banked
 18733  005A4C  B7F8               	btfsc	_CardType& (0+255),3,b
 18734  005A4E  D008               	goto	l212
 18735                           
 18736                           ; BSR set to: 0
 18737  005A50  0E09               	movlw	9
 18738  005A52                     u8485:
 18739  005A52  90D8               	bcf	status,0,c
 18740  005A54  361E               	rlcf	disk_read@sector,f,c
 18741  005A56  361F               	rlcf	disk_read@sector+1,f,c
 18742  005A58  3620               	rlcf	disk_read@sector+2,f,c
 18743  005A5A  3621               	rlcf	disk_read@sector+3,f,c
 18744  005A5C  2EE8               	decfsz	wreg,f,c
 18745  005A5E  D7F9               	goto	u8485
 18746  005A60                     l212:
 18747                           
 18748                           ; BSR set to: 0
 18749                           ;sdmm.c: 474: cmd = count > 1 ? (18) : (17);
 18750  005A60  0E02               	movlw	2
 18751  005A62  5C22               	subwf	disk_read@count,w,c
 18752  005A64  0E00               	movlw	0
 18753  005A66  5823               	subwfb	disk_read@count+1,w,c
 18754  005A68  B0D8               	btfsc	status,0,c
 18755  005A6A  D004               	goto	l6859
 18756                           
 18757                           ; BSR set to: 0
 18758  005A6C  0E00               	movlw	0
 18759  005A6E  6E27               	movwf	_disk_read$263+1,c
 18760  005A70  0E11               	movlw	17
 18761  005A72  D003               	goto	L33
 18762  005A74                     l6859:
 18763                           
 18764                           ; BSR set to: 0
 18765  005A74  0E00               	movlw	0
 18766  005A76  6E27               	movwf	_disk_read$263+1,c
 18767  005A78  0E12               	movlw	18
 18768  005A7A                     L33:
 18769  005A7A  6E26               	movwf	_disk_read$263,c
 18770                           
 18771                           ; BSR set to: 0
 18772                           
 18773                           ; BSR set to: 0
 18774  005A7C  C026  F028         	movff	_disk_read$263,disk_read@cmd
 18775                           
 18776                           ; BSR set to: 0
 18777                           ;sdmm.c: 475: if (send_cmd(cmd, sector) == 0) {
 18778  005A80  C01E  F00F         	movff	disk_read@sector,send_cmd@arg
 18779  005A84  C01F  F010         	movff	disk_read@sector+1,send_cmd@arg+1
 18780  005A88  C020  F011         	movff	disk_read@sector+2,send_cmd@arg+2
 18781  005A8C  C021  F012         	movff	disk_read@sector+3,send_cmd@arg+3
 18782  005A90  5028               	movf	disk_read@cmd,w,c
 18783  005A92  ECC0  F02C         	call	_send_cmd
 18784  005A96  0900               	iorlw	0
 18785  005A98  A4D8               	btfss	status,2,c
 18786  005A9A  D026               	goto	l6875
 18787  005A9C                     l6865:
 18788                           
 18789                           ;sdmm.c: 477: if (!rcvr_datablock(buff, 512)) break;
 18790  005A9C  C01D  F008         	movff	disk_read@buff+1,rcvr_datablock@buff+1
 18791  005AA0  C01C  F007         	movff	disk_read@buff,rcvr_datablock@buff
 18792  005AA4  0E02               	movlw	2
 18793  005AA6  6E0A               	movwf	rcvr_datablock@btr+1,c
 18794  005AA8  0E00               	movlw	0
 18795  005AAA  6E09               	movwf	rcvr_datablock@btr,c
 18796  005AAC  ECB7  F02A         	call	_rcvr_datablock	;wreg free
 18797  005AB0  5008               	movf	?_rcvr_datablock+1,w,c
 18798  005AB2  1007               	iorwf	?_rcvr_datablock,w,c
 18799  005AB4  B4D8               	btfsc	status,2,c
 18800  005AB6  D009               	goto	l6871
 18801                           
 18802                           ;sdmm.c: 478: buff += 512;
 18803  005AB8  0E02               	movlw	2
 18804  005ABA  261D               	addwf	disk_read@buff+1,f,c
 18805                           
 18806                           ;sdmm.c: 479: } while (--count);
 18807  005ABC  0622               	decf	disk_read@count,f,c
 18808  005ABE  A0D8               	btfss	status,0,c
 18809  005AC0  0623               	decf	disk_read@count+1,f,c
 18810  005AC2  5023               	movf	(disk_read@count+1)& (0+255),w,c
 18811  005AC4  1022               	iorwf	disk_read@count& (0+255),w,c
 18812  005AC6  A4D8               	btfss	status,2,c
 18813  005AC8  D7E9               	goto	l6865
 18814  005ACA                     l6871:
 18815                           
 18816                           ;sdmm.c: 480: if (cmd == (18)) send_cmd((12), 0);
 18817  005ACA  5028               	movf	disk_read@cmd,w,c
 18818  005ACC  0A12               	xorlw	18
 18819  005ACE  A4D8               	btfss	status,2,c
 18820  005AD0  D00B               	goto	l6875
 18821  005AD2  0E00               	movlw	0
 18822  005AD4  6E0F               	movwf	send_cmd@arg,c
 18823  005AD6  0E00               	movlw	0
 18824  005AD8  6E10               	movwf	send_cmd@arg+1,c
 18825  005ADA  0E00               	movlw	0
 18826  005ADC  6E11               	movwf	send_cmd@arg+2,c
 18827  005ADE  0E00               	movlw	0
 18828  005AE0  6E12               	movwf	send_cmd@arg+3,c
 18829  005AE2  0E0C               	movlw	12
 18830  005AE4  ECC0  F02C         	call	_send_cmd
 18831  005AE8                     l6875:
 18832                           
 18833                           ;sdmm.c: 481: }
 18834                           ;sdmm.c: 482: deselect();
 18835  005AE8  EC95  F028         	call	_deselect	;wreg free
 18836                           
 18837                           ;sdmm.c: 484: return count ? RES_ERROR : RES_OK;
 18838  005AEC  5023               	movf	disk_read@count+1,w,c
 18839  005AEE  1022               	iorwf	disk_read@count,w,c
 18840  005AF0  B4D8               	btfsc	status,2,c
 18841  005AF2  D002               	goto	u8540
 18842  005AF4  0E01               	movlw	1
 18843  005AF6  D001               	goto	l211
 18844  005AF8                     u8540:
 18845  005AF8  0E00               	movlw	0
 18846  005AFA                     l211:
 18847  005AFA  0012               	return	
 18848  005AFC                     __end_of_disk_read:
 18849                           	opt stack 0
 18850                           tblptru	equ	0xFF8
 18851                           tblptrh	equ	0xFF7
 18852                           tblptrl	equ	0xFF6
 18853                           tablat	equ	0xFF5
 18854                           prodh	equ	0xFF4
 18855                           prodl	equ	0xFF3
 18856                           indf0	equ	0xFEF
 18857                           postinc0	equ	0xFEE
 18858                           postdec0	equ	0xFED
 18859                           fsr0h	equ	0xFEA
 18860                           fsr0l	equ	0xFE9
 18861                           wreg	equ	0xFE8
 18862                           indf1	equ	0xFE7
 18863                           postinc1	equ	0xFE6
 18864                           postdec1	equ	0xFE5
 18865                           fsr1h	equ	0xFE2
 18866                           fsr1l	equ	0xFE1
 18867                           indf2	equ	0xFDF
 18868                           postinc2	equ	0xFDE
 18869                           postdec2	equ	0xFDD
 18870                           plusw2	equ	0xFDB
 18871                           fsr2h	equ	0xFDA
 18872                           fsr2l	equ	0xFD9
 18873                           status	equ	0xFD8
 18874                           
 18875 ;; *************** function _send_cmd *****************
 18876 ;; Defined at:
 18877 ;;		line 324 in file "sdmm.c"
 18878 ;; Parameters:    Size  Location     Type
 18879 ;;  cmd             1    wreg     unsigned char 
 18880 ;;  arg             4   14[COMRAM] unsigned long 
 18881 ;; Auto vars:     Size  Location     Type
 18882 ;;  cmd             1   26[COMRAM] unsigned char 
 18883 ;;  buf             6   18[COMRAM] unsigned char [6]
 18884 ;;  n               1   25[COMRAM] unsigned char 
 18885 ;;  d               1   24[COMRAM] unsigned char 
 18886 ;; Return value:  Size  Location     Type
 18887 ;;                  1    wreg      unsigned char 
 18888 ;; Registers used:
 18889 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 18890 ;; Tracked objects:
 18891 ;;		On entry : 0/0
 18892 ;;		On exit  : 0/0
 18893 ;;		Unchanged: 0/0
 18894 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 18895 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18896 ;;      Locals:         9       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18897 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18898 ;;      Totals:        13       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 18899 ;;Total ram usage:       13 bytes
 18900 ;; Hardware stack levels used:    1
 18901 ;; Hardware stack levels required when called:    3
 18902 ;; This function calls:
 18903 ;;		_deselect
 18904 ;;		_rcvr_mmc
 18905 ;;		_select
 18906 ;;		_xmit_mmc
 18907 ;; This function is called by:
 18908 ;;		_disk_initialize
 18909 ;;		_disk_read
 18910 ;;		_disk_write
 18911 ;;		_disk_ioctl
 18912 ;; This function uses a non-reentrant model
 18913 ;;
 18914                           
 18915                           	psect	text40
 18916  005980                     __ptext40:
 18917                           	opt stack 0
 18918  005980                     _send_cmd:
 18919                           	opt stack 24
 18920                           
 18921                           ;incstack = 0
 18922                           ;send_cmd@cmd stored from wreg
 18923  005980  6E1B               	movwf	send_cmd@cmd,c
 18924                           
 18925                           ;sdmm.c: 329: BYTE n, d, buf[6];
 18926                           ;sdmm.c: 332: if (cmd & 0x80) {
 18927  005982  AE1B               	btfss	send_cmd@cmd,7,c
 18928  005984  D006               	goto	l6731
 18929                           
 18930                           ;sdmm.c: 333: cmd &= 0x7F;
 18931  005986  9E1B               	bcf	send_cmd@cmd,7,c
 18932                           
 18933                           ;sdmm.c: 335: if (n > 1) return n;
 18934  005988  0E01               	movlw	1
 18935  00598A  641A               	cpfsgt	send_cmd@n,c
 18936  00598C  D002               	goto	l6731
 18937  00598E  501A               	movf	send_cmd@n,w,c
 18938  005990  D052               	goto	l161
 18939  005992                     l6731:
 18940                           
 18941                           ;sdmm.c: 336: }
 18942                           ;sdmm.c: 339: if (cmd != (12)) {
 18943  005992  501B               	movf	send_cmd@cmd,w,c
 18944  005994  0A0C               	xorlw	12
 18945  005996  B4D8               	btfsc	status,2,c
 18946  005998  D00A               	goto	l6739
 18947                           
 18948                           ;sdmm.c: 340: deselect();
 18949  00599A  EC95  F028         	call	_deselect	;wreg free
 18950                           
 18951                           ;sdmm.c: 341: if (!select()) return 0xFF;
 18952  00599E  ECFC  F028         	call	_select	;wreg free
 18953  0059A2  500D               	movf	?_select+1,w,c
 18954  0059A4  100C               	iorwf	?_select,w,c
 18955  0059A6  A4D8               	btfss	status,2,c
 18956  0059A8  D002               	goto	l6739
 18957  0059AA  0EFF               	movlw	255
 18958  0059AC  D044               	goto	l161
 18959  0059AE                     l6739:
 18960                           
 18961                           ;sdmm.c: 342: }
 18962                           ;sdmm.c: 345: buf[0] = 0x40 | cmd;
 18963  0059AE  501B               	movf	send_cmd@cmd,w,c
 18964  0059B0  0940               	iorlw	64
 18965  0059B2  6E13               	movwf	send_cmd@buf,c
 18966                           
 18967                           ;sdmm.c: 346: buf[1] = (BYTE)(arg >> 24);
 18968  0059B4  C012  F014         	movff	send_cmd@arg+3,send_cmd@buf+1
 18969                           
 18970                           ;sdmm.c: 347: buf[2] = (BYTE)(arg >> 16);
 18971  0059B8  C011  F015         	movff	send_cmd@arg+2,send_cmd@buf+2
 18972                           
 18973                           ;sdmm.c: 348: buf[3] = (BYTE)(arg >> 8);
 18974  0059BC  C010  F016         	movff	send_cmd@arg+1,send_cmd@buf+3
 18975                           
 18976                           ;sdmm.c: 349: buf[4] = (BYTE)arg;
 18977  0059C0  C00F  F017         	movff	send_cmd@arg,send_cmd@buf+4
 18978                           
 18979                           ;sdmm.c: 350: n = 0x01;
 18980  0059C4  0E01               	movlw	1
 18981  0059C6  6E1A               	movwf	send_cmd@n,c
 18982                           
 18983                           ;sdmm.c: 351: if (cmd == (0)) n = 0x95;
 18984  0059C8  661B               	tstfsz	send_cmd@cmd,c
 18985  0059CA  D002               	goto	l6755
 18986  0059CC  0E95               	movlw	149
 18987  0059CE  6E1A               	movwf	send_cmd@n,c
 18988  0059D0                     l6755:
 18989                           
 18990                           ;sdmm.c: 352: if (cmd == (8)) n = 0x87;
 18991  0059D0  501B               	movf	send_cmd@cmd,w,c
 18992  0059D2  0A08               	xorlw	8
 18993  0059D4  A4D8               	btfss	status,2,c
 18994  0059D6  D002               	goto	l6759
 18995  0059D8  0E87               	movlw	135
 18996  0059DA  6E1A               	movwf	send_cmd@n,c
 18997  0059DC                     l6759:
 18998                           
 18999                           ;sdmm.c: 353: buf[5] = n;
 19000  0059DC  C01A  F018         	movff	send_cmd@n,send_cmd@buf+5
 19001                           
 19002                           ;sdmm.c: 354: xmit_mmc(buf, 6);
 19003  0059E0  0E20               	movlw	32
 19004  0059E2  6E03               	movwf	xmit_mmc@buff+2,c
 19005  0059E4  0E00               	movlw	high send_cmd@buf
 19006  0059E6  6E02               	movwf	xmit_mmc@buff+1,c
 19007  0059E8  0E13               	movlw	low send_cmd@buf
 19008  0059EA  6E01               	movwf	xmit_mmc@buff,c
 19009  0059EC  0E00               	movlw	0
 19010  0059EE  6E05               	movwf	xmit_mmc@bc+1,c
 19011  0059F0  0E06               	movlw	6
 19012  0059F2  6E04               	movwf	xmit_mmc@bc,c
 19013  0059F4  EC0F  F02C         	call	_xmit_mmc	;wreg free
 19014                           
 19015                           ;sdmm.c: 357: if (cmd == (12)) rcvr_mmc(&d, 1);
 19016  0059F8  501B               	movf	send_cmd@cmd,w,c
 19017  0059FA  0A0C               	xorlw	12
 19018  0059FC  A4D8               	btfss	status,2,c
 19019  0059FE  D00A               	goto	l6767
 19020  005A00  0E00               	movlw	high send_cmd@d
 19021  005A02  6E02               	movwf	rcvr_mmc@buff+1,c
 19022  005A04  0E19               	movlw	low send_cmd@d
 19023  005A06  6E01               	movwf	rcvr_mmc@buff,c
 19024  005A08  0E00               	movlw	0
 19025  005A0A  6E04               	movwf	rcvr_mmc@bc+1,c
 19026  005A0C  0E01               	movlw	1
 19027  005A0E  6E03               	movwf	rcvr_mmc@bc,c
 19028  005A10  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 19029  005A14                     l6767:
 19030                           
 19031                           ;sdmm.c: 358: n = 10;
 19032  005A14  0E0A               	movlw	10
 19033  005A16  6E1A               	movwf	send_cmd@n,c
 19034  005A18                     l6769:
 19035                           
 19036                           ;sdmm.c: 360: rcvr_mmc(&d, 1);
 19037  005A18  0E00               	movlw	high send_cmd@d
 19038  005A1A  6E02               	movwf	rcvr_mmc@buff+1,c
 19039  005A1C  0E19               	movlw	low send_cmd@d
 19040  005A1E  6E01               	movwf	rcvr_mmc@buff,c
 19041  005A20  0E00               	movlw	0
 19042  005A22  6E04               	movwf	rcvr_mmc@bc+1,c
 19043  005A24  0E01               	movlw	1
 19044  005A26  6E03               	movwf	rcvr_mmc@bc,c
 19045  005A28  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 19046                           
 19047                           ;sdmm.c: 361: while ((d & 0x80) && --n);
 19048  005A2C  AE19               	btfss	send_cmd@d,7,c
 19049  005A2E  D002               	goto	l6775
 19050  005A30  2E1A               	decfsz	send_cmd@n,f,c
 19051  005A32  D7F2               	goto	l6769
 19052  005A34                     l6775:
 19053                           
 19054                           ;sdmm.c: 363: return d;
 19055  005A34  5019               	movf	send_cmd@d,w,c
 19056  005A36                     l161:
 19057  005A36  0012               	return	
 19058  005A38                     __end_of_send_cmd:
 19059                           	opt stack 0
 19060                           tblptru	equ	0xFF8
 19061                           tblptrh	equ	0xFF7
 19062                           tblptrl	equ	0xFF6
 19063                           tablat	equ	0xFF5
 19064                           prodh	equ	0xFF4
 19065                           prodl	equ	0xFF3
 19066                           indf0	equ	0xFEF
 19067                           postinc0	equ	0xFEE
 19068                           postdec0	equ	0xFED
 19069                           fsr0h	equ	0xFEA
 19070                           fsr0l	equ	0xFE9
 19071                           wreg	equ	0xFE8
 19072                           indf1	equ	0xFE7
 19073                           postinc1	equ	0xFE6
 19074                           postdec1	equ	0xFE5
 19075                           fsr1h	equ	0xFE2
 19076                           fsr1l	equ	0xFE1
 19077                           indf2	equ	0xFDF
 19078                           postinc2	equ	0xFDE
 19079                           postdec2	equ	0xFDD
 19080                           plusw2	equ	0xFDB
 19081                           fsr2h	equ	0xFDA
 19082                           fsr2l	equ	0xFD9
 19083                           status	equ	0xFD8
 19084                           
 19085 ;; *************** function _xmit_mmc *****************
 19086 ;; Defined at:
 19087 ;;		line 135 in file "sdmm.c"
 19088 ;; Parameters:    Size  Location     Type
 19089 ;;  buff            3    0[COMRAM] PTR const unsigned char 
 19090 ;;		 -> FatFs.win(512), pb.buf(64), f_printf@pb(71), pb.buf(64), 
 19091 ;;		 -> f_puts@pb(71), pb.buf(64), f_putc@pb(71), NULL(0), 
 19092 ;;		 -> ROM(49151), send_cmd@buf(6), xmit_datablock@d(2), STR_7(14), 
 19093 ;;		 -> FatFs(562), 
 19094 ;;  bc              2    3[COMRAM] unsigned int 
 19095 ;; Auto vars:     Size  Location     Type
 19096 ;;  d               1    5[COMRAM] unsigned char 
 19097 ;; Return value:  Size  Location     Type
 19098 ;;		None               void
 19099 ;; Registers used:
 19100 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru
 19101 ;; Tracked objects:
 19102 ;;		On entry : 0/0
 19103 ;;		On exit  : 0/0
 19104 ;;		Unchanged: 0/0
 19105 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19106 ;;      Params:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19107 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19108 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19109 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19110 ;;Total ram usage:        6 bytes
 19111 ;; Hardware stack levels used:    1
 19112 ;; This function calls:
 19113 ;;		Nothing
 19114 ;; This function is called by:
 19115 ;;		_xmit_datablock
 19116 ;;		_send_cmd
 19117 ;; This function uses a non-reentrant model
 19118 ;;
 19119                           
 19120                           	psect	text41
 19121  00581E                     __ptext41:
 19122                           	opt stack 0
 19123  00581E                     _xmit_mmc:
 19124                           	opt stack 26
 19125  00581E                     l97:
 19126                           
 19127                           ;sdmm.c: 144: d = *buff++;
 19128  00581E  C001  FFF6         	movff	xmit_mmc@buff,tblptrl
 19129  005822  C002  FFF7         	movff	xmit_mmc@buff+1,tblptrh
 19130  005826  C003  FFF8         	movff	xmit_mmc@buff+2,tblptru
 19131  00582A  BAF8               	btfsc	tblptru,5,c
 19132  00582C  D003               	bra	u8087
 19133  00582E  0008               	tblrd		*
 19134  005830  50F5               	movf	tablat,w,c
 19135  005832  D005               	bra	u8080
 19136  005834                     u8087:
 19137  005834  CFF6 FFE9          	movff	tblptrl,fsr0l
 19138  005838  CFF7 FFEA          	movff	tblptrh,fsr0h
 19139  00583C  50EF               	movf	indf0,w,c
 19140  00583E                     u8080:
 19141  00583E  6E06               	movwf	xmit_mmc@d,c
 19142  005840  0E01               	movlw	1
 19143  005842  2601               	addwf	xmit_mmc@buff,f,c
 19144  005844  0E00               	movlw	0
 19145  005846  2202               	addwfc	xmit_mmc@buff+1,f,c
 19146  005848  0E00               	movlw	0
 19147  00584A  2203               	addwfc	xmit_mmc@buff+2,f,c
 19148                           
 19149                           ;sdmm.c: 145: if (d & 0x80) (PORTC |= 0x20); else (PORTC &= ~0x20);
 19150  00584C  AE06               	btfss	xmit_mmc@d,7,c
 19151  00584E  D002               	goto	l6633
 19152  005850  8A82               	bsf	3970,5,c	;volatile
 19153  005852  D001               	goto	l99
 19154  005854                     l6633:
 19155  005854  9A82               	bcf	3970,5,c	;volatile
 19156  005856                     l99:
 19157                           
 19158                           ;sdmm.c: 146: (PORTC |= 0x08); (PORTC &= ~0x08);
 19159  005856  8682               	bsf	3970,3,c	;volatile
 19160  005858  9682               	bcf	3970,3,c	;volatile
 19161                           
 19162                           ;sdmm.c: 147: if (d & 0x40) (PORTC |= 0x20); else (PORTC &= ~0x20);
 19163  00585A  AC06               	btfss	xmit_mmc@d,6,c
 19164  00585C  D002               	goto	l6639
 19165  00585E  8A82               	bsf	3970,5,c	;volatile
 19166  005860  D001               	goto	l101
 19167  005862                     l6639:
 19168  005862  9A82               	bcf	3970,5,c	;volatile
 19169  005864                     l101:
 19170                           
 19171                           ;sdmm.c: 148: (PORTC |= 0x08); (PORTC &= ~0x08);
 19172  005864  8682               	bsf	3970,3,c	;volatile
 19173  005866  9682               	bcf	3970,3,c	;volatile
 19174                           
 19175                           ;sdmm.c: 149: if (d & 0x20) (PORTC |= 0x20); else (PORTC &= ~0x20);
 19176  005868  AA06               	btfss	xmit_mmc@d,5,c
 19177  00586A  D002               	goto	l6645
 19178  00586C  8A82               	bsf	3970,5,c	;volatile
 19179  00586E  D001               	goto	l103
 19180  005870                     l6645:
 19181  005870  9A82               	bcf	3970,5,c	;volatile
 19182  005872                     l103:
 19183                           
 19184                           ;sdmm.c: 150: (PORTC |= 0x08); (PORTC &= ~0x08);
 19185  005872  8682               	bsf	3970,3,c	;volatile
 19186  005874  9682               	bcf	3970,3,c	;volatile
 19187                           
 19188                           ;sdmm.c: 151: if (d & 0x10) (PORTC |= 0x20); else (PORTC &= ~0x20);
 19189  005876  A806               	btfss	xmit_mmc@d,4,c
 19190  005878  D002               	goto	l6651
 19191  00587A  8A82               	bsf	3970,5,c	;volatile
 19192  00587C  D001               	goto	l105
 19193  00587E                     l6651:
 19194  00587E  9A82               	bcf	3970,5,c	;volatile
 19195  005880                     l105:
 19196                           
 19197                           ;sdmm.c: 152: (PORTC |= 0x08); (PORTC &= ~0x08);
 19198  005880  8682               	bsf	3970,3,c	;volatile
 19199  005882  9682               	bcf	3970,3,c	;volatile
 19200                           
 19201                           ;sdmm.c: 153: if (d & 0x08) (PORTC |= 0x20); else (PORTC &= ~0x20);
 19202  005884  A606               	btfss	xmit_mmc@d,3,c
 19203  005886  D002               	goto	l6657
 19204  005888  8A82               	bsf	3970,5,c	;volatile
 19205  00588A  D001               	goto	l107
 19206  00588C                     l6657:
 19207  00588C  9A82               	bcf	3970,5,c	;volatile
 19208  00588E                     l107:
 19209                           
 19210                           ;sdmm.c: 154: (PORTC |= 0x08); (PORTC &= ~0x08);
 19211  00588E  8682               	bsf	3970,3,c	;volatile
 19212  005890  9682               	bcf	3970,3,c	;volatile
 19213                           
 19214                           ;sdmm.c: 155: if (d & 0x04) (PORTC |= 0x20); else (PORTC &= ~0x20);
 19215  005892  A406               	btfss	xmit_mmc@d,2,c
 19216  005894  D002               	goto	l6663
 19217  005896  8A82               	bsf	3970,5,c	;volatile
 19218  005898  D001               	goto	l109
 19219  00589A                     l6663:
 19220  00589A  9A82               	bcf	3970,5,c	;volatile
 19221  00589C                     l109:
 19222                           
 19223                           ;sdmm.c: 156: (PORTC |= 0x08); (PORTC &= ~0x08);
 19224  00589C  8682               	bsf	3970,3,c	;volatile
 19225  00589E  9682               	bcf	3970,3,c	;volatile
 19226                           
 19227                           ;sdmm.c: 157: if (d & 0x02) (PORTC |= 0x20); else (PORTC &= ~0x20);
 19228  0058A0  A206               	btfss	xmit_mmc@d,1,c
 19229  0058A2  D002               	goto	l6669
 19230  0058A4  8A82               	bsf	3970,5,c	;volatile
 19231  0058A6  D001               	goto	l111
 19232  0058A8                     l6669:
 19233  0058A8  9A82               	bcf	3970,5,c	;volatile
 19234  0058AA                     l111:
 19235                           
 19236                           ;sdmm.c: 158: (PORTC |= 0x08); (PORTC &= ~0x08);
 19237  0058AA  8682               	bsf	3970,3,c	;volatile
 19238  0058AC  9682               	bcf	3970,3,c	;volatile
 19239                           
 19240                           ;sdmm.c: 159: if (d & 0x01) (PORTC |= 0x20); else (PORTC &= ~0x20);
 19241  0058AE  A006               	btfss	xmit_mmc@d,0,c
 19242  0058B0  D002               	goto	l6675
 19243  0058B2  8A82               	bsf	3970,5,c	;volatile
 19244  0058B4  D001               	goto	l113
 19245  0058B6                     l6675:
 19246  0058B6  9A82               	bcf	3970,5,c	;volatile
 19247  0058B8                     l113:
 19248                           
 19249                           ;sdmm.c: 160: (PORTC |= 0x08); (PORTC &= ~0x08);
 19250  0058B8  8682               	bsf	3970,3,c	;volatile
 19251  0058BA  9682               	bcf	3970,3,c	;volatile
 19252                           
 19253                           ;sdmm.c: 161: } while (--bc);
 19254  0058BC  0604               	decf	xmit_mmc@bc,f,c
 19255  0058BE  A0D8               	btfss	status,0,c
 19256  0058C0  0605               	decf	xmit_mmc@bc+1,f,c
 19257  0058C2  5005               	movf	(xmit_mmc@bc+1)& (0+255),w,c
 19258  0058C4  1004               	iorwf	xmit_mmc@bc& (0+255),w,c
 19259  0058C6  B4D8               	btfsc	status,2,c
 19260  0058C8  0012               	return	
 19261  0058CA  D7A9               	goto	l97
 19262  0058CC                     __end_of_xmit_mmc:
 19263                           	opt stack 0
 19264                           tblptru	equ	0xFF8
 19265                           tblptrh	equ	0xFF7
 19266                           tblptrl	equ	0xFF6
 19267                           tablat	equ	0xFF5
 19268                           prodh	equ	0xFF4
 19269                           prodl	equ	0xFF3
 19270                           indf0	equ	0xFEF
 19271                           postinc0	equ	0xFEE
 19272                           postdec0	equ	0xFED
 19273                           fsr0h	equ	0xFEA
 19274                           fsr0l	equ	0xFE9
 19275                           wreg	equ	0xFE8
 19276                           indf1	equ	0xFE7
 19277                           postinc1	equ	0xFE6
 19278                           postdec1	equ	0xFE5
 19279                           fsr1h	equ	0xFE2
 19280                           fsr1l	equ	0xFE1
 19281                           indf2	equ	0xFDF
 19282                           postinc2	equ	0xFDE
 19283                           postdec2	equ	0xFDD
 19284                           plusw2	equ	0xFDB
 19285                           fsr2h	equ	0xFDA
 19286                           fsr2l	equ	0xFD9
 19287                           status	equ	0xFD8
 19288                           
 19289 ;; *************** function _select *****************
 19290 ;; Defined at:
 19291 ;;		line 246 in file "sdmm.c"
 19292 ;; Parameters:    Size  Location     Type
 19293 ;;		None
 19294 ;; Auto vars:     Size  Location     Type
 19295 ;;  d               1   13[COMRAM] unsigned char 
 19296 ;; Return value:  Size  Location     Type
 19297 ;;                  2   11[COMRAM] int 
 19298 ;; Registers used:
 19299 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19300 ;; Tracked objects:
 19301 ;;		On entry : 0/0
 19302 ;;		On exit  : 0/0
 19303 ;;		Unchanged: 0/0
 19304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19305 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19306 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19307 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19308 ;;      Totals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19309 ;;Total ram usage:        3 bytes
 19310 ;; Hardware stack levels used:    1
 19311 ;; Hardware stack levels required when called:    2
 19312 ;; This function calls:
 19313 ;;		_deselect
 19314 ;;		_rcvr_mmc
 19315 ;;		_wait_ready
 19316 ;; This function is called by:
 19317 ;;		_send_cmd
 19318 ;;		_disk_ioctl
 19319 ;; This function uses a non-reentrant model
 19320 ;;
 19321                           
 19322                           	psect	text42
 19323  0051F8                     __ptext42:
 19324                           	opt stack 0
 19325  0051F8                     _select:
 19326                           	opt stack 24
 19327                           
 19328                           ;sdmm.c: 248: BYTE d;
 19329                           ;sdmm.c: 250: (PORTC &= ~0x40);
 19330                           
 19331                           ;incstack = 0
 19332  0051F8  9C82               	bcf	3970,6,c	;volatile
 19333                           
 19334                           ;sdmm.c: 251: rcvr_mmc(&d, 1);
 19335  0051FA  0E00               	movlw	high select@d
 19336  0051FC  6E02               	movwf	rcvr_mmc@buff+1,c
 19337  0051FE  0E0E               	movlw	low select@d
 19338  005200  6E01               	movwf	rcvr_mmc@buff,c
 19339  005202  0E00               	movlw	0
 19340  005204  6E04               	movwf	rcvr_mmc@bc+1,c
 19341  005206  0E01               	movlw	1
 19342  005208  6E03               	movwf	rcvr_mmc@bc,c
 19343  00520A  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 19344                           
 19345                           ;sdmm.c: 252: if (wait_ready()) return 1;
 19346  00520E  EC53  F029         	call	_wait_ready	;wreg free
 19347  005212  5008               	movf	?_wait_ready+1,w,c
 19348  005214  1007               	iorwf	?_wait_ready,w,c
 19349  005216  B4D8               	btfsc	status,2,c
 19350  005218  D004               	goto	l6689
 19351  00521A  0E00               	movlw	0
 19352  00521C  6E0D               	movwf	?_select+1,c
 19353  00521E  0E01               	movlw	1
 19354  005220  D005               	goto	L34
 19355  005222                     l6689:
 19356                           
 19357                           ;sdmm.c: 254: deselect();
 19358  005222  EC95  F028         	call	_deselect	;wreg free
 19359                           
 19360                           ;sdmm.c: 255: return 0;
 19361  005226  0E00               	movlw	0
 19362  005228  6E0D               	movwf	?_select+1,c
 19363  00522A  0E00               	movlw	0
 19364  00522C                     L34:
 19365  00522C  6E0C               	movwf	?_select,c
 19366  00522E  0012               	return	
 19367  005230                     __end_of_select:
 19368                           	opt stack 0
 19369                           tblptru	equ	0xFF8
 19370                           tblptrh	equ	0xFF7
 19371                           tblptrl	equ	0xFF6
 19372                           tablat	equ	0xFF5
 19373                           prodh	equ	0xFF4
 19374                           prodl	equ	0xFF3
 19375                           indf0	equ	0xFEF
 19376                           postinc0	equ	0xFEE
 19377                           postdec0	equ	0xFED
 19378                           fsr0h	equ	0xFEA
 19379                           fsr0l	equ	0xFE9
 19380                           wreg	equ	0xFE8
 19381                           indf1	equ	0xFE7
 19382                           postinc1	equ	0xFE6
 19383                           postdec1	equ	0xFE5
 19384                           fsr1h	equ	0xFE2
 19385                           fsr1l	equ	0xFE1
 19386                           indf2	equ	0xFDF
 19387                           postinc2	equ	0xFDE
 19388                           postdec2	equ	0xFDD
 19389                           plusw2	equ	0xFDB
 19390                           fsr2h	equ	0xFDA
 19391                           fsr2l	equ	0xFD9
 19392                           status	equ	0xFD8
 19393                           
 19394 ;; *************** function _wait_ready *****************
 19395 ;; Defined at:
 19396 ;;		line 209 in file "sdmm.c"
 19397 ;; Parameters:    Size  Location     Type
 19398 ;;		None
 19399 ;; Auto vars:     Size  Location     Type
 19400 ;;  tmr             2    8[COMRAM] unsigned int 
 19401 ;;  d               1   10[COMRAM] unsigned char 
 19402 ;; Return value:  Size  Location     Type
 19403 ;;                  2    6[COMRAM] int 
 19404 ;; Registers used:
 19405 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19406 ;; Tracked objects:
 19407 ;;		On entry : 0/0
 19408 ;;		On exit  : 0/0
 19409 ;;		Unchanged: 0/0
 19410 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19411 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19412 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19413 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19414 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19415 ;;Total ram usage:        5 bytes
 19416 ;; Hardware stack levels used:    1
 19417 ;; Hardware stack levels required when called:    1
 19418 ;; This function calls:
 19419 ;;		_dly_us
 19420 ;;		_rcvr_mmc
 19421 ;; This function is called by:
 19422 ;;		_select
 19423 ;;		_xmit_datablock
 19424 ;; This function uses a non-reentrant model
 19425 ;;
 19426                           
 19427                           	psect	text43
 19428  0052A6                     __ptext43:
 19429                           	opt stack 0
 19430  0052A6                     _wait_ready:
 19431                           	opt stack 25
 19432                           
 19433                           ;sdmm.c: 211: BYTE d;
 19434                           ;sdmm.c: 212: UINT tmr;
 19435                           ;sdmm.c: 215: for (tmr = 5000; tmr; tmr--) {
 19436                           
 19437                           ;incstack = 0
 19438  0052A6  0E13               	movlw	19
 19439  0052A8  6E0A               	movwf	wait_ready@tmr+1,c
 19440  0052AA  0E88               	movlw	136
 19441  0052AC  6E09               	movwf	wait_ready@tmr,c
 19442  0052AE  D016               	goto	l6615
 19443  0052B0                     l6605:
 19444                           
 19445                           ;sdmm.c: 216: rcvr_mmc(&d, 1);
 19446  0052B0  0E00               	movlw	high wait_ready@d
 19447  0052B2  6E02               	movwf	rcvr_mmc@buff+1,c
 19448  0052B4  0E0B               	movlw	low wait_ready@d
 19449  0052B6  6E01               	movwf	rcvr_mmc@buff,c
 19450  0052B8  0E00               	movlw	0
 19451  0052BA  6E04               	movwf	rcvr_mmc@bc+1,c
 19452  0052BC  0E01               	movlw	1
 19453  0052BE  6E03               	movwf	rcvr_mmc@bc,c
 19454  0052C0  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 19455                           
 19456                           ;sdmm.c: 217: if (d == 0xFF) break;
 19457  0052C4  280B               	incf	wait_ready@d,w,c
 19458  0052C6  B4D8               	btfsc	status,2,c
 19459  0052C8  D00D               	goto	l6617
 19460                           
 19461                           ;sdmm.c: 218: dly_us(100);
 19462  0052CA  0E00               	movlw	0
 19463  0052CC  6E02               	movwf	dly_us@n+1,c
 19464  0052CE  0E64               	movlw	100
 19465  0052D0  6E01               	movwf	dly_us@n,c
 19466  0052D2  ECA1  F028         	call	_dly_us	;wreg free
 19467  0052D6  0609               	decf	wait_ready@tmr,f,c
 19468  0052D8  A0D8               	btfss	status,0,c
 19469  0052DA  060A               	decf	wait_ready@tmr+1,f,c
 19470  0052DC                     l6615:
 19471  0052DC  500A               	movf	wait_ready@tmr+1,w,c
 19472  0052DE  1009               	iorwf	wait_ready@tmr,w,c
 19473  0052E0  A4D8               	btfss	status,2,c
 19474  0052E2  D7E6               	goto	l6605
 19475  0052E4                     l6617:
 19476                           
 19477                           ;sdmm.c: 219: }
 19478                           ;sdmm.c: 221: return tmr ? 1 : 0;
 19479  0052E4  500A               	movf	wait_ready@tmr+1,w,c
 19480  0052E6  1009               	iorwf	wait_ready@tmr,w,c
 19481  0052E8  0E00               	movlw	0
 19482  0052EA  A4D8               	btfss	status,2,c
 19483  0052EC  0E01               	movlw	1
 19484  0052EE  6E07               	movwf	?_wait_ready,c
 19485  0052F0  6A08               	clrf	?_wait_ready+1,c
 19486  0052F2  0012               	return	
 19487  0052F4                     __end_of_wait_ready:
 19488                           	opt stack 0
 19489                           tblptru	equ	0xFF8
 19490                           tblptrh	equ	0xFF7
 19491                           tblptrl	equ	0xFF6
 19492                           tablat	equ	0xFF5
 19493                           prodh	equ	0xFF4
 19494                           prodl	equ	0xFF3
 19495                           indf0	equ	0xFEF
 19496                           postinc0	equ	0xFEE
 19497                           postdec0	equ	0xFED
 19498                           fsr0h	equ	0xFEA
 19499                           fsr0l	equ	0xFE9
 19500                           wreg	equ	0xFE8
 19501                           indf1	equ	0xFE7
 19502                           postinc1	equ	0xFE6
 19503                           postdec1	equ	0xFE5
 19504                           fsr1h	equ	0xFE2
 19505                           fsr1l	equ	0xFE1
 19506                           indf2	equ	0xFDF
 19507                           postinc2	equ	0xFDE
 19508                           postdec2	equ	0xFDD
 19509                           plusw2	equ	0xFDB
 19510                           fsr2h	equ	0xFDA
 19511                           fsr2l	equ	0xFD9
 19512                           status	equ	0xFD8
 19513                           
 19514 ;; *************** function _deselect *****************
 19515 ;; Defined at:
 19516 ;;		line 231 in file "sdmm.c"
 19517 ;; Parameters:    Size  Location     Type
 19518 ;;		None
 19519 ;; Auto vars:     Size  Location     Type
 19520 ;;  d               1    5[COMRAM] unsigned char 
 19521 ;; Return value:  Size  Location     Type
 19522 ;;		None               void
 19523 ;; Registers used:
 19524 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19525 ;; Tracked objects:
 19526 ;;		On entry : 0/0
 19527 ;;		On exit  : 0/0
 19528 ;;		Unchanged: 0/0
 19529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19530 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19531 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19532 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19533 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19534 ;;Total ram usage:        1 bytes
 19535 ;; Hardware stack levels used:    1
 19536 ;; Hardware stack levels required when called:    1
 19537 ;; This function calls:
 19538 ;;		_rcvr_mmc
 19539 ;; This function is called by:
 19540 ;;		_select
 19541 ;;		_send_cmd
 19542 ;;		_disk_initialize
 19543 ;;		_disk_read
 19544 ;;		_disk_write
 19545 ;;		_disk_ioctl
 19546 ;; This function uses a non-reentrant model
 19547 ;;
 19548                           
 19549                           	psect	text44
 19550  00512A                     __ptext44:
 19551                           	opt stack 0
 19552  00512A                     _deselect:
 19553                           	opt stack 24
 19554                           
 19555                           ;sdmm.c: 233: BYTE d;
 19556                           ;sdmm.c: 235: (PORTC |= 0x40);
 19557                           
 19558                           ;incstack = 0
 19559  00512A  8C82               	bsf	3970,6,c	;volatile
 19560                           
 19561                           ;sdmm.c: 236: rcvr_mmc(&d, 1);
 19562  00512C  0E00               	movlw	high deselect@d
 19563  00512E  6E02               	movwf	rcvr_mmc@buff+1,c
 19564  005130  0E06               	movlw	low deselect@d
 19565  005132  6E01               	movwf	rcvr_mmc@buff,c
 19566  005134  0E00               	movlw	0
 19567  005136  6E04               	movwf	rcvr_mmc@bc+1,c
 19568  005138  0E01               	movlw	1
 19569  00513A  6E03               	movwf	rcvr_mmc@bc,c
 19570  00513C  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 19571  005140  0012               	return	
 19572  005142                     __end_of_deselect:
 19573                           	opt stack 0
 19574                           tblptru	equ	0xFF8
 19575                           tblptrh	equ	0xFF7
 19576                           tblptrl	equ	0xFF6
 19577                           tablat	equ	0xFF5
 19578                           prodh	equ	0xFF4
 19579                           prodl	equ	0xFF3
 19580                           indf0	equ	0xFEF
 19581                           postinc0	equ	0xFEE
 19582                           postdec0	equ	0xFED
 19583                           fsr0h	equ	0xFEA
 19584                           fsr0l	equ	0xFE9
 19585                           wreg	equ	0xFE8
 19586                           indf1	equ	0xFE7
 19587                           postinc1	equ	0xFE6
 19588                           postdec1	equ	0xFE5
 19589                           fsr1h	equ	0xFE2
 19590                           fsr1l	equ	0xFE1
 19591                           indf2	equ	0xFDF
 19592                           postinc2	equ	0xFDE
 19593                           postdec2	equ	0xFDD
 19594                           plusw2	equ	0xFDB
 19595                           fsr2h	equ	0xFDA
 19596                           fsr2l	equ	0xFD9
 19597                           status	equ	0xFD8
 19598                           
 19599 ;; *************** function _rcvr_datablock *****************
 19600 ;; Defined at:
 19601 ;;		line 265 in file "sdmm.c"
 19602 ;; Parameters:    Size  Location     Type
 19603 ;;  buff            2    6[COMRAM] PTR unsigned char 
 19604 ;;		 -> f_gets@s(2), NULL(0), disk_ioctl@csd(16), FatFs(562), 
 19605 ;;  btr             2    8[COMRAM] unsigned int 
 19606 ;; Auto vars:     Size  Location     Type
 19607 ;;  d               2   12[COMRAM] unsigned char [2]
 19608 ;;  tmr             2   10[COMRAM] unsigned int 
 19609 ;; Return value:  Size  Location     Type
 19610 ;;                  2    6[COMRAM] int 
 19611 ;; Registers used:
 19612 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
 19613 ;; Tracked objects:
 19614 ;;		On entry : 0/0
 19615 ;;		On exit  : 0/0
 19616 ;;		Unchanged: 0/0
 19617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19618 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19619 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19620 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19621 ;;      Totals:         8       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19622 ;;Total ram usage:        8 bytes
 19623 ;; Hardware stack levels used:    1
 19624 ;; Hardware stack levels required when called:    1
 19625 ;; This function calls:
 19626 ;;		_dly_us
 19627 ;;		_rcvr_mmc
 19628 ;; This function is called by:
 19629 ;;		_disk_read
 19630 ;;		_disk_ioctl
 19631 ;; This function uses a non-reentrant model
 19632 ;;
 19633                           
 19634                           	psect	text45
 19635  00556E                     __ptext45:
 19636                           	opt stack 0
 19637  00556E                     _rcvr_datablock:
 19638                           	opt stack 26
 19639                           
 19640                           ;sdmm.c: 270: BYTE d[2];
 19641                           ;sdmm.c: 271: UINT tmr;
 19642                           ;sdmm.c: 274: for (tmr = 1000; tmr; tmr--) {
 19643                           
 19644                           ;incstack = 0
 19645  00556E  0E03               	movlw	3
 19646  005570  6E0C               	movwf	rcvr_datablock@tmr+1,c
 19647  005572  0EE8               	movlw	232
 19648  005574  6E0B               	movwf	rcvr_datablock@tmr,c
 19649  005576  D016               	goto	l6801
 19650  005578                     l6791:
 19651                           
 19652                           ;sdmm.c: 275: rcvr_mmc(d, 1);
 19653  005578  0E00               	movlw	high rcvr_datablock@d
 19654  00557A  6E02               	movwf	rcvr_mmc@buff+1,c
 19655  00557C  0E0D               	movlw	low rcvr_datablock@d
 19656  00557E  6E01               	movwf	rcvr_mmc@buff,c
 19657  005580  0E00               	movlw	0
 19658  005582  6E04               	movwf	rcvr_mmc@bc+1,c
 19659  005584  0E01               	movlw	1
 19660  005586  6E03               	movwf	rcvr_mmc@bc,c
 19661  005588  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 19662                           
 19663                           ;sdmm.c: 276: if (d[0] != 0xFF) break;
 19664  00558C  280D               	incf	rcvr_datablock@d,w,c
 19665  00558E  A4D8               	btfss	status,2,c
 19666  005590  D00D               	goto	l6803
 19667                           
 19668                           ;sdmm.c: 277: dly_us(100);
 19669  005592  0E00               	movlw	0
 19670  005594  6E02               	movwf	dly_us@n+1,c
 19671  005596  0E64               	movlw	100
 19672  005598  6E01               	movwf	dly_us@n,c
 19673  00559A  ECA1  F028         	call	_dly_us	;wreg free
 19674  00559E  060B               	decf	rcvr_datablock@tmr,f,c
 19675  0055A0  A0D8               	btfss	status,0,c
 19676  0055A2  060C               	decf	rcvr_datablock@tmr+1,f,c
 19677  0055A4                     l6801:
 19678  0055A4  500C               	movf	rcvr_datablock@tmr+1,w,c
 19679  0055A6  100B               	iorwf	rcvr_datablock@tmr,w,c
 19680  0055A8  A4D8               	btfss	status,2,c
 19681  0055AA  D7E6               	goto	l6791
 19682  0055AC                     l6803:
 19683                           
 19684                           ;sdmm.c: 278: }
 19685                           ;sdmm.c: 279: if (d[0] != 0xFE) return 0;
 19686  0055AC  500D               	movf	rcvr_datablock@d,w,c
 19687  0055AE  0AFE               	xorlw	254
 19688  0055B0  B4D8               	btfsc	status,2,c
 19689  0055B2  D004               	goto	l6809
 19690  0055B4  0E00               	movlw	0
 19691  0055B6  6E08               	movwf	?_rcvr_datablock+1,c
 19692  0055B8  0E00               	movlw	0
 19693  0055BA  D017               	goto	L35
 19694  0055BC                     l6809:
 19695                           
 19696                           ;sdmm.c: 281: rcvr_mmc(buff, btr);
 19697  0055BC  C008  F002         	movff	rcvr_datablock@buff+1,rcvr_mmc@buff+1
 19698  0055C0  C007  F001         	movff	rcvr_datablock@buff,rcvr_mmc@buff
 19699  0055C4  C009  F003         	movff	rcvr_datablock@btr,rcvr_mmc@bc
 19700  0055C8  C00A  F004         	movff	rcvr_datablock@btr+1,rcvr_mmc@bc+1
 19701  0055CC  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 19702                           
 19703                           ;sdmm.c: 282: rcvr_mmc(d, 2);
 19704  0055D0  0E00               	movlw	high rcvr_datablock@d
 19705  0055D2  6E02               	movwf	rcvr_mmc@buff+1,c
 19706  0055D4  0E0D               	movlw	low rcvr_datablock@d
 19707  0055D6  6E01               	movwf	rcvr_mmc@buff,c
 19708  0055D8  0E00               	movlw	0
 19709  0055DA  6E04               	movwf	rcvr_mmc@bc+1,c
 19710  0055DC  0E02               	movlw	2
 19711  0055DE  6E03               	movwf	rcvr_mmc@bc,c
 19712  0055E0  ECF7  F02A         	call	_rcvr_mmc	;wreg free
 19713                           
 19714                           ;sdmm.c: 284: return 1;
 19715  0055E4  0E00               	movlw	0
 19716  0055E6  6E08               	movwf	?_rcvr_datablock+1,c
 19717  0055E8  0E01               	movlw	1
 19718  0055EA                     L35:
 19719  0055EA  6E07               	movwf	?_rcvr_datablock,c
 19720  0055EC  0012               	return	
 19721  0055EE                     __end_of_rcvr_datablock:
 19722                           	opt stack 0
 19723                           tblptru	equ	0xFF8
 19724                           tblptrh	equ	0xFF7
 19725                           tblptrl	equ	0xFF6
 19726                           tablat	equ	0xFF5
 19727                           prodh	equ	0xFF4
 19728                           prodl	equ	0xFF3
 19729                           indf0	equ	0xFEF
 19730                           postinc0	equ	0xFEE
 19731                           postdec0	equ	0xFED
 19732                           fsr0h	equ	0xFEA
 19733                           fsr0l	equ	0xFE9
 19734                           wreg	equ	0xFE8
 19735                           indf1	equ	0xFE7
 19736                           postinc1	equ	0xFE6
 19737                           postdec1	equ	0xFE5
 19738                           fsr1h	equ	0xFE2
 19739                           fsr1l	equ	0xFE1
 19740                           indf2	equ	0xFDF
 19741                           postinc2	equ	0xFDE
 19742                           postdec2	equ	0xFDD
 19743                           plusw2	equ	0xFDB
 19744                           fsr2h	equ	0xFDA
 19745                           fsr2l	equ	0xFD9
 19746                           status	equ	0xFD8
 19747                           
 19748 ;; *************** function _rcvr_mmc *****************
 19749 ;; Defined at:
 19750 ;;		line 171 in file "sdmm.c"
 19751 ;; Parameters:    Size  Location     Type
 19752 ;;  buff            2    0[COMRAM] PTR unsigned char 
 19753 ;;		 -> f_gets@s(2), NULL(0), disk_ioctl@csd(16), disk_initialize@buf(4), 
 19754 ;;		 -> send_cmd@d(1), xmit_datablock@d(2), rcvr_datablock@d(2), select@d(1), 
 19755 ;;		 -> deselect@d(1), wait_ready@d(1), FatFs(562), 
 19756 ;;  bc              2    2[COMRAM] unsigned int 
 19757 ;; Auto vars:     Size  Location     Type
 19758 ;;  r               1    4[COMRAM] unsigned char 
 19759 ;; Return value:  Size  Location     Type
 19760 ;;		None               void
 19761 ;; Registers used:
 19762 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 19763 ;; Tracked objects:
 19764 ;;		On entry : 0/0
 19765 ;;		On exit  : 0/0
 19766 ;;		Unchanged: 0/0
 19767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19768 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19769 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19770 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19771 ;;      Totals:         5       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19772 ;;Total ram usage:        5 bytes
 19773 ;; Hardware stack levels used:    1
 19774 ;; This function calls:
 19775 ;;		Nothing
 19776 ;; This function is called by:
 19777 ;;		_wait_ready
 19778 ;;		_deselect
 19779 ;;		_select
 19780 ;;		_rcvr_datablock
 19781 ;;		_xmit_datablock
 19782 ;;		_send_cmd
 19783 ;;		_disk_initialize
 19784 ;; This function uses a non-reentrant model
 19785 ;;
 19786                           
 19787                           	psect	text46
 19788  0055EE                     __ptext46:
 19789                           	opt stack 0
 19790  0055EE                     _rcvr_mmc:
 19791                           	opt stack 25
 19792                           
 19793                           ;sdmm.c: 176: BYTE r;
 19794                           ;sdmm.c: 179: (PORTC |= 0x20);
 19795                           
 19796                           ;incstack = 0
 19797  0055EE  8A82               	bsf	3970,5,c	;volatile
 19798  0055F0                     l6549:
 19799                           
 19800                           ;sdmm.c: 182: r = 0; if ((PORTC & 0x10)) r++;
 19801  0055F0  0E00               	movlw	0
 19802  0055F2  6E05               	movwf	rcvr_mmc@r,c
 19803  0055F4  B882               	btfsc	3970,4,c	;volatile
 19804  0055F6  2A05               	incf	rcvr_mmc@r,f,c
 19805                           
 19806                           ;sdmm.c: 183: (PORTC |= 0x08); (PORTC &= ~0x08);
 19807  0055F8  8682               	bsf	3970,3,c	;volatile
 19808  0055FA  9682               	bcf	3970,3,c	;volatile
 19809                           
 19810                           ;sdmm.c: 184: r <<= 1; if ((PORTC & 0x10)) r++;
 19811  0055FC  90D8               	bcf	status,0,c
 19812  0055FE  3605               	rlcf	rcvr_mmc@r,f,c
 19813  005600  B882               	btfsc	3970,4,c	;volatile
 19814  005602  2A05               	incf	rcvr_mmc@r,f,c
 19815                           
 19816                           ;sdmm.c: 185: (PORTC |= 0x08); (PORTC &= ~0x08);
 19817  005604  8682               	bsf	3970,3,c	;volatile
 19818  005606  9682               	bcf	3970,3,c	;volatile
 19819                           
 19820                           ;sdmm.c: 186: r <<= 1; if ((PORTC & 0x10)) r++;
 19821  005608  90D8               	bcf	status,0,c
 19822  00560A  3605               	rlcf	rcvr_mmc@r,f,c
 19823  00560C  B882               	btfsc	3970,4,c	;volatile
 19824  00560E  2A05               	incf	rcvr_mmc@r,f,c
 19825                           
 19826                           ;sdmm.c: 187: (PORTC |= 0x08); (PORTC &= ~0x08);
 19827  005610  8682               	bsf	3970,3,c	;volatile
 19828  005612  9682               	bcf	3970,3,c	;volatile
 19829                           
 19830                           ;sdmm.c: 188: r <<= 1; if ((PORTC & 0x10)) r++;
 19831  005614  90D8               	bcf	status,0,c
 19832  005616  3605               	rlcf	rcvr_mmc@r,f,c
 19833  005618  B882               	btfsc	3970,4,c	;volatile
 19834  00561A  2A05               	incf	rcvr_mmc@r,f,c
 19835                           
 19836                           ;sdmm.c: 189: (PORTC |= 0x08); (PORTC &= ~0x08);
 19837  00561C  8682               	bsf	3970,3,c	;volatile
 19838  00561E  9682               	bcf	3970,3,c	;volatile
 19839                           
 19840                           ;sdmm.c: 190: r <<= 1; if ((PORTC & 0x10)) r++;
 19841  005620  90D8               	bcf	status,0,c
 19842  005622  3605               	rlcf	rcvr_mmc@r,f,c
 19843  005624  B882               	btfsc	3970,4,c	;volatile
 19844  005626  2A05               	incf	rcvr_mmc@r,f,c
 19845                           
 19846                           ;sdmm.c: 191: (PORTC |= 0x08); (PORTC &= ~0x08);
 19847  005628  8682               	bsf	3970,3,c	;volatile
 19848  00562A  9682               	bcf	3970,3,c	;volatile
 19849                           
 19850                           ;sdmm.c: 192: r <<= 1; if ((PORTC & 0x10)) r++;
 19851  00562C  90D8               	bcf	status,0,c
 19852  00562E  3605               	rlcf	rcvr_mmc@r,f,c
 19853  005630  B882               	btfsc	3970,4,c	;volatile
 19854  005632  2A05               	incf	rcvr_mmc@r,f,c
 19855                           
 19856                           ;sdmm.c: 193: (PORTC |= 0x08); (PORTC &= ~0x08);
 19857  005634  8682               	bsf	3970,3,c	;volatile
 19858  005636  9682               	bcf	3970,3,c	;volatile
 19859                           
 19860                           ;sdmm.c: 194: r <<= 1; if ((PORTC & 0x10)) r++;
 19861  005638  90D8               	bcf	status,0,c
 19862  00563A  3605               	rlcf	rcvr_mmc@r,f,c
 19863  00563C  B882               	btfsc	3970,4,c	;volatile
 19864  00563E  2A05               	incf	rcvr_mmc@r,f,c
 19865                           
 19866                           ;sdmm.c: 195: (PORTC |= 0x08); (PORTC &= ~0x08);
 19867  005640  8682               	bsf	3970,3,c	;volatile
 19868  005642  9682               	bcf	3970,3,c	;volatile
 19869                           
 19870                           ;sdmm.c: 196: r <<= 1; if ((PORTC & 0x10)) r++;
 19871  005644  90D8               	bcf	status,0,c
 19872  005646  3605               	rlcf	rcvr_mmc@r,f,c
 19873  005648  B882               	btfsc	3970,4,c	;volatile
 19874  00564A  2A05               	incf	rcvr_mmc@r,f,c
 19875                           
 19876                           ;sdmm.c: 197: (PORTC |= 0x08); (PORTC &= ~0x08);
 19877  00564C  8682               	bsf	3970,3,c	;volatile
 19878  00564E  9682               	bcf	3970,3,c	;volatile
 19879                           
 19880                           ;sdmm.c: 198: *buff++ = r;
 19881  005650  C001  FFD9         	movff	rcvr_mmc@buff,fsr2l
 19882  005654  C002  FFDA         	movff	rcvr_mmc@buff+1,fsr2h
 19883  005658  C005  FFDF         	movff	rcvr_mmc@r,indf2
 19884  00565C  4A01               	infsnz	rcvr_mmc@buff,f,c
 19885  00565E  2A02               	incf	rcvr_mmc@buff+1,f,c
 19886                           
 19887                           ;sdmm.c: 199: } while (--bc);
 19888  005660  0603               	decf	rcvr_mmc@bc,f,c
 19889  005662  A0D8               	btfss	status,0,c
 19890  005664  0604               	decf	rcvr_mmc@bc+1,f,c
 19891  005666  5004               	movf	(rcvr_mmc@bc+1)& (0+255),w,c
 19892  005668  1003               	iorwf	rcvr_mmc@bc& (0+255),w,c
 19893  00566A  B4D8               	btfsc	status,2,c
 19894  00566C  0012               	return	
 19895  00566E  D7C0               	goto	l6549
 19896  005670                     __end_of_rcvr_mmc:
 19897                           	opt stack 0
 19898                           tblptru	equ	0xFF8
 19899                           tblptrh	equ	0xFF7
 19900                           tblptrl	equ	0xFF6
 19901                           tablat	equ	0xFF5
 19902                           prodh	equ	0xFF4
 19903                           prodl	equ	0xFF3
 19904                           indf0	equ	0xFEF
 19905                           postinc0	equ	0xFEE
 19906                           postdec0	equ	0xFED
 19907                           fsr0h	equ	0xFEA
 19908                           fsr0l	equ	0xFE9
 19909                           wreg	equ	0xFE8
 19910                           indf1	equ	0xFE7
 19911                           postinc1	equ	0xFE6
 19912                           postdec1	equ	0xFE5
 19913                           fsr1h	equ	0xFE2
 19914                           fsr1l	equ	0xFE1
 19915                           indf2	equ	0xFDF
 19916                           postinc2	equ	0xFDE
 19917                           postdec2	equ	0xFDD
 19918                           plusw2	equ	0xFDB
 19919                           fsr2h	equ	0xFDA
 19920                           fsr2l	equ	0xFD9
 19921                           status	equ	0xFD8
 19922                           
 19923 ;; *************** function _dly_us *****************
 19924 ;; Defined at:
 19925 ;;		line 59 in file "sdmm.c"
 19926 ;; Parameters:    Size  Location     Type
 19927 ;;  n               2    0[COMRAM] unsigned int 
 19928 ;; Auto vars:     Size  Location     Type
 19929 ;;  tem             4    2[COMRAM] unsigned long 
 19930 ;; Return value:  Size  Location     Type
 19931 ;;		None               void
 19932 ;; Registers used:
 19933 ;;		wreg, status,2, status,0
 19934 ;; Tracked objects:
 19935 ;;		On entry : 0/0
 19936 ;;		On exit  : 0/0
 19937 ;;		Unchanged: 0/0
 19938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 19939 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19940 ;;      Locals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19941 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19942 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 19943 ;;Total ram usage:        6 bytes
 19944 ;; Hardware stack levels used:    1
 19945 ;; This function calls:
 19946 ;;		Nothing
 19947 ;; This function is called by:
 19948 ;;		_wait_ready
 19949 ;;		_rcvr_datablock
 19950 ;;		_disk_initialize
 19951 ;; This function uses a non-reentrant model
 19952 ;;
 19953                           
 19954                           	psect	text47
 19955  005142                     __ptext47:
 19956                           	opt stack 0
 19957  005142                     _dly_us:
 19958                           	opt stack 25
 19959  005142                     l88:
 19960                           
 19961                           ;sdmm.c: 63: tem++;
 19962  005142  0E01               	movlw	1
 19963  005144  2603               	addwf	dly_us@tem,f,c
 19964  005146  0E00               	movlw	0
 19965  005148  2204               	addwfc	dly_us@tem+1,f,c
 19966  00514A  2205               	addwfc	dly_us@tem+2,f,c
 19967  00514C  2206               	addwfc	dly_us@tem+3,f,c
 19968                           
 19969                           ;sdmm.c: 87: } while (--n);
 19970  00514E  0601               	decf	dly_us@n,f,c
 19971  005150  A0D8               	btfss	status,0,c
 19972  005152  0602               	decf	dly_us@n+1,f,c
 19973  005154  5002               	movf	(dly_us@n+1)& (0+255),w,c
 19974  005156  1001               	iorwf	dly_us@n& (0+255),w,c
 19975  005158  B4D8               	btfsc	status,2,c
 19976  00515A  0012               	return	
 19977  00515C  D7F2               	goto	l88
 19978  00515E                     __end_of_dly_us:
 19979                           	opt stack 0
 19980                           tblptru	equ	0xFF8
 19981                           tblptrh	equ	0xFF7
 19982                           tblptrl	equ	0xFF6
 19983                           tablat	equ	0xFF5
 19984                           prodh	equ	0xFF4
 19985                           prodl	equ	0xFF3
 19986                           indf0	equ	0xFEF
 19987                           postinc0	equ	0xFEE
 19988                           postdec0	equ	0xFED
 19989                           fsr0h	equ	0xFEA
 19990                           fsr0l	equ	0xFE9
 19991                           wreg	equ	0xFE8
 19992                           indf1	equ	0xFE7
 19993                           postinc1	equ	0xFE6
 19994                           postdec1	equ	0xFE5
 19995                           fsr1h	equ	0xFE2
 19996                           fsr1l	equ	0xFE1
 19997                           indf2	equ	0xFDF
 19998                           postinc2	equ	0xFDE
 19999                           postdec2	equ	0xFDD
 20000                           plusw2	equ	0xFDB
 20001                           fsr2h	equ	0xFDA
 20002                           fsr2l	equ	0xFD9
 20003                           status	equ	0xFD8
 20004                           
 20005 ;; *************** function _disk_status *****************
 20006 ;; Defined at:
 20007 ;;		line 377 in file "sdmm.c"
 20008 ;; Parameters:    Size  Location     Type
 20009 ;;  drv             1    wreg     unsigned char 
 20010 ;; Auto vars:     Size  Location     Type
 20011 ;;  drv             1    0[COMRAM] unsigned char 
 20012 ;; Return value:  Size  Location     Type
 20013 ;;                  1    wreg      unsigned char 
 20014 ;; Registers used:
 20015 ;;		wreg, status,2
 20016 ;; Tracked objects:
 20017 ;;		On entry : 0/0
 20018 ;;		On exit  : 0/0
 20019 ;;		Unchanged: 0/0
 20020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20021 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20022 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20023 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20024 ;;      Totals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20025 ;;Total ram usage:        1 bytes
 20026 ;; Hardware stack levels used:    1
 20027 ;; This function calls:
 20028 ;;		Nothing
 20029 ;; This function is called by:
 20030 ;;		_disk_read
 20031 ;;		_disk_write
 20032 ;;		_disk_ioctl
 20033 ;;		_find_volume
 20034 ;;		_validate
 20035 ;; This function uses a non-reentrant model
 20036 ;;
 20037                           
 20038                           	psect	text48
 20039  005102                     __ptext48:
 20040                           	opt stack 0
 20041  005102                     _disk_status:
 20042                           	opt stack 28
 20043                           
 20044                           ;incstack = 0
 20045                           ;disk_status@drv stored from wreg
 20046  005102  6E01               	movwf	disk_status@drv,c
 20047                           
 20048                           ;sdmm.c: 381: if (drv) return 0x01;
 20049  005104  5001               	movf	disk_status@drv,w,c
 20050  005106  B4D8               	btfsc	status,2,c
 20051  005108  D002               	goto	l6785
 20052  00510A  0E01               	movlw	1
 20053  00510C  D002               	goto	l174
 20054  00510E                     l6785:
 20055                           
 20056                           ;sdmm.c: 383: return Stat;
 20057  00510E  0100               	movlb	0	; () banked
 20058  005110  51FF               	movf	_Stat& (0+255),w,b
 20059  005112                     l174:
 20060  005112  0012               	return	
 20061  005114                     __end_of_disk_status:
 20062                           	opt stack 0
 20063                           tblptru	equ	0xFF8
 20064                           tblptrh	equ	0xFF7
 20065                           tblptrl	equ	0xFF6
 20066                           tablat	equ	0xFF5
 20067                           prodh	equ	0xFF4
 20068                           prodl	equ	0xFF3
 20069                           indf0	equ	0xFEF
 20070                           postinc0	equ	0xFEE
 20071                           postdec0	equ	0xFED
 20072                           fsr0h	equ	0xFEA
 20073                           fsr0l	equ	0xFE9
 20074                           wreg	equ	0xFE8
 20075                           indf1	equ	0xFE7
 20076                           postinc1	equ	0xFE6
 20077                           postdec1	equ	0xFE5
 20078                           fsr1h	equ	0xFE2
 20079                           fsr1l	equ	0xFE1
 20080                           indf2	equ	0xFDF
 20081                           postinc2	equ	0xFDE
 20082                           postdec2	equ	0xFDD
 20083                           plusw2	equ	0xFDB
 20084                           fsr2h	equ	0xFDA
 20085                           fsr2l	equ	0xFD9
 20086                           status	equ	0xFD8
 20087                           
 20088 ;; *************** function _delaymain *****************
 20089 ;; Defined at:
 20090 ;;		line 30 in file "main.c"
 20091 ;; Parameters:    Size  Location     Type
 20092 ;;  x               4    0[COMRAM] unsigned long 
 20093 ;; Auto vars:     Size  Location     Type
 20094 ;;		None
 20095 ;; Return value:  Size  Location     Type
 20096 ;;		None               void
 20097 ;; Registers used:
 20098 ;;		wreg, status,2, status,0
 20099 ;; Tracked objects:
 20100 ;;		On entry : 0/0
 20101 ;;		On exit  : 0/0
 20102 ;;		Unchanged: 0/0
 20103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20104 ;;      Params:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20105 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20106 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20107 ;;      Totals:         4       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20108 ;;Total ram usage:        4 bytes
 20109 ;; Hardware stack levels used:    1
 20110 ;; This function calls:
 20111 ;;		Nothing
 20112 ;; This function is called by:
 20113 ;;		_main
 20114 ;; This function uses a non-reentrant model
 20115 ;;
 20116                           
 20117                           	psect	text49
 20118  00517C                     __ptext49:
 20119                           	opt stack 0
 20120  00517C                     _delaymain:
 20121                           	opt stack 30
 20122  00517C                     l8589:
 20123  00517C  0601               	decf	delaymain@x,f,c
 20124  00517E  0E00               	movlw	0
 20125  005180  5A02               	subwfb	delaymain@x+1,f,c
 20126  005182  5A03               	subwfb	delaymain@x+2,f,c
 20127  005184  5A04               	subwfb	delaymain@x+3,f,c
 20128  005186  2801               	incf	delaymain@x& (0+255),w,c
 20129  005188  B4D8               	btfsc	status,2,c
 20130  00518A  2802               	incf	(delaymain@x+1)& (0+255),w,c
 20131  00518C  B4D8               	btfsc	status,2,c
 20132  00518E  2803               	incf	(delaymain@x+2)& (0+255),w,c
 20133  005190  B4D8               	btfsc	status,2,c
 20134  005192  2804               	incf	(delaymain@x+3)& (0+255),w,c
 20135  005194  B4D8               	btfsc	status,2,c
 20136  005196  0012               	return	
 20137  005198  D7F1               	goto	l8589
 20138  00519A                     __end_of_delaymain:
 20139                           	opt stack 0
 20140                           tblptru	equ	0xFF8
 20141                           tblptrh	equ	0xFF7
 20142                           tblptrl	equ	0xFF6
 20143                           tablat	equ	0xFF5
 20144                           prodh	equ	0xFF4
 20145                           prodl	equ	0xFF3
 20146                           indf0	equ	0xFEF
 20147                           postinc0	equ	0xFEE
 20148                           postdec0	equ	0xFED
 20149                           fsr0h	equ	0xFEA
 20150                           fsr0l	equ	0xFE9
 20151                           wreg	equ	0xFE8
 20152                           indf1	equ	0xFE7
 20153                           postinc1	equ	0xFE6
 20154                           postdec1	equ	0xFE5
 20155                           fsr1h	equ	0xFE2
 20156                           fsr1l	equ	0xFE1
 20157                           indf2	equ	0xFDF
 20158                           postinc2	equ	0xFDE
 20159                           postdec2	equ	0xFDD
 20160                           plusw2	equ	0xFDB
 20161                           fsr2h	equ	0xFDA
 20162                           fsr2l	equ	0xFD9
 20163                           status	equ	0xFD8
 20164                           
 20165 ;; *************** function _LCD_string *****************
 20166 ;; Defined at:
 20167 ;;		line 54 in file "LCD.c"
 20168 ;; Parameters:    Size  Location     Type
 20169 ;;  ptr             2    8[COMRAM] PTR unsigned char 
 20170 ;;		 -> STR_9(16), STR_8(16), STR_6(16), STR_4(16), 
 20171 ;;		 -> STR_2(17), STR_1(17), 
 20172 ;; Auto vars:     Size  Location     Type
 20173 ;;		None
 20174 ;; Return value:  Size  Location     Type
 20175 ;;		None               void
 20176 ;; Registers used:
 20177 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 20178 ;; Tracked objects:
 20179 ;;		On entry : 0/0
 20180 ;;		On exit  : 0/0
 20181 ;;		Unchanged: 0/0
 20182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20183 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20184 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20185 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20186 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20187 ;;Total ram usage:        2 bytes
 20188 ;; Hardware stack levels used:    1
 20189 ;; Hardware stack levels required when called:    3
 20190 ;; This function calls:
 20191 ;;		_LCD_func
 20192 ;; This function is called by:
 20193 ;;		_main
 20194 ;; This function uses a non-reentrant model
 20195 ;;
 20196                           
 20197                           	psect	text50
 20198  0051C6                     __ptext50:
 20199                           	opt stack 0
 20200  0051C6                     _LCD_string:
 20201                           	opt stack 27
 20202                           
 20203                           ;LCD.c: 55: while(*ptr != '\0'){
 20204                           
 20205                           ;incstack = 0
 20206  0051C6  D00D               	goto	l8585
 20207  0051C8                     l8581:
 20208                           
 20209                           ;LCD.c: 56: LCD_func(*ptr,1);
 20210  0051C8  0E01               	movlw	1
 20211  0051CA  6E03               	movwf	LCD_func@cmd,c
 20212  0051CC  C009  FFF6         	movff	LCD_string@ptr,tblptrl
 20213  0051D0  C00A  FFF7         	movff	LCD_string@ptr+1,tblptrh
 20214  0051D4                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20215  0051D4  6AF8               	clrf	tblptru,c
 20216  0051D6                     	endif
 20217  0051D6                     	if	0	;tblptru may be non-zero
 20218  0051D6                     	endif
 20219  0051D6  0008               	tblrd		*
 20220  0051D8  50F5               	movf	tablat,w,c
 20221  0051DA  ECA1  F029         	call	_LCD_func
 20222                           
 20223                           ;LCD.c: 57: ptr++;
 20224  0051DE  4A09               	infsnz	LCD_string@ptr,f,c
 20225  0051E0  2A0A               	incf	LCD_string@ptr+1,f,c
 20226  0051E2                     l8585:
 20227  0051E2  C009  FFF6         	movff	LCD_string@ptr,tblptrl
 20228  0051E6  C00A  FFF7         	movff	LCD_string@ptr+1,tblptrh
 20229  0051EA                     	if	1	;Program memory is < 0x10000, tblptru is always zero
 20230  0051EA  6AF8               	clrf	tblptru,c
 20231  0051EC                     	endif
 20232  0051EC                     	if	0	;tblptru may be non-zero
 20233  0051EC                     	endif
 20234  0051EC  0008               	tblrd		*
 20235  0051EE  50F5               	movf	tablat,w,c
 20236  0051F0  0900               	iorlw	0
 20237  0051F2  B4D8               	btfsc	status,2,c
 20238  0051F4  0012               	return	
 20239  0051F6  D7E8               	goto	l8581
 20240  0051F8                     __end_of_LCD_string:
 20241                           	opt stack 0
 20242                           tblptru	equ	0xFF8
 20243                           tblptrh	equ	0xFF7
 20244                           tblptrl	equ	0xFF6
 20245                           tablat	equ	0xFF5
 20246                           prodh	equ	0xFF4
 20247                           prodl	equ	0xFF3
 20248                           indf0	equ	0xFEF
 20249                           postinc0	equ	0xFEE
 20250                           postdec0	equ	0xFED
 20251                           fsr0h	equ	0xFEA
 20252                           fsr0l	equ	0xFE9
 20253                           wreg	equ	0xFE8
 20254                           indf1	equ	0xFE7
 20255                           postinc1	equ	0xFE6
 20256                           postdec1	equ	0xFE5
 20257                           fsr1h	equ	0xFE2
 20258                           fsr1l	equ	0xFE1
 20259                           indf2	equ	0xFDF
 20260                           postinc2	equ	0xFDE
 20261                           postdec2	equ	0xFDD
 20262                           plusw2	equ	0xFDB
 20263                           fsr2h	equ	0xFDA
 20264                           fsr2l	equ	0xFD9
 20265                           status	equ	0xFD8
 20266                           
 20267 ;; *************** function _LCD_init *****************
 20268 ;; Defined at:
 20269 ;;		line 22 in file "LCD.c"
 20270 ;; Parameters:    Size  Location     Type
 20271 ;;		None
 20272 ;; Auto vars:     Size  Location     Type
 20273 ;;		None
 20274 ;; Return value:  Size  Location     Type
 20275 ;;		None               void
 20276 ;; Registers used:
 20277 ;;		wreg, status,2, status,0, cstack
 20278 ;; Tracked objects:
 20279 ;;		On entry : 0/0
 20280 ;;		On exit  : 0/0
 20281 ;;		Unchanged: 0/0
 20282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20283 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20284 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20285 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20286 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20287 ;;Total ram usage:        0 bytes
 20288 ;; Hardware stack levels used:    1
 20289 ;; Hardware stack levels required when called:    3
 20290 ;; This function calls:
 20291 ;;		_LCD_func
 20292 ;; This function is called by:
 20293 ;;		_main
 20294 ;; This function uses a non-reentrant model
 20295 ;;
 20296                           
 20297                           	psect	text51
 20298  005268                     __ptext51:
 20299                           	opt stack 0
 20300  005268                     _LCD_init:
 20301                           	opt stack 27
 20302                           
 20303                           ;LCD.c: 23: LCD_func(0x01,0);
 20304                           
 20305                           ;incstack = 0
 20306  005268  0E00               	movlw	0
 20307  00526A  6E03               	movwf	LCD_func@cmd,c
 20308  00526C  0E01               	movlw	1
 20309  00526E  ECA1  F029         	call	_LCD_func
 20310                           
 20311                           ;LCD.c: 24: LCD_func(0x02,0);
 20312  005272  0E00               	movlw	0
 20313  005274  6E03               	movwf	LCD_func@cmd,c
 20314  005276  0E02               	movlw	2
 20315  005278  ECA1  F029         	call	_LCD_func
 20316                           
 20317                           ;LCD.c: 26: LCD_func(0x06,0);
 20318  00527C  0E00               	movlw	0
 20319  00527E  6E03               	movwf	LCD_func@cmd,c
 20320  005280  0E06               	movlw	6
 20321  005282  ECA1  F029         	call	_LCD_func
 20322                           
 20323                           ;LCD.c: 33: LCD_func(0x0c,0);
 20324  005286  0E00               	movlw	0
 20325  005288  6E03               	movwf	LCD_func@cmd,c
 20326  00528A  0E0C               	movlw	12
 20327  00528C  ECA1  F029         	call	_LCD_func
 20328                           
 20329                           ;LCD.c: 34: LCD_func(0x28,0);
 20330  005290  0E00               	movlw	0
 20331  005292  6E03               	movwf	LCD_func@cmd,c
 20332  005294  0E28               	movlw	40
 20333  005296  ECA1  F029         	call	_LCD_func
 20334                           
 20335                           ;LCD.c: 36: LCD_func(0x80,0);
 20336  00529A  0E00               	movlw	0
 20337  00529C  6E03               	movwf	LCD_func@cmd,c
 20338  00529E  0E80               	movlw	128
 20339  0052A0  ECA1  F029         	call	_LCD_func
 20340  0052A4  0012               	return	
 20341  0052A6                     __end_of_LCD_init:
 20342                           	opt stack 0
 20343                           tblptru	equ	0xFF8
 20344                           tblptrh	equ	0xFF7
 20345                           tblptrl	equ	0xFF6
 20346                           tablat	equ	0xFF5
 20347                           prodh	equ	0xFF4
 20348                           prodl	equ	0xFF3
 20349                           indf0	equ	0xFEF
 20350                           postinc0	equ	0xFEE
 20351                           postdec0	equ	0xFED
 20352                           fsr0h	equ	0xFEA
 20353                           fsr0l	equ	0xFE9
 20354                           wreg	equ	0xFE8
 20355                           indf1	equ	0xFE7
 20356                           postinc1	equ	0xFE6
 20357                           postdec1	equ	0xFE5
 20358                           fsr1h	equ	0xFE2
 20359                           fsr1l	equ	0xFE1
 20360                           indf2	equ	0xFDF
 20361                           postinc2	equ	0xFDE
 20362                           postdec2	equ	0xFDD
 20363                           plusw2	equ	0xFDB
 20364                           fsr2h	equ	0xFDA
 20365                           fsr2l	equ	0xFD9
 20366                           status	equ	0xFD8
 20367                           
 20368 ;; *************** function _LCD_cur *****************
 20369 ;; Defined at:
 20370 ;;		line 50 in file "LCD.c"
 20371 ;; Parameters:    Size  Location     Type
 20372 ;;  row             1    wreg     unsigned char 
 20373 ;;  col             1    8[COMRAM] unsigned char 
 20374 ;; Auto vars:     Size  Location     Type
 20375 ;;  row             1    9[COMRAM] unsigned char 
 20376 ;; Return value:  Size  Location     Type
 20377 ;;		None               void
 20378 ;; Registers used:
 20379 ;;		wreg, status,2, status,0, cstack
 20380 ;; Tracked objects:
 20381 ;;		On entry : 0/0
 20382 ;;		On exit  : 0/0
 20383 ;;		Unchanged: 0/0
 20384 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20385 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20386 ;;      Locals:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20387 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20388 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20389 ;;Total ram usage:        2 bytes
 20390 ;; Hardware stack levels used:    1
 20391 ;; Hardware stack levels required when called:    3
 20392 ;; This function calls:
 20393 ;;		_LCD_func
 20394 ;; This function is called by:
 20395 ;;		_main
 20396 ;; This function uses a non-reentrant model
 20397 ;;
 20398                           
 20399                           	psect	text52
 20400  005114                     __ptext52:
 20401                           	opt stack 0
 20402  005114                     _LCD_cur:
 20403                           	opt stack 27
 20404                           
 20405                           ;incstack = 0
 20406                           ;LCD_cur@row stored from wreg
 20407  005114  6E0A               	movwf	LCD_cur@row,c
 20408                           
 20409                           ;LCD.c: 51: LCD_func(((0x80 + 0x40 * (row - 1)) + (col - 1)),0);
 20410  005116  0E00               	movlw	0
 20411  005118  6E03               	movwf	LCD_func@cmd,c
 20412  00511A  400A               	rrncf	LCD_cur@row,w,c
 20413  00511C  42E8               	rrncf	wreg,f,c
 20414  00511E  0BC0               	andlw	192
 20415  005120  2409               	addwf	LCD_cur@col,w,c
 20416  005122  0F3F               	addlw	63
 20417  005124  ECA1  F029         	call	_LCD_func
 20418  005128  0012               	return	
 20419  00512A                     __end_of_LCD_cur:
 20420                           	opt stack 0
 20421                           tblptru	equ	0xFF8
 20422                           tblptrh	equ	0xFF7
 20423                           tblptrl	equ	0xFF6
 20424                           tablat	equ	0xFF5
 20425                           prodh	equ	0xFF4
 20426                           prodl	equ	0xFF3
 20427                           indf0	equ	0xFEF
 20428                           postinc0	equ	0xFEE
 20429                           postdec0	equ	0xFED
 20430                           fsr0h	equ	0xFEA
 20431                           fsr0l	equ	0xFE9
 20432                           wreg	equ	0xFE8
 20433                           indf1	equ	0xFE7
 20434                           postinc1	equ	0xFE6
 20435                           postdec1	equ	0xFE5
 20436                           fsr1h	equ	0xFE2
 20437                           fsr1l	equ	0xFE1
 20438                           indf2	equ	0xFDF
 20439                           postinc2	equ	0xFDE
 20440                           postdec2	equ	0xFDD
 20441                           plusw2	equ	0xFDB
 20442                           fsr2h	equ	0xFDA
 20443                           fsr2l	equ	0xFD9
 20444                           status	equ	0xFD8
 20445                           
 20446 ;; *************** function _LCD_func *****************
 20447 ;; Defined at:
 20448 ;;		line 40 in file "LCD.c"
 20449 ;; Parameters:    Size  Location     Type
 20450 ;;  data            1    wreg     unsigned char 
 20451 ;;  cmd             1    2[COMRAM] unsigned char 
 20452 ;; Auto vars:     Size  Location     Type
 20453 ;;  data            1    7[COMRAM] unsigned char 
 20454 ;; Return value:  Size  Location     Type
 20455 ;;		None               void
 20456 ;; Registers used:
 20457 ;;		wreg, status,2, status,0, cstack
 20458 ;; Tracked objects:
 20459 ;;		On entry : 0/0
 20460 ;;		On exit  : 0/0
 20461 ;;		Unchanged: 0/0
 20462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20463 ;;      Params:         1       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20464 ;;      Locals:         3       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20465 ;;      Temps:          2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20466 ;;      Totals:         6       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20467 ;;Total ram usage:        6 bytes
 20468 ;; Hardware stack levels used:    1
 20469 ;; Hardware stack levels required when called:    2
 20470 ;; This function calls:
 20471 ;;		_LCD_enable
 20472 ;; This function is called by:
 20473 ;;		_LCD_init
 20474 ;;		_LCD_cur
 20475 ;;		_LCD_string
 20476 ;;		_main
 20477 ;; This function uses a non-reentrant model
 20478 ;;
 20479                           
 20480                           	psect	text53
 20481  005342                     __ptext53:
 20482                           	opt stack 0
 20483  005342                     _LCD_func:
 20484                           	opt stack 27
 20485                           
 20486                           ;incstack = 0
 20487                           ;LCD_func@data stored from wreg
 20488  005342  6E08               	movwf	LCD_func@data,c
 20489                           
 20490                           ;LCD.c: 42: PORTD = cmd? PORTD|0x10:PORTD&~0x10;
 20491  005344  6603               	tstfsz	LCD_func@cmd,c
 20492  005346  D008               	goto	l8017
 20493  005348  CF83 F004          	movff	3971,??_LCD_func	;volatile
 20494  00534C  0EEF               	movlw	239
 20495  00534E  1604               	andwf	??_LCD_func,f,c
 20496  005350  5004               	movf	??_LCD_func,w,c
 20497  005352  6E06               	movwf	_LCD_func$36,c
 20498  005354  6A07               	clrf	_LCD_func$36+1,c
 20499  005356  D008               	goto	l8019
 20500  005358                     l8017:
 20501  005358  0E10               	movlw	16
 20502  00535A  CF83 F004          	movff	3971,??_LCD_func	;volatile
 20503  00535E  6A05               	clrf	(??_LCD_func+1)& (0+255),c
 20504  005360  1004               	iorwf	??_LCD_func,w,c
 20505  005362  6E06               	movwf	_LCD_func$36,c
 20506  005364  5005               	movf	??_LCD_func+1,w,c
 20507  005366  6E07               	movwf	_LCD_func$36+1,c
 20508  005368                     l8019:
 20509  005368  C006  FF83         	movff	_LCD_func$36,3971	;volatile
 20510                           
 20511                           ;LCD.c: 43: (PORTD = (PORTD&0xF0)|data>>4);
 20512  00536C  C008  F004         	movff	LCD_func@data,??_LCD_func
 20513  005370  3A04               	swapf	??_LCD_func,f,c
 20514  005372  0E0F               	movlw	15
 20515  005374  1604               	andwf	??_LCD_func,f,c
 20516  005376  5083               	movf	3971,w,c	;volatile
 20517  005378  0BF0               	andlw	240
 20518  00537A  1004               	iorwf	??_LCD_func,w,c
 20519  00537C  6E83               	movwf	3971,c	;volatile
 20520                           
 20521                           ;LCD.c: 44: LCD_enable();
 20522  00537E  ECAF  F028         	call	_LCD_enable	;wreg free
 20523                           
 20524                           ;LCD.c: 46: (PORTD = (PORTD&0xF0)|data&0x0F);
 20525  005382  C008  F004         	movff	LCD_func@data,??_LCD_func
 20526  005386  0E0F               	movlw	15
 20527  005388  1604               	andwf	??_LCD_func,f,c
 20528  00538A  5083               	movf	3971,w,c	;volatile
 20529  00538C  0BF0               	andlw	240
 20530  00538E  1004               	iorwf	??_LCD_func,w,c
 20531  005390  6E83               	movwf	3971,c	;volatile
 20532                           
 20533                           ;LCD.c: 47: LCD_enable();
 20534  005392  ECAF  F028         	call	_LCD_enable	;wreg free
 20535  005396  0012               	return	
 20536  005398                     __end_of_LCD_func:
 20537                           	opt stack 0
 20538                           tblptru	equ	0xFF8
 20539                           tblptrh	equ	0xFF7
 20540                           tblptrl	equ	0xFF6
 20541                           tablat	equ	0xFF5
 20542                           prodh	equ	0xFF4
 20543                           prodl	equ	0xFF3
 20544                           indf0	equ	0xFEF
 20545                           postinc0	equ	0xFEE
 20546                           postdec0	equ	0xFED
 20547                           fsr0h	equ	0xFEA
 20548                           fsr0l	equ	0xFE9
 20549                           wreg	equ	0xFE8
 20550                           indf1	equ	0xFE7
 20551                           postinc1	equ	0xFE6
 20552                           postdec1	equ	0xFE5
 20553                           fsr1h	equ	0xFE2
 20554                           fsr1l	equ	0xFE1
 20555                           indf2	equ	0xFDF
 20556                           postinc2	equ	0xFDE
 20557                           postdec2	equ	0xFDD
 20558                           plusw2	equ	0xFDB
 20559                           fsr2h	equ	0xFDA
 20560                           fsr2l	equ	0xFD9
 20561                           status	equ	0xFD8
 20562                           
 20563 ;; *************** function _LCD_enable *****************
 20564 ;; Defined at:
 20565 ;;		line 13 in file "LCD.c"
 20566 ;; Parameters:    Size  Location     Type
 20567 ;;		None
 20568 ;; Auto vars:     Size  Location     Type
 20569 ;;		None
 20570 ;; Return value:  Size  Location     Type
 20571 ;;		None               void
 20572 ;; Registers used:
 20573 ;;		wreg, status,2, status,0, cstack
 20574 ;; Tracked objects:
 20575 ;;		On entry : 0/0
 20576 ;;		On exit  : 0/0
 20577 ;;		Unchanged: 0/0
 20578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20579 ;;      Params:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20580 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20581 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20582 ;;      Totals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20583 ;;Total ram usage:        0 bytes
 20584 ;; Hardware stack levels used:    1
 20585 ;; Hardware stack levels required when called:    1
 20586 ;; This function calls:
 20587 ;;		_LCD_delay
 20588 ;; This function is called by:
 20589 ;;		_LCD_func
 20590 ;; This function uses a non-reentrant model
 20591 ;;
 20592                           
 20593                           	psect	text54
 20594  00515E                     __ptext54:
 20595                           	opt stack 0
 20596  00515E                     _LCD_enable:
 20597                           	opt stack 27
 20598                           
 20599                           ;LCD.c: 15: PORTD |= 0x20;
 20600                           
 20601                           ;incstack = 0
 20602  00515E  8A83               	bsf	3971,5,c	;volatile
 20603                           
 20604                           ;LCD.c: 16: LCD_delay(500);
 20605  005160  0E01               	movlw	1
 20606  005162  6E02               	movwf	LCD_delay@x+1,c
 20607  005164  0EF4               	movlw	244
 20608  005166  6E01               	movwf	LCD_delay@x,c
 20609  005168  EC78  F028         	call	_LCD_delay	;wreg free
 20610                           
 20611                           ;LCD.c: 18: PORTD &= ~0x20;
 20612  00516C  9A83               	bcf	3971,5,c	;volatile
 20613                           
 20614                           ;LCD.c: 19: LCD_delay(500);
 20615  00516E  0E01               	movlw	1
 20616  005170  6E02               	movwf	LCD_delay@x+1,c
 20617  005172  0EF4               	movlw	244
 20618  005174  6E01               	movwf	LCD_delay@x,c
 20619  005176  EC78  F028         	call	_LCD_delay	;wreg free
 20620  00517A  0012               	return	
 20621  00517C                     __end_of_LCD_enable:
 20622                           	opt stack 0
 20623                           tblptru	equ	0xFF8
 20624                           tblptrh	equ	0xFF7
 20625                           tblptrl	equ	0xFF6
 20626                           tablat	equ	0xFF5
 20627                           prodh	equ	0xFF4
 20628                           prodl	equ	0xFF3
 20629                           indf0	equ	0xFEF
 20630                           postinc0	equ	0xFEE
 20631                           postdec0	equ	0xFED
 20632                           fsr0h	equ	0xFEA
 20633                           fsr0l	equ	0xFE9
 20634                           wreg	equ	0xFE8
 20635                           indf1	equ	0xFE7
 20636                           postinc1	equ	0xFE6
 20637                           postdec1	equ	0xFE5
 20638                           fsr1h	equ	0xFE2
 20639                           fsr1l	equ	0xFE1
 20640                           indf2	equ	0xFDF
 20641                           postinc2	equ	0xFDE
 20642                           postdec2	equ	0xFDD
 20643                           plusw2	equ	0xFDB
 20644                           fsr2h	equ	0xFDA
 20645                           fsr2l	equ	0xFD9
 20646                           status	equ	0xFD8
 20647                           
 20648 ;; *************** function _LCD_delay *****************
 20649 ;; Defined at:
 20650 ;;		line 11 in file "LCD.c"
 20651 ;; Parameters:    Size  Location     Type
 20652 ;;  x               2    0[COMRAM] unsigned int 
 20653 ;; Auto vars:     Size  Location     Type
 20654 ;;		None
 20655 ;; Return value:  Size  Location     Type
 20656 ;;		None               void
 20657 ;; Registers used:
 20658 ;;		wreg, status,2, status,0
 20659 ;; Tracked objects:
 20660 ;;		On entry : 0/0
 20661 ;;		On exit  : 0/0
 20662 ;;		Unchanged: 0/0
 20663 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7   BANK8   BANK9  BANK10  BANK1
      +1  BANK12  BANK13  BANK14  BANK15
 20664 ;;      Params:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20665 ;;      Locals:         0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20666 ;;      Temps:          0       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20667 ;;      Totals:         2       0       0       0       0       0       0       0       0       0       0       0       
      +0       0       0       0       0
 20668 ;;Total ram usage:        2 bytes
 20669 ;; Hardware stack levels used:    1
 20670 ;; This function calls:
 20671 ;;		Nothing
 20672 ;; This function is called by:
 20673 ;;		_LCD_enable
 20674 ;; This function uses a non-reentrant model
 20675 ;;
 20676                           
 20677                           	psect	text55
 20678  0050F0                     __ptext55:
 20679                           	opt stack 0
 20680  0050F0                     _LCD_delay:
 20681                           	opt stack 27
 20682  0050F0                     l7165:
 20683  0050F0  0601               	decf	LCD_delay@x,f,c
 20684  0050F2  A0D8               	btfss	status,0,c
 20685  0050F4  0602               	decf	LCD_delay@x+1,f,c
 20686  0050F6  2801               	incf	LCD_delay@x& (0+255),w,c
 20687  0050F8  B4D8               	btfsc	status,2,c
 20688  0050FA  2802               	incf	(LCD_delay@x+1)& (0+255),w,c
 20689  0050FC  B4D8               	btfsc	status,2,c
 20690  0050FE  0012               	return	
 20691  005100  D7F7               	goto	l7165
 20692  005102                     __end_of_LCD_delay:
 20693                           	opt stack 0
 20694                           tblptru	equ	0xFF8
 20695                           tblptrh	equ	0xFF7
 20696                           tblptrl	equ	0xFF6
 20697                           tablat	equ	0xFF5
 20698                           prodh	equ	0xFF4
 20699                           prodl	equ	0xFF3
 20700                           indf0	equ	0xFEF
 20701                           postinc0	equ	0xFEE
 20702                           postdec0	equ	0xFED
 20703                           fsr0h	equ	0xFEA
 20704                           fsr0l	equ	0xFE9
 20705                           wreg	equ	0xFE8
 20706                           indf1	equ	0xFE7
 20707                           postinc1	equ	0xFE6
 20708                           postdec1	equ	0xFE5
 20709                           fsr1h	equ	0xFE2
 20710                           fsr1l	equ	0xFE1
 20711                           indf2	equ	0xFDF
 20712                           postinc2	equ	0xFDE
 20713                           postdec2	equ	0xFDD
 20714                           plusw2	equ	0xFDB
 20715                           fsr2h	equ	0xFDA
 20716                           fsr2l	equ	0xFD9
 20717                           status	equ	0xFD8
 20718                           tblptru	equ	0xFF8
 20719                           tblptrh	equ	0xFF7
 20720                           tblptrl	equ	0xFF6
 20721                           tablat	equ	0xFF5
 20722                           prodh	equ	0xFF4
 20723                           prodl	equ	0xFF3
 20724                           indf0	equ	0xFEF
 20725                           postinc0	equ	0xFEE
 20726                           postdec0	equ	0xFED
 20727                           fsr0h	equ	0xFEA
 20728                           fsr0l	equ	0xFE9
 20729                           wreg	equ	0xFE8
 20730                           indf1	equ	0xFE7
 20731                           postinc1	equ	0xFE6
 20732                           postdec1	equ	0xFE5
 20733                           fsr1h	equ	0xFE2
 20734                           fsr1l	equ	0xFE1
 20735                           indf2	equ	0xFDF
 20736                           postinc2	equ	0xFDE
 20737                           postdec2	equ	0xFDD
 20738                           plusw2	equ	0xFDB
 20739                           fsr2h	equ	0xFDA
 20740                           fsr2l	equ	0xFD9
 20741                           status	equ	0xFD8
 20742                           
 20743                           	psect	rparam
 20744  0000                     tblptru	equ	0xFF8
 20745                           tblptrh	equ	0xFF7
 20746                           tblptrl	equ	0xFF6
 20747                           tablat	equ	0xFF5
 20748                           prodh	equ	0xFF4
 20749                           prodl	equ	0xFF3
 20750                           indf0	equ	0xFEF
 20751                           postinc0	equ	0xFEE
 20752                           postdec0	equ	0xFED
 20753                           fsr0h	equ	0xFEA
 20754                           fsr0l	equ	0xFE9
 20755                           wreg	equ	0xFE8
 20756                           indf1	equ	0xFE7
 20757                           postinc1	equ	0xFE6
 20758                           postdec1	equ	0xFE5
 20759                           fsr1h	equ	0xFE2
 20760                           fsr1l	equ	0xFE1
 20761                           indf2	equ	0xFDF
 20762                           postinc2	equ	0xFDE
 20763                           postdec2	equ	0xFDD
 20764                           plusw2	equ	0xFDB
 20765                           fsr2h	equ	0xFDA
 20766                           fsr2l	equ	0xFD9
 20767                           status	equ	0xFD8


Data Sizes:
    Strings     239
    Constant    60
    Data        17
    BSS         1151
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM          127    127     127
    BANK0           128    120     128
    BANK1           256     72     158
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0
    BANK8           256      0       0
    BANK9           256      0       0
    BANK10          256      0       0
    BANK11          256      0       0
    BANK12          256      0       0
    BANK13          256      0       0
    BANK14          256      0       0
    BANK15          128      0       0

Pointer List with Targets:

    func$0	PTR const unsigned char  size(3) Largest target is 49151
		 -> NULL(NULL[0]), ROM(CODE[49151]), FatFs(BIGRAM[562]), 

    tfs	PTR struct . size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    pb.fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    pb.fp	PTR struct . size(2) Largest target is 0

    pb.fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    pb.fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    pb.fp	PTR struct . size(2) Largest target is 0

    pb.fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    pb.fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    pb.fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    pb.fp	PTR struct . size(2) Largest target is 0

    S362$fp	PTR struct . size(2) Largest target is 0

    putc_bfd@pb.fp	PTR struct . size(2) Largest target is 0

    sp__f_gets	PTR unsigned char  size(2) Largest target is 562
		 -> f_printf@pb(COMRAM[71]), f_puts@pb(COMRAM[71]), f_putc@pb(COMRAM[71]), f_rename@djo(COMRAM[25]), 
		 -> f_unlink@dj(COMRAM[25]), f_getcwd@fno(COMRAM[22]), NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_forward@fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_forward@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_forward@fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.pat	PTR const unsigned char  size(2) Largest target is 0

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.pat	PTR const unsigned char  size(2) Largest target is 0

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.pat	PTR const unsigned char  size(2) Largest target is 0

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    djn.pat	PTR const unsigned char  size(2) Largest target is 0

    djn.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    djn.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    djn.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    djo.pat	PTR const unsigned char  size(2) Largest target is 0

    djo.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    djo.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    djo.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.pat	PTR const unsigned char  size(2) Largest target is 0

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.pat	PTR const unsigned char  size(2) Largest target is 0

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    sdj.pat	PTR const unsigned char  size(2) Largest target is 0

    sdj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    sdj.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    sdj.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.pat	PTR const unsigned char  size(2) Largest target is 0

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_truncate@fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_truncate@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_truncate@fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.pat	PTR const unsigned char  size(2) Largest target is 0

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_findfirst@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    f_findfirst@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    f_findfirst@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_findfirst@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_findnext@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    f_findnext@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    f_findnext@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_findnext@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_readdir@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    f_readdir@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    f_readdir@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_readdir@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_closedir@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    f_closedir@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    f_closedir@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_closedir@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_opendir@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    f_opendir@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    f_opendir@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_opendir@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_lseek@fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_lseek@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_lseek@fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.pat	PTR const unsigned char  size(2) Largest target is 0

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.pat	PTR const unsigned char  size(2) Largest target is 0

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_close@fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_close@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_close@fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_close@fp	PTR struct . size(2) Largest target is 37
		 -> fp(BANK1[34]), 

    f_sync@dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_sync@fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_sync@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_sync@fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_sync@fp	PTR struct . size(2) Largest target is 37
		 -> fp(BANK1[34]), 

    f_write@fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_write@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_write@fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_write@fp	PTR struct . size(2) Largest target is 37
		 -> fp(BANK1[34]), 

    f_write@bw	PTR unsigned int  size(2) Largest target is 2
		 -> f_printf@nw(COMRAM[2]), f_puts@nw(COMRAM[2]), f_putc@nw(COMRAM[2]), putc_bfd@bw(COMRAM[2]), 
		 -> main@ret(BANK1[2]), 

    f_write@buff	PTR const void  size(2) Largest target is 71
		 -> pb.buf(COMRAM[64]), f_printf@pb(COMRAM[71]), pb.buf(COMRAM[64]), f_puts@pb(COMRAM[71]), 
		 -> pb.buf(COMRAM[64]), f_putc@pb(COMRAM[71]), STR_7(CODE[14]), 

    f_write@wbuff	PTR const unsigned char  size(2) Largest target is 71
		 -> pb.buf(COMRAM[64]), f_printf@pb(COMRAM[71]), pb.buf(COMRAM[64]), f_puts@pb(COMRAM[71]), 
		 -> pb.buf(COMRAM[64]), f_putc@pb(COMRAM[71]), STR_7(CODE[14]), 

    f_read@fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_read@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_read@fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_open@dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_open@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), STR_3(CODE[1]), 

    f_open@fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    f_open@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_open@fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_open@fp	PTR struct . size(2) Largest target is 37
		 -> fp(BANK1[34]), 

    dj.pat	PTR const unsigned char  size(2) Largest target is 0

    dj.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dj.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dj.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_mount@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    Trp	PTR unsigned char  size(2) Largest target is 9
		 -> NULL(NULL[0]), STR_5(CODE[9]), STR_3(CODE[1]), 

    Tres	PTR enum E67 size(2) Largest target is 1
		 -> f_mount@res(COMRAM[1]), NULL(NULL[0]), 

    Tvol	PTR int  size(2) Largest target is 2
		 -> f_mount@vol(COMRAM[2]), NULL(NULL[0]), 

    f_mount@cfs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    Tfs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    f_mount@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), STR_3(CODE[1]), 

    f_mount@rp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), STR_3(CODE[1]), 

    validate@fil.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    validate@fil.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    validate@fil.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    validate@obj	PTR void  size(2) Largest target is 37
		 -> fp(BANK1[34]), 

    validate@fil	PTR struct . size(2) Largest target is 37
		 -> fp(BANK1[34]), 

    find_volume@pt	PTR unsigned char  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), FatFs(BIGRAM[562]), 

    ff@FatFs	PTR struct .[5] size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    find_volume@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    find_volume@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_setlabel@label(COMRAM[2]), f_getlabel@path(COMRAM[2]), f_utime@path(COMRAM[2]), f_rename@path_old(COMRAM[2]), 
		 -> f_chmod@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), f_unlink@path(COMRAM[2]), f_getfree@path(COMRAM[2]), 
		 -> f_stat@path(COMRAM[2]), f_opendir@path(COMRAM[2]), f_getcwd@buff(COMRAM[2]), f_chdir@path(COMRAM[2]), 
		 -> f_open@path(BANK0[2]), f_mount@path(COMRAM[2]), 

    find_volume@rfs	PTR PTR struct . size(2) Largest target is 28
		 -> f_setlabel@dj(COMRAM[25]), f_getlabel@dj(COMRAM[25]), f_utime@dj(COMRAM[25]), f_rename@djo(COMRAM[25]), 
		 -> f_chmod@dj(COMRAM[25]), f_mkdir@dj(COMRAM[25]), f_unlink@dj(COMRAM[25]), f_stat@dj(COMRAM[25]), 
		 -> f_opendir@fs(COMRAM[2]), f_getcwd@dj(COMRAM[25]), f_chdir@dj(COMRAM[25]), f_open@dj(BANK1[25]), 
		 -> f_mount@fs(COMRAM[2]), 

    check_fs@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    get_ldnumber@sp	PTR const unsigned char  size(2) Largest target is 5
		 -> STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[4]), 

    get_ldnumber@tp	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), STR_3(CODE[1]), 

    get_ldnumber@tt	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), STR_3(CODE[1]), 

    get_ldnumber@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> f_mkfs@path(COMRAM[2]), f_setlabel@label(COMRAM[2]), f_getlabel@path(COMRAM[2]), f_utime@path(COMRAM[2]), 
		 -> f_rename@path_new(COMRAM[2]), f_rename@path_old(COMRAM[2]), f_chmod@path(COMRAM[2]), f_mkdir@path(COMRAM[2]), 
		 -> f_unlink@path(COMRAM[2]), f_getfree@path(COMRAM[2]), f_stat@path(COMRAM[2]), f_opendir@path(COMRAM[2]), 
		 -> f_getcwd@buff(COMRAM[2]), f_chdir@path(COMRAM[2]), f_chdrive@path(COMRAM[2]), f_open@path(BANK0[2]), 
		 -> f_mount@path(COMRAM[2]), f_mount@rp(COMRAM[2]), 

    get_ldnumber@str	const PTR const unsigned char [8] size(2) Largest target is 5
		 -> STR_18(CODE[5]), STR_17(CODE[5]), STR_16(CODE[5]), STR_15(CODE[4]), 
		 -> STR_14(CODE[4]), STR_13(CODE[3]), STR_12(CODE[5]), STR_11(CODE[4]), 

    follow_path@dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    follow_path@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    follow_path@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    follow_path@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    follow_path@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    follow_path@dp	PTR struct . size(2) Largest target is 28
		 -> f_utime@dj(COMRAM[25]), f_rename@djn(COMRAM[25]), f_rename@djo(COMRAM[25]), f_chmod@dj(COMRAM[25]), 
		 -> f_mkdir@dj(COMRAM[25]), f_unlink@dj(COMRAM[25]), f_stat@dj(COMRAM[25]), f_chdir@dj(COMRAM[25]), 
		 -> f_open@dj(BANK1[25]), 

    follow_path@path	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), STR_3(CODE[1]), 

    create_name@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    create_name@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    create_name@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    create_name@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    create_name@dp	PTR struct . size(2) Largest target is 28
		 -> f_utime@dj(COMRAM[25]), f_rename@djn(COMRAM[25]), f_rename@djo(COMRAM[25]), f_chmod@dj(COMRAM[25]), 
		 -> f_mkdir@dj(COMRAM[25]), f_unlink@dj(COMRAM[25]), f_stat@dj(COMRAM[25]), f_chdir@dj(COMRAM[25]), 
		 -> f_open@dj(BANK1[25]), 

    create_name@sfn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    create_name@path	PTR PTR const unsigned char  size(2) Largest target is 2
		 -> follow_path@path(BANK0[2]), 

    create_name@p	PTR const unsigned char  size(2) Largest target is 9
		 -> STR_5(CODE[9]), STR_3(CODE[1]), 

    get_fileinfo@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    get_fileinfo@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    get_fileinfo@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    get_fileinfo@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_remove@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    dir_remove@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dir_remove@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_remove@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_register@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    dir_register@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dir_register@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_register@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_register@dp	PTR struct . size(2) Largest target is 28
		 -> f_rename@djn(COMRAM[25]), f_mkdir@dj(COMRAM[25]), f_open@dj(BANK1[25]), 

    dir_read@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    dir_read@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dir_read@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_read@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_find@dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_find@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    dir_find@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dir_find@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_find@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_find@dp	PTR struct . size(2) Largest target is 28
		 -> f_utime@dj(COMRAM[25]), f_rename@djn(COMRAM[25]), f_rename@djo(COMRAM[25]), f_chmod@dj(COMRAM[25]), 
		 -> f_mkdir@dj(COMRAM[25]), f_unlink@dj(COMRAM[25]), f_stat@dj(COMRAM[25]), f_chdir@dj(COMRAM[25]), 
		 -> f_open@dj(BANK1[25]), 

    st_clust@dir	PTR unsigned char  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), FatFs(BIGRAM[562]), 

    ld_clust@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    ld_clust@dir	PTR const unsigned char  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_alloc@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    dir_alloc@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dir_alloc@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_alloc@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_alloc@dp	PTR struct . size(2) Largest target is 28
		 -> f_setlabel@dj(COMRAM[25]), f_rename@djn(COMRAM[25]), f_mkdir@dj(COMRAM[25]), f_open@dj(BANK1[25]), 

    dir_next@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    dir_next@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dir_next@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_next@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_next@dp	PTR struct . size(2) Largest target is 28
		 -> f_setlabel@dj(COMRAM[25]), f_getlabel@dj(COMRAM[25]), f_utime@dj(COMRAM[25]), f_rename@djn(COMRAM[25]), 
		 -> f_rename@djo(COMRAM[25]), f_chmod@dj(COMRAM[25]), f_mkdir@dj(COMRAM[25]), f_unlink@sdj(COMRAM[25]), 
		 -> f_unlink@dj(COMRAM[25]), f_stat@dj(COMRAM[25]), f_getcwd@dj(COMRAM[25]), f_chdir@dj(COMRAM[25]), 
		 -> f_open@dj(BANK1[25]), 

    S343$pat	PTR const unsigned char  size(2) Largest target is 0

    dir_sdi@dp.pat	PTR const unsigned char  size(2) Largest target is 0

    S343$fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    dir_sdi@dp.fn	PTR unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    S343$dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_sdi@dp.dir	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    S343$fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_sdi@dp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    dir_sdi@dp	PTR struct . size(2) Largest target is 28
		 -> f_setlabel@dj(COMRAM[25]), f_getlabel@dj(COMRAM[25]), f_utime@dj(COMRAM[25]), f_rename@djn(COMRAM[25]), 
		 -> f_rename@djo(COMRAM[25]), f_chmod@dj(COMRAM[25]), f_mkdir@dj(COMRAM[25]), f_unlink@sdj(COMRAM[25]), 
		 -> f_unlink@dj(COMRAM[25]), f_stat@dj(COMRAM[25]), f_getcwd@dj(COMRAM[25]), f_chdir@dj(COMRAM[25]), 
		 -> f_open@dj(BANK1[25]), 

    clmt_clust@fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    clmt_clust@fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    clmt_clust@fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    clmt_clust@fp	PTR struct . size(2) Largest target is 37
		 -> fp(BANK1[34]), 

    clmt_clust@tbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    create_chain@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    remove_chain@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    put_fat@p	PTR unsigned char  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), FatFs(BIGRAM[562]), 

    put_fat@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    get_fat@p	PTR unsigned char  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), NULL(NULL[0]), FatFs(BIGRAM[562]), 

    get_fat@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    clust2sect@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    sync_fs@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    move_window@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    sync_window@fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    chk_chr@str	PTR const unsigned char  size(2) Largest target is 16
		 -> STR_19(CODE[16]), STR_10(CODE[15]), 

    mem_cmp@src	PTR const void  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    mem_cmp@s	PTR const unsigned char  size(2) Largest target is 12
		 -> f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), f_mkdir@sfn(COMRAM[12]), 
		 -> f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), 
		 -> f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 

    mem_cmp@dst	PTR const void  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    mem_cmp@d	PTR const unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    mem_set@dst	PTR void  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), 
		 -> f_mkdir@sfn(COMRAM[12]), f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), 
		 -> f_opendir@sfn(COMRAM[12]), f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    mem_set@d	PTR unsigned char  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), f_utime@sfn(COMRAM[12]), f_rename@sfn(COMRAM[12]), f_chmod@sfn(COMRAM[12]), 
		 -> f_mkdir@sfn(COMRAM[12]), f_unlink@sfn(COMRAM[12]), f_stat@sfn(COMRAM[12]), f_readdir@sfn(COMRAM[12]), 
		 -> f_opendir@sfn(COMRAM[12]), f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), f_open@sfn(BANK1[12]), 
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    mem_cpy@src	PTR const void  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), pb.buf(COMRAM[64]), f_printf@pb(COMRAM[71]), pb.buf(COMRAM[64]), 
		 -> f_puts@pb(COMRAM[71]), pb.buf(COMRAM[64]), f_putc@pb(COMRAM[71]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[12]), f_setlabel@vn(COMRAM[11]), f_utime@sfn(COMRAM[12]), 
		 -> f_rename@buf(COMRAM[21]), f_rename@sfn(COMRAM[12]), f_rename@djo(COMRAM[25]), f_chmod@sfn(COMRAM[12]), 
		 -> f_mkdir@sfn(COMRAM[12]), f_unlink@sfn(COMRAM[12]), f_unlink@dj(COMRAM[25]), f_stat@sfn(COMRAM[12]), 
		 -> f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), 
		 -> f_open@sfn(BANK1[12]), NULL(NULL[0]), STR_7(CODE[14]), FatFs(BIGRAM[562]), 

    mem_cpy@s	PTR const unsigned char  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), pb.buf(COMRAM[64]), f_printf@pb(COMRAM[71]), pb.buf(COMRAM[64]), 
		 -> f_puts@pb(COMRAM[71]), pb.buf(COMRAM[64]), f_putc@pb(COMRAM[71]), STR_22(CODE[20]), 
		 -> STR_21(CODE[20]), STR_20(CODE[12]), f_setlabel@vn(COMRAM[11]), f_utime@sfn(COMRAM[12]), 
		 -> f_rename@buf(COMRAM[21]), f_rename@sfn(COMRAM[12]), f_rename@djo(COMRAM[25]), f_chmod@sfn(COMRAM[12]), 
		 -> f_mkdir@sfn(COMRAM[12]), f_unlink@sfn(COMRAM[12]), f_unlink@dj(COMRAM[25]), f_stat@sfn(COMRAM[12]), 
		 -> f_readdir@sfn(COMRAM[12]), f_opendir@sfn(COMRAM[12]), f_getcwd@sfn(COMRAM[12]), f_chdir@sfn(COMRAM[12]), 
		 -> f_open@sfn(BANK1[12]), NULL(NULL[0]), STR_7(CODE[14]), FatFs(BIGRAM[562]), 

    mem_cpy@dst	PTR void  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), f_gets@s(COMRAM[2]), f_rename@buf(COMRAM[21]), f_rename@djn(COMRAM[25]), 
		 -> f_unlink@sdj(COMRAM[25]), NULL(NULL[0]), FatFs(BIGRAM[562]), 

    mem_cpy@d	PTR unsigned char  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), f_gets@s(COMRAM[2]), f_rename@buf(COMRAM[21]), f_rename@djn(COMRAM[25]), 
		 -> f_unlink@sdj(COMRAM[25]), NULL(NULL[0]), FatFs(BIGRAM[562]), 

    disk_ioctl@buff	PTR void  size(2) Largest target is 8
		 -> f_mkfs@eb(COMRAM[8]), f_mkfs@n(COMRAM[4]), f_mkfs@n_vol(COMRAM[4]), remove_chain@rt(BANK0[8]), 
		 -> NULL(NULL[0]), 

    disk_write@buff	PTR const unsigned char  size(2) Largest target is 562
		 -> FatFs.win(BIGRAM[512]), pb.buf(COMRAM[64]), f_printf@pb(COMRAM[71]), pb.buf(COMRAM[64]), 
		 -> f_puts@pb(COMRAM[71]), pb.buf(COMRAM[64]), f_putc@pb(COMRAM[71]), NULL(NULL[0]), 
		 -> STR_7(CODE[14]), FatFs(BIGRAM[562]), 

    disk_read@buff	PTR unsigned char  size(2) Largest target is 562
		 -> f_gets@s(COMRAM[2]), NULL(NULL[0]), FatFs(BIGRAM[562]), 

    xmit_datablock@buff	PTR const unsigned char  size(3) Largest target is 49151
		 -> FatFs.win(BIGRAM[512]), pb.buf(COMRAM[64]), f_printf@pb(COMRAM[71]), pb.buf(COMRAM[64]), 
		 -> f_puts@pb(COMRAM[71]), pb.buf(COMRAM[64]), f_putc@pb(COMRAM[71]), NULL(NULL[0]), 
		 -> ROM(CODE[49151]), STR_7(CODE[14]), FatFs(BIGRAM[562]), 

    rcvr_datablock@buff	PTR unsigned char  size(2) Largest target is 562
		 -> f_gets@s(COMRAM[2]), NULL(NULL[0]), disk_ioctl@csd(COMRAM[16]), FatFs(BIGRAM[562]), 

    rcvr_mmc@buff	PTR unsigned char  size(2) Largest target is 562
		 -> f_gets@s(COMRAM[2]), NULL(NULL[0]), disk_ioctl@csd(COMRAM[16]), disk_initialize@buf(COMRAM[4]), 
		 -> send_cmd@d(COMRAM[1]), xmit_datablock@d(COMRAM[2]), rcvr_datablock@d(COMRAM[2]), select@d(COMRAM[1]), 
		 -> deselect@d(COMRAM[1]), wait_ready@d(COMRAM[1]), FatFs(BIGRAM[562]), 

    xmit_mmc@buff	PTR const unsigned char  size(3) Largest target is 49151
		 -> FatFs.win(BIGRAM[512]), pb.buf(COMRAM[64]), f_printf@pb(COMRAM[71]), pb.buf(COMRAM[64]), 
		 -> f_puts@pb(COMRAM[71]), pb.buf(COMRAM[64]), f_putc@pb(COMRAM[71]), NULL(NULL[0]), 
		 -> ROM(CODE[49151]), send_cmd@buf(COMRAM[6]), xmit_datablock@d(COMRAM[2]), STR_7(CODE[14]), 
		 -> FatFs(BIGRAM[562]), 

    S63$cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    fp.cltbl	PTR unsigned long  size(2) Largest target is 0
		 -> NULL(NULL[0]), 

    S63$dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    fp.dir_ptr	PTR unsigned char  size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    S63$fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    fp.fs	PTR struct . size(2) Largest target is 562
		 -> NULL(NULL[0]), FatFs(BIGRAM[562]), 

    LCD_string@ptr	PTR unsigned char  size(2) Largest target is 17
		 -> STR_9(CODE[16]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[16]), 
		 -> STR_2(CODE[17]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _f_write->_create_chain
    _clmt_clust->___lldiv
    _f_open->_dir_register
    _remove_chain->_put_fat
    _follow_path->_dir_find
    _dir_find->_dir_sdi
    _create_name->_mem_set
    _dir_register->_dir_alloc
    _dir_alloc->_dir_sdi
    _dir_sdi->_get_fat
    _dir_next->_create_chain
    _create_chain->_put_fat
    _put_fat->_move_window
    _get_fat->_move_window
    _clust2sect->___lmul
    _f_mount->_find_volume
    _find_volume->_check_fs
    _disk_initialize->_send_cmd
    _check_fs->_move_window
    _f_close->_f_sync
    _f_sync->_sync_fs
    _validate->_disk_status
    _sync_fs->_disk_ioctl
    _disk_ioctl->_send_cmd
    _move_window->_sync_window
    _sync_window->_disk_write
    _disk_write->_send_cmd
    _xmit_datablock->_wait_ready
    _disk_read->_send_cmd
    _send_cmd->_select
    _select->_wait_ready
    _wait_ready->_dly_us
    _deselect->_rcvr_mmc
    _rcvr_datablock->_dly_us
    _LCD_string->_LCD_func
    _LCD_init->_LCD_func
    _LCD_cur->_LCD_func
    _LCD_enable->_LCD_delay

Critical Paths under _main in BANK0

    _main->_f_open
    _f_write->_create_chain
    _f_open->_find_volume
    _follow_path->_dir_find
    _dir_find->_dir_next
    _dir_register->_dir_alloc
    _dir_alloc->_dir_next
    _dir_next->_create_chain
    _f_mount->_find_volume

Critical Paths under _main in BANK1

    _main->_f_open

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _main in BANK8

    None.

Critical Paths under _main in BANK9

    None.

Critical Paths under _main in BANK10

    None.

Critical Paths under _main in BANK11

    None.

Critical Paths under _main in BANK12

    None.

Critical Paths under _main in BANK13

    None.

Critical Paths under _main in BANK14

    None.

Critical Paths under _main in BANK15

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                32    27      5 1485463
                                            115 BANK0      5     0      5
                                             48 BANK1     24    24      0
                            _LCD_cur
                           _LCD_func
                           _LCD_init
                         _LCD_string
                          _delaymain
                            _f_close
                            _f_mount
                             _f_open
                            _f_write
                               _init
 ---------------------------------------------------------------------------------
 (1) _init                                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _f_write                                             40    32      8  213054
                                             17 BANK0     40    32      8
                         _clmt_clust
                         _clust2sect
                       _create_chain
                         _disk_write
                            _mem_cpy
                        _move_window
                        _sync_window
                           _validate
 ---------------------------------------------------------------------------------
 (2) _clmt_clust                                          21    15      6    2164
                                             13 COMRAM    21    15      6
                            ___lldiv
 ---------------------------------------------------------------------------------
 (1) _f_open                                              79    74      5 1007440
                                             84 BANK0     31    26      5
                                              0 BANK1     48    48      0
                       _dir_register
                        _find_volume
                        _follow_path
                           _ld_clust
                        _move_window
                       _remove_chain
                           _st_clust
 ---------------------------------------------------------------------------------
 (2) _remove_chain                                        36    30      6  131010
                                            118 COMRAM     6     0      6
                                              0 BANK0     30    30      0
                         _clust2sect
                         _disk_ioctl
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (2) _follow_path                                         12     8      4  354230
                                             40 BANK0     12     8      4
                        _create_name
                           _dir_find
                            _dir_sdi
                           _ld_clust
 ---------------------------------------------------------------------------------
 (2) _ld_clust                                            20    16      4    1502
                                              0 COMRAM    20    16      4
 ---------------------------------------------------------------------------------
 (3) _dir_find                                             7     5      2  289872
                                            124 COMRAM     3     1      2
                                             36 BANK0      4     4      0
                           _dir_next
                            _dir_sdi
                            _mem_cmp
                        _move_window
 ---------------------------------------------------------------------------------
 (4) _mem_cmp                                             15     9      6     364
                                              0 COMRAM    15     9      6
 ---------------------------------------------------------------------------------
 (3) _create_name                                         25    21      4    5237
                                              8 COMRAM    25    21      4
                            _chk_chr
                            _mem_set
 ---------------------------------------------------------------------------------
 (4) _chk_chr                                              6     2      4     393
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (2) _dir_register                                         3     1      2  344908
                                            126 COMRAM     1     1      0
                                             43 BANK0      2     0      2
                          _dir_alloc
                            _mem_cpy
                            _mem_set
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _mem_cpy                                             10     4      6    3762
                                              0 COMRAM    10     4      6
 ---------------------------------------------------------------------------------
 (3) _dir_alloc                                            9     5      4  289692
                                            124 COMRAM     2     2      0
                                             36 BANK0      7     3      4
                           _dir_next
                            _dir_sdi
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _dir_sdi                                             21    17      4   55491
                                            113 COMRAM    11     7      4
                                              0 BANK0     10    10      0
                         _clust2sect
                            _get_fat
 ---------------------------------------------------------------------------------
 (4) _dir_next                                            19    15      4  185655
                                             17 BANK0     19    15      4
                         _clust2sect
                       _create_chain
                            _get_fat
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (2) _create_chain                                        23    17      6  102565
                                            118 COMRAM     6     0      6
                                              0 BANK0     17    17      0
                            _get_fat
                            _put_fat
 ---------------------------------------------------------------------------------
 (3) _put_fat                                             49    39     10   50266
                                             69 COMRAM    49    39     10
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _get_fat                                             44    38      6   50451
                                             69 COMRAM    44    38      6
                        _move_window
 ---------------------------------------------------------------------------------
 (2) _clust2sect                                          15     9      6    2613
                                             12 COMRAM    15     9      6
                             ___lmul
 ---------------------------------------------------------------------------------
 (1) _f_mount                                             14     9      5  126310
                                            110 COMRAM    14     9      5
                        _find_volume
                       _get_ldnumber
 ---------------------------------------------------------------------------------
 (2) _find_volume                                         89    84      5  124492
                                            105 COMRAM     5     0      5
                                              0 BANK0     84    84      0
                            ___lldiv
                             ___lmul
                           _check_fs
                    _disk_initialize
                        _disk_status
                       _get_ldnumber
                        _move_window
 ---------------------------------------------------------------------------------
 (3) _get_ldnumber                                        18    16      2    1148
                                              0 COMRAM    18    16      2
 ---------------------------------------------------------------------------------
 (3) _disk_initialize                                     14    14      0   18036
                                             27 COMRAM    14    14      0
                           _deselect
                             _dly_us
                           _rcvr_mmc
                           _send_cmd
 ---------------------------------------------------------------------------------
 (3) _check_fs                                            36    30      6   48562
                                             69 COMRAM    36    30      6
                        _move_window
 ---------------------------------------------------------------------------------
 (3) ___lmul                                              12     4      8     678
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (3) ___lldiv                                             13     5      8    1482
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (1) _f_close                                              3     1      2  131962
                                             90 COMRAM     3     1      2
                             _f_sync
                           _validate
 ---------------------------------------------------------------------------------
 (2) _f_sync                                              13    11      2  130891
                                             77 COMRAM    13    11      2
                        _move_window
                           _st_clust
                            _sync_fs
                           _validate
 ---------------------------------------------------------------------------------
 (2) _validate                                             6     4      2     861
                                              1 COMRAM     6     4      2
                        _disk_status
 ---------------------------------------------------------------------------------
 (3) _sync_fs                                             11     9      2   80207
                                             66 COMRAM    11     9      2
                         _disk_ioctl
                         _disk_write
                            _mem_set
                        _sync_window
 ---------------------------------------------------------------------------------
 (5) _mem_set                                              8     2      6    3054
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (3) _disk_ioctl                                          39    36      3   26195
                                             27 COMRAM    39    36      3
                           _deselect
                        _disk_status
                     _rcvr_datablock
                             _select
                           _send_cmd
 ---------------------------------------------------------------------------------
 (2) _st_clust                                             9     3      6    1088
                                              0 COMRAM     9     3      6
 ---------------------------------------------------------------------------------
 (2) _move_window                                         11     5      6   47950
                                             58 COMRAM    11     5      6
                          _disk_read
                        _sync_window
 ---------------------------------------------------------------------------------
 (2) _sync_window                                         21    19      2   25239
                                             37 COMRAM    21    19      2
                         _disk_write
 ---------------------------------------------------------------------------------
 (3) _disk_write                                          10     2      8   24251
                                             27 COMRAM    10     2      8
                           _deselect
                        _disk_status
                           _send_cmd
                     _xmit_datablock
 ---------------------------------------------------------------------------------
 (4) _xmit_datablock                                       7     3      4    5905
                                             11 COMRAM     7     3      4
                           _rcvr_mmc
                         _wait_ready
                           _xmit_mmc
 ---------------------------------------------------------------------------------
 (3) _disk_read                                           13     5      8   18991
                                             27 COMRAM    13     5      8
                           _deselect
                        _disk_status
                     _rcvr_datablock
                           _send_cmd
 ---------------------------------------------------------------------------------
 (4) _send_cmd                                            13     9      4   13075
                                             14 COMRAM    13     9      4
                           _deselect
                           _rcvr_mmc
                             _select
                           _xmit_mmc
 ---------------------------------------------------------------------------------
 (5) _xmit_mmc                                             6     1      5     678
                                              0 COMRAM     6     1      5
 ---------------------------------------------------------------------------------
 (5) _select                                               3     1      2    6720
                                             11 COMRAM     3     1      2
                           _deselect
                           _rcvr_mmc
                         _wait_ready
 ---------------------------------------------------------------------------------
 (5) _wait_ready                                           5     3      2    2554
                                              6 COMRAM     5     3      2
                             _dly_us
                           _rcvr_mmc
 ---------------------------------------------------------------------------------
 (6) _deselect                                             1     1      0    2083
                                              5 COMRAM     1     1      0
                           _rcvr_mmc
 ---------------------------------------------------------------------------------
 (4) _rcvr_datablock                                       8     4      4    2924
                                              6 COMRAM     8     4      4
                             _dly_us
                           _rcvr_mmc
 ---------------------------------------------------------------------------------
 (6) _rcvr_mmc                                             5     1      4    2059
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (6) _dly_us                                               6     4      2     403
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (3) _disk_status                                          1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _delaymain                                            4     0      4     934
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (1) _LCD_string                                           2     0      2    1677
                                              8 COMRAM     2     0      2
                           _LCD_func
 ---------------------------------------------------------------------------------
 (1) _LCD_init                                             0     0      0    1176
                           _LCD_func
 ---------------------------------------------------------------------------------
 (1) _LCD_cur                                              2     1      1    1524
                                              8 COMRAM     2     1      1
                           _LCD_func
 ---------------------------------------------------------------------------------
 (2) _LCD_func                                             6     5      1    1176
                                              2 COMRAM     6     5      1
                         _LCD_enable
 ---------------------------------------------------------------------------------
 (3) _LCD_enable                                           0     0      0     174
                          _LCD_delay
 ---------------------------------------------------------------------------------
 (4) _LCD_delay                                            2     0      2     174
                                              0 COMRAM     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 6
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _LCD_cur
     _LCD_func
       _LCD_enable
         _LCD_delay
   _LCD_func
     _LCD_enable
       _LCD_delay
   _LCD_init
     _LCD_func
       _LCD_enable
         _LCD_delay
   _LCD_string
     _LCD_func
       _LCD_enable
         _LCD_delay
   _delaymain
   _f_close
     _f_sync
       _move_window
         _disk_read
           _deselect
             _rcvr_mmc
           _disk_status
           _rcvr_datablock
             _dly_us
             _rcvr_mmc
           _send_cmd
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _select
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
             _xmit_mmc
         _sync_window
           _disk_write
             _deselect
               _rcvr_mmc
             _disk_status
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
             _xmit_datablock
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
               _xmit_mmc
       _st_clust
       _sync_fs
         _disk_ioctl
           _deselect
             _rcvr_mmc
           _disk_status
           _rcvr_datablock
             _dly_us
             _rcvr_mmc
           _select
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _wait_ready
               _dly_us
               _rcvr_mmc
           _send_cmd
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _select
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
             _xmit_mmc
         _disk_write
           _deselect
             _rcvr_mmc
           _disk_status
           _send_cmd
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _select
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
             _xmit_mmc
           _xmit_datablock
             _rcvr_mmc
             _wait_ready
               _dly_us
               _rcvr_mmc
             _xmit_mmc
         _mem_set
         _sync_window
           _disk_write
             _deselect
               _rcvr_mmc
             _disk_status
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
             _xmit_datablock
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
               _xmit_mmc
       _validate
         _disk_status
     _validate
       _disk_status
   _f_mount
     _find_volume
       ___lldiv
       ___lmul
       _check_fs
         _move_window
           _disk_read
             _deselect
               _rcvr_mmc
             _disk_status
             _rcvr_datablock
               _dly_us
               _rcvr_mmc
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
           _sync_window
             _disk_write
               _deselect
                 _rcvr_mmc
               _disk_status
               _send_cmd
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _select
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                 _xmit_mmc
               _xmit_datablock
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
                 _xmit_mmc
       _disk_initialize
         _deselect
           _rcvr_mmc
         _dly_us
         _rcvr_mmc
         _send_cmd
           _deselect
             _rcvr_mmc
           _rcvr_mmc
           _select
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _wait_ready
               _dly_us
               _rcvr_mmc
           _xmit_mmc
       _disk_status
       _get_ldnumber
       _move_window
         _disk_read
           _deselect
             _rcvr_mmc
           _disk_status
           _rcvr_datablock
             _dly_us
             _rcvr_mmc
           _send_cmd
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _select
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
             _xmit_mmc
         _sync_window
           _disk_write
             _deselect
               _rcvr_mmc
             _disk_status
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
             _xmit_datablock
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
               _xmit_mmc
     _get_ldnumber
   _f_open
     _dir_register
       _dir_alloc
         _dir_next
           _clust2sect
             ___lmul
           _create_chain
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _rcvr_mmc
                   _disk_status
                   _rcvr_datablock
                     _dly_us
                     _rcvr_mmc
                   _send_cmd
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _select
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                     _xmit_mmc
                 _sync_window
                   _disk_write
                     _deselect
                       _rcvr_mmc
                     _disk_status
                     _send_cmd
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _select
                         _deselect
                           _rcvr_mmc
                         _rcvr_mmc
                         _wait_ready
                           _dly_us
                           _rcvr_mmc
                       _xmit_mmc
                     _xmit_datablock
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                       _xmit_mmc
             _put_fat
               _move_window
                 _disk_read
                   _deselect
                     _rcvr_mmc
                   _disk_status
                   _rcvr_datablock
                     _dly_us
                     _rcvr_mmc
                   _send_cmd
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _select
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                     _xmit_mmc
                 _sync_window
                   _disk_write
                     _deselect
                       _rcvr_mmc
                     _disk_status
                     _send_cmd
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _select
                         _deselect
                           _rcvr_mmc
                         _rcvr_mmc
                         _wait_ready
                           _dly_us
                           _rcvr_mmc
                       _xmit_mmc
                     _xmit_datablock
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                       _xmit_mmc
           _get_fat
             _move_window
               _disk_read
                 _deselect
                   _rcvr_mmc
                 _disk_status
                 _rcvr_datablock
                   _dly_us
                   _rcvr_mmc
                 _send_cmd
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _select
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _wait_ready
                       _dly_us
                       _rcvr_mmc
                   _xmit_mmc
               _sync_window
                 _disk_write
                   _deselect
                     _rcvr_mmc
                   _disk_status
                   _send_cmd
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _select
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                     _xmit_mmc
                   _xmit_datablock
                     _rcvr_mmc
                     _wait_ready
                       _dly_us
                       _rcvr_mmc
                     _xmit_mmc
           _mem_set
           _sync_window
             _disk_write
               _deselect
                 _rcvr_mmc
               _disk_status
               _send_cmd
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _select
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                 _xmit_mmc
               _xmit_datablock
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
                 _xmit_mmc
         _dir_sdi
           _clust2sect
             ___lmul
           _get_fat
             _move_window
               _disk_read
                 _deselect
                   _rcvr_mmc
                 _disk_status
                 _rcvr_datablock
                   _dly_us
                   _rcvr_mmc
                 _send_cmd
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _select
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _wait_ready
                       _dly_us
                       _rcvr_mmc
                   _xmit_mmc
               _sync_window
                 _disk_write
                   _deselect
                     _rcvr_mmc
                   _disk_status
                   _send_cmd
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _select
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                     _xmit_mmc
                   _xmit_datablock
                     _rcvr_mmc
                     _wait_ready
                       _dly_us
                       _rcvr_mmc
                     _xmit_mmc
         _move_window
           _disk_read
             _deselect
               _rcvr_mmc
             _disk_status
             _rcvr_datablock
               _dly_us
               _rcvr_mmc
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
           _sync_window
             _disk_write
               _deselect
                 _rcvr_mmc
               _disk_status
               _send_cmd
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _select
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                 _xmit_mmc
               _xmit_datablock
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
                 _xmit_mmc
       _mem_cpy
       _mem_set
       _move_window
         _disk_read
           _deselect
             _rcvr_mmc
           _disk_status
           _rcvr_datablock
             _dly_us
             _rcvr_mmc
           _send_cmd
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _select
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
             _xmit_mmc
         _sync_window
           _disk_write
             _deselect
               _rcvr_mmc
             _disk_status
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
             _xmit_datablock
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
               _xmit_mmc
     _find_volume
       ___lldiv
       ___lmul
       _check_fs
         _move_window
           _disk_read
             _deselect
               _rcvr_mmc
             _disk_status
             _rcvr_datablock
               _dly_us
               _rcvr_mmc
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
           _sync_window
             _disk_write
               _deselect
                 _rcvr_mmc
               _disk_status
               _send_cmd
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _select
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                 _xmit_mmc
               _xmit_datablock
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
                 _xmit_mmc
       _disk_initialize
         _deselect
           _rcvr_mmc
         _dly_us
         _rcvr_mmc
         _send_cmd
           _deselect
             _rcvr_mmc
           _rcvr_mmc
           _select
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _wait_ready
               _dly_us
               _rcvr_mmc
           _xmit_mmc
       _disk_status
       _get_ldnumber
       _move_window
         _disk_read
           _deselect
             _rcvr_mmc
           _disk_status
           _rcvr_datablock
             _dly_us
             _rcvr_mmc
           _send_cmd
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _select
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
             _xmit_mmc
         _sync_window
           _disk_write
             _deselect
               _rcvr_mmc
             _disk_status
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
             _xmit_datablock
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
               _xmit_mmc
     _follow_path
       _create_name
         _chk_chr
         _mem_set
       _dir_find
         _dir_next
           _clust2sect
             ___lmul
           _create_chain
             _get_fat
               _move_window
                 _disk_read
                   _deselect
                     _rcvr_mmc
                   _disk_status
                   _rcvr_datablock
                     _dly_us
                     _rcvr_mmc
                   _send_cmd
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _select
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                     _xmit_mmc
                 _sync_window
                   _disk_write
                     _deselect
                       _rcvr_mmc
                     _disk_status
                     _send_cmd
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _select
                         _deselect
                           _rcvr_mmc
                         _rcvr_mmc
                         _wait_ready
                           _dly_us
                           _rcvr_mmc
                       _xmit_mmc
                     _xmit_datablock
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                       _xmit_mmc
             _put_fat
               _move_window
                 _disk_read
                   _deselect
                     _rcvr_mmc
                   _disk_status
                   _rcvr_datablock
                     _dly_us
                     _rcvr_mmc
                   _send_cmd
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _select
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                     _xmit_mmc
                 _sync_window
                   _disk_write
                     _deselect
                       _rcvr_mmc
                     _disk_status
                     _send_cmd
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _select
                         _deselect
                           _rcvr_mmc
                         _rcvr_mmc
                         _wait_ready
                           _dly_us
                           _rcvr_mmc
                       _xmit_mmc
                     _xmit_datablock
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                       _xmit_mmc
           _get_fat
             _move_window
               _disk_read
                 _deselect
                   _rcvr_mmc
                 _disk_status
                 _rcvr_datablock
                   _dly_us
                   _rcvr_mmc
                 _send_cmd
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _select
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _wait_ready
                       _dly_us
                       _rcvr_mmc
                   _xmit_mmc
               _sync_window
                 _disk_write
                   _deselect
                     _rcvr_mmc
                   _disk_status
                   _send_cmd
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _select
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                     _xmit_mmc
                   _xmit_datablock
                     _rcvr_mmc
                     _wait_ready
                       _dly_us
                       _rcvr_mmc
                     _xmit_mmc
           _mem_set
           _sync_window
             _disk_write
               _deselect
                 _rcvr_mmc
               _disk_status
               _send_cmd
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _select
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                 _xmit_mmc
               _xmit_datablock
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
                 _xmit_mmc
         _dir_sdi
           _clust2sect
             ___lmul
           _get_fat
             _move_window
               _disk_read
                 _deselect
                   _rcvr_mmc
                 _disk_status
                 _rcvr_datablock
                   _dly_us
                   _rcvr_mmc
                 _send_cmd
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _select
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _wait_ready
                       _dly_us
                       _rcvr_mmc
                   _xmit_mmc
               _sync_window
                 _disk_write
                   _deselect
                     _rcvr_mmc
                   _disk_status
                   _send_cmd
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _select
                       _deselect
                         _rcvr_mmc
                       _rcvr_mmc
                       _wait_ready
                         _dly_us
                         _rcvr_mmc
                     _xmit_mmc
                   _xmit_datablock
                     _rcvr_mmc
                     _wait_ready
                       _dly_us
                       _rcvr_mmc
                     _xmit_mmc
         _mem_cmp
         _move_window
           _disk_read
             _deselect
               _rcvr_mmc
             _disk_status
             _rcvr_datablock
               _dly_us
               _rcvr_mmc
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
           _sync_window
             _disk_write
               _deselect
                 _rcvr_mmc
               _disk_status
               _send_cmd
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _select
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                 _xmit_mmc
               _xmit_datablock
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
                 _xmit_mmc
       _dir_sdi
         _clust2sect
           ___lmul
         _get_fat
           _move_window
             _disk_read
               _deselect
                 _rcvr_mmc
               _disk_status
               _rcvr_datablock
                 _dly_us
                 _rcvr_mmc
               _send_cmd
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _select
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                 _xmit_mmc
             _sync_window
               _disk_write
                 _deselect
                   _rcvr_mmc
                 _disk_status
                 _send_cmd
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _select
                     _deselect
                       _rcvr_mmc
                     _rcvr_mmc
                     _wait_ready
                       _dly_us
                       _rcvr_mmc
                   _xmit_mmc
                 _xmit_datablock
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                   _xmit_mmc
       _ld_clust
     _ld_clust
     _move_window
       _disk_read
         _deselect
           _rcvr_mmc
         _disk_status
         _rcvr_datablock
           _dly_us
           _rcvr_mmc
         _send_cmd
           _deselect
             _rcvr_mmc
           _rcvr_mmc
           _select
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _wait_ready
               _dly_us
               _rcvr_mmc
           _xmit_mmc
       _sync_window
         _disk_write
           _deselect
             _rcvr_mmc
           _disk_status
           _send_cmd
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _select
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
             _xmit_mmc
           _xmit_datablock
             _rcvr_mmc
             _wait_ready
               _dly_us
               _rcvr_mmc
             _xmit_mmc
     _remove_chain
       _clust2sect
         ___lmul
       _disk_ioctl
         _deselect
           _rcvr_mmc
         _disk_status
         _rcvr_datablock
           _dly_us
           _rcvr_mmc
         _select
           _deselect
             _rcvr_mmc
           _rcvr_mmc
           _wait_ready
             _dly_us
             _rcvr_mmc
         _send_cmd
           _deselect
             _rcvr_mmc
           _rcvr_mmc
           _select
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _wait_ready
               _dly_us
               _rcvr_mmc
           _xmit_mmc
       _get_fat
         _move_window
           _disk_read
             _deselect
               _rcvr_mmc
             _disk_status
             _rcvr_datablock
               _dly_us
               _rcvr_mmc
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
           _sync_window
             _disk_write
               _deselect
                 _rcvr_mmc
               _disk_status
               _send_cmd
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _select
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                 _xmit_mmc
               _xmit_datablock
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
                 _xmit_mmc
       _put_fat
         _move_window
           _disk_read
             _deselect
               _rcvr_mmc
             _disk_status
             _rcvr_datablock
               _dly_us
               _rcvr_mmc
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
           _sync_window
             _disk_write
               _deselect
                 _rcvr_mmc
               _disk_status
               _send_cmd
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _select
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                 _xmit_mmc
               _xmit_datablock
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
                 _xmit_mmc
     _st_clust
   _f_write
     _clmt_clust
       ___lldiv
     _clust2sect
       ___lmul
     _create_chain
       _get_fat
         _move_window
           _disk_read
             _deselect
               _rcvr_mmc
             _disk_status
             _rcvr_datablock
               _dly_us
               _rcvr_mmc
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
           _sync_window
             _disk_write
               _deselect
                 _rcvr_mmc
               _disk_status
               _send_cmd
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _select
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                 _xmit_mmc
               _xmit_datablock
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
                 _xmit_mmc
       _put_fat
         _move_window
           _disk_read
             _deselect
               _rcvr_mmc
             _disk_status
             _rcvr_datablock
               _dly_us
               _rcvr_mmc
             _send_cmd
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _select
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
               _xmit_mmc
           _sync_window
             _disk_write
               _deselect
                 _rcvr_mmc
               _disk_status
               _send_cmd
                 _deselect
                   _rcvr_mmc
                 _rcvr_mmc
                 _select
                   _deselect
                     _rcvr_mmc
                   _rcvr_mmc
                   _wait_ready
                     _dly_us
                     _rcvr_mmc
                 _xmit_mmc
               _xmit_datablock
                 _rcvr_mmc
                 _wait_ready
                   _dly_us
                   _rcvr_mmc
                 _xmit_mmc
     _disk_write
       _deselect
         _rcvr_mmc
       _disk_status
       _send_cmd
         _deselect
           _rcvr_mmc
         _rcvr_mmc
         _select
           _deselect
             _rcvr_mmc
           _rcvr_mmc
           _wait_ready
             _dly_us
             _rcvr_mmc
         _xmit_mmc
       _xmit_datablock
         _rcvr_mmc
         _wait_ready
           _dly_us
           _rcvr_mmc
         _xmit_mmc
     _mem_cpy
     _move_window
       _disk_read
         _deselect
           _rcvr_mmc
         _disk_status
         _rcvr_datablock
           _dly_us
           _rcvr_mmc
         _send_cmd
           _deselect
             _rcvr_mmc
           _rcvr_mmc
           _select
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _wait_ready
               _dly_us
               _rcvr_mmc
           _xmit_mmc
       _sync_window
         _disk_write
           _deselect
             _rcvr_mmc
           _disk_status
           _send_cmd
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _select
               _deselect
                 _rcvr_mmc
               _rcvr_mmc
               _wait_ready
                 _dly_us
                 _rcvr_mmc
             _xmit_mmc
           _xmit_datablock
             _rcvr_mmc
             _wait_ready
               _dly_us
               _rcvr_mmc
             _xmit_mmc
     _sync_window
       _disk_write
         _deselect
           _rcvr_mmc
         _disk_status
         _send_cmd
           _deselect
             _rcvr_mmc
           _rcvr_mmc
           _select
             _deselect
               _rcvr_mmc
             _rcvr_mmc
             _wait_ready
               _dly_us
               _rcvr_mmc
           _xmit_mmc
         _xmit_datablock
           _rcvr_mmc
           _wait_ready
             _dly_us
             _rcvr_mmc
           _xmit_mmc
     _validate
       _disk_status
   _init

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             F7F      0     432      37       27.1%
BITBANK14          100      0       0      32        0.0%
BANK14             100      0       0      33        0.0%
BITBANK13          100      0       0      30        0.0%
BANK13             100      0       0      31        0.0%
BITBANK12          100      0       0      28        0.0%
BANK12             100      0       0      29        0.0%
BITBANK11          100      0       0      26        0.0%
BANK11             100      0       0      27        0.0%
BITBANK10          100      0       0      24        0.0%
BANK10             100      0       0      25        0.0%
BITBANK9           100      0       0      22        0.0%
BANK9              100      0       0      23        0.0%
BITBANK8           100      0       0      20        0.0%
BANK8              100      0       0      21        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100     48      9E       7       61.7%
BITBANK15           80      0       0      35        0.0%
BANK15              80      0       0      36        0.0%
BITBANK0            80      0       0       4        0.0%
BANK0               80     78      80       5      100.0%
BITCOMRAM           7F      0       0       0        0.0%
COMRAM              7F     7F      7F       1      100.0%
BITSFR               0      0       0      40        0.0%
SFR                  0      0       0      40        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     19D      34        0.0%
DATA                 0      0     5CF       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.33 build 59893 
Symbol Table                                                                                   Sat Jul 30 01:03:56 2016

             get_fat@clst 0048              create_name@b 0015              create_name@c 0021  
            create_name@d 0018              create_name@i 001B              create_name@p 001D  
        get_ldnumber@path 0001                        l78 7202                        l88 5142  
                      l97 581E                        l99 5856                        _ab 00FA  
                      _ch 0163                        _fp 016C               disk_ioctl@n 003D  
          ??_dir_register 007F          disk_write@sector 001E             create_name@dp 0009  
           create_name@ni 0016             create_name@si 0019            create_chain@cs 008D  
          create_chain@fs 0077               ?_LCD_enable 0001                       _AB1 0169  
                     _AB2 016A                       _AB3 016B                       l101 5864  
                     l111 58AA                       l103 5872                       l113 58B8  
                     l105 5880                       l210 5A4A                       l107 588E  
                     l211 5AFA                       l212 5A60                       l109 589C  
                     l230 5F1C                       l224 5E9C                       l161 5A36  
                     l225 5FA0                       l226 5EB2                       l330 85FE  
                     l315 7E4E                       l411 858E                       l404 8438  
                     l174 5112                       l182 6D2C                       l239 68C8  
                     l351 8A3E                       l431 79E2                       l328 89E6  
                     l409 859E                       l186 6D0A                       l426 7B00  
                     l444 943C                       l614 819A                       l630 6EC6  
                     l392 832A                       l288 5564                       l721 AD5E  
                     l473 6318                       l394 85AE                       l732 B2FC  
                     l628 6ED4                       l573 81CC                       l735 B77E  
                     l684 74AA                       l749 581C                       l669 664C  
                     l693 BED0                       l829 A662                       l767 61EA  
                     l794 98B6                       l786 95C8                       l778 9BBA  
                     _ab1 00FB                       _Tfs 0159                       _Trp 015D  
                     _ld1 00FC                       _ld2 00FD                       _abc 0161  
                     _ld3 00FE                       _chr 0165                       _tfs 0167  
                     fsr1 000FE1                       fsr2 000FD9              disk_read@cmd 0028  
            disk_ioctl@cs 003E              disk_read@drv 0025            ??_create_chain 0080  
                     wreg 000FE8              clmt_clust@cl 0019              clmt_clust@fp 000E  
             ?_LCD_string 0009         disk_initialize@ty 0027            create_name@sfn 001F  
         create_chain@ncl 0089           create_chain@scl 0085           create_chain@res 0084  
             ld_clust@dir 0003           __end_of_LCD_cur 512A                      l1865 56E0  
                    l7003 8AF2                      l7021 8C06                      l7005 8B26  
                    l7101 8266                      l7201 68AC                      l8001 56A2  
                    l7025 8C3C                      l7203 68C2                      l7035 8CFC  
                    l7053 8ECC                      l7117 833A                      l7109 82C6  
                    l7221 52FA                      l7213 5516                      l7063 53FE  
                    l7055 8ED2                      l7311 8FF8                      l8017 5358  
                    l7073 51A4                      l8009 56D2                      l7057 8EF0  
                    l7153 84EA                      l7145 8478                      l7129 83DC  
                    l7225 532E                      l8019 5368                      l7067 5412  
                    l7139 844A                      l8115 5D7A                      l7219 52F6  
                    l8123 6D5E                      l8035 7520                      l7165 50F0  
                    l6605 52B0                      l7173 66C4                      l7077 51B4  
                    l7501 6D06                      l8221 A776                      l7245 78A4  
                    l8045 756C                      l6615 52DC                      l7175 66CA  
                    l7431 6B32                      l7087 5B50                      l7159 856C  
                    l7343 91A0                      l7335 9148                      l7255 7908  
                    l8135 6E10                      l8127 6D80                      l8063 767A  
                    l8071 7788                      l6801 55A4                      l6617 52E4  
                    l6633 5854                      l7409 6B02                      l8305 AB64  
                    l7265 797A                      l7257 792E                      l7601 62D4  
                    l7521 5488                      l8129 6DBA                      l8049 7588  
                    l8073 77C0                      l8081 602A                      l6803 55AC  
                    l6651 587E                      l6731 5992                      l7195 6886  
                    l7179 66D8                      l7435 6B48                      l8243 A7E0  
                    l8235 A7CE                      l7099 824C                      l7603 62E0  
                    l7515 5456                      l8059 7616                      l8091 6066  
                    l6549 55F0                      l6645 5870                      l6717 577A  
                    l7189 67C4                      l8405 B2DA                      l7349 91B2  
                    l7285 7A5C                      l7277 7A26                      l7701 7F64  
                    l8069 7778                      l6663 589A                      l6639 5862  
                    l7199 68A6                      l7455 6BCE                      l7463 6C04  
                    l7375 92B4                      l7367 927E                      l7383 9332  
                    l7607 6308                      l8167 6F1A                      l6809 55BC  
                    l6657 588C                      l6833 5F38                      l7465 6C0C  
                    l7481 6C64                      l8281 AA8C                      l7801 8128  
                    l7633 5D9E                      l8169 6F72                      l8097 6094  
                    l6675 58B6                      l6755 59D0                      l6739 59AE  
                    l6843 5F8E                      l6907 64A4                      l7491 6CC8  
                    l7459 6BF2                      l8427 B5D4                      l8371 B118  
                    l8339 ADF2                      l8291 AB26                      l8275 AA6E  
                    l8187 A6BC                      l7379 92D8                      l7387 93B6  
                    l7707 7F92                      l7715 7FAC                      l7619 5C84  
                    l6669 58A8                      l6829 5EFE                      l6925 5960  
                    l8517 6AEC                      l7485 6C92                      l7477 6C56  
                    l7901 663E                      l8445 B804                      l8269 A908  
                    l8197 A708                      l8613 6170                      l8605 6134  
                    l7821 8188                      l7741 8026                      l7653 5E5C  
                    l6791 5578                      l6775 5A34                      l6767 5A14  
                    l6759 59DC                      l6871 5ACA                      l6839 5F6A  
                    l6927 597C                      l7575 7E26                      l7487 6CA4  
                    l7495 6CDA                      l8439 B73A                      l7807 8156  
                    l7663 7E64                      l7647 5E0E                      l8703 95D4  
                    l6785 510E                      l6689 5222                      l6769 5A18  
                    l6865 5A9C                      l7497 6CE2                      l7921 669A  
                    l8465 BE82                      l8289 AAF6                      l8297 AB48  
                    l8625 61BA                      l6961 8782                      l7817 816E  
                    l7761 807A                      l7753 804A                      l7745 8030  
                    l7729 7FFA                      l7665 7E68                      l7657 5E84  
                    l6875 5AE8                      l6859 5A74                      l6891 639A  
                    l7907 665E                      l7915 6692                      l8619 618A  
                    l7587 621A                      l7691 7F4C                      l9283 7106  
                    l8581 51C8                      l7941 7266                      l7909 666E  
                    l7925 66A8                      l8629 61BE                      l6957 875A  
                    l7597 62AE                      l7765 8088                      l7749 803C  
                    l8901 A148                      l8821 9C2C                      l9269 7088  
                    l7847 64F4                      l6959 8778                      l7679 7EFE  
                    l8647 9458                      l8831 9CF6                      l8815 9BFC  
                    l8585 51E2                      l7857 6532                      l7849 64F8  
                    l6977 89B6                      l6969 8850                      l7777 80D2  
                    l8753 9882                      l9297 719A                      l7883 65C8  
                    l6979 89C8                      l8915 A2F0                      l8851 9ECA  
                    l8931 A3EC                      l8827 9C50                      l8589 517C  
                    l7949 72B2                      l7797 8112                      l7789 80FE  
                    l8773 98FC                      l8765 98E0                      l8677 9522  
                    l8917 A314                      l8845 9E26                      l7983 5816  
                    l7967 749C                      l7959 73AC                      l7887 6604  
                    l7879 65B6                      l8695 9596                      l8777 9952  
                    l8689 9578                      l8945 A4B0                      l8937 A45A  
                    l8929 A3C2                      l8849 9E84                      l7987 581A  
                    l8963 A64A                      l8875 9F7E                      l7997 5692  
                    l8949 A542                      l8885 A008                      l8957 A59E  
                    l7999 569E                      l8799 9BB6                      l8895 A076  
                    l8959 A5AA                      STR_1 BF37                      STR_2 BF48  
                    STR_3 BFC5                      STR_4 BF89                      l8979 5264  
                    STR_5 BFD2                      STR_6 BF69                      STR_7 BFB8  
                    STR_8 BF99                      STR_9 BF79                      u8210 5772  
                    u9010 8474                      u9015 8470                      u8080 583E  
                    u9125 6718                      u8087 5834                      u9215 532A  
                    u9320 7A58                      u9145 679C                      u8450 5F9E  
                    u9170 6864                      u9155 67DA                      u8540 5AF8  
                    u9500 92B0                      u8365 5EA4                      u8605 5902  
                    u9165 67F4                      u9405 900A                      u9175 685A  
                    u9335 7A68                      u8720 8892                      u8705 8766  
                    u9345 7AC0                      u9450 9144                      u8820 8C24  
                    u9700 547E                      u8485 5A52                      u8725 8888  
                    u9525 93EA                      u9470 91AE                      u8655 8648  
                    u8840 8D3E                      u8825 8C1A                      u8675 86DE  
                    u9707 5474                      u8845 8D34                      u8765 8A88  
                    u9750 7C70                      u9760 7CAE                      u9770 7D32  
                    u9690 6D1E                      u9755 7C66                      u8795 8B72  
                    u9780 7D70                      u9765 7CA4                      u9775 7D28  
                    u9696 6D20                      u9785 7D66                      _Fsid 0157  
                    _Stat 00FF                      _Tres 015B                      _Tvol 015F  
                    _main 6F78                      _init 50D2              find_volume@i 00CF  
                    fsr0h 000FEA                      fsr1h 000FE2                      indf0 000FEF  
                    fsr0l 000FE9                      fsr2h 000FDA                      indf1 000FE7  
                    fsr1l 000FE1                      indf2 000FDF                      fsr2l 000FD9  
           disk_ioctl@csd 002C             disk_read@buff 001C             disk_ioctl@drv 003C  
             main@timeout 0140             disk_ioctl@res 0042                      prodh 000FF4  
                    prodl 000FF3            ??_get_ldnumber 0003                      start 0000  
      __size_of_LCD_delay 0012             clmt_clust@ncl 001F             clmt_clust@ofs 0010  
           clmt_clust@tbl 001D        disk_initialize@cmd 0025        disk_initialize@buf 0020  
            ?_follow_path 00A8        disk_initialize@drv 001D        disk_initialize@tmr 0028  
         create_name@path 000B          create_chain@clst 0079               _sync_window 631E  
        __end_of_LCD_func 5398          __end_of_LCD_init 52A6                     ?_main 00F3  
                   ?_init 0001                     STR_10 BFA9                     STR_11 BFF7  
                   STR_20 BFC6                     STR_12 BFEA                     STR_21 BF23  
                   STR_13 BFFB                     STR_22 BF0F                     STR_14 BFEF  
                   STR_15 BFF3                     STR_16 BFDB                     STR_17 BFE0  
                   STR_18 BFE5                     STR_19 BF59           __end_of___lldiv 56F2  
                   u11220 B7B6                     u10260 816A                     u11125 B192  
                   u11230 B800                     u11225 B7AA                     u11330 69C6  
                   u10435 665A                     u11340 6A04                     u10620 7568  
                   u10365 6592                     u11335 69BC                     u11345 69FA  
                   u10490 7498                     u11195 B5B2                     u10830 6F16  
                   u10920 A7DA                     u10680 5FE0                     u10665 7664  
                   u10685 5FD6                     u12541 6F82                     u11760 9D68  
                   u11765 9D5C                     u11870 A05C                     u11935 A2AC  
                   u11855 9FEA                     u11945 A2FE                     u11980 A496  
                   u11885 A09E                     _PORTC 000F82                     _PORTD 000F83  
                   _TRISB 000F93                     _TRISC 000F94                     _TRISD 000F95  
         __end_of_f_close 5268                     _FatFs 0D4E           __end_of_chk_chr 5342  
     ___lmul@multiplicand 0005           __end_of_f_mount 61EC           __end_of_dir_sdi 7B02  
         __end_of_f_write A664           __end_of_get_fat 89F8           __end_of_mem_cmp 556E  
         __end_of_mem_cpy 549A           __end_of_mem_set 51C6             find_volume@br 009A  
           find_volume@fs 00D2             find_volume@pt 00C5                     _myvar 0152  
          disk_ioctl@buff 001D            disk_ioctl@ctrl 001C            disk_read@count 0022  
                   tablat 000FF5                     plusw2 000FDB           __end_of_put_fat 8EF4  
                   status 000FD8           __end_of_sync_fs 7E52       __size_of_LCD_enable 001E  
           get_ldnumber@c 000B             get_ldnumber@i 000F             disk_write@drv 0025  
             LCD_func@cmd 0003           __initialization 549A       __size_of_LCD_string 0032  
            __end_of_main 7204              clust2sect@fs 000D              __end_of_init 50E0  
                  ??_main 0080                    ??_init 0001             __activetblptr 000003  
               ??_LCD_cur 000A         __end_of_LCD_delay 5102      __end_of_dir_register 5D7E  
        __end_of_check_fs 74AC      __size_of_create_name 037C  __size_of_disk_initialize 023E  
        __end_of_deselect 5142          __end_of_dir_find 5E8A          __end_of_dir_next 943E  
            ?_move_window 003B      __end_of_create_chain 85B0          __end_of_ld_clust 5C96  
                  ___lmul 53EE      __size_of_find_volume 186E      __size_of_disk_status 0012  
               ??___lldiv 0009                    _f_open 943E                    _f_sync 68CA  
                  _buffer 0B4E                    _dly_us 5142                 ??_f_close 005D  
          find_volume@fmt 00D1                    clear_0 54A2                    clear_1 54B4  
                  clear_2 54C0            find_volume@rfs 006A                 ??_chk_chr 0005  
          find_volume@vol 00B8                    _select 51F8                 ??_f_mount 0074  
               ??_dir_sdi 0076                 ??_f_write 0099                 ??_get_fat 004C  
        __end_of_send_cmd 5A38                 ??_mem_cmp 0007                 ??_mem_cpy 0007  
               ??_mem_set 0007          __end_of_validate 581E          __end_of_rcvr_mmc 5670  
          disk_status@drv 0001      __end_of_get_ldnumber 66B2              __mediumconst BED2  
         disk_read@sector 001E                    tblptrh 000FF7                    tblptrl 000FF6  
                  tblptru 000FF8          __end_of_st_clust 53EE                 ??_put_fat 0050  
         xmit_datablock@d 0011                 ??_sync_fs 0045          __end_of_xmit_mmc 58CC  
      rcvr_datablock@buff 0007                __accesstop 0080   __end_of__initialization 54F8  
          get_ldnumber@tc 000C            disk_write@buff 001C            get_ldnumber@sp 0005  
          get_ldnumber@tp 000D            get_ldnumber@tt 0011                 ?_LCD_func 0003  
               ?_LCD_init 0001   __size_of_rcvr_datablock 0080              LCD_func@data 0008  
          __pcstackCOMRAM 0001              __pidataBANK0 50D1              __pidataBANK1 50E0  
    __size_of_follow_path 024A        __size_of_delaymain 001E              ??_LCD_enable 0003  
      __size_of_dir_alloc 0132              ??_LCD_string 000B        __size_of_disk_read 00C4  
              __pbssBANK0 00F8                __pbssBANK1 0148                ??_LCD_func 0004  
              ??_LCD_init 0009          _find_volume$1058 00AA          _find_volume$1059 00AE  
      __end_of_LCD_enable 517C                   ?___lmul 0001        __end_of_LCD_string 51F8  
                 ?_f_open 00D4   __size_of_xmit_datablock 0092                   ?_f_sync 004E  
                 ?_dly_us 0001         ??_disk_initialize 001C              ?_sync_window 0026  
          ___lmul@product 0009                   ?_select 000C                   _LCD_cur 5114  
               ?_check_fs 0046                _disk_ioctl 66B2                _clmt_clust 5FA2  
          follow_path@dir 00B0            follow_path@res 00B3                _disk_write 5E8A  
             send_cmd@cmd 001B                 ?_deselect 0001               send_cmd@arg 000F  
             send_cmd@buf 0013            remove_chain@fs 0077                 ?_dir_find 007D  
          remove_chain@rt 008D                 ?_dir_next 0091     __size_of_dir_register 00E8  
               ?_ld_clust 0001                _clust2sect 5AFC          sync_window@wsect 0037  
           ?_remove_chain 0077     __size_of_create_chain 03E2         __end_of_delaymain 519A  
                 _CurrVol 00F9         __end_of_dir_alloc 631E                 ?_send_cmd 000F  
                 __Hparam 0000                   __Lparam 0000                 ?_validate 0002  
               ?_rcvr_mmc 0001         __end_of_disk_read 5AFC                   ff@FatFs 0148  
              f_close@res 005D           __size_of___lmul 0056                 ?_st_clust 0001  
                 ___lldiv 5670      __size_of_move_window 00B4                check_fs@fs 0046  
         __size_of_f_open 077E           __size_of_f_sync 0226           __size_of_dly_us 001C  
                 _f_close 5230     __size_of_get_ldnumber 020A       _disk_initialize$255 001E  
                 __pcinit 549A                   _chk_chr 52F4          _get_ldnumber$973 0007  
                 __ramtop 1000                 ?_xmit_mmc 0001                   _f_mount 60C6  
         __size_of_select 0038                   __ptext0 6F78                   __ptext1 50D2  
                 __ptext2 9BBC                   __ptext3 5FA2                   __ptext4 943E  
                 __ptext5 74AC                   __ptext6 6D2E                   __ptext7 5BC4  
                 __ptext8 5D7E                   __ptext9 54FE              xmit_mmc@buff 0001  
                 _dir_sdi 77C6               validate@fil 0006                   _f_write 9BBC  
             validate@obj 0002                   _get_fat 85B0                chk_chr@chr 0003  
            _dir_register 5C96                chk_chr@str 0001                   _mem_cmp 54FE  
                 _mem_cpy 5444                   _mem_set 519A                ??_check_fs 004C  
         find_volume@path 006C           find_volume@nrsv 00BA           find_volume@stat 00C4  
            _create_chain 81CE                ??_deselect 0006         __end_off_mkfs@cst BEE9  
              ??_dir_find 007F         __end_off_mkfs@vst BEFF                   _put_fat 89F8  
              ??_dir_next 0095                   main@cnt 0142                   main@ret 0145  
              ??_ld_clust 0005                   _sync_fs 7B02                 _LCD_delay 50F0  
    end_of_initialization 54F8                   dly_us@n 0001                f_open@mode 00D8  
              f_open@path 00D6                delaymain@x 0001            ??_remove_chain 0080  
          _rcvr_datablock 556E                   select@d 000E           ___lldiv@divisor 0005  
              f_mount@cfs 0077                f_mount@res 0076                ??_send_cmd 0013  
              f_mount@opt 0073                f_mount@vol 0079           ___lldiv@counter 000D  
            _get_ldnumber 64A8                ??_validate 0004                ??_rcvr_mmc 0005  
                 postdec0 000FED                   postdec1 000FE5                   postdec2 000FDD  
                 postinc0 000FEE                   postinc1 000FE6                   postinc2 000FDE  
              ??_st_clust 0007            move_window@res 0045               wait_ready@d 000B  
              _wait_ready 52A6                dir_alloc@n 00A8          remove_chain@clst 0079  
              dir_find@dp 007D                ??_xmit_mmc 0006           _create_name$912 0013  
         _create_name$909 0011                dir_sdi@idx 0074                dir_next@dp 0091  
             ?_disk_ioctl 001C               ?_clmt_clust 000E                f_write@btw 0095  
              f_write@res 00A9               ?_disk_write 001C                get_fat@val 0068  
         get_ldnumber@vol 0009           get_ldnumber@str BEFF           disk_write@count 0022  
             ?_clust2sect 000D                ?_LCD_delay 0001    __end_of_rcvr_datablock 55EE  
           ??_create_name 000D          disk_initialize@n 0024          disk_initialize@s 0026  
              ld_clust@cl 0011                ld_clust@fs 0001             ??_find_volume 0080  
           ??_disk_status 0001                main@mytext 0130                main@status 0144  
       __size_of_LCD_func 0056         __size_of_LCD_init 003E            _xmit_datablock 56F2  
          __end_of___lmul 5444               st_clust@dir 0001            __end_of_f_open 9BBC  
          __end_of_f_sync 6AF0            __end_of_dly_us 515E            clust2sect@clst 000F  
          __end_of_select 5230                LCD_delay@x 0001      __size_of_sync_window 018A  
              LCD_cur@col 0009                LCD_cur@row 000A       start_initialization 549A  
              mem_cmp@cnt 0005                mem_cmp@dst 0001                mem_cmp@src 0003  
              mem_cpy@cnt 0005               put_fat@clst 0048                mem_cpy@dst 0001  
              mem_cpy@src 0003           ?_rcvr_datablock 0007           _disk_initialize 6AF0  
              mem_set@cnt 0005                mem_set@dst 0001                mem_set@val 0003  
  __end_of_xmit_datablock 5784             ??_follow_path 00AC       __size_of_disk_ioctl 0218  
     __size_of_clmt_clust 0124       __end_of_create_name 81CE       __size_of_disk_write 0118  
                ??___lmul 0009                  ??_f_open 00D9                  ??_f_sync 0050  
             ?_wait_ready 0007               __pdataBANK0 00FF               __pdataBANK1 018E  
                ??_dly_us 0003       __end_of_find_volume BED2       __end_of_disk_status 5114  
     __size_of_clust2sect 00C8                  ??_select 000E      __end_of_remove_chain 77C6  
       rcvr_datablock@btr 0009   __end_ofget_ldnumber@str BF0F         rcvr_datablock@tmr 000B  
             __pbssBIGRAM 0B4E                  ?_LCD_cur 0009             __pcstackBANK0 0080  
           __pcstackBANK1 0100       __end_of__stringdata BFFE         __size_of_check_fs 02A8  
            check_fs@sect 0048               ??_LCD_delay 0003         __size_of_deselect 0018  
       __size_of_dir_find 010C         __size_of_dir_next 054A         __size_of_ld_clust 00D2  
           LCD_string@ptr 0009           ?_xmit_datablock 000C                 _delaymain 517C  
           __pmediumconst BED2         __size_of_send_cmd 00B8                 _dir_alloc 61EC  
                ?___lldiv 0001         __size_of_validate 009A         __size_of_rcvr_mmc 0082  
                ?_f_close 005B                 _disk_read 5A38                  ?_chk_chr 0001  
           follow_path@dp 00A8             follow_path@ns 00B2         __size_of_st_clust 0056  
     __end_of_follow_path 6F78                  ?_f_mount 006F                  ?_dir_sdi 0072  
                ?_f_write 0091                  ?_get_fat 0046                  ?_mem_cmp 0001  
                ?_mem_cpy 0001                  ?_mem_set 0001         __size_of_xmit_mmc 00AE  
               f_close@fp 005B                  ?_put_fat 0046   __end_of_disk_initialize 6D2E  
                ?_sync_fs 0043               _get_fat$524 0066         find_volume@fasize 00C7  
     __size_of_wait_ready 004E                 f_mkfs@cst BED3                 f_mkfs@vst BEE9  
             _create_name 7E52                rcvr_mmc@bc 0003         find_volume@szbfat 00B0  
                _LCD_func 5342                  _LCD_init 5268                 f_open@dir 0115  
               f_open@res 0114                 f_open@sfn 0100         find_volume@sysect 00B4  
             _find_volume A664               _disk_status 5102             ??_move_window 0041  
               f_mount@fs 006F                 f_mount@rp 007B           follow_path@path 00AA  
              ?_delaymain 0001                 deselect@d 0006             move_window@fs 003B  
               main@F3718 018E           remove_chain@ecl 0095                 dir_find@c 00A4  
              ?_dir_alloc 00A4           remove_chain@scl 0089           remove_chain@res 0099  
         remove_chain@nxt 009A                 f_sync@dir 0059                 f_sync@res 0054  
               dir_sdi@ic 0080                 dir_sdi@dp 0072                 dir_next@c 009C  
               dir_next@i 009E                ?_disk_read 001C                 f_write@cc 00AD  
               f_write@bw 0097                 f_write@fp 0091                 get_fat@bc 006E  
               get_fat@fs 0046                 get_fat@wc 006C               __stringdata BF0F  
                _CardType 00F8              ??_disk_ioctl 001F              ??_clmt_clust 0014  
            ??_disk_write 0024          __size_of_LCD_cur 0016                st_clust@cl 0003  
            ??_clust2sect 0013         ___lmul@multiplier 0001                 dly_us@tem 0003  
               copy_data0 54DA               _LCD_func$36 0006                put_fat@res 0074  
              put_fat@val 004C         move_window@sector 003D           dir_next@stretch 0093  
                __Hrparam 0000                  __Lrparam 0000               _follow_path 6D2E  
      __end_of_disk_ioctl 68CA        __end_of_clmt_clust 60C6     __size_of_remove_chain 031A  
      __end_of_disk_write 5FA2          __size_of___lldiv 0082       __end_of_move_window 5980  
      __end_of_clust2sect 5BC4          __size_of_f_close 0038          __size_of_chk_chr 004E  
        __size_of_f_mount 0126          __size_of_dir_sdi 033C          __size_of_f_write 0AA8  
        __size_of_get_fat 0448                  _check_fs 7204          __size_of_mem_cmp 0070  
        __size_of_mem_cpy 0056          __size_of_mem_set 002C       xmit_datablock@token 000F  
        ??_rcvr_datablock 000B           dir_register@res 007F                  _deselect 512A  
                __ptext10 7E52                  __ptext11 52F4                  __ptext20 5AFC  
                __ptext12 5C96                  __ptext21 60C6                  __ptext13 5444  
                __ptext30 5784                  __ptext22 A664                  __ptext14 61EC  
                __ptext31 7B02                  __ptext23 64A8                  __ptext15 77C6  
                __ptext40 5980                  __ptext32 519A                  __ptext24 6AF0  
                __ptext16 8EF4                  __ptext41 581E                  __ptext33 66B2  
                __ptext25 7204                  __ptext17 81CE                  __ptext50 51C6  
                __ptext42 51F8                  __ptext34 5398                  __ptext26 53EE  
                __ptext18 89F8                  __ptext51 5268                  __ptext43 52A6  
                __ptext35 58CC                  __ptext27 5670                  __ptext19 85B0  
                __ptext52 5114                  __ptext44 512A                  __ptext36 631E  
                __ptext28 5230                  __ptext53 5342                  __ptext45 556E  
                __ptext37 5E8A                  __ptext29 68CA                  __ptext54 515E  
                __ptext46 55EE                  __ptext38 56F2                  __ptext55 50F0  
                __ptext47 5142                  __ptext39 5A38                  __ptext48 5102  
                __ptext49 517C                  _dir_find 5D7E                  _dir_next 8EF4  
           dir_alloc@nent 00A6          ?_disk_initialize 0001                  _ld_clust 5BC4  
               send_cmd@d 0019                 send_cmd@n 001A          __size_of_put_fat 04FC  
          sync_window@res 0034          __size_of_sync_fs 0350             __size_of_main 028C  
              sync_fs@res 004D             __size_of_init 000E              _remove_chain 74AC  
              xmit_mmc@bc 0004          find_volume@bsect 00CB          find_volume@nclst 00C0  
               rcvr_mmc@r 0005          find_volume@tsect 00BC          find_volume@wmode 006E  
                f_open@dj 0117                  f_open@cl 010C                  f_open@fp 00D4  
                f_open@dw 0110                  _send_cmd 5980               ??_delaymain 0005  
                _validate 5784                  _rcvr_mmc 55EE                  f_sync@fp 004E  
                f_sync@tm 0055               ??_dir_alloc 007D                  _st_clust 5398  
                get_fat@p 0070              ??_wait_ready 0009              rcvr_mmc@buff 0001  
           ??_sync_window 0028                  main@chck 0147                  main@argc 00F3  
                main@argv 00F5               ??_disk_read 0024             _disk_read$263 0026  
                _xmit_mmc 581E                _LCD_enable 515E                  mem_cmp@d 000A  
                mem_cmp@r 000E                  mem_cmp@s 000C                 put_fat@bc 0072  
                mem_cpy@d 0007                 put_fat@fs 0046                  mem_cpy@s 0009  
                mem_set@d 0007                _LCD_string 51C6           rcvr_datablock@d 000D  
           wait_ready@tmr 0009        xmit_datablock@buff 000C            dir_register@dp 00AB  
        ??_xmit_datablock 0010        __end_of_wait_ready 52F4          ___lldiv@dividend 0001  
            dir_alloc@res 00AA             sync_window@fs 0026             sync_window@nf 0035  
             f_mount@path 0071                 sync_fs@fs 0043                 xmit_mmc@d 0006  
             _move_window 58CC                  put_fat@p 0075             ?_dir_register 00AB  
             dir_alloc@dp 00A4          ___lldiv@quotient 0009               dir_find@dir 00A5  
     __end_of_sync_window 64A8               dir_find@res 00A7             ?_create_chain 0077  
            dir_next@clst 00A0               dir_sdi@clst 0086               dir_sdi@sect 0082  
            ?_create_name 0009              f_write@csect 00AC              f_write@wbuff 00AA  
             f_write@buff 0093               f_write@clst 00B5               f_write@sect 00AF  
            ?_find_volume 006A               f_write@wcnt 00B3             ?_get_ldnumber 0001  
            ?_disk_status 0001               _put_fat$551 006E               _put_fat$552 0070  
